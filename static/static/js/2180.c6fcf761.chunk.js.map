{"version":3,"file":"static/js/2180.c6fcf761.chunk.js","mappings":"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","sources":["customers/customers.tsx","utils/stopPropagation.ts","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/icons-material/Edit.js","../node_modules/@tanstack/query-core/src/mutationObserver.ts","../node_modules/@tanstack/react-query/src/useMutation.ts"],"sourcesContent":["import * as React from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\r\n\r\nimport { alpha, styled } from '@mui/material/styles';\r\nimport TextField from '@mui/material/TextField';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport Box from '@mui/material/Box';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableSortLabel from '@mui/material/TableSortLabel';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport FilterListIcon from '@mui/icons-material/FilterList';\r\nimport FilterListOffIcon from '@mui/icons-material/FilterListOff';\r\nimport { visuallyHidden } from '@mui/utils';\r\n\r\nimport Loader from '../components/Loader';\r\n\r\nimport { CustomersQuery, CustomerDelete } from '../api';\r\nimport { useSnackbar } from '../hooks';\r\nimport { Order, Customer } from '../utils/dataTypes';\r\nimport { stopPropagation } from '../utils/stopPropagation';\r\n\r\ninterface HeadCell {\r\n  id: string;\r\n  disablePadding: boolean;\r\n  orderField?: keyof Customer;\r\n  getData: (row: Customer) => { data: JSX.Element | string; title?: string };\r\n  label: string;\r\n  numeric: boolean;\r\n}\r\n\r\nconst headCells: readonly HeadCell[] = [\r\n  {\r\n    id: 'name',\r\n    orderField: 'name',\r\n    getData: (row) => ({ data: `${row.name}` }),\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Company Name',\r\n  },\r\n  {\r\n    id: 'customerType',\r\n    orderField: 'type',\r\n    getData: (row) => {\r\n      const firstRow = `${row.type}`;\r\n\r\n      return {\r\n        data: <span>{firstRow}</span>,\r\n        title: firstRow,\r\n      };\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Type',\r\n  },\r\n  {\r\n    id: 'customerAddress',\r\n    getData: (row) => {\r\n      const firstRow = `${row.address}`;\r\n      const secondRow = `${row.address2 || ''}`;\r\n\r\n      return {\r\n        data: (\r\n          <span>\r\n            {firstRow}\r\n            <br />\r\n            {secondRow || ' '}\r\n          </span>\r\n        ),\r\n        title: firstRow + '\\n' + secondRow,\r\n      };\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Billing Address',\r\n  },\r\n  {\r\n    id: 'city',\r\n    orderField: 'city',\r\n    getData: (row) => ({ data: `${row.city}` }),\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'City',\r\n  },\r\n  {\r\n    id: 'state',\r\n    orderField: 'state',\r\n    getData: (row) => ({ data: `${row.state}` }),\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'State',\r\n  },\r\n  {\r\n    id: 'zipCode',\r\n    orderField: 'zipCode',\r\n    getData: (row) => ({ data: `${row.zipCode}` }),\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Zip Code',\r\n  },\r\n  {\r\n    id: 'phoneAndFax',\r\n    getData: (row) => {\r\n      const firstRow = `${row.phone}`;\r\n      const secondRow = `${row.fax ? row.fax : ''}`;\r\n      return {\r\n        data: (\r\n          <span>\r\n            <a\r\n              href={`tel:${firstRow}`}\r\n              target=\"_blank\"\r\n              onClick={stopPropagation}\r\n            >\r\n              {firstRow}\r\n            </a>\r\n            <br />\r\n            <a\r\n              href={secondRow ? `tel:${secondRow}` : undefined}\r\n              target=\"_blank\"\r\n              onClick={stopPropagation}\r\n            >\r\n              {secondRow || ' '}\r\n            </a>\r\n          </span>\r\n        ),\r\n        title: firstRow + '\\n' + secondRow,\r\n      };\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Phone/Fax',\r\n  },\r\n  {\r\n    id: 'emailAndWebsite',\r\n    getData: (row) => {\r\n      if (row.email) {\r\n        const firstRow = `${row.email}`;\r\n        const secondRow = `${row.website || ''}`;\r\n        return {\r\n          data: (\r\n            <span>\r\n              <a\r\n                href={`mailto:${firstRow}`}\r\n                target=\"_blank\"\r\n                onClick={stopPropagation}\r\n              >\r\n                {firstRow}\r\n              </a>\r\n              <br />\r\n              <a\r\n                href={`${secondRow}` || undefined}\r\n                target=\"_blank\"\r\n                onClick={stopPropagation}\r\n              >\r\n                {secondRow || ' '}\r\n              </a>\r\n            </span>\r\n          ),\r\n          title: firstRow + '\\n' + secondRow,\r\n        };\r\n      } else {\r\n        return { data: '' };\r\n      }\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Email/Website',\r\n  },\r\n];\r\n\r\ninterface EnhancedTableProps {\r\n  numSelected: number;\r\n  onRequestSort: (\r\n    event: React.MouseEvent<unknown>,\r\n    property: keyof Customer,\r\n  ) => void;\r\n  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n  order: Order | undefined;\r\n  orderBy: string | undefined;\r\n  rowCount: number;\r\n}\r\n\r\nconst StyledTableHead = styled(TableHead)(({ theme }) => ({\r\n  backgroundColor: theme.palette.background.default,\r\n}));\r\n\r\nconst StyledTableCell = styled(TableCell)(() => ({\r\n  maxWidth: '100px',\r\n  paddingTop: '6px',\r\n  paddingBottom: '6px',\r\n  whiteSpace: 'nowrap',\r\n  textOverflow: 'ellipsis',\r\n  overflow: 'hidden',\r\n}));\r\n\r\nfunction EnhancedTableHead(props: EnhancedTableProps) {\r\n  const {\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n  const createSortHandler =\r\n    (property: keyof Customer) => (event: React.MouseEvent<unknown>) => {\r\n      onRequestSort(event, property);\r\n    };\r\n\r\n  return (\r\n    <StyledTableHead>\r\n      <TableRow>\r\n        <StyledTableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            name={'enhanced-table-checkbox-select-all'}\r\n            color=\"primary\"\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{\r\n              'aria-label': 'enhanced-table-checkbox-select-all',\r\n            }}\r\n          />\r\n        </StyledTableCell>\r\n        {headCells.map((headCell) => (\r\n          <StyledTableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'center'}\r\n            padding={headCell.disablePadding ? 'none' : 'normal'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={headCell.orderField && orderBy === headCell.orderField}\r\n              hideSortIcon={!headCell.orderField}\r\n              direction={orderBy === headCell.orderField ? order : 'asc'}\r\n              onClick={\r\n                headCell.orderField\r\n                  ? createSortHandler(headCell.orderField)\r\n                  : () => {\r\n                      return;\r\n                    }\r\n              }\r\n            >\r\n              {headCell.label}\r\n              {headCell.orderField && orderBy === headCell.orderField ? (\r\n                <Box component=\"span\" sx={visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </Box>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </StyledTableCell>\r\n        ))}\r\n      </TableRow>\r\n    </StyledTableHead>\r\n  );\r\n}\r\n\r\ninterface EnhancedTableToolbarProps {\r\n  selected: readonly string[];\r\n  setQueryParams: React.Dispatch<React.SetStateAction<Record<string, string>>>;\r\n}\r\n\r\nfunction EnhancedTableToolbar(props: EnhancedTableToolbarProps) {\r\n  const { selected, setQueryParams } = props;\r\n  const [customerSearch, setCustomerSearch] = React.useState<string>('');\r\n  const [searchChanged, setSearchChanged] = React.useState<boolean>(false);\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const queryClient = useQueryClient();\r\n\r\n  const setSnackbarMessage = useSnackbar();\r\n\r\n  const { mutate, isLoading } = useMutation(CustomerDelete, {\r\n    onSuccess: () => {\r\n      setSnackbarMessage({\r\n        severity: 'success',\r\n        message: 'Deleted',\r\n      });\r\n      queryClient.invalidateQueries(['customer']);\r\n    },\r\n    onError: (error: Error) => {\r\n      setSnackbarMessage({\r\n        severity: 'error',\r\n        message: error instanceof Error ? error.message : JSON.stringify(error),\r\n      });\r\n    },\r\n  });\r\n\r\n  const customerHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setCustomerSearch(event.target.value);\r\n    setSearchChanged(true);\r\n  };\r\n  const filterClearHandler = () => {\r\n    setSearchChanged(false);\r\n    setCustomerSearch('');\r\n    setQueryParams({});\r\n  };\r\n  const filterHandler = () => {\r\n    setSearchChanged(false);\r\n    setQueryParams({ search: customerSearch });\r\n  };\r\n  const keyUpHandler = (event: React.KeyboardEvent) => {\r\n    if (event.key !== 'Enter') {\r\n      return;\r\n    }\r\n    if (customerSearch) {\r\n      filterHandler();\r\n    } else {\r\n      filterClearHandler();\r\n    }\r\n  };\r\n  const createHandler = () => {\r\n    navigate('./create', {\r\n      relative: 'path',\r\n      state: { from: location },\r\n      replace: false,\r\n    });\r\n  };\r\n  const editHandler = () => {\r\n    navigate(`./edit/${selected[0]}`, {\r\n      relative: 'path',\r\n      state: { from: location },\r\n      replace: false,\r\n    });\r\n  };\r\n  const deleteHandler = () => {\r\n    mutate(`${selected[0]}`);\r\n  };\r\n\r\n  return (\r\n    <Toolbar\r\n      sx={{\r\n        overflow: 'hidden',\r\n        pl: { sm: 2 },\r\n        pr: { xs: 1, sm: 1 },\r\n        ...(selected.length > 0 && {\r\n          bgcolor: (theme) =>\r\n            alpha(\r\n              theme.palette.primary.main,\r\n              theme.palette.action.activatedOpacity,\r\n            ),\r\n        }),\r\n      }}\r\n    >\r\n      {selected.length > 0 ? (\r\n        <Typography\r\n          sx={{ flex: '1 1 100%' }}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {selected.length} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          sx={{\r\n            flex: '1 1 100%',\r\n            whiteSpace: 'nowrap',\r\n            textOverflow: 'ellipsis',\r\n            overflow: 'hidden',\r\n          }}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          Customers\r\n        </Typography>\r\n      )}\r\n      <Box\r\n        component=\"div\"\r\n        sx={{\r\n          '& .MuiTextField-root': { m: 1, width: '140px' },\r\n        }}\r\n      >\r\n        <TextField\r\n          label=\"Customer Search\"\r\n          value={customerSearch}\r\n          onChange={customerHandler}\r\n          onKeyUp={keyUpHandler}\r\n          size=\"small\"\r\n        />\r\n      </Box>\r\n      <Tooltip title=\"Filter list\">\r\n        {(searchChanged || !customerSearch) &&\r\n        !(searchChanged && !customerSearch) ? (\r\n          <span>\r\n            <IconButton disabled={!customerSearch} onClick={filterHandler}>\r\n              <FilterListIcon />\r\n            </IconButton>\r\n          </span>\r\n        ) : (\r\n          <span>\r\n            <IconButton onClick={filterClearHandler}>\r\n              <FilterListOffIcon />\r\n            </IconButton>\r\n          </span>\r\n        )}\r\n      </Tooltip>\r\n      <Box sx={{ p: 1, display: 'inline-flex' }}>\r\n        <Tooltip title=\"Create\">\r\n          <span>\r\n            <IconButton onClick={createHandler}>\r\n              <AddIcon />\r\n            </IconButton>\r\n          </span>\r\n        </Tooltip>\r\n        <Tooltip title=\"Edit\">\r\n          <span>\r\n            <IconButton disabled={selected.length !== 1} onClick={editHandler}>\r\n              <EditIcon />\r\n            </IconButton>\r\n          </span>\r\n        </Tooltip>\r\n        <Tooltip title=\"Delete\">\r\n          <span>\r\n            <IconButton\r\n              disabled={selected.length !== 1}\r\n              onClick={deleteHandler}\r\n            >\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </span>\r\n        </Tooltip>\r\n      </Box>\r\n      <Loader visible={isLoading} />\r\n    </Toolbar>\r\n  );\r\n}\r\n\r\nexport default function EnhancedTable() {\r\n  const [order, setOrder] = React.useState<Order | undefined>('desc');\r\n  const [orderBy, setOrderBy] = React.useState<keyof Customer | undefined>(\r\n    'name',\r\n  );\r\n  const [selected, setSelected] = React.useState<readonly string[]>([]);\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState<number>(15);\r\n  const [queryParams, setQueryParams] = React.useState<Record<string, any>>({});\r\n  const tableContainerRef = React.useRef(null);\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const setSnackbarMessage = useSnackbar();\r\n\r\n  const {\r\n    isLoading,\r\n    isFetching,\r\n    data: { items, total } = { items: [], total: 0 },\r\n  } = useQuery({\r\n    queryKey: ['customer', page, rowsPerPage, orderBy, order, queryParams],\r\n    queryFn: CustomersQuery,\r\n    keepPreviousData: true,\r\n    retry: false,\r\n    onError: (error: Error) => {\r\n      setSnackbarMessage({\r\n        severity: 'error',\r\n        message: error instanceof Error ? error.message : JSON.stringify(error),\r\n      });\r\n    },\r\n  });\r\n  const rows: Customer[] = items || [];\r\n\r\n  React.useEffect(() => {\r\n    if (tableContainerRef.current) {\r\n      const container = tableContainerRef.current as HTMLElement;\r\n      container.scrollTo({\r\n        top: 0,\r\n        left: 0,\r\n        behavior: 'smooth',\r\n      });\r\n    }\r\n  }, [rows]);\r\n\r\n  React.useEffect(() => {\r\n    const newSelected: string[] = [];\r\n    selected.forEach((selectedItem) => {\r\n      const selectedRow = rows.find((row) => row.id === selectedItem);\r\n      if (selectedRow) {\r\n        newSelected.push(selectedItem);\r\n      }\r\n    });\r\n    setSelected(newSelected);\r\n  }, [rows]);\r\n\r\n  const handleRequestSort = (\r\n    event: React.MouseEvent<unknown>,\r\n    property: keyof Customer,\r\n  ) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    const isDesc = orderBy === property && order === 'desc';\r\n    if (isDesc) {\r\n      setOrder(undefined);\r\n      setOrderBy(undefined);\r\n    } else {\r\n      setOrder(isAsc ? 'desc' : 'asc');\r\n      setOrderBy(property);\r\n    }\r\n  };\r\n\r\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (event.target.checked) {\r\n      const newSelected = rows.map((n: Customer) => n.id);\r\n      setSelected(newSelected);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (\r\n    event: React.MouseEvent<unknown>,\r\n    item: (typeof rows)[number],\r\n  ) => {\r\n    navigate(`./view/${item.id}`, {\r\n      relative: 'path',\r\n      state: { from: location },\r\n      replace: false,\r\n    });\r\n  };\r\n\r\n  const handleSelect = (event: React.MouseEvent<unknown>, name: string) => {\r\n    event.stopPropagation();\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected: readonly string[] = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event: unknown, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (\r\n    event: React.ChangeEvent<HTMLInputElement>,\r\n  ) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const isSelected = (name: string) => selected.indexOf(name) !== -1;\r\n\r\n  return (\r\n    <Box sx={{ width: '100%', height: '100%' }}>\r\n      <Paper sx={{ width: '100%', height: '100%', backgroundColor: 'unset' }}>\r\n        <EnhancedTableToolbar\r\n          selected={selected}\r\n          setQueryParams={(query) => {\r\n            setQueryParams(query);\r\n            setPage(0);\r\n          }}\r\n        />\r\n        <TableContainer\r\n          ref={tableContainerRef}\r\n          sx={{ height: 'calc(100% - 115px)' }}\r\n        >\r\n          <Table\r\n            sx={{ minWidth: 750 }}\r\n            aria-labelledby=\"tableTitle\"\r\n            size=\"small\"\r\n            stickyHeader\r\n          >\r\n            <EnhancedTableHead\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {rows.map((row, index) => {\r\n                const isItemSelected = isSelected(`${row.id}`);\r\n                const labelId = `enhanced-table-checkbox-${index}`;\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    onDoubleClick={(event) => handleClick(event, row)}\r\n                    role=\"checkbox\"\r\n                    aria-checked={isItemSelected}\r\n                    tabIndex={-1}\r\n                    key={row.id}\r\n                    selected={isItemSelected}\r\n                    sx={{ cursor: 'pointer' }}\r\n                  >\r\n                    <StyledTableCell padding=\"checkbox\">\r\n                      <Checkbox\r\n                        id={`${labelId}`}\r\n                        color=\"primary\"\r\n                        checked={isItemSelected}\r\n                        inputProps={{\r\n                          'aria-labelledby': labelId,\r\n                        }}\r\n                        onClick={(event) => handleSelect(event, `${row.id}`)}\r\n                      />\r\n                    </StyledTableCell>\r\n                    {headCells.map((cell) => {\r\n                      const cellData = cell.getData(row);\r\n                      return (\r\n                        <StyledTableCell\r\n                          key={cell.id}\r\n                          title={cellData.title}\r\n                          align={cell.numeric ? 'right' : 'center'}\r\n                        >\r\n                          {cellData.data}\r\n                        </StyledTableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 15, 20, 25, 35, 50]}\r\n          component=\"div\"\r\n          count={total}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <Loader visible={isLoading || isFetching} />\r\n    </Box>\r\n  );\r\n}\r\n","import * as React from 'react';\r\n\r\nexport function stopPropagation(e: React.SyntheticEvent) {\r\n  e.stopPropagation();\r\n}\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\nexports.default = _default;","import { getDefaultState } from './mutation'\nimport { notifyManager } from './notifyManager'\nimport { Subscribable } from './subscribable'\nimport { shallowEqualObjects } from './utils'\nimport type { QueryClient } from './queryClient'\nimport type {\n  MutateOptions,\n  MutationObserverBaseResult,\n  MutationObserverOptions,\n  MutationObserverResult,\n} from './types'\nimport type { Action, Mutation } from './mutation'\n\n// TYPES\n\ntype MutationObserverListener<TData, TError, TVariables, TContext> = (\n  result: MutationObserverResult<TData, TError, TVariables, TContext>,\n) => void\n\ninterface NotifyOptions {\n  listeners?: boolean\n  onError?: boolean\n  onSuccess?: boolean\n}\n\n// CLASS\n\nexport class MutationObserver<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n> extends Subscribable<\n  MutationObserverListener<TData, TError, TVariables, TContext>\n> {\n  options!: MutationObserverOptions<TData, TError, TVariables, TContext>\n\n  private client: QueryClient\n  private currentResult!: MutationObserverResult<\n    TData,\n    TError,\n    TVariables,\n    TContext\n  >\n  private currentMutation?: Mutation<TData, TError, TVariables, TContext>\n  private mutateOptions?: MutateOptions<TData, TError, TVariables, TContext>\n\n  constructor(\n    client: QueryClient,\n    options: MutationObserverOptions<TData, TError, TVariables, TContext>,\n  ) {\n    super()\n\n    this.client = client\n    this.setOptions(options)\n    this.bindMethods()\n    this.updateResult()\n  }\n\n  protected bindMethods(): void {\n    this.mutate = this.mutate.bind(this)\n    this.reset = this.reset.bind(this)\n  }\n\n  setOptions(\n    options?: MutationObserverOptions<TData, TError, TVariables, TContext>,\n  ) {\n    const prevOptions = this.options\n    this.options = this.client.defaultMutationOptions(options)\n    if (!shallowEqualObjects(prevOptions, this.options)) {\n      this.client.getMutationCache().notify({\n        type: 'observerOptionsUpdated',\n        mutation: this.currentMutation,\n        observer: this,\n      })\n    }\n    this.currentMutation?.setOptions(this.options)\n  }\n\n  protected onUnsubscribe(): void {\n    if (!this.hasListeners()) {\n      this.currentMutation?.removeObserver(this)\n    }\n  }\n\n  onMutationUpdate(action: Action<TData, TError, TVariables, TContext>): void {\n    this.updateResult()\n\n    // Determine which callbacks to trigger\n    const notifyOptions: NotifyOptions = {\n      listeners: true,\n    }\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = true\n    } else if (action.type === 'error') {\n      notifyOptions.onError = true\n    }\n\n    this.notify(notifyOptions)\n  }\n\n  getCurrentResult(): MutationObserverResult<\n    TData,\n    TError,\n    TVariables,\n    TContext\n  > {\n    return this.currentResult\n  }\n\n  reset(): void {\n    this.currentMutation = undefined\n    this.updateResult()\n    this.notify({ listeners: true })\n  }\n\n  mutate(\n    variables?: TVariables,\n    options?: MutateOptions<TData, TError, TVariables, TContext>,\n  ): Promise<TData> {\n    this.mutateOptions = options\n\n    if (this.currentMutation) {\n      this.currentMutation.removeObserver(this)\n    }\n\n    this.currentMutation = this.client.getMutationCache().build(this.client, {\n      ...this.options,\n      variables:\n        typeof variables !== 'undefined' ? variables : this.options.variables,\n    })\n\n    this.currentMutation.addObserver(this)\n\n    return this.currentMutation.execute()\n  }\n\n  private updateResult(): void {\n    const state = this.currentMutation\n      ? this.currentMutation.state\n      : getDefaultState<TData, TError, TVariables, TContext>()\n\n    const result: MutationObserverBaseResult<\n      TData,\n      TError,\n      TVariables,\n      TContext\n    > = {\n      ...state,\n      isLoading: state.status === 'loading',\n      isSuccess: state.status === 'success',\n      isError: state.status === 'error',\n      isIdle: state.status === 'idle',\n      mutate: this.mutate,\n      reset: this.reset,\n    }\n\n    this.currentResult = result as MutationObserverResult<\n      TData,\n      TError,\n      TVariables,\n      TContext\n    >\n  }\n\n  private notify(options: NotifyOptions) {\n    notifyManager.batch(() => {\n      // First trigger the mutate callbacks\n      if (this.mutateOptions && this.hasListeners()) {\n        if (options.onSuccess) {\n          this.mutateOptions.onSuccess?.(\n            this.currentResult.data!,\n            this.currentResult.variables!,\n            this.currentResult.context!,\n          )\n          this.mutateOptions.onSettled?.(\n            this.currentResult.data!,\n            null,\n            this.currentResult.variables!,\n            this.currentResult.context,\n          )\n        } else if (options.onError) {\n          this.mutateOptions.onError?.(\n            this.currentResult.error!,\n            this.currentResult.variables!,\n            this.currentResult.context,\n          )\n          this.mutateOptions.onSettled?.(\n            undefined,\n            this.currentResult.error,\n            this.currentResult.variables!,\n            this.currentResult.context,\n          )\n        }\n      }\n\n      // Then trigger the listeners\n      if (options.listeners) {\n        this.listeners.forEach(({ listener }) => {\n          listener(this.currentResult)\n        })\n      }\n    })\n  }\n}\n","'use client'\nimport * as React from 'react'\nimport {\n  MutationObserver,\n  notifyManager,\n  parseMutationArgs,\n} from '@tanstack/query-core'\nimport { useSyncExternalStore } from './useSyncExternalStore'\n\nimport { useQueryClient } from './QueryClientProvider'\nimport { shouldThrowError } from './utils'\nimport type { MutationFunction, MutationKey } from '@tanstack/query-core'\nimport type {\n  UseMutateFunction,\n  UseMutationOptions,\n  UseMutationResult,\n} from './types'\n\n// HOOK\n\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  options: UseMutationOptions<TData, TError, TVariables, TContext>,\n): UseMutationResult<TData, TError, TVariables, TContext>\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  mutationFn: MutationFunction<TData, TVariables>,\n  options?: Omit<\n    UseMutationOptions<TData, TError, TVariables, TContext>,\n    'mutationFn'\n  >,\n): UseMutationResult<TData, TError, TVariables, TContext>\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  mutationKey: MutationKey,\n  options?: Omit<\n    UseMutationOptions<TData, TError, TVariables, TContext>,\n    'mutationKey'\n  >,\n): UseMutationResult<TData, TError, TVariables, TContext>\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  mutationKey: MutationKey,\n  mutationFn?: MutationFunction<TData, TVariables>,\n  options?: Omit<\n    UseMutationOptions<TData, TError, TVariables, TContext>,\n    'mutationKey' | 'mutationFn'\n  >,\n): UseMutationResult<TData, TError, TVariables, TContext>\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  arg1:\n    | MutationKey\n    | MutationFunction<TData, TVariables>\n    | UseMutationOptions<TData, TError, TVariables, TContext>,\n  arg2?:\n    | MutationFunction<TData, TVariables>\n    | UseMutationOptions<TData, TError, TVariables, TContext>,\n  arg3?: UseMutationOptions<TData, TError, TVariables, TContext>,\n): UseMutationResult<TData, TError, TVariables, TContext> {\n  const options = parseMutationArgs(arg1, arg2, arg3)\n  const queryClient = useQueryClient({ context: options.context })\n\n  const [observer] = React.useState(\n    () =>\n      new MutationObserver<TData, TError, TVariables, TContext>(\n        queryClient,\n        options,\n      ),\n  )\n\n  React.useEffect(() => {\n    observer.setOptions(options)\n  }, [observer, options])\n\n  const result = useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) =>\n        observer.subscribe(notifyManager.batchCalls(onStoreChange)),\n      [observer],\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult(),\n  )\n\n  const mutate = React.useCallback<\n    UseMutateFunction<TData, TError, TVariables, TContext>\n  >(\n    (variables, mutateOptions) => {\n      observer.mutate(variables, mutateOptions).catch(noop)\n    },\n    [observer],\n  )\n\n  if (\n    result.error &&\n    shouldThrowError(observer.options.useErrorBoundary, [result.error])\n  ) {\n    throw result.error\n  }\n\n  return { ...result, mutate, mutateAsync: result.mutate }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nfunction noop() {}\n"],"names":["headCells","id","orderField","getData","row","data","concat","name","numeric","disablePadding","label","firstRow","type","_jsx","children","title","address","secondRow","address2","_jsxs","city","state","zipCode","phone","fax","href","target","onClick","stopPropagation","undefined","email","website","StyledTableHead","styled","TableHead","_ref","backgroundColor","theme","palette","background","default","StyledTableCell","TableCell","maxWidth","paddingTop","paddingBottom","whiteSpace","textOverflow","overflow","EnhancedTableHead","props","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","TableRow","padding","Checkbox","color","indeterminate","checked","onChange","inputProps","map","headCell","align","sortDirection","TableSortLabel","active","hideSortIcon","direction","property","event","Box","component","sx","visuallyHidden","EnhancedTableToolbar","selected","setQueryParams","_React$useState","React","_React$useState2","_slicedToArray","customerSearch","setCustomerSearch","_React$useState3","_React$useState4","searchChanged","setSearchChanged","location","useLocation","navigate","useNavigate","queryClient","useQueryClient","setSnackbarMessage","useSnackbar","_useMutation","useMutation","CustomerDelete","onSuccess","severity","message","invalidateQueries","onError","error","Error","JSON","stringify","mutate","isLoading","filterClearHandler","filterHandler","search","Toolbar","_objectSpread","pl","sm","pr","xs","length","bgcolor","alpha","primary","main","action","activatedOpacity","Typography","flex","variant","m","width","TextField","value","onKeyUp","key","size","Tooltip","IconButton","FilterListOffIcon","disabled","FilterListIcon","p","display","relative","from","replace","AddIcon","EditIcon","DeleteIcon","Loader","visible","EnhancedTable","_React$useState5","_React$useState6","setOrder","_React$useState7","_React$useState8","setOrderBy","_React$useState9","_React$useState10","setSelected","_React$useState11","_React$useState12","page","setPage","_React$useState13","_React$useState14","rowsPerPage","setRowsPerPage","_React$useState15","_React$useState16","queryParams","tableContainerRef","_useQuery","useQuery","queryKey","queryFn","CustomersQuery","keepPreviousData","retry","isFetching","_useQuery$data","_useQuery$data2","items","total","rows","current","scrollTo","top","left","behavior","newSelected","forEach","selectedItem","find","push","height","Paper","query","TableContainer","ref","Table","minWidth","stickyHeader","n","isAsc","TableBody","index","isItemSelected","indexOf","labelId","hover","onDoubleClick","role","tabIndex","cursor","selectedIndex","slice","handleSelect","cell","cellData","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","e","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","jsx","d","MutationObserver","_Subscribable","_inherits","_super","_createSuper","client","options","_this","_classCallCheck","call","setOptions","bindMethods","updateResult","_createClass","this","bind","reset","_this$currentMutation","prevOptions","defaultMutationOptions","shallowEqualObjects","getMutationCache","notify","mutation","currentMutation","observer","_this$currentMutation2","hasListeners","removeObserver","notifyOptions","listeners","currentResult","variables","mutateOptions","build","addObserver","execute","getDefaultState","result","status","isSuccess","isError","isIdle","_this2","notifyManager","batch","_this$mutateOptions$o","_this$mutateOptions","_this$mutateOptions$o2","_this$mutateOptions2","context","onSettled","_this$mutateOptions$o3","_this$mutateOptions3","_this$mutateOptions$o4","_this$mutateOptions4","listener","Subscribable","arg1","arg2","arg3","useSyncExternalStore","onStoreChange","subscribe","batchCalls","getCurrentResult","shouldThrowError","useErrorBoundary","noop"],"sourceRoot":""}