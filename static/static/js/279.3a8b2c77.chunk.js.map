{"version":3,"file":"static/js/279.3a8b2c77.chunk.js","mappings":"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","sources":["loads/viewLoad.tsx","utils/dataTypes.ts","../node_modules/@mui/icons-material/Person.js"],"sourcesContent":["import React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useQuery } from '@tanstack/react-query';\nimport { useFormik } from 'formik';\n\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport LocalShippingIcon from '@mui/icons-material/LocalShipping';\nimport PersonIcon from '@mui/icons-material/Person';\n\nimport {\n  Loader,\n  SearchField,\n  SearchMultiField,\n  SearchLocationField,\n  DateTimeField,\n  SelectMultiField,\n  TextField,\n} from '../components';\n\nimport { LoadQuery, TrucksQuery, UsersQuery } from '../api';\nimport { useSnackbar } from '../hooks';\nimport { CreateLoad, User, Truck, TruckTypes } from '../utils/dataTypes';\n\nconst initialValues = {\n  id: '',\n  pick: undefined,\n  pickDate: undefined,\n  deliver: undefined,\n  deliverDate: undefined,\n  weight: undefined,\n  truckType: [],\n  rate: undefined,\n  bookedByUser: null,\n  bookedByCompany: undefined,\n  dispatchers: [],\n  checkInAs: '4ULogistics',\n  truck: null,\n};\n\nexport default function ViewLoadForm() {\n  const { pathname } = useLocation();\n  const navigate = useNavigate();\n  const setSnackbarMessage = useSnackbar();\n\n  const {\n    isLoading: loading,\n    isFetching: fetching,\n    data,\n  } = useQuery({\n    queryKey: ['load', pathname.split('/')[3]],\n    queryFn: LoadQuery,\n    keepPreviousData: false,\n    onError: (error: Error) => {\n      setSnackbarMessage({\n        severity: 'error',\n        message: error instanceof Error ? error.message : JSON.stringify(error),\n      });\n    },\n  });\n\n  const formik = useFormik<CreateLoad>({\n    initialValues: {\n      ...initialValues,\n      ...data,\n    },\n    enableReinitialize: true,\n    onSubmit: () => {\n      return;\n    },\n  });\n\n  const handleClose = () => {\n    navigate(-1);\n  };\n\n  const handleEdit = () => {\n    navigate(pathname.replace('view', 'edit'), { replace: true });\n  };\n\n  return (\n    <Box>\n      <form onSubmit={formik.handleSubmit} onReset={formik.handleReset}>\n        <Box sx={{ p: 3, display: 'grid' }}>\n          <Box key=\"controls\" sx={{ display: 'inline-flex' }}>\n            <Box key=\"left\" sx={{ p: 1, width: '50%' }}>\n              <SearchLocationField\n                fieldName=\"pick\"\n                label=\"Pick Location\"\n                disabled\n                formik={formik}\n              />\n              <DateTimeField\n                fieldName=\"pickDate\"\n                label=\"Pick Date\"\n                disabled\n                formik={formik}\n              />\n              <TextField fieldName=\"weight\" label=\"Weight\" formik={formik} />\n              <SelectMultiField\n                fieldName=\"truckType\"\n                label=\"Truck Type\"\n                items={TruckTypes}\n                disabled\n                formik={formik}\n              />\n              <SearchField<User>\n                fieldName=\"bookedByUser\"\n                label=\"Booked By\"\n                getSelectedLabel={(selectedItem) => `${selectedItem.fullName}`}\n                getItemLabel={(item) => `${item.fullName}`}\n                getItemSecondLabel={(item) => `${item.jobTitle}`}\n                ListIcon={PersonIcon}\n                queryFn={UsersQuery}\n                orderby=\"fullName\"\n                order=\"asc\"\n                disabled\n                formik={formik}\n              />\n            </Box>\n            <Box key=\"right\" sx={{ p: 1, width: '50%' }}>\n              <SearchLocationField\n                fieldName=\"deliver\"\n                label=\"Deliver Location\"\n                disabled\n                formik={formik}\n              />\n              <DateTimeField\n                fieldName=\"deliverDate\"\n                label=\"Deliver Date\"\n                disabled\n                formik={formik}\n              />\n              <TextField\n                fieldName=\"rate\"\n                label=\"Rate\"\n                number\n                disabled\n                formik={formik}\n              />\n              <TextField\n                fieldName=\"checkInAs\"\n                label=\"Check In As\"\n                disabled\n                formik={formik}\n              />\n              <TextField\n                fieldName=\"bookedByCompany\"\n                label=\"Booked By Company\"\n                disabled\n                formik={formik}\n              />\n            </Box>\n          </Box>\n          <Box\n            key=\"bottomControls\"\n            sx={{ marginTop: -2, marginBottom: 3, p: 1 }}\n          >\n            <SearchField<Truck>\n              fieldName=\"truck\"\n              label=\"Truck\"\n              getSelectedLabel={(selectedItem) => `${selectedItem.truckNumber}`}\n              getItemLabel={(item) => `${item.truckNumber}`}\n              getItemSecondLabel={(item) =>\n                `${item.status}, ${item.licencePlate}`\n              }\n              ListIcon={LocalShippingIcon}\n              queryFn={TrucksQuery}\n              orderby=\"truckNumber\"\n              order=\"asc\"\n              disabled\n              formik={formik}\n            />\n            <SearchMultiField<User>\n              fieldName=\"dispatchers\"\n              label=\"Dispatchers\"\n              getSelectedLabel={(selectedItem) => `${selectedItem.fullName}`}\n              getItemLabel={(item) => `${item.fullName}`}\n              getItemSecondLabel={(item) => `${item.jobTitle}`}\n              ListIcon={PersonIcon}\n              queryFn={UsersQuery}\n              orderby=\"fullName\"\n              order=\"asc\"\n              disabled\n              formik={formik}\n            />\n          </Box>\n          <Box key=\"buttons\" sx={{ display: 'inline-flex' }}>\n            <Box key=\"left\" sx={{ p: 1, paddingTop: 0, width: '50%' }}>\n              <Button\n                fullWidth\n                variant=\"contained\"\n                size=\"small\"\n                color=\"primary\"\n                type=\"button\"\n                onClick={handleEdit}\n              >\n                Edit\n              </Button>\n            </Box>\n            <Box key=\"right\" sx={{ p: 1, paddingTop: 0, width: '50%' }}>\n              <Button\n                fullWidth\n                variant=\"contained\"\n                size=\"small\"\n                color=\"primary\"\n                type=\"button\"\n                onClick={handleClose}\n              >\n                Cancel\n              </Button>\n            </Box>\n          </Box>\n        </Box>\n      </form>\n      <Loader visible={loading || fetching} />\n    </Box>\n  );\n}\n","import React from 'react';\nimport { AlertColor } from '@mui/material/Alert/Alert';\n\nexport const LangPriorities = ['EN', 'UA', 'ES', 'RU'] as const;\n\nexport const PersonTypes = [\n  'Owner',\n  'OwnerDriver',\n  'Coordinator',\n  'CoordinatorDriver',\n  'Driver',\n] as const;\n\nexport const UserRoles = ['Admin', 'Super Admin'] as const;\n\nexport const TruckTypes = [\n  'Cargo van',\n  'Reefer van',\n  'Box truck',\n  'Box truck Reefer',\n  'Straight truck',\n  'Hotshot',\n  'Tented box',\n] as const;\n\nexport const TruckStatuses = ['Available', 'Not Available'] as const;\n\nexport const TruckCrossborders = ['Yes', 'No'] as const;\n\nexport const TruckCertificates = [\n  'Hazmat',\n  'Tsa',\n  'TWIC',\n  'Tanker Endorsement',\n] as const;\n\nexport const TruckEquipments = [\n  'Dock height risers',\n  'Air ride',\n  'Lift gate',\n  'Keep from freezing',\n  'ICC bar',\n  'Vertical E-track',\n  'Horizontal E-track',\n  'Pallet jack',\n  'PPE',\n  'Ramps',\n  'Straps',\n  'Loads bars',\n  'Blankets',\n  'Pads',\n  'Fire extinguisher',\n] as const;\n\nexport type Order = 'asc' | 'desc';\nexport type QueryKey<T> = readonly [\n  key: string,\n  page: number,\n  rowsPerPage: number,\n  orderBy?: string,\n  order?: Order,\n  queryParams?: T,\n];\n// export type BaseQuery = {\n//   readonly queryKey: QueryKey;\n// };\nexport type Query<T> = {\n  readonly queryKey: QueryKey<T>;\n};\nexport type QuerySingleKey = readonly [key: string, recordId: string];\nexport type QuerySingle = {\n  readonly queryKey: QuerySingleKey;\n};\nexport type Result<T> = {\n  items: T[];\n  limit: number;\n  offset: number;\n  total: number;\n};\nexport type QueryFn = (query: Query<{ search: any }>) => Promise<Result<any>>;\nexport interface AuthContextType {\n  user: any;\n  signin: (\n    username: string,\n    password: string,\n    callback: (res: boolean) => void,\n  ) => void;\n  signout: (callback: VoidFunction) => void;\n}\nexport type SnackbarMessage = {\n  message: string;\n  severity: AlertColor;\n  handleClose?: (event?: React.SyntheticEvent | Event, reason?: string) => void;\n};\nexport type PersonType = (typeof PersonTypes)[number];\nexport type LangPriority = (typeof LangPriorities)[number];\nexport type UserRole = (typeof UserRoles)[number];\nexport type TruckType = (typeof TruckTypes)[number];\nexport type TruckStatus = (typeof TruckStatuses)[number];\nexport type TruckCrossborder = (typeof TruckCrossborders)[number];\nexport type TruckCertificate = (typeof TruckCertificates)[number];\nexport type TruckEquipment = (typeof TruckEquipments)[number];\n\nexport interface Person {\n  id: string;\n  fullName: string;\n  type: PersonType;\n  phone?: string;\n}\n\nexport interface Owner extends Person {\n  type: PersonType;\n  phone: string;\n  phone2?: string;\n  email: string;\n  address: string;\n  ownTrucks?: Truck[];\n  coordinators?: Coordinator[];\n  drivers?: Driver[];\n}\n\nexport interface CreateOwner {\n  fullName?: string;\n  birthDate?: Date;\n  birthPlace?: string;\n  citizenship?: string;\n  languagePriority?: LangPriority;\n  hiredBy?: string;\n  hireDate?: Date;\n  snn?: string;\n  company?: string;\n  insurancePolicy?: string;\n  insurancePolicyEFF?: string;\n  insurancePolicyExp?: Date;\n  address?: string;\n  phone?: string;\n  phone2?: string;\n  email?: string;\n  emergencyContactName?: string;\n  emergencyContactRel?: string;\n  emergencyContactPhone?: string;\n  notes?: string;\n}\n\nexport interface UpdateOwner extends Partial<CreateOwner> {\n  id: string;\n}\n\nexport interface CreateOwnerDriver {\n  fullName?: string;\n  birthDate?: Date;\n  birthPlace?: string;\n  citizenship?: string;\n  languagePriority?: LangPriority;\n  driverLicenceType?: string;\n  driverLicenceNumber?: string;\n  driverLicenceState?: string;\n  driverLicenceClass?: string;\n  driverLicenceExp?: Date;\n  idDocId?: string;\n  idDocType?: string;\n  idDocExp?: Date;\n  hiredBy?: string;\n  hireDate?: Date;\n  snn?: string;\n  company?: string;\n  insurancePolicy?: string;\n  insurancePolicyEFF?: string;\n  insurancePolicyExp?: Date;\n  address?: string;\n  phone?: string;\n  phone2?: string;\n  email?: string;\n  emergencyContactName?: string;\n  emergencyContactRel?: string;\n  emergencyContactPhone?: string;\n  appLogin?: string;\n  appPass?: string;\n  notes?: string;\n}\n\nexport interface UpdateOwnerDriver extends Partial<CreateOwnerDriver> {\n  id: string;\n}\n\nexport interface Coordinator extends Person {\n  type: PersonType;\n  phone: string;\n  phone2?: string;\n  email: string;\n  address: string;\n  coordinateTrucks?: Truck[];\n  owner: Owner;\n}\n\nexport interface CreateCoordinator {\n  fullName?: string;\n  birthDate?: Date;\n  birthPlace?: string;\n  citizenship?: string;\n  languagePriority?: LangPriority;\n  hiredBy?: string;\n  hireDate?: Date;\n  snn?: string;\n  company?: string;\n  insurancePolicy?: string;\n  insurancePolicyEFF?: string;\n  insurancePolicyExp?: Date;\n  address?: string;\n  phone?: string;\n  phone2?: string;\n  email?: string;\n  emergencyContactName?: string;\n  emergencyContactRel?: string;\n  emergencyContactPhone?: string;\n  owner?: Owner | null;\n  notes?: string;\n}\n\nexport interface UpdateCoordinator extends Partial<CreateCoordinator> {\n  id: string;\n}\n\nexport interface CreateCoordinatorDriver {\n  fullName?: string;\n  birthDate?: Date;\n  birthPlace?: string;\n  citizenship?: string;\n  languagePriority?: LangPriority;\n  driverLicenceType?: string;\n  driverLicenceNumber?: string;\n  driverLicenceState?: string;\n  driverLicenceClass?: string;\n  driverLicenceExp?: Date;\n  idDocId?: string;\n  idDocType?: string;\n  idDocExp?: Date;\n  hiredBy?: string;\n  hireDate?: Date;\n  snn?: string;\n  company?: string;\n  insurancePolicy?: string;\n  insurancePolicyEFF?: string;\n  insurancePolicyExp?: Date;\n  address?: string;\n  phone?: string;\n  phone2?: string;\n  email?: string;\n  emergencyContactName?: string;\n  emergencyContactRel?: string;\n  emergencyContactPhone?: string;\n  appLogin?: string;\n  appPass?: string;\n  owner?: Owner | null;\n  notes?: string;\n}\n\nexport interface UpdateCoordinatorDriver\n  extends Partial<CreateCoordinatorDriver> {\n  id: string;\n}\n\nexport interface Driver extends Person {\n  type: PersonType;\n  phone: string;\n  phone2?: string;\n  email?: string;\n  address?: string;\n  driveTrucks?: Truck[];\n  owner: Owner;\n}\n\nexport interface CreateDriver {\n  fullName?: string;\n  birthDate?: Date;\n  birthPlace?: string;\n  citizenship?: string;\n  languagePriority?: LangPriority;\n  driverLicenceType?: string;\n  driverLicenceNumber?: string;\n  driverLicenceState?: string;\n  driverLicenceClass?: string;\n  driverLicenceExp?: Date;\n  idDocId?: string;\n  idDocType?: string;\n  idDocExp?: Date;\n  hiredBy?: string;\n  hireDate?: Date;\n  address?: string;\n  phone?: string;\n  phone2?: string;\n  email?: string;\n  emergencyContactName?: string;\n  emergencyContactRel?: string;\n  emergencyContactPhone?: string;\n  appLogin?: string;\n  appPass?: string;\n  owner?: Owner | null;\n  notes?: string;\n}\n\nexport interface UpdateDriver extends Partial<CreateDriver> {\n  id: string;\n}\n\nexport interface Truck {\n  id: string;\n  truckNumber: number;\n  status: TruckStatus;\n  lastLocation?: [number, number];\n  lastCity?: Location;\n  locationUpdatedAt?: string;\n  milesHaversine?: number;\n  milesByRoads?: number;\n  crossborder: TruckCrossborder;\n  certificate: TruckCertificate;\n  type: TruckType;\n  equipment?: TruckEquipment[];\n  payload?: number;\n  grossWeight: string;\n  make: string;\n  model: string;\n  year: number;\n  color: string;\n  vinCode: string;\n  licencePlate: string;\n  licenceState: string;\n  plateExpires: Date;\n  insideDims: string;\n  doorDims?: string;\n  owner?: Owner;\n  coordinator?: Coordinator;\n  driver?: Driver;\n}\n\nexport interface CreateTruck {\n  truckNumber?: number;\n  status?: TruckStatus;\n  crossborder?: TruckCrossborder;\n  certificate?: TruckCertificate;\n  type?: TruckType;\n  equipment?: TruckEquipment[];\n  payload?: number;\n  grossWeight?: string;\n  make?: string;\n  model?: string;\n  year?: number;\n  color?: string;\n  vinCode?: string;\n  licencePlate?: string;\n  licenceState?: string;\n  plateExpires?: Date;\n  insideDims?: string;\n  doorDims?: string;\n  owner?: Owner | null;\n  coordinator?: Coordinator | null;\n  driver?: Driver | null;\n}\n\nexport interface UpdateTruck extends Partial<CreateTruck> {\n  id: string;\n}\n\nexport interface Load {\n  id: string;\n  loadNumber: number;\n  pick?: google.maps.GeocoderResult;\n  pickLocation?: Location;\n  pickDate?: Date;\n  deliver?: google.maps.GeocoderResult;\n  deliverLocation?: Location;\n  deliverDate?: Date;\n  milesByRoads?: number;\n  milesHaversine?: number;\n  weight: string;\n  truckType: TruckType[];\n  rate?: number;\n  bookedByUser?: User;\n  bookedByCompany?: string;\n  dispatchers?: User[];\n  checkInAs?: string;\n  truck?: Truck;\n}\n\nexport interface CreateLoad {\n  pick?: google.maps.GeocoderResult | null;\n  pickDate?: Date;\n  deliver?: google.maps.GeocoderResult | null;\n  deliverDate?: Date;\n  weight?: string;\n  truckType?: TruckType[];\n  rate?: number;\n  bookedByUser?: User | null;\n  bookedByCompany?: string;\n  dispatchers?: User[];\n  checkInAs?: string;\n  truck?: Truck | null;\n}\n\nexport interface UpdateLoad extends Partial<CreateLoad> {\n  id: string;\n}\n\nexport interface Location {\n  id: string;\n  zipCode: string;\n  name: string;\n  stateCode: string;\n  stateName: string;\n  location: [number, number];\n}\n\nexport type CreateLocation = Omit<Location, 'id'>;\n\nexport interface UpdateLocation extends Partial<CreateLocation> {\n  id: string;\n}\n\nexport interface User {\n  id: string;\n  fullName: string;\n  phone?: string;\n  userRole: UserRole;\n  jobTitle: string;\n  email: string;\n}\n\nexport interface CreateUser extends Omit<User, 'id'> {\n  password?: string;\n}\n\nexport interface UpdateUser extends Partial<CreateUser> {\n  id: string;\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');\nexports.default = _default;"],"names":["initialValues","id","pick","undefined","pickDate","deliver","deliverDate","weight","truckType","rate","bookedByUser","bookedByCompany","dispatchers","checkInAs","truck","ViewLoadForm","pathname","useLocation","navigate","useNavigate","setSnackbarMessage","useSnackbar","_useQuery","useQuery","queryKey","split","queryFn","LoadQuery","keepPreviousData","onError","error","severity","message","Error","JSON","stringify","loading","isLoading","fetching","isFetching","data","formik","useFormik","_objectSpread","enableReinitialize","onSubmit","_jsxs","Box","children","_jsx","handleSubmit","onReset","handleReset","sx","p","display","width","SearchLocationField","fieldName","label","disabled","DateTimeField","TextField","SelectMultiField","items","TruckTypes","SearchField","getSelectedLabel","selectedItem","concat","fullName","getItemLabel","item","getItemSecondLabel","jobTitle","ListIcon","PersonIcon","UsersQuery","orderby","order","number","marginTop","marginBottom","truckNumber","status","licencePlate","LocalShippingIcon","TrucksQuery","SearchMultiField","paddingTop","Button","fullWidth","variant","size","color","type","onClick","replace","Loader","visible","LangPriorities","UserRoles","TruckStatuses","TruckCrossborders","TruckCertificates","TruckEquipments","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}