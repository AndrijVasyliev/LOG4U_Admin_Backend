{"version":3,"file":"static/js/22.11286388.chunk.js","mappings":"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","sources":["api/api.ts","trucks/trucks.tsx","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/icons-material/Edit.js"],"sourcesContent":["import { authProvider } from '../utils/auth';\nimport {\n  Coordinator,\n  Driver,\n  Load,\n  Location,\n  CreateLocation,\n  UpdateLocation,\n  Owner,\n  Truck,\n  User,\n  CreateUser,\n  UpdateUser,\n  Query,\n  QuerySingle,\n  Result,\n} from '../utils/dataTypes';\n\nconst SUCCESS_HTTP_CODE = 200;\nconst CREATED_HTTP_CODE = 201;\nconst FORBIDDEN_HTTP_CODE = 403;\nconst NOT_FOUND_HTTP_CODE = 404;\n\nconst { origin } = new URL(window.location.href);\n\nexport const authFetch: (\n  input: string | URL,\n  init?: RequestInit,\n) => Promise<object> = (input, init = {}) => {\n  const fetchInit = { ...init, headers: new Headers() };\n  fetchInit.headers.set(\n    'Authorization',\n    'Basic ' +\n      btoa(authProvider.user?.username + ':' + authProvider.user?.password),\n  );\n  if (fetchInit.body) {\n    fetchInit.headers.set('Accept', 'application/json');\n    fetchInit.headers.set('Content-Type', 'application/json');\n  }\n  return fetch(input, fetchInit)\n    .catch((reason) => {\n      const error = new Error();\n      error.cause = reason;\n      error.name = 'Fetch error';\n      error.message = 'Network error has occurred';\n      throw error;\n    })\n    .then((response) => {\n      if (\n        response.status !== SUCCESS_HTTP_CODE &&\n        response.status !== CREATED_HTTP_CODE\n      ) {\n        const error = new Error();\n        error.cause = response;\n        if (response.status) {\n          error.name = response.status + ' ' + response.statusText;\n          switch (response.status) {\n            case FORBIDDEN_HTTP_CODE:\n              error.message = 'Insufficient permissions';\n              break;\n            case NOT_FOUND_HTTP_CODE:\n              error.message = 'Not found';\n              break;\n            default:\n              error.message = 'Some server error has occurred';\n          }\n        } else {\n          error.message = 'Network error has occurred';\n        }\n        throw error;\n      }\n      return response.json().catch((reason) => {\n        const error = new Error();\n        error.cause = reason;\n        error.name = 'Fetch error';\n        error.message = 'Server responded with incorrect data';\n        throw error;\n      });\n    });\n};\n\nexport const TrucksQuery: (\n  query: Query<{\n    truckNumber?: number;\n    lastLocation?: string;\n    distance?: string;\n  }>,\n) => Promise<Result<Truck>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/truck', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  if (queryParams?.lastLocation && queryParams?.distance) {\n    url.searchParams.append('lastLocation', `${queryParams.lastLocation}`);\n    url.searchParams.append('distance', `${queryParams.distance}`);\n  }\n  return authFetch(url) as Promise<Result<Truck>>;\n};\n\nexport const TruckDelete = (userId: string): Promise<Truck> => {\n  const url = new URL(`/truck/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<Truck>;\n};\n\nexport const LocationsQuery: (\n  query: Query<{ search?: string; name?: string }>,\n) => Promise<Result<Location>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/location', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.search) {\n    url.searchParams.append('search', `${queryParams.search}`);\n  }\n  if (queryParams?.name) {\n    url.searchParams.append('name', `${queryParams.name}`);\n  }\n  return authFetch(url) as Promise<Result<Location>>;\n};\n\nexport const LocationDelete = (userId: string): Promise<Location> => {\n  const url = new URL(`/location/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<Location>;\n};\n\nexport const LocationCreate = (data: CreateLocation): Promise<Location> => {\n  const url = new URL(`/location`, origin);\n  return authFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(data),\n  }) as Promise<Location>;\n};\n\nexport const LocationUpdate = (data: UpdateLocation): Promise<Location> => {\n  const { id, ...updatedData } = data;\n  const url = new URL(`/location/${id}`, origin);\n  return authFetch(url, {\n    method: 'PATCH',\n    body: JSON.stringify(updatedData),\n  }) as Promise<Location>;\n};\n\nexport const LocationQuery = (query: QuerySingle): Promise<Location> => {\n  const url = new URL(`/location/${query.queryKey[1]}`, origin);\n  return authFetch(url, {\n    method: 'GET',\n  }) as Promise<Location>;\n};\n\nexport const LoadsQuery: (\n  query: Query<{ loadNumber?: number; truckNumber?: number }>,\n) => Promise<Result<Load>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/load', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.loadNumber) {\n    url.searchParams.append('loadNumber', `${queryParams.loadNumber}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  return authFetch(url) as Promise<Result<Load>>;\n};\n\nexport const LoadDelete = (userId: string): Promise<Load> => {\n  const url = new URL(`/load/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<Load>;\n};\n\nexport const OwnersQuery: (\n  query: Query<{ fullName?: number; truckNumber?: number }>,\n) => Promise<Result<Owner>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/owner', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.fullName) {\n    url.searchParams.append('fullName', `${queryParams.fullName}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  return authFetch(url) as Promise<Result<Owner>>;\n};\n\nexport const OwnerDelete = (userId: string): Promise<Owner> => {\n  const url = new URL(`/owner/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<Owner>;\n};\n\nexport const DriversQuery: (\n  query: Query<{ fullName?: number; truckNumber?: number }>,\n) => Promise<Result<Driver>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/driver', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.fullName) {\n    url.searchParams.append('fullName', `${queryParams.fullName}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  return authFetch(url) as Promise<Result<Driver>>;\n};\n\nexport const DriverDelete = (userId: string): Promise<Driver> => {\n  const url = new URL(`/driver/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<Driver>;\n};\n\nexport const CoordinatorsQuery: (\n  query: Query<{ fullName?: number; truckNumber?: number }>,\n) => Promise<Result<Coordinator>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/coordinator', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.fullName) {\n    url.searchParams.append('fullName', `${queryParams.fullName}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  return authFetch(url) as Promise<Result<Coordinator>>;\n};\n\nexport const CoordinatorDelete = (userId: string): Promise<Coordinator> => {\n  const url = new URL(`/coordinator/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<Coordinator>;\n};\n\nexport const UsersQuery: (\n  query: Query<{ fullName?: number }>,\n) => Promise<Result<User>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/user', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.fullName) {\n    url.searchParams.append('fullName', `${queryParams.fullName}`);\n  }\n  return authFetch(url) as Promise<Result<User>>;\n};\n\nexport const UserDelete = (userId: string): Promise<User> => {\n  const url = new URL(`/user/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<User>;\n};\n\nexport const UserCreate = (data: CreateUser): Promise<User> => {\n  const url = new URL(`/user`, origin);\n  return authFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(data),\n  }) as Promise<User>;\n};\n\nexport const UserUpdate = (data: UpdateUser): Promise<User> => {\n  const { id, ...updatedData } = data;\n  const url = new URL(`/user/${id}`, origin);\n  return authFetch(url, {\n    method: 'PATCH',\n    body: JSON.stringify(updatedData),\n  }) as Promise<User>;\n};\n\nexport const UserQuery = (query: QuerySingle): Promise<User> => {\n  const url = new URL(`/user/${query.queryKey[1]}`, origin);\n  return authFetch(url, {\n    method: 'GET',\n  }) as Promise<User>;\n};\n","import * as React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\n\nimport { alpha, styled } from '@mui/material/styles';\nimport TextField from '@mui/material/TextField';\nimport Checkbox from '@mui/material/Checkbox';\nimport Tooltip from '@mui/material/Tooltip';\nimport TableCell from '@mui/material/TableCell';\nimport Box from '@mui/material/Box';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport TableSortLabel from '@mui/material/TableSortLabel';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\nimport IconButton from '@mui/material/IconButton';\nimport AddIcon from '@mui/icons-material/Add';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport FilterListIcon from '@mui/icons-material/FilterList';\nimport FilterListOffIcon from '@mui/icons-material/FilterListOff';\nimport { visuallyHidden } from '@mui/utils';\n\nimport Loader from '../components/Loader';\n\nimport { TrucksQuery, TruckDelete } from '../api';\nimport { useSnackbar } from '../hooks';\nimport { Order, Truck } from '../utils/dataTypes';\n\ninterface HeadCell {\n  id: string;\n  disablePadding: boolean;\n  orderField?: keyof Truck;\n  getData: (row: Truck) => { data: JSX.Element | string; title?: string };\n  label: string;\n  numeric: boolean;\n}\n\nconst headCells: readonly HeadCell[] = [\n  {\n    id: 'truckNumber',\n    orderField: 'truckNumber',\n    getData: (row) => ({ data: `${row.truckNumber}` }),\n    numeric: true,\n    disablePadding: false,\n    label: 'Truck Number',\n  },\n  {\n    id: 'mainContactInfo',\n    getData: (row) => {\n      const coordinator = row.coordinator;\n      const owner = row.owner;\n      let path = '';\n      let type = '';\n      let firstRow = '';\n      let secondRow = '';\n      if (coordinator) {\n        path = `./coordinators/view/${coordinator.id}`;\n        type = '(C) ';\n        firstRow = `${coordinator.fullName}`;\n        secondRow = `${coordinator?.phone}`;\n      } else if (owner) {\n        path = `./owners/view/${owner.id}`;\n        type = `${owner.type === 'Owner' ? '(O) ' : ''}${\n          owner.type === 'OwnerDriver' ? '(O/d) ' : ''\n        }`;\n        firstRow = `${owner.fullName}`;\n        secondRow = `${owner?.phone}`;\n      }\n      return {\n        data: (\n          <span>\n            <b>{type}</b>\n            <a href={path} target=\"_blank\" onClick={stopPropagation}>\n              {firstRow}\n            </a>\n            <br />\n            <a\n              href={secondRow ? `tel:${secondRow}` : undefined}\n              target=\"_blank\"\n              onClick={stopPropagation}\n            >\n              {secondRow || ' '}\n            </a>\n          </span>\n        ),\n        title: type + '' + firstRow + '\\n' + secondRow,\n      };\n    },\n    numeric: false,\n    disablePadding: true,\n    label: 'Main Contact info',\n  },\n  {\n    id: 'status',\n    orderField: 'status',\n    getData: (row) => ({ data: `${row.status}` }),\n    numeric: false,\n    disablePadding: true,\n    label: 'Status',\n  },\n  {\n    id: 'location',\n    getData: (row) => {\n      if (row?.lastCity) {\n        const path = `./locations/view/${row.lastCity.id}`;\n        const firstRow = `${row.lastCity.name}, ${row.lastCity.stateCode}, ${row.lastCity.zipCode},`;\n        const secondRow = `${\n          row.locationUpdatedAt\n            ? new Date(row.locationUpdatedAt).toLocaleString()\n            : ''\n        }`;\n\n        return {\n          data: (\n            <span>\n              <a href={path} target=\"_blank\" onClick={stopPropagation}>\n                {firstRow}\n              </a>\n              <br />\n              {secondRow}\n            </span>\n          ),\n          title: firstRow + '\\n' + secondRow,\n        };\n      } else {\n        return { data: '' };\n      }\n    },\n    numeric: false,\n    disablePadding: true,\n    label: 'Last known location',\n  },\n  {\n    id: 'truckInfo',\n    getData: (row) => {\n      const firstRow = row.type ? `${row.type}` : '';\n      const secondRow = row.equipment ? `${row.equipment.join(', ')}` : '';\n\n      return {\n        data: (\n          <span>\n            {firstRow}\n            <br />\n            {secondRow}\n          </span>\n        ),\n        title: firstRow + '\\n' + secondRow,\n      };\n    },\n    numeric: false,\n    disablePadding: true,\n    label: 'Truck info',\n  },\n  {\n    id: 'dimsPayload',\n    getData: (row) => {\n      const firstRow = row.doorDims ? `${row.doorDims}` : '';\n      const secondRow = row.payload ? `${row.payload}` : '';\n\n      return {\n        data: (\n          <span>\n            {firstRow}\n            <br />\n            {secondRow}\n          </span>\n        ),\n        title: firstRow + '\\n' + secondRow,\n      };\n    },\n    numeric: false,\n    disablePadding: true,\n    label: 'DIMS/Payload',\n  },\n  {\n    id: 'driverInfo',\n    getData: (row) => {\n      const driver = row.driver;\n      let path = '';\n      let type = '';\n      let firstRow = '';\n      let secondRow = ''; // OwnerDriver  CoordinatorDriver    Driver\n      if (driver) {\n        path = `./drivers/view/${driver.id}`;\n        firstRow = `${driver.fullName}`;\n        secondRow = `${driver.phone}`;\n        if (driver.type === 'OwnerDriver') {\n          type = '(O/d) ';\n        }\n        if (driver.type === 'CoordinatorDriver') {\n          type = '(C/d) ';\n        }\n        if (driver.type === 'Driver') {\n          type = '(D) ';\n        }\n      }\n      return {\n        data: (\n          <span>\n            <b>{type}</b>\n            <a\n              href={firstRow ? path : undefined}\n              target=\"_blank\"\n              onClick={stopPropagation}\n            >\n              {firstRow}\n            </a>\n            <br />\n            <a\n              href={secondRow ? `tel:${secondRow}` : undefined}\n              target=\"_blank\"\n              onClick={stopPropagation}\n            >\n              {secondRow || ' '}\n            </a>\n          </span>\n        ),\n        title: type + '' + firstRow + '\\n' + secondRow,\n      };\n    },\n    numeric: false,\n    disablePadding: true,\n    label: 'Driver info',\n  },\n];\n\ninterface EnhancedTableProps {\n  numSelected: number;\n  onRequestSort: (\n    event: React.MouseEvent<unknown>,\n    property: keyof Truck,\n  ) => void;\n  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  order: Order | undefined;\n  orderBy: string | undefined;\n  rowCount: number;\n}\n\nconst StyledTableHead = styled(TableHead)(({ theme }) => ({\n  backgroundColor: theme.palette.background.default,\n}));\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  maxWidth: '100px',\n  whiteSpace: 'nowrap',\n  textOverflow: 'ellipsis',\n  overflow: 'hidden',\n}));\n\nfunction stopPropagation(e: React.SyntheticEvent) {\n  e.stopPropagation();\n}\n\nfunction EnhancedTableHead(props: EnhancedTableProps) {\n  const {\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n  } = props;\n  const createSortHandler =\n    (property: keyof Truck) => (event: React.MouseEvent<unknown>) => {\n      onRequestSort(event, property);\n    };\n\n  return (\n    <StyledTableHead>\n      <TableRow>\n        <StyledTableCell padding=\"checkbox\">\n          <Checkbox\n            name={'enhanced-table-checkbox-select-all'}\n            color=\"primary\"\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{\n              'aria-label': 'enhanced-table-checkbox-select-all',\n            }}\n          />\n        </StyledTableCell>\n        {headCells.map((headCell) => (\n          <StyledTableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'center'}\n            padding={headCell.disablePadding ? 'none' : 'normal'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={headCell.orderField && orderBy === headCell.orderField}\n              hideSortIcon={!headCell.orderField}\n              direction={orderBy === headCell.orderField ? order : 'asc'}\n              onClick={\n                headCell.orderField\n                  ? createSortHandler(headCell.orderField)\n                  : () => {\n                      return;\n                    }\n              }\n            >\n              {headCell.label}\n              {headCell.orderField && orderBy === headCell.orderField ? (\n                <Box component=\"span\" sx={visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </StyledTableCell>\n        ))}\n      </TableRow>\n    </StyledTableHead>\n  );\n}\n\ninterface EnhancedTableToolbarProps {\n  selected: readonly string[];\n  setQueryParams: React.Dispatch<React.SetStateAction<Record<string, number>>>;\n}\n\nfunction EnhancedTableToolbar(props: EnhancedTableToolbarProps) {\n  const { selected, setQueryParams } = props;\n  const [truckNumberSearch, setTruckNumberSearch] = React.useState<number>(0);\n  const [truckNumberChanged, setTruckNumberChanged] =\n    React.useState<boolean>(false);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const queryClient = useQueryClient();\n\n  const setSnackbarMessage = useSnackbar();\n\n  const { mutate, isLoading } = useMutation(TruckDelete, {\n    onSuccess: () => {\n      setSnackbarMessage({\n        severity: 'success',\n        message: 'Deleted',\n      });\n      queryClient.invalidateQueries(['trucks']);\n    },\n    onError: (error: Error) => {\n      setSnackbarMessage({\n        severity: 'error',\n        message: error instanceof Error ? error.message : JSON.stringify(error),\n      });\n    },\n  });\n\n  const truckNumberHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (Number.isFinite(Number(event.target.value))) {\n      setTruckNumberSearch(Number(event.target.value));\n      setTruckNumberChanged(true);\n    }\n  };\n  const truckClearHandler = () => {\n    setTruckNumberChanged(false);\n    setTruckNumberSearch(0);\n    setQueryParams({});\n  };\n  const filterHandler = () => {\n    setTruckNumberChanged(false);\n    setQueryParams({ truckNumber: truckNumberSearch });\n  };\n  const createHandler = () => {\n    navigate('./create', {\n      relative: 'path',\n      state: { from: location },\n      replace: false,\n    });\n  };\n  const editHandler = () => {\n    navigate(`./edit/${selected[0]}`, {\n      relative: 'path',\n      state: { from: location },\n      replace: false,\n    });\n  };\n  const deleteHandler = () => {\n    mutate(`${selected[0]}`);\n  };\n\n  return (\n    <Toolbar\n      sx={{\n        pl: { sm: 2 },\n        pr: { xs: 1, sm: 1 },\n        ...(selected.length > 0 && {\n          bgcolor: (theme) =>\n            alpha(\n              theme.palette.primary.main,\n              theme.palette.action.activatedOpacity,\n            ),\n        }),\n      }}\n    >\n      {selected.length > 0 ? (\n        <Typography\n          sx={{ flex: '1 1 100%' }}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {selected.length} selected\n        </Typography>\n      ) : (\n        <Typography\n          sx={{\n            flex: '1 1 100%',\n            whiteSpace: 'nowrap',\n            textOverflow: 'ellipsis',\n            overflow: 'hidden',\n          }}\n          variant=\"h6\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          Trucks\n        </Typography>\n      )}\n      <TextField\n        label=\"Truck Number\"\n        value={truckNumberSearch || ''}\n        onChange={truckNumberHandler}\n        size=\"small\"\n      />\n      <Tooltip title=\"Filter list\">\n        {(truckNumberChanged || !truckNumberSearch) &&\n        !(truckNumberChanged && !truckNumberSearch) ? (\n          <span>\n            <IconButton disabled={!truckNumberSearch} onClick={filterHandler}>\n              <FilterListIcon />\n            </IconButton>\n          </span>\n        ) : (\n          <IconButton onClick={truckClearHandler}>\n            <FilterListOffIcon />\n          </IconButton>\n        )}\n      </Tooltip>\n      <Box sx={{ p: 1, display: 'inline-flex' }}>\n        <Tooltip title=\"Create\">\n          <span>\n            <IconButton onClick={createHandler}>\n              <AddIcon />\n            </IconButton>\n          </span>\n        </Tooltip>\n        <Tooltip title=\"Edit\">\n          <span>\n            <IconButton disabled={selected.length !== 1} onClick={editHandler}>\n              <EditIcon />\n            </IconButton>\n          </span>\n        </Tooltip>\n        <Tooltip title=\"Delete\">\n          <span>\n            <IconButton\n              disabled={selected.length !== 1}\n              onClick={deleteHandler}\n            >\n              <DeleteIcon />\n            </IconButton>\n          </span>\n        </Tooltip>\n      </Box>\n      <Loader visible={isLoading} />\n    </Toolbar>\n  );\n}\n\nexport default function EnhancedTable() {\n  const [order, setOrder] = React.useState<Order | undefined>('asc');\n  const [orderBy, setOrderBy] = React.useState<keyof Truck | undefined>(\n    'truckNumber',\n  );\n  const [selected, setSelected] = React.useState<readonly string[]>([]);\n  const [page, setPage] = React.useState<number>(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState<number>(15);\n  const [queryParams, setQueryParams] = React.useState<Record<string, any>>({});\n  const tableContainerRef = React.useRef(null);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const setSnackbarMessage = useSnackbar();\n\n  const {\n    isLoading,\n    isFetching,\n    data: { items, total } = { items: [], total: 0 },\n  } = useQuery({\n    queryKey: ['trucks', page, rowsPerPage, orderBy, order, queryParams],\n    queryFn: TrucksQuery,\n    keepPreviousData: true,\n    onError: (error: Error) => {\n      setSnackbarMessage({\n        severity: 'error',\n        message: error instanceof Error ? error.message : JSON.stringify(error),\n      });\n    },\n  });\n  const rows: Truck[] = items || [];\n\n  React.useEffect(() => {\n    if (tableContainerRef.current) {\n      const container = tableContainerRef.current as HTMLElement;\n      container.scrollTo({\n        top: 0,\n        left: 0,\n        behavior: 'smooth',\n      });\n    }\n  }, [rows]);\n\n  React.useEffect(() => {\n    const newSelected: string[] = [];\n    selected.forEach((selectedItem) => {\n      const selectedRow = rows.find((row) => row.id === selectedItem);\n      if (selectedRow) {\n        newSelected.push(selectedItem);\n      }\n    });\n    setSelected(newSelected);\n  }, [rows]);\n\n  const handleRequestSort = (\n    event: React.MouseEvent<unknown>,\n    property: keyof Truck,\n  ) => {\n    const isAsc = orderBy === property && order === 'asc';\n    const isDesc = orderBy === property && order === 'desc';\n    if (isDesc) {\n      setOrder(undefined);\n      setOrderBy(undefined);\n    } else {\n      setOrder(isAsc ? 'desc' : 'asc');\n      setOrderBy(property);\n    }\n  };\n\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.checked) {\n      const newSelected = rows.map((n: Truck) => n.id);\n      setSelected(newSelected);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event: React.MouseEvent<unknown>, name: string) => {\n    navigate(`./view/${name}`, {\n      relative: 'path',\n      state: { from: location },\n      replace: false,\n    });\n  };\n\n  const handleSelect = (event: React.MouseEvent<unknown>, name: string) => {\n    event.stopPropagation();\n    const selectedIndex = selected.indexOf(name);\n    let newSelected: readonly string[] = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = (name: string) => selected.indexOf(name) !== -1;\n\n  return (\n    <Box sx={{ width: '100%', height: '100%' }}>\n      <Paper sx={{ width: '100%', height: '100%', backgroundColor: 'unset' }}>\n        <EnhancedTableToolbar\n          selected={selected}\n          setQueryParams={(query) => {\n            setQueryParams(query);\n            setPage(0);\n          }}\n        />\n        <TableContainer\n          ref={tableContainerRef}\n          sx={{ height: 'calc(100% - 115px)' }}\n        >\n          <Table\n            sx={{ minWidth: 750 }}\n            aria-labelledby=\"tableTitle\"\n            size=\"small\"\n            stickyHeader\n          >\n            <EnhancedTableHead\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {rows.map((row, index) => {\n                const isItemSelected = isSelected(`${row.id}`);\n                const labelId = `enhanced-table-checkbox-${index}`;\n                return (\n                  <TableRow\n                    hover\n                    onClick={(event) => handleClick(event, `${row.id}`)}\n                    role=\"checkbox\"\n                    aria-checked={isItemSelected}\n                    tabIndex={-1}\n                    key={row.id}\n                    selected={isItemSelected}\n                    sx={{ cursor: 'pointer' }}\n                  >\n                    <StyledTableCell padding=\"checkbox\">\n                      <Checkbox\n                        id={`${labelId}`}\n                        color=\"primary\"\n                        checked={isItemSelected}\n                        inputProps={{\n                          'aria-labelledby': labelId,\n                        }}\n                        onClick={(event) => handleSelect(event, `${row.id}`)}\n                      />\n                    </StyledTableCell>\n                    {headCells.map((cell) => {\n                      const cellData = cell.getData(row);\n                      return (\n                        <StyledTableCell\n                          key={cell.id}\n                          title={cellData.title}\n                          align={cell.numeric ? 'right' : 'center'}\n                        >\n                          {cellData.data}\n                        </StyledTableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 15, 20, 25, 35, 50]}\n          component=\"div\"\n          count={total}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <Loader visible={isLoading || isFetching} />\n    </Box>\n  );\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\nexports.default = _default;"],"names":["origin","URL","window","location","href","authFetch","input","_authProvider$user","_authProvider$user2","init","arguments","length","undefined","fetchInit","_objectSpread","headers","Headers","set","btoa","authProvider","user","username","password","body","fetch","catch","reason","error","Error","cause","name","message","then","response","status","statusText","json","TrucksQuery","_ref","_ref$queryKey","_slicedToArray","queryKey","page","rowsPerPage","orderBy","order","queryParams","url","searchParams","append","concat","truckNumber","lastLocation","distance","TruckDelete","userId","method","LocationsQuery","_ref2","_ref2$queryKey","search","LocationDelete","LocationCreate","data","JSON","stringify","LocationUpdate","id","updatedData","_objectWithoutProperties","_excluded","LocationQuery","query","LoadsQuery","_ref3","_ref3$queryKey","loadNumber","LoadDelete","OwnersQuery","_ref4","_ref4$queryKey","fullName","OwnerDelete","DriversQuery","_ref5","_ref5$queryKey","DriverDelete","CoordinatorsQuery","_ref6","_ref6$queryKey","CoordinatorDelete","UsersQuery","_ref7","_ref7$queryKey","UserDelete","UserCreate","UserUpdate","_excluded2","UserQuery","headCells","orderField","getData","row","numeric","disablePadding","label","coordinator","owner","path","type","firstRow","secondRow","phone","_jsxs","children","_jsx","target","onClick","stopPropagation","title","lastCity","stateCode","zipCode","locationUpdatedAt","Date","toLocaleString","equipment","join","doorDims","payload","driver","StyledTableHead","styled","TableHead","backgroundColor","theme","palette","background","default","StyledTableCell","TableCell","maxWidth","whiteSpace","textOverflow","overflow","e","EnhancedTableHead","props","onSelectAllClick","numSelected","rowCount","onRequestSort","TableRow","padding","Checkbox","color","indeterminate","checked","onChange","inputProps","map","headCell","align","sortDirection","TableSortLabel","active","hideSortIcon","direction","property","event","Box","component","sx","visuallyHidden","EnhancedTableToolbar","selected","setQueryParams","_React$useState","React","_React$useState2","truckNumberSearch","setTruckNumberSearch","_React$useState3","_React$useState4","truckNumberChanged","setTruckNumberChanged","useLocation","navigate","useNavigate","queryClient","useQueryClient","setSnackbarMessage","useSnackbar","_useMutation","useMutation","onSuccess","severity","invalidateQueries","onError","mutate","isLoading","Toolbar","pl","sm","pr","xs","bgcolor","alpha","primary","main","action","activatedOpacity","Typography","flex","variant","TextField","value","Number","isFinite","size","Tooltip","IconButton","FilterListOffIcon","disabled","FilterListIcon","p","display","relative","state","from","replace","AddIcon","EditIcon","DeleteIcon","Loader","visible","EnhancedTable","_React$useState5","_React$useState6","setOrder","_React$useState7","_React$useState8","setOrderBy","_React$useState9","_React$useState10","setSelected","_React$useState11","_React$useState12","setPage","_React$useState13","_React$useState14","setRowsPerPage","_React$useState15","_React$useState16","tableContainerRef","_useQuery","useQuery","queryFn","keepPreviousData","isFetching","_useQuery$data","_useQuery$data2","items","total","rows","current","scrollTo","top","left","behavior","newSelected","forEach","selectedItem","find","push","width","height","Paper","TableContainer","ref","Table","minWidth","stickyHeader","n","isAsc","TableBody","index","isItemSelected","indexOf","labelId","hover","handleClick","role","tabIndex","cursor","selectedIndex","slice","handleSelect","cell","cellData","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","jsx","d"],"sourceRoot":""}