{"version":3,"file":"static/js/491.c6e6c360.chunk.js","mappings":"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","sources":["api/api.ts","trucksNearby/trucksNearby.tsx"],"sourcesContent":["import { authProvider } from '../utils/auth';\n\nconst { origin } = new URL(window.location.href);\n\nexport type Order = 'asc' | 'desc';\n\nexport const authFetch: (\n  input: string | URL,\n  init?: RequestInit,\n) => Promise<Response> = (input, init = {}) => {\n  const fetchInit = { ...init, headers: new Headers() };\n  fetchInit.headers.set(\n    'Authorization',\n    'Basic ' +\n      btoa(authProvider.user?.username + ':' + authProvider.user?.password),\n  );\n  return fetch(input, fetchInit);\n};\n\nexport const TrucksQuery = (\n  page: number,\n  rowsPerPage: number,\n  orderBy?: string,\n  order?: Order,\n  queryParams?: {\n    truckNumber?: number;\n    lastLocation?: string;\n    distance?: string;\n  },\n) => {\n  const url = new URL('/truck', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  if (queryParams?.lastLocation && queryParams?.distance) {\n    url.searchParams.append('lastLocation', `${queryParams.lastLocation}`);\n    url.searchParams.append('distance', `${queryParams.distance}`);\n  }\n  return authFetch(url).then((res) => res.json());\n};\n\nexport const TruckDelete = (userId: string) => {\n  const url = new URL(`/truck/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }).then((res) => res.json());\n};\n\nexport const LocationsQuery = (\n  page: number,\n  rowsPerPage: number,\n  orderBy?: string,\n  order?: Order,\n  queryParams?: { search?: string; name?: string },\n) => {\n  const url = new URL('/location', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.search) {\n    url.searchParams.append('search', `${queryParams.search}`);\n  }\n  if (queryParams?.name) {\n    url.searchParams.append('name', `${queryParams.name}`);\n  }\n  return authFetch(url).then((res) => res.json());\n};\n\nexport const LocationDelete = (userId: string) => {\n  const url = new URL(`/location/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }).then((res) => res.json());\n};\n\nexport const LoadsQuery = (\n  page: number,\n  rowsPerPage: number,\n  orderBy?: string,\n  order?: Order,\n  queryParams?: { loadNumber?: number; truckNumber?: number },\n) => {\n  const url = new URL('/load', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.loadNumber) {\n    url.searchParams.append('loadNumber', `${queryParams.loadNumber}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  return authFetch(url).then((res) => res.json());\n};\n\nexport const LoadDelete = (userId: string) => {\n  const url = new URL(`/load/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }).then((res) => res.json());\n};\n\nexport const OwnersQuery = (\n  page: number,\n  rowsPerPage: number,\n  orderBy?: string,\n  order?: Order,\n  queryParams?: { fullName?: number; truckNumber?: number },\n) => {\n  const url = new URL('/owner', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.fullName) {\n    url.searchParams.append('fullName', `${queryParams.fullName}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  return authFetch(url).then((res) => res.json());\n};\n\nexport const OwnerDelete = (userId: string) => {\n  const url = new URL(`/owner/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }).then((res) => res.json());\n};\n\nexport const DriversQuery = (\n  page: number,\n  rowsPerPage: number,\n  orderBy?: string,\n  order?: Order,\n  queryParams?: { fullName?: number; truckNumber?: number },\n) => {\n  const url = new URL('/driver', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.fullName) {\n    url.searchParams.append('fullName', `${queryParams.fullName}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  return authFetch(url).then((res) => res.json());\n};\n\nexport const DriverDelete = (userId: string) => {\n  const url = new URL(`/driver/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }).then((res) => res.json());\n};\n\nexport const CoordinatorsQuery = (\n  page: number,\n  rowsPerPage: number,\n  orderBy?: string,\n  order?: Order,\n  queryParams?: { fullName?: number; truckNumber?: number },\n) => {\n  const url = new URL('/coordinator', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.fullName) {\n    url.searchParams.append('fullName', `${queryParams.fullName}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  return authFetch(url).then((res) => res.json());\n};\n\nexport const CoordinatorDelete = (userId: string) => {\n  const url = new URL(`/coordinator/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }).then((res) => res.json());\n};\n\nexport const UsersQuery = (\n  page: number,\n  rowsPerPage: number,\n  orderBy?: string,\n  order?: Order,\n  queryParams?: { fullName?: number },\n) => {\n  const url = new URL('/user', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.fullName) {\n    url.searchParams.append('fullName', `${queryParams.fullName}`);\n  }\n  return authFetch(url).then((res) => res.json());\n};\n\nexport const UserDelete = (userId: string) => {\n  const url = new URL(`/user/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }).then((res) => res.json());\n};\n","import * as React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\n\nimport { alpha, styled } from '@mui/material/styles';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport TextField from '@mui/material/TextField';\nimport Tooltip from '@mui/material/Tooltip';\nimport TableCell from '@mui/material/TableCell';\nimport MenuItem from '@mui/material/MenuItem';\nimport Box from '@mui/material/Box';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport TableSortLabel from '@mui/material/TableSortLabel';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\nimport AddIcon from '@mui/icons-material/Add';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport FilterListIcon from '@mui/icons-material/FilterList';\nimport FilterListOffIcon from '@mui/icons-material/FilterListOff';\nimport { visuallyHidden } from '@mui/utils';\nimport { debounce } from '@mui/material/utils';\n\nimport Loader from '../components/Loader';\n\nimport { LocationsQuery, TrucksQuery, TruckDelete } from '../api';\nimport { Order, Truck, City } from '../utils/dataTypes';\n\ninterface HeadCell {\n  id: string;\n  disablePadding: boolean;\n  orderField?: keyof Truck;\n  getData: (row: Truck) => { data: JSX.Element | string; title?: string };\n  label: string;\n  numeric: boolean;\n}\n\nconst headCells: readonly HeadCell[] = [\n  {\n    id: 'truckNumber',\n    orderField: 'truckNumber',\n    getData: (row) => ({ data: `${row.truckNumber}` }),\n    numeric: true,\n    disablePadding: false,\n    label: 'Truck Number',\n  },\n  {\n    id: 'mainContactInfo',\n    getData: (row) => {\n      const coordinator = row.coordinator;\n      const owner = row.owner;\n      let path = '';\n      let type = '';\n      let firstRow = '';\n      let secondRow = '';\n      if (coordinator) {\n        path = `./coordinators/view/${coordinator.id}`;\n        type = '(C) ';\n        firstRow = `${coordinator.fullName}`;\n        secondRow = `${coordinator?.phone}`;\n      } else if (owner) {\n        path = `./owners/view/${owner.id}`;\n        type = `${owner.type === 'Owner' ? '(O) ' : ''}${\n          owner.type === 'OwnerDriver' ? '(O/d) ' : ''\n        }`;\n        firstRow = `${owner.fullName}`;\n        secondRow = `${owner?.phone}`;\n      }\n      return {\n        data: (\n          <span>\n            <b>{type}</b>\n            <a href={path} target=\"_blank\" onClick={stopPropagation}>\n              {firstRow}\n            </a>\n            <br />\n            <a\n              href={secondRow ? `tel:${secondRow}` : undefined}\n              target=\"_blank\"\n              onClick={stopPropagation}\n            >\n              {secondRow || ' '}\n            </a>\n          </span>\n        ),\n        title: type + '' + firstRow + '\\n' + secondRow,\n      };\n    },\n    numeric: false,\n    disablePadding: true,\n    label: 'Main Contact info',\n  },\n  {\n    id: 'truckInfo',\n    getData: (row) => {\n      const firstRow = row.type ? `${row.type}` : '';\n      const secondRow = row.equipment ? `${row.equipment.join(', ')}` : '';\n\n      return {\n        data: (\n          <span>\n            {firstRow}\n            <br />\n            {secondRow}\n          </span>\n        ),\n        title: firstRow + '\\n' + secondRow,\n      };\n    },\n    numeric: false,\n    disablePadding: true,\n    label: 'Truck info',\n  },\n  {\n    id: 'dimsPayload',\n    getData: (row) => {\n      const firstRow = row.doorDims ? `${row.doorDims}` : '';\n      const secondRow = row.payload ? `${row.payload}` : '';\n\n      return {\n        data: (\n          <span>\n            {firstRow}\n            <br />\n            {secondRow}\n          </span>\n        ),\n        title: firstRow + '\\n' + secondRow,\n      };\n    },\n    numeric: false,\n    disablePadding: true,\n    label: 'DIMS/Payload',\n  },\n  {\n    id: 'status',\n    orderField: 'status',\n    getData: (row) => ({ data: `${row.status}` }),\n    numeric: false,\n    disablePadding: true,\n    label: 'Status',\n  },\n  {\n    id: 'roadsDistance',\n    getData: (row) => ({\n      data: `${row.milesByRoads ? row.milesByRoads.toFixed(2) : ''}`,\n    }),\n    numeric: false,\n    disablePadding: true,\n    label: 'Road distance',\n  },\n  {\n    id: 'location',\n    getData: (row) => {\n      if (row?.lastCity) {\n        const path = `./locations/view/${row.lastCity.id}`;\n        const firstRow = `${row.lastCity.name}, ${row.lastCity.stateCode}, ${row.lastCity.zipCode},`;\n        const secondRow = `${\n          row.locationUpdatedAt\n            ? new Date(row.locationUpdatedAt).toLocaleString()\n            : ''\n        }`;\n\n        return {\n          data: (\n            <span>\n              <a href={path} target=\"_blank\" onClick={stopPropagation}>\n                {firstRow}\n              </a>\n              <br />\n              {secondRow}\n            </span>\n          ),\n          title: firstRow + '\\n' + secondRow,\n        };\n      } else {\n        return { data: '' };\n      }\n    },\n    numeric: false,\n    disablePadding: true,\n    label: 'Last known location',\n  },\n  {\n    id: 'calcDistance',\n    getData: (row) => ({\n      data: `${row.milesHaversine ? row.milesHaversine.toFixed(2) : ''}`,\n    }),\n    numeric: false,\n    disablePadding: true,\n    label: 'Origin away',\n  },\n];\n\ninterface EnhancedTableProps {\n  numSelected: number;\n  onRequestSort: (\n    event: React.MouseEvent<unknown>,\n    property: keyof Truck,\n  ) => void;\n  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  order: Order | undefined;\n  orderBy: string | undefined;\n  rowCount: number;\n}\n\nconst StyledTableHead = styled(TableHead)(({ theme }) => ({\n  backgroundColor: theme.palette.background.default,\n}));\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  maxWidth: '100px',\n  whiteSpace: 'nowrap',\n  textOverflow: 'ellipsis',\n  overflow: 'hidden',\n}));\n\nfunction stopPropagation(e: React.SyntheticEvent) {\n  e.stopPropagation();\n}\n\nfunction EnhancedTableHead(props: EnhancedTableProps) {\n  const {\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n  } = props;\n  const createSortHandler =\n    (property: keyof Truck) => (event: React.MouseEvent<unknown>) => {\n      onRequestSort(event, property);\n    };\n\n  return (\n    <StyledTableHead>\n      <TableRow>\n        <StyledTableCell align=\"center\" padding=\"checkbox\">\n          Actions\n        </StyledTableCell>\n        {headCells.map((headCell) => (\n          <StyledTableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'center'}\n            padding={headCell.disablePadding ? 'none' : 'normal'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={headCell.orderField && orderBy === headCell.orderField}\n              hideSortIcon={!headCell.orderField}\n              direction={orderBy === headCell.orderField ? order : 'asc'}\n              onClick={\n                headCell.orderField\n                  ? createSortHandler(headCell.orderField)\n                  : () => {\n                      return;\n                    }\n              }\n            >\n              {headCell.label}\n              {headCell.orderField && orderBy === headCell.orderField ? (\n                <Box component=\"span\" sx={visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </StyledTableCell>\n        ))}\n      </TableRow>\n    </StyledTableHead>\n  );\n}\n\ninterface EnhancedTableToolbarProps {\n  selected: readonly string[];\n  setQueryParams: React.Dispatch<\n    React.SetStateAction<Record<string, number | string>>\n  >;\n}\n\nfunction EnhancedTableToolbar(props: EnhancedTableToolbarProps) {\n  const { selected, setQueryParams } = props;\n  const [value, setValue] = React.useState<City | null>(null);\n  const [inputValue, setInputValue] = React.useState('');\n  const [searchValue, setSearchValue] = React.useState('');\n  const [options, setOptions] = React.useState<readonly City[]>([]);\n  const [distanceValue, setDistanceValue] = React.useState(200);\n  const [searchDataChanged, setSearchDataChanged] =\n    React.useState<boolean>(false);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const queryClient = useQueryClient();\n  const mutation = useMutation(TruckDelete, {\n    onSuccess: () => {\n      queryClient.invalidateQueries(['trucks']);\n    },\n  });\n\n  const setSearch = React.useMemo(() => {\n    return debounce((search: string): void => {\n      setSearchValue(search);\n    }, 400);\n  }, []);\n  const { data: { items } = { items: [], total: 0 } } = useQuery({\n    queryKey: ['locations', searchValue],\n    queryFn: () =>\n      LocationsQuery(0, 15, 'name', 'asc', { search: searchValue }),\n    keepPreviousData: true,\n  });\n\n  React.useEffect(() => {\n    if (inputValue === '') {\n      setOptions(value ? [value] : []);\n      return undefined;\n    }\n    let newOptions: readonly City[] = [];\n\n    if (value) {\n      newOptions = [value];\n    }\n\n    if (items.length) {\n      newOptions = [...newOptions, ...items];\n    }\n\n    setOptions(newOptions);\n\n    return undefined;\n  }, [value, items]);\n\n  const handleLocationChange = (event: any, newValue: City | null) => {\n    setOptions(newValue ? [newValue, ...options] : options);\n    setValue(newValue);\n    handleApplyFilter();\n    if (newValue?.location) {\n      setQueryParams({\n        lastLocation: newValue.location.join(','),\n        distance: distanceValue,\n      });\n      setSearchDataChanged(false);\n    } else if (!newValue) {\n      setInputValue('');\n      setQueryParams({});\n      setSearchDataChanged(false);\n    }\n    // setSearchDataChanged(true);\n  };\n  const handleLocationInputChange = (event: any, newInputValue: string) => {\n    setInputValue(newInputValue);\n    setSearch(newInputValue);\n  };\n  const handleDistanceInputChange = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    if (Number.isInteger(Number(event.target.value))) {\n      setDistanceValue(Number(event.target.value));\n      setSearchDataChanged(true);\n    }\n  };\n  const handleClearFilter = () => {\n    setValue(null);\n    setInputValue('');\n    setDistanceValue(200);\n    setQueryParams({});\n    setSearchDataChanged(false);\n  };\n  const handleApplyFilter = () => {\n    if (value?.location) {\n      setQueryParams({\n        lastLocation: value.location.join(','),\n        distance: distanceValue,\n      });\n      setSearchDataChanged(false);\n    }\n  };\n  const createHandler = () => {\n    navigate('./create', {\n      relative: 'path',\n      state: { from: location },\n      replace: false,\n    });\n  };\n  const editHandler = () => {\n    navigate(`./edit/${selected[0]}`, {\n      relative: 'path',\n      state: { from: location },\n      replace: false,\n    });\n  };\n  const deleteHandler = () => {\n    mutation.mutate(`${selected[0]}`);\n  };\n\n  return (\n    <Toolbar\n      sx={{\n        pl: { sm: 2 },\n        pr: { xs: 1, sm: 1 },\n        ...(selected.length > 0 && {\n          bgcolor: (theme) =>\n            alpha(\n              theme.palette.primary.main,\n              theme.palette.action.activatedOpacity,\n            ),\n        }),\n      }}\n    >\n      {selected.length > 0 ? (\n        <Typography\n          sx={{ flex: '1 1 100%' }}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {selected.length} selected\n        </Typography>\n      ) : (\n        <Typography\n          sx={{\n            flex: '1 1 100%',\n            whiteSpace: 'nowrap',\n            textOverflow: 'ellipsis',\n            overflow: 'hidden',\n          }}\n          variant=\"h6\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          Trucks Nearby\n        </Typography>\n      )}\n      <Box\n        component=\"div\"\n        sx={{\n          '& .MuiTextField-root': { m: 1, width: '350px' },\n        }}\n      >\n        <Autocomplete\n          getOptionLabel={(option) =>\n            typeof option === 'string'\n              ? option\n              : `${option.name}, ${option.zipCode}, ${option.stateName}`\n          }\n          filterOptions={(x) => x}\n          options={options}\n          autoComplete\n          includeInputInList\n          filterSelectedOptions\n          value={value}\n          noOptionsText=\"No locations\"\n          onChange={handleLocationChange}\n          onInputChange={handleLocationInputChange}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Enter city, state or zip\"\n              size=\"small\"\n              fullWidth\n            />\n          )}\n          renderOption={(props, option) => (\n            <li {...props}>\n              <Grid container alignItems=\"center\">\n                <Grid item sx={{ display: 'flex', width: 44 }}>\n                  <LocationOnIcon sx={{ color: 'text.secondary' }} />\n                </Grid>\n                <Grid\n                  item\n                  sx={{ width: 'calc(100% - 44px)', wordWrap: 'break-word' }}\n                >\n                  <Box component=\"span\" sx={{ fontWeight: 'regular' }}>\n                    {`${option.name}, ${option.stateCode}`}\n                  </Box>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    {`${option.zipCode}, ${option.stateName}`}\n                  </Typography>\n                </Grid>\n              </Grid>\n            </li>\n          )}\n        />\n      </Box>\n      <Box\n        component=\"div\"\n        sx={{\n          '& .MuiTextField-root': { m: 1, width: '140px' },\n        }}\n      >\n        <TextField\n          select\n          label=\"Select Distance\"\n          value={distanceValue}\n          onChange={handleDistanceInputChange}\n          size=\"small\"\n          fullWidth\n        >\n          {Array.from(\n            { length: (1000 - 50) / 50 + 1 },\n            (_, index) => 50 + index * 50,\n          ).map((option) => (\n            <MenuItem key={option} value={option}>\n              {option}\n            </MenuItem>\n          ))}\n        </TextField>\n      </Box>\n      <Tooltip title=\"Filter list\">\n        {(searchDataChanged || !value) && !(searchDataChanged && !value) ? (\n          <span>\n            <IconButton\n              disabled={!value || !distanceValue}\n              onClick={handleApplyFilter}\n            >\n              <FilterListIcon />\n            </IconButton>\n          </span>\n        ) : (\n          <IconButton onClick={handleClearFilter}>\n            <FilterListOffIcon />\n          </IconButton>\n        )}\n      </Tooltip>\n    </Toolbar>\n  );\n}\n\nexport default function EnhancedTable() {\n  const [order, setOrder] = React.useState<Order | undefined>(undefined);\n  const [orderBy, setOrderBy] = React.useState<keyof Truck | undefined>(\n    undefined,\n  );\n  const [selected, setSelected] = React.useState<readonly string[]>([]);\n  const [page, setPage] = React.useState<number>(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState<number>(15);\n  const [queryParams, setQueryParams] = React.useState<Record<string, any>>({});\n  const tableContainerRef = React.useRef(null);\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const {\n    isLoading,\n    isFetching,\n    data: { items, total } = { items: [], total: 0 },\n  } = useQuery({\n    queryKey: ['trucks', page, rowsPerPage, orderBy, order, queryParams],\n    queryFn: () => TrucksQuery(page, rowsPerPage, orderBy, order, queryParams),\n    keepPreviousData: true,\n  });\n  const rows: Truck[] = items || [];\n\n  React.useEffect(() => {\n    if (tableContainerRef.current) {\n      const container = tableContainerRef.current as HTMLElement;\n      container.scrollTo({\n        top: 0,\n        left: 0,\n        behavior: 'smooth',\n      });\n    }\n  }, [rows]);\n\n  React.useEffect(() => {\n    const newSelected: string[] = [];\n    selected.forEach((selectedItem) => {\n      const selectedRow = rows.find((row) => row.id === selectedItem);\n      if (selectedRow) {\n        newSelected.push(selectedItem);\n      }\n    });\n    setSelected(newSelected);\n  }, [rows]);\n\n  const handleRequestSort = (\n    event: React.MouseEvent<unknown>,\n    property: keyof Truck,\n  ) => {\n    const isAsc = orderBy === property && order === 'asc';\n    const isDesc = orderBy === property && order === 'desc';\n    if (isDesc) {\n      setOrder(undefined);\n      setOrderBy(undefined);\n    } else {\n      setOrder(isAsc ? 'desc' : 'asc');\n      setOrderBy(property);\n    }\n  };\n\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.checked) {\n      const newSelected = rows.map((n: Truck) => n.id);\n      setSelected(newSelected);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event: React.MouseEvent<unknown>, name: string) => {\n    navigate(`./view/${name}`, {\n      relative: 'path',\n      state: { from: location },\n      replace: false,\n    });\n  };\n\n  const handleSelect = (event: React.MouseEvent<unknown>, name: string) => {\n    event.stopPropagation();\n    // const selectedIndex = selected.indexOf(name);\n    // let newSelected: readonly string[] = [];\n    //\n    // if (selectedIndex === -1) {\n    //     newSelected = newSelected.concat(selected, name);\n    // } else if (selectedIndex === 0) {\n    //     newSelected = newSelected.concat(selected.slice(1));\n    // } else if (selectedIndex === selected.length - 1) {\n    //     newSelected = newSelected.concat(selected.slice(0, -1));\n    // } else if (selectedIndex > 0) {\n    //     newSelected = newSelected.concat(\n    //         selected.slice(0, selectedIndex),\n    //         selected.slice(selectedIndex + 1),\n    //     );\n    // }\n    //\n    // setSelected(newSelected);\n  };\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = (name: string) => selected.indexOf(name) !== -1;\n\n  return (\n    <Box sx={{ width: '100%', height: '100%' }}>\n      <Paper sx={{ width: '100%', height: '100%', backgroundColor: 'unset' }}>\n        <EnhancedTableToolbar\n          selected={selected}\n          setQueryParams={(query) => {\n            setQueryParams(query);\n            setPage(0);\n          }}\n        />\n        <TableContainer\n          ref={tableContainerRef}\n          sx={{ height: 'calc(100% - 115px)' }}\n        >\n          <Table\n            sx={{ minWidth: 750 }}\n            aria-labelledby=\"tableTitle\"\n            size=\"small\"\n            stickyHeader\n          >\n            <EnhancedTableHead\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {rows.map((row, index) => {\n                const isItemSelected = isSelected(`${row.id}`);\n                const labelId = `enhanced-table-checkbox-${index}`;\n                return (\n                  <TableRow\n                    hover\n                    onClick={(event) => handleClick(event, `${row.id}`)}\n                    role=\"checkbox\"\n                    aria-checked={isItemSelected}\n                    tabIndex={-1}\n                    key={row.id}\n                    selected={isItemSelected}\n                    sx={{ cursor: 'pointer' }}\n                  >\n                    <StyledTableCell padding=\"checkbox\">\n                      <Button\n                        id={`${labelId}`}\n                        sx={{ m: 1 }}\n                        fullWidth\n                        variant=\"contained\"\n                        size=\"small\"\n                        color=\"primary\"\n                        onClick={() => {\n                          return;\n                        }}\n                      >\n                        Reserve\n                      </Button>\n                    </StyledTableCell>\n                    {headCells.map((cell) => {\n                      const cellData = cell.getData(row);\n                      return (\n                        <StyledTableCell\n                          key={cell.id}\n                          title={cellData.title}\n                          align={cell.numeric ? 'right' : 'center'}\n                        >\n                          {cellData.data}\n                        </StyledTableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 15, 20, 25, 35, 50]}\n          component=\"div\"\n          count={total}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <Loader visible={isLoading || isFetching} />\n    </Box>\n  );\n}\n"],"names":["origin","URL","window","location","href","authFetch","input","_authProvider$user","_authProvider$user2","init","arguments","length","undefined","fetchInit","_objectSpread","headers","Headers","set","btoa","authProvider","user","username","password","fetch","TrucksQuery","page","rowsPerPage","orderBy","order","queryParams","url","searchParams","append","concat","truckNumber","lastLocation","distance","then","res","json","TruckDelete","userId","method","LocationsQuery","search","name","LocationDelete","LoadsQuery","loadNumber","LoadDelete","OwnersQuery","fullName","OwnerDelete","DriversQuery","DriverDelete","CoordinatorsQuery","CoordinatorDelete","UsersQuery","UserDelete","headCells","id","orderField","getData","row","data","numeric","disablePadding","label","coordinator","owner","path","type","firstRow","secondRow","phone","_jsxs","children","_jsx","target","onClick","stopPropagation","title","equipment","join","doorDims","payload","status","milesByRoads","toFixed","lastCity","stateCode","zipCode","locationUpdatedAt","Date","toLocaleString","milesHaversine","StyledTableHead","styled","TableHead","_ref","backgroundColor","theme","palette","background","default","StyledTableCell","TableCell","_ref2","maxWidth","whiteSpace","textOverflow","overflow","e","EnhancedTableHead","props","onSelectAllClick","onRequestSort","numSelected","rowCount","TableRow","align","padding","map","headCell","sortDirection","TableSortLabel","active","hideSortIcon","direction","property","event","Box","component","sx","visuallyHidden","EnhancedTableToolbar","selected","setQueryParams","_React$useState","React","_React$useState2","_slicedToArray","value","setValue","_React$useState3","_React$useState4","inputValue","setInputValue","_React$useState5","_React$useState6","searchValue","setSearchValue","_React$useState7","_React$useState8","options","setOptions","_React$useState9","_React$useState10","distanceValue","setDistanceValue","_React$useState11","_React$useState12","searchDataChanged","setSearchDataChanged","queryClient","useLocation","useNavigate","useQueryClient","setSearch","useMutation","onSuccess","invalidateQueries","debounce","_useQuery$data","useQuery","queryKey","queryFn","keepPreviousData","items","total","newOptions","_toConsumableArray","handleApplyFilter","Toolbar","pl","sm","pr","xs","bgcolor","alpha","primary","main","action","activatedOpacity","Typography","flex","color","variant","m","width","Autocomplete","getOptionLabel","option","stateName","filterOptions","x","autoComplete","includeInputInList","filterSelectedOptions","noOptionsText","onChange","newValue","onInputChange","newInputValue","renderInput","params","TextField","size","fullWidth","renderOption","Grid","container","alignItems","item","display","LocationOnIcon","wordWrap","fontWeight","select","Number","isInteger","Array","from","_","index","MenuItem","Tooltip","IconButton","FilterListOffIcon","disabled","FilterListIcon","EnhancedTable","_React$useState13","_React$useState14","setOrder","_React$useState15","_React$useState16","setOrderBy","_React$useState17","_React$useState18","setSelected","_React$useState19","_React$useState20","setPage","_React$useState21","_React$useState22","setRowsPerPage","_React$useState23","_React$useState24","tableContainerRef","navigate","_useQuery2","isLoading","isFetching","_useQuery2$data","_useQuery2$data2","rows","current","scrollTo","top","left","behavior","newSelected","forEach","selectedItem","find","push","height","Paper","query","TableContainer","ref","Table","minWidth","stickyHeader","checked","n","isAsc","TableBody","isItemSelected","indexOf","labelId","hover","relative","state","replace","handleClick","role","tabIndex","cursor","Button","cell","cellData","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","Loader","visible"],"sourceRoot":""}