{"version":3,"file":"static/js/56.1f810078.chunk.js","mappings":"4YAkBMA,EAAS,CAAEC,IAAK,mBAAoBC,KAAM,mBAC1CC,EAAO,EAEPC,EAAaC,EAAAA,YAAiB,SAClCC,EAGAC,GAEA,OAAOC,EAAAA,EAAAA,KAACC,EAAAA,GAAKC,EAAAA,EAAAA,GAAA,CAACC,UAAU,KAAKJ,IAAKA,GAASD,GAC7C,IAEe,SAASM,IACtB,IAAAC,EAA0CR,EAAAA,SAA6B,MAAKS,GAAAC,EAAAA,EAAAA,GAAAF,EAAA,GAArEG,EAAaF,EAAA,GAAEG,EAAgBH,EAAA,GAEtCI,GAIIC,EAAAA,EAAAA,GAAS,CACXC,SAAU,CAAC,YAAa,EAAG,MAC3BC,QAASC,EAAAA,GACTC,kBAAkB,IANlBC,EAASN,EAATM,UACAC,EAAUP,EAAVO,WAAUC,EAAAR,EACVS,KAMIC,QANA,IAAAF,EAAc,CAAEG,MAAO,IAAIH,GAAvBG,OAMqB,GAMzBC,EAAoB,WACxBb,EAAiB,KACnB,EAEA,OACEc,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEzB,EAAAA,EAAAA,KAAC0B,EAAAA,EAAG,CACFC,UAAU,OACVC,GAAI,CAAEC,SAAU,EAAGC,EAAG,EAAGC,OAAQ,OAAQC,MAAO,QAASP,UAEzDzB,EAAAA,EAAAA,KAACiC,EAAAA,QAAO,CACNC,OAAQ,0CACRC,OAAQA,EAAOV,UAEfzB,EAAAA,EAAAA,KAACoC,EAAG,CAAC5C,OAAQA,EAAQG,KAAMA,EAAK8B,UAC9BzB,EAAAA,EAAAA,KAACqC,EAAe,CAAAZ,SACbL,EACEkB,QAAO,SAACC,GAAK,OAAKA,EAAMC,YAAY,IACpCC,KAAI,SAACF,GACJ,OACEvC,EAAAA,EAAAA,KAAC0C,EAAM,CAELC,QAAS,kBA1BJC,EA0B0BL,EAAMM,QAzBvDpC,EAAiBW,EAAK0B,MAAK,SAACP,GAAK,OAAKA,EAAMM,KAAOD,CAAO,KAAK,MADzC,IAACA,CA0BmC,EACxCG,WAAS,EACTC,UACEC,OAAOC,OAAOC,KAAKC,WACnBH,OAAOC,OAAOC,KAAKC,UAAUC,KAE/BC,MAAK,GAAAC,OAAKhB,EAAMiB,YAAW,MAAAD,OAAKhB,EAAMkB,QACtCC,SAAU,CAGRjE,IAAK8C,EAAMC,aAAa,GAGxB9C,IAAK6C,EAAMC,aAAa,KAdrBD,EAAMM,GAkBjB,aAKVtB,EAAAA,EAAAA,MAACoC,EAAAA,EAAM,CACLC,OAAQpD,EACRqD,oBAAqBjE,EACrBkE,aAAW,EACXC,QAASzC,EACT,mBAAiB,iCAAgCG,SAAA,EAEjDzB,EAAAA,EAAAA,KAACgE,EAAAA,EAAW,CAAAvC,UACVF,EAAAA,EAAAA,MAAA,QAAAE,SAAA,CAAM,qBAEJzB,EAAAA,EAAAA,KAAA,KAAGiE,KAAI,YAAAV,OAA2B,OAAb/C,QAAa,IAAbA,OAAa,EAAbA,EAAeqC,IAAMqB,OAAO,SAAQzC,SACzC,OAAbjB,QAAa,IAAbA,OAAa,EAAbA,EAAegD,oBAItBxD,EAAAA,EAAAA,KAACmE,EAAAA,EAAa,CAAA1C,UACZzB,EAAAA,EAAAA,KAACoE,EAAAA,EAAiB,CAACvB,GAAG,iCAAgCpB,SAAA,mBAAA8B,OACnB,OAAb/C,QAAa,IAAbA,OAAa,EAAbA,EAAeiD,aAGvCzD,EAAAA,EAAAA,KAACqE,EAAAA,EAAa,CAAA5C,UACZzB,EAAAA,EAAAA,KAACsE,EAAAA,EAAM,CAACC,QAASjD,EAAkBG,SAAC,gBAGxCzB,EAAAA,EAAAA,KAACwE,EAAAA,EAAM,CAACC,QAASzD,GAAaC,MAGpC,CAEA,IAAMkB,EAAS,SAACsB,GACd,IAAMiB,GAAqBC,EAAAA,EAAAA,MAO3B,OANIlB,IAAWmB,EAAAA,OAAOC,SACpBH,EAAmB,CACjBI,SAAU,QACVC,QAAS,yBAKX/E,EAAAA,EAAAA,KAAAwB,EAAAA,SAAA,CAAAC,UACEzB,EAAAA,EAAAA,KAACwE,EAAAA,EAAM,CAACC,QAAShB,IAAWmB,EAAAA,OAAOI,WAGzC,EAEA,SAAS5C,EAAG6C,GAQR,IAPFzF,EAAMyF,EAANzF,OACAG,EAAIsF,EAAJtF,KACA8B,EAAQwD,EAARxD,SAMMyD,EAASrF,EAAAA,OAAa,MAC5BsF,EAAsBtF,EAAAA,WAAiCuF,GAAA7E,EAAAA,EAAAA,GAAA4E,EAAA,GAAhD1C,EAAG2C,EAAA,GAAEC,EAAMD,EAAA,GAElBvF,EAAAA,WAAgB,WACVqF,EAAOI,UAAY7C,GACrB4C,EACE,IAAIpC,OAAOC,OAAOC,KAAKf,IAAI8C,EAAOI,QAAS,CACzC9F,OAAAA,EACAG,KAAAA,IAIR,GAAG,CAACuF,EAAQzC,IAEZ,IAAM8C,EAAQ1F,EAAAA,SAAe2F,KAAK/D,GAElC,OACEF,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEzB,EAAAA,EAAAA,KAAA,OAAKyF,MAAO,CAAE1D,OAAQ,OAAQC,MAAO,QAAUjC,IAAKmF,EAAQrC,GAAG,QAC9DhD,EAAAA,eAAqB0F,IAGpB1F,EAAAA,aAAmB0F,EAAO,CAAE9C,IAAAA,MAGpC,CAEA,SAASJ,EAAeqD,GAMpB,IALFjD,EAAGiD,EAAHjD,IACAhB,EAAQiE,EAARjE,SAKAkE,EAAkC9F,EAAAA,WAAsC+F,GAAArF,EAAAA,EAAAA,GAAAoF,EAAA,GAAjEE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GA2B9B,OAzBA/F,EAAAA,WAAgB,WAKd,OAJKgG,GACHC,EAAa,IAAIC,EAAAA,GAAqB,CAAC,IAGlC,WACDF,GACFA,EAAUR,OAAO,KAErB,CACF,GAAG,CAACQ,IAEJhG,EAAAA,WAAgB,WACVgG,GAAapD,GACfoD,EAAUR,OAAO5C,EAErB,GAAG,CAACA,IAEJ5C,EAAAA,WAAgB,WACVgG,GACFA,EAAU1D,QAEd,GAAG,CAACM,EAAKhB,IACA,OAAToE,QAAS,IAATA,GAAAA,EAAW1D,UAGTnC,EAAAA,EAAAA,KAAAwB,EAAAA,SAAA,CAAAC,SACG5B,EAAAA,SAAe4C,IAAIhB,GAAU,SAAC8D,GAC7B,GAAI1F,EAAAA,eAAqB0F,GAIvB,OAAO1F,EAAAA,aAAmB0F,EAAO,CAAE9C,IAAAA,EAAKoD,UAAAA,GAE5C,KAGN,CAEA,IAAMnD,EAKF,SAACsD,GACH,IAAQrD,EAA6DqD,EAA7DrD,QAASkD,EAAoDG,EAApDH,UAAWpD,EAAyCuD,EAAzCvD,IAAKiB,EAAoCsC,EAApCtC,SAAauC,GAAkBC,EAAAA,EAAAA,GAAKF,EAAOG,GAC5EC,EAA4BvG,EAAAA,WAAoCwG,GAAA9F,EAAAA,EAAAA,GAAA6F,EAAA,GAAzDE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAyCxB,OAvCAxG,EAAAA,WAAgB,WACd,IAAKyG,EAAQ,CACX,IAAME,EAAY,IAAIvD,OAAOC,OAAOC,KAAKT,OACzC6D,EAAUC,GACVA,EAAUC,YAAY,QAAS9D,EACjC,CAEA,OAAO,WACD2D,IACFA,EAAOjB,OAAO,MACL,OAATQ,QAAS,IAATA,GAAAA,EAAWa,aAAaJ,GAAQ,GAEpC,CACF,GAAG,CAACA,IAEJzG,EAAAA,WAAgB,WACVyG,GACFA,EAAOjB,OAAO5C,GAAO,KAEzB,GAAG,CAAC6D,EAAQ7D,IAEZ5C,EAAAA,WAAgB,WACVyG,GACFA,EAAOK,YAAYjD,EAEvB,GAAG,CAAC4C,EAAQ5C,GAAQ,GAAAH,OAAe,OAARG,QAAQ,IAARA,OAAQ,EAARA,EAAUjE,IAAG,KAAA8D,OAAY,OAARG,QAAQ,IAARA,OAAQ,EAARA,EAAUhE,OAEtDG,EAAAA,WAAgB,WACVyG,IACO,OAATT,QAAS,IAATA,GAAAA,EAAWe,UAAUN,GAAQ,GAEjC,GAAG,CAACA,EAAQT,IAEZhG,EAAAA,WAAgB,WACVyG,GACFA,EAAOO,WAAWZ,EAEtB,GAAG,CAACK,EAAQL,IAEL,IACT,C,g+BC5OQa,EAAW,IAAIC,IAAI9D,OAAO+D,SAAS/C,MAAnC6C,OAkBKG,EAGU,SAACC,GAAsB,IAADC,EAAAC,EAAdC,EAAIC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC7BG,EAAyBJ,EAAzBI,QAAYC,GAAQxB,EAAAA,EAAAA,GAAKmB,EAAIlB,GAC/BwB,GAASzH,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQwH,GAAQ,IAAEE,QAAS,IAAIC,UAW9C,OAVAF,EAAUC,QAAQE,IAChB,gBACA,SACEC,MAAsB,QAAjBZ,EAAAa,EAAAA,EAAaC,YAAI,IAAAd,OAAA,EAAjBA,EAAmBe,UAAW,KAAuB,QAApBd,EAAGY,EAAAA,EAAaC,YAAI,IAAAb,OAAA,EAAjBA,EAAmBe,YAE5DV,GAA8B,kBAAZA,IACpBE,EAAUC,QAAQE,IAAI,SAAU,oBAChCH,EAAUC,QAAQE,IAAI,eAAgB,oBACtCH,EAAUS,KAAOC,KAAKC,UA9BJ,SAACF,GACrB,IAAMG,EAAuC,CAAC,EAY9C,OAXAC,OAAOC,QAAQL,GAAMM,SAAQ,SAACC,GACxBC,MAAMC,QAAQF,EAAM,IACtBJ,EAAgBI,EAAM,IAAMA,EAAM,GAAGlG,KAAI,SAACqG,GAAI,MAC5B,kBAATA,GAAuBA,aAAgBC,KAAkBD,EAAVA,EAAKjG,EAAS,IAEzC,kBAAb8F,EAAM,IAAqBA,EAAM,aAAcI,KAG/DR,EAAgBI,EAAM,IAAMA,EAAM,GAFlCJ,EAAgBI,EAAM,IAAMA,EAAM,IAAMA,EAAM,GAAG9F,EAIrD,IACO0F,CACT,CAgBoCS,CAAcvB,KAEzCwB,MAAM/B,EAAOS,GACjBuB,OAAM,SAACC,GACN,IAAMC,EAAQ,IAAIC,MAIlB,MAHAD,EAAME,MAAQH,EACdC,EAAMG,KAAO,cACbH,EAAMrE,QAAU,6BACVqE,CACR,IACCI,MAAK,SAACC,GACL,GAjDoB,MAkDlBA,EAAShG,QAjDS,MAkDlBgG,EAAShG,OACT,CACA,IAAM2F,EAAQ,IAAIC,MAElB,GADAD,EAAME,MAAQG,EACVA,EAAShG,OAEX,OADA2F,EAAMG,KAAOE,EAAShG,OAAS,IAAMgG,EAASC,WACtCD,EAAShG,QACf,KAxDgB,IAyDd2F,EAAMrE,QAAU,2BAChB,MACF,KA1DgB,IA2DdqE,EAAMrE,QAAU,YAChB,MACF,KA5De,IA6DbqE,EAAMrE,QAAU,gDAChB,MACF,QACEqE,EAAMrE,QAAU,sCAGpBqE,EAAMrE,QAAU,6BAElB,MAAMqE,CACR,CACA,OAAOK,EAASE,OAAOT,OAAM,SAACC,GAC5B,IAAMC,EAAQ,IAAIC,MAIlB,MAHAD,EAAME,MAAQH,EACdC,EAAMG,KAAO,cACbH,EAAMrE,QAAU,uCACVqE,CACR,GACF,GACJ,EAEatI,EAOiB,SAAHmE,GAEpB,IAAD2E,GAAArJ,EAAAA,EAAAA,GAAA0E,EADJrE,SAAQ,GAAQiJ,GAAFD,EAAA,GAAMA,EAAA,IAAEE,EAAWF,EAAA,GAAEG,EAAOH,EAAA,GAAEI,EAAKJ,EAAA,GAAEK,EAAWL,EAAA,GAExDM,EAAM,IAAInD,IAAI,SAAUD,GAiB9B,OAhBAoD,EAAIC,aAAaC,OAAO,QAAQ,GAAD7G,OAAKuG,IACpCI,EAAIC,aAAaC,OAAO,SAAS,GAAD7G,OAAKuG,EAAcD,IACpC,OAAXI,QAAW,IAAXA,GAAAA,EAAaI,QACfH,EAAIC,aAAaC,OAAO,SAAS,GAAD7G,OAAK0G,EAAYI,SAE/CN,GAAWC,IACbE,EAAIC,aAAaC,OAAO,UAAU,GAAD7G,OAAKwG,IACtCG,EAAIC,aAAaC,OAAO,YAAY,GAAD7G,OAAKyG,KAE3B,OAAXC,QAAW,IAAXA,GAAAA,EAAazG,aACf0G,EAAIC,aAAaC,OAAO,cAAc,GAAD7G,OAAK0G,EAAYzG,cAEzC,OAAXyG,QAAW,IAAXA,GAAAA,EAAazH,cAA2B,OAAXyH,QAAW,IAAXA,GAAAA,EAAaK,WAC5CJ,EAAIC,aAAaC,OAAO,eAAe,GAAD7G,OAAK0G,EAAYzH,eACvD0H,EAAIC,aAAaC,OAAO,WAAW,GAAD7G,OAAK0G,EAAYK,YAE9CrD,EAAUiD,EACnB,EAEaK,EAAc,SAACC,GAC1B,IAAMN,EAAM,IAAInD,IAAI,UAADxD,OAAWiH,GAAU1D,GACxC,OAAOG,EAAUiD,EAAK,CAAEO,OAAQ,UAClC,EAEaC,EAAc,SAACvJ,GAC1B,IAAM+I,EAAM,IAAInD,IAAI,SAAUD,GAC9B,OAAOG,EAAUiD,EAAK,CACpBO,OAAQ,OACRhD,QAAStG,GAEb,EAEawJ,EAAc,SAACxJ,GAC1B,IAAQ0B,EAAuB1B,EAAvB0B,GAAO+H,GAAW1E,EAAAA,EAAAA,GAAK/E,EAAI0J,GAC7BX,EAAM,IAAInD,IAAI,UAADxD,OAAWV,GAAMiE,GACpC,OAAOG,EAAUiD,EAAK,CACpBO,OAAQ,QACRhD,QAASmD,GAEb,EAEaE,EAAa,SAACC,GACzB,IAAMb,EAAM,IAAInD,IAAI,UAADxD,OAAWwH,EAAMnK,SAAS,IAAMkG,GACnD,OAAOG,EAAUiD,EAAK,CACpBO,OAAQ,OAEZ,EAEaO,EAEoB,SAAHtF,GAEvB,IAADuF,GAAA1K,EAAAA,EAAAA,GAAAmF,EADJ9E,SAAQ,GAAQiJ,GAAFoB,EAAA,GAAMA,EAAA,IAAEnB,EAAWmB,EAAA,GAAElB,EAAOkB,EAAA,GAAEjB,EAAKiB,EAAA,GAAEhB,EAAWgB,EAAA,GAExDf,EAAM,IAAInD,IAAI,YAAaD,GAajC,OAZAoD,EAAIC,aAAaC,OAAO,QAAQ,GAAD7G,OAAKuG,IACpCI,EAAIC,aAAaC,OAAO,SAAS,GAAD7G,OAAKuG,EAAcD,IAC/CE,GAAWC,IACbE,EAAIC,aAAaC,OAAO,UAAU,GAAD7G,OAAKwG,IACtCG,EAAIC,aAAaC,OAAO,YAAY,GAAD7G,OAAKyG,KAE3B,OAAXC,QAAW,IAAXA,GAAAA,EAAaI,QACfH,EAAIC,aAAaC,OAAO,SAAS,GAAD7G,OAAK0G,EAAYI,SAEpC,OAAXJ,QAAW,IAAXA,GAAAA,EAAaV,MACfW,EAAIC,aAAaC,OAAO,OAAO,GAAD7G,OAAK0G,EAAYV,OAE1CtC,EAAUiD,EACnB,EAEagB,EAAiB,SAACV,GAC7B,IAAMN,EAAM,IAAInD,IAAI,aAADxD,OAAciH,GAAU1D,GAC3C,OAAOG,EAAUiD,EAAK,CAAEO,OAAQ,UAClC,EAEaU,EAAiB,SAAChK,GAC7B,IAAM+I,EAAM,IAAInD,IAAI,YAAaD,GACjC,OAAOG,EAAUiD,EAAK,CACpBO,OAAQ,OACRhD,QAAStG,GAEb,EAEaiK,EAAiB,SAACjK,GAC7B,IAAQ0B,EAAuB1B,EAAvB0B,GAAO+H,GAAW1E,EAAAA,EAAAA,GAAK/E,EAAIkK,GAC7BnB,EAAM,IAAInD,IAAI,aAADxD,OAAcV,GAAMiE,GACvC,OAAOG,EAAUiD,EAAK,CACpBO,OAAQ,QACRhD,QAASmD,GAEb,EAEaU,EAAgB,SAACP,GAC5B,IAAMb,EAAM,IAAInD,IAAI,aAADxD,OAAcwH,EAAMnK,SAAS,IAAMkG,GACtD,OAAOG,EAAUiD,EAAK,CACpBO,OAAQ,OAEZ,EAEac,EAEgB,SAAHC,GAEnB,IAADC,GAAAlL,EAAAA,EAAAA,GAAAiL,EADJ5K,SAAQ,GAAQiJ,GAAF4B,EAAA,GAAMA,EAAA,IAAE3B,EAAW2B,EAAA,GAAE1B,EAAO0B,EAAA,GAAEzB,EAAKyB,EAAA,GAAExB,EAAWwB,EAAA,GAExDvB,EAAM,IAAInD,IAAI,QAASD,GAa7B,OAZAoD,EAAIC,aAAaC,OAAO,QAAQ,GAAD7G,OAAKuG,IACpCI,EAAIC,aAAaC,OAAO,SAAS,GAAD7G,OAAKuG,EAAcD,IAC/CE,GAAWC,IACbE,EAAIC,aAAaC,OAAO,UAAU,GAAD7G,OAAKwG,IACtCG,EAAIC,aAAaC,OAAO,YAAY,GAAD7G,OAAKyG,KAE3B,OAAXC,QAAW,IAAXA,GAAAA,EAAayB,YACfxB,EAAIC,aAAaC,OAAO,aAAa,GAAD7G,OAAK0G,EAAYyB,aAExC,OAAXzB,QAAW,IAAXA,GAAAA,EAAazG,aACf0G,EAAIC,aAAaC,OAAO,cAAc,GAAD7G,OAAK0G,EAAYzG,cAEjDyD,EAAUiD,EACnB,EAEayB,EAAa,SAACnB,GACzB,IAAMN,EAAM,IAAInD,IAAI,SAADxD,OAAUiH,GAAU1D,GACvC,OAAOG,EAAUiD,EAAK,CAAEO,OAAQ,UAClC,EAEamB,EAAa,SAACzK,GACzB,IAAM+I,EAAM,IAAInD,IAAI,QAASD,GAC7B,OAAOG,EAAUiD,EAAK,CACpBO,OAAQ,OACRhD,QAAStG,GAEb,EAEa0K,EAAa,SAAC1K,GACzB,IAAQ0B,EAAuB1B,EAAvB0B,GAAO+H,GAAW1E,EAAAA,EAAAA,GAAK/E,EAAI2K,GAC7B5B,EAAM,IAAInD,IAAI,SAADxD,OAAUV,GAAMiE,GACnC,OAAOG,EAAUiD,EAAK,CACpBO,OAAQ,QACRhD,QAASmD,GAEb,EAEamB,EAAY,SAAChB,GACxB,IAAMb,EAAM,IAAInD,IAAI,SAADxD,OAAUwH,EAAMnK,SAAS,IAAMkG,GAClD,OAAOG,EAAUiD,EAAK,CACpBO,OAAQ,OAEZ,EAEauB,EAEiB,SAAHC,GAEpB,IAADC,GAAA3L,EAAAA,EAAAA,GAAA0L,EADJrL,SAAQ,GAAQiJ,GAAFqC,EAAA,GAAMA,EAAA,IAAEpC,EAAWoC,EAAA,GAAEnC,EAAOmC,EAAA,GAAElC,EAAKkC,EAAA,GAAEjC,EAAWiC,EAAA,GAExDhC,EAAM,IAAInD,IAAI,SAAUD,GAgB9B,OAfAoD,EAAIC,aAAaC,OAAO,QAAQ,GAAD7G,OAAKuG,IACpCI,EAAIC,aAAaC,OAAO,SAAS,GAAD7G,OAAKuG,EAAcD,IAC/CE,GAAWC,IACbE,EAAIC,aAAaC,OAAO,UAAU,GAAD7G,OAAKwG,IACtCG,EAAIC,aAAaC,OAAO,YAAY,GAAD7G,OAAKyG,KAE3B,OAAXC,QAAW,IAAXA,GAAAA,EAAaI,QACfH,EAAIC,aAAaC,OAAO,SAAS,GAAD7G,OAAK0G,EAAYI,SAEpC,OAAXJ,QAAW,IAAXA,GAAAA,EAAakC,UACfjC,EAAIC,aAAaC,OAAO,WAAW,GAAD7G,OAAK0G,EAAYkC,WAEtC,OAAXlC,QAAW,IAAXA,GAAAA,EAAazG,aACf0G,EAAIC,aAAaC,OAAO,cAAc,GAAD7G,OAAK0G,EAAYzG,cAEjDyD,EAAUiD,EACnB,EAEakC,EAAc,SAAC5B,GAC1B,IAAMN,EAAM,IAAInD,IAAI,UAADxD,OAAWiH,GAAU1D,GACxC,OAAOG,EAAUiD,EAAK,CAAEO,OAAQ,UAClC,EAEa4B,EAAc,SAAClL,GAC1B,IAAM+I,EAAM,IAAInD,IAAI,SAAUD,GAC9B,OAAOG,EAAUiD,EAAK,CACpBO,OAAQ,OACRhD,QAAStG,GAEb,EAEamL,EAAc,SAACnL,GAC1B,IAAQ0B,EAAuB1B,EAAvB0B,GAAO+H,GAAW1E,EAAAA,EAAAA,GAAK/E,EAAIoL,GAC7BrC,EAAM,IAAInD,IAAI,UAADxD,OAAWV,GAAMiE,GACpC,OAAOG,EAAUiD,EAAK,CACpBO,OAAQ,QACRhD,QAASmD,GAEb,EAEa4B,EAAa,SAACzB,GACzB,IAAMb,EAAM,IAAInD,IAAI,UAADxD,OAAWwH,EAAMnK,SAAS,IAAMkG,GACnD,OAAOG,EAAUiD,EAAK,CACpBO,OAAQ,OAEZ,EAEagC,EAOkB,SAAHC,GAErB,IAADC,GAAApM,EAAAA,EAAAA,GAAAmM,EADJ9L,SAAQ,GAAQiJ,GAAF8C,EAAA,GAAMA,EAAA,IAAE7C,EAAW6C,EAAA,GAAE5C,EAAO4C,EAAA,GAAE3C,EAAK2C,EAAA,GAAE1C,EAAW0C,EAAA,GAExDzC,EAAM,IAAInD,IAAI,UAAWD,GAmB/B,OAlBAoD,EAAIC,aAAaC,OAAO,QAAQ,GAAD7G,OAAKuG,IACpCI,EAAIC,aAAaC,OAAO,SAAS,GAAD7G,OAAKuG,EAAcD,IAC/CE,GAAWC,IACbE,EAAIC,aAAaC,OAAO,UAAU,GAAD7G,OAAKwG,IACtCG,EAAIC,aAAaC,OAAO,YAAY,GAAD7G,OAAKyG,KAE3B,OAAXC,QAAW,IAAXA,GAAAA,EAAaI,QACfH,EAAIC,aAAaC,OAAO,SAAS,GAAD7G,OAAK0G,EAAYI,SAEpC,OAAXJ,QAAW,IAAXA,GAAAA,EAAakC,UACfjC,EAAIC,aAAaC,OAAO,WAAW,GAAD7G,OAAK0G,EAAYkC,WAEtC,OAAXlC,QAAW,IAAXA,GAAAA,EAAazG,aACf0G,EAAIC,aAAaC,OAAO,cAAc,GAAD7G,OAAK0G,EAAYzG,cAEzC,OAAXyG,QAAW,IAAXA,GAAAA,EAAa2C,OACf1C,EAAIC,aAAaC,OAAO,QAAQ,GAAD7G,OAAK0G,EAAY2C,QAE3C3F,EAAUiD,EACnB,EAEa2C,EAAe,SAACrC,GAC3B,IAAMN,EAAM,IAAInD,IAAI,WAADxD,OAAYiH,GAAU1D,GACzC,OAAOG,EAAUiD,EAAK,CAAEO,OAAQ,UAClC,EAEaqC,EAAe,SAAC3L,GAC3B,IAAM+I,EAAM,IAAInD,IAAI,UAAWD,GAC/B,OAAOG,EAAUiD,EAAK,CACpBO,OAAQ,OACRhD,QAAStG,GAEb,EAEa4L,EAAe,SAAC5L,GAC3B,IAAQ0B,EAAuB1B,EAAvB0B,GAAO+H,GAAW1E,EAAAA,EAAAA,GAAK/E,EAAI6L,GAC7B9C,EAAM,IAAInD,IAAI,WAADxD,OAAYV,GAAMiE,GACrC,OAAOG,EAAUiD,EAAK,CACpBO,OAAQ,QACRhD,QAASmD,GAEb,EAEaqC,EAAc,SAAClC,GAC1B,IAAMb,EAAM,IAAInD,IAAI,WAADxD,OAAYwH,EAAMnK,SAAS,IAAMkG,GACpD,OAAOG,EAAUiD,EAAK,CACpBO,OAAQ,OAEZ,EAEayC,EAOuB,SAAHC,GAE1B,IAADC,GAAA7M,EAAAA,EAAAA,GAAA4M,EADJvM,SAAQ,GAAQiJ,GAAFuD,EAAA,GAAMA,EAAA,IAAEtD,EAAWsD,EAAA,GAAErD,EAAOqD,EAAA,GAAEpD,EAAKoD,EAAA,GAAEnD,EAAWmD,EAAA,GAExDlD,EAAM,IAAInD,IAAI,eAAgBD,GAmBpC,OAlBAoD,EAAIC,aAAaC,OAAO,QAAQ,GAAD7G,OAAKuG,IACpCI,EAAIC,aAAaC,OAAO,SAAS,GAAD7G,OAAKuG,EAAcD,IAC/CE,GAAWC,IACbE,EAAIC,aAAaC,OAAO,UAAU,GAAD7G,OAAKwG,IACtCG,EAAIC,aAAaC,OAAO,YAAY,GAAD7G,OAAKyG,KAE3B,OAAXC,QAAW,IAAXA,GAAAA,EAAaI,QACfH,EAAIC,aAAaC,OAAO,SAAS,GAAD7G,OAAK0G,EAAYI,SAEpC,OAAXJ,QAAW,IAAXA,GAAAA,EAAakC,UACfjC,EAAIC,aAAaC,OAAO,WAAW,GAAD7G,OAAK0G,EAAYkC,WAEtC,OAAXlC,QAAW,IAAXA,GAAAA,EAAazG,aACf0G,EAAIC,aAAaC,OAAO,cAAc,GAAD7G,OAAK0G,EAAYzG,cAEzC,OAAXyG,QAAW,IAAXA,GAAAA,EAAa2C,OACf1C,EAAIC,aAAaC,OAAO,QAAQ,GAAD7G,OAAK0G,EAAY2C,QAE3C3F,EAAUiD,EACnB,EAEamD,EAAoB,SAAC7C,GAChC,IAAMN,EAAM,IAAInD,IAAI,gBAADxD,OAAiBiH,GAAU1D,GAC9C,OAAOG,EAAUiD,EAAK,CAAEO,OAAQ,UAClC,EAEa6C,EAAoB,SAC/BnM,GAEA,IAAM+I,EAAM,IAAInD,IAAI,eAAgBD,GACpC,OAAOG,EAAUiD,EAAK,CACpBO,OAAQ,OACRhD,QAAStG,GAEb,EAEaoM,EAAoB,SAC/BpM,GAEA,IAAQ0B,EAAuB1B,EAAvB0B,GAAO+H,GAAW1E,EAAAA,EAAAA,GAAK/E,EAAIqM,GAC7BtD,EAAM,IAAInD,IAAI,gBAADxD,OAAiBV,GAAMiE,GAC1C,OAAOG,EAAUiD,EAAK,CACpBO,OAAQ,QACRhD,QAASmD,GAEb,EAEa6C,EAAmB,SAAC1C,GAC/B,IAAMb,EAAM,IAAInD,IAAI,gBAADxD,OAAiBwH,EAAMnK,SAAS,IAAMkG,GACzD,OAAOG,EAAUiD,EAAK,CACpBO,OAAQ,OAEZ,EAEaiD,EAEgB,SAAHC,GAEnB,IAADC,GAAArN,EAAAA,EAAAA,GAAAoN,EADJ/M,SAAQ,GAAQiJ,GAAF+D,EAAA,GAAMA,EAAA,IAAE9D,EAAW8D,EAAA,GAAE7D,EAAO6D,EAAA,GAAE5D,EAAK4D,EAAA,GAAE3D,EAAW2D,EAAA,GAExD1D,EAAM,IAAInD,IAAI,QAASD,GAa7B,OAZAoD,EAAIC,aAAaC,OAAO,QAAQ,GAAD7G,OAAKuG,IACpCI,EAAIC,aAAaC,OAAO,SAAS,GAAD7G,OAAKuG,EAAcD,IAC/CE,GAAWC,IACbE,EAAIC,aAAaC,OAAO,UAAU,GAAD7G,OAAKwG,IACtCG,EAAIC,aAAaC,OAAO,YAAY,GAAD7G,OAAKyG,KAE3B,OAAXC,QAAW,IAAXA,GAAAA,EAAaI,QACfH,EAAIC,aAAaC,OAAO,SAAS,GAAD7G,OAAK0G,EAAYI,SAEpC,OAAXJ,QAAW,IAAXA,GAAAA,EAAakC,UACfjC,EAAIC,aAAaC,OAAO,WAAW,GAAD7G,OAAK0G,EAAYkC,WAE9ClF,EAAUiD,EACnB,EAEa2D,EAAa,SAACrD,GACzB,IAAMN,EAAM,IAAInD,IAAI,SAADxD,OAAUiH,GAAU1D,GACvC,OAAOG,EAAUiD,EAAK,CAAEO,OAAQ,UAClC,EAEaqD,EAAa,SAAC3M,GACzB,IAAM+I,EAAM,IAAInD,IAAI,QAASD,GAC7B,OAAOG,EAAUiD,EAAK,CACpBO,OAAQ,OACRhD,QAAStG,GAEb,EAEa4M,EAAa,SAAC5M,GACzB,IAAQ0B,EAAuB1B,EAAvB0B,GAAO+H,GAAW1E,EAAAA,EAAAA,GAAK/E,EAAI6M,GAC7B9D,EAAM,IAAInD,IAAI,SAADxD,OAAUV,GAAMiE,GACnC,OAAOG,EAAUiD,EAAK,CACpBO,OAAQ,QACRhD,QAASmD,GAEb,EAEaqD,EAAY,SAAClD,GACxB,IAAMb,EAAM,IAAInD,IAAI,SAADxD,OAAUwH,EAAMnK,SAAS,IAAMkG,GAClD,OAAOG,EAAUiD,EAAK,CACpBO,OAAQ,OAEZ,C","sources":["GoogleMaps/map.tsx","api/api.ts"],"sourcesContent":["import * as React from 'react';\nimport { useQuery } from '@tanstack/react-query';\nimport Slide from '@mui/material/Slide';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport Button from '@mui/material/Button';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Box from '@mui/material/Box';\nimport { TransitionProps } from '@mui/material/transitions';\nimport { Wrapper, Status } from '@googlemaps/react-wrapper';\nimport { MarkerClusterer as MarkerClustererClass } from '@googlemaps/markerclusterer';\nimport Loader from '../components/Loader';\nimport { TrucksQuery } from '../api';\nimport { useSnackbar } from '../hooks';\nimport { Truck } from '../utils/dataTypes';\n\nconst center = { lat: 39.828922654821866, lng: -98.57947970000001 };\nconst zoom = 5;\n\nconst Transition = React.forwardRef(function Transition(\n  props: TransitionProps & {\n    children: React.ReactElement<any, any>;\n  },\n  ref: React.Ref<unknown>,\n) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function GeneralMap() {\n  const [selectedTruck, setSelectedTruck] = React.useState<Truck | null>(null);\n\n  const {\n    isLoading,\n    isFetching,\n    data: { items } = { items: [] },\n  } = useQuery({\n    queryKey: ['trucksMap', 0, 25000],\n    queryFn: TrucksQuery,\n    keepPreviousData: true,\n  });\n  const rows: Truck[] = items || [];\n\n  const handleClickOpen = (truckId: string) => {\n    setSelectedTruck(rows.find((truck) => truck.id === truckId) || null);\n  };\n\n  const handleDialogClose = () => {\n    setSelectedTruck(null);\n  };\n\n  return (\n    <>\n      <Box\n        component=\"main\"\n        sx={{ flexGrow: 1, p: 1, height: '100%', width: '100%' }}\n      >\n        <Wrapper\n          apiKey={'AIzaSyCXHo65x6xwfIPmz5GAZ2B2laVghupH7Dg'}\n          render={render}\n        >\n          <Map center={center} zoom={zoom}>\n            <MarkerClusterer>\n              {rows\n                .filter((truck) => truck.lastLocation)\n                .map((truck) => {\n                  return (\n                    <Marker\n                      key={truck.id}\n                      onCLick={() => handleClickOpen(truck.id)}\n                      optimized\n                      animation={\n                        window.google.maps.Animation &&\n                        window.google.maps.Animation.DROP\n                      }\n                      title={`${truck.truckNumber}\\n${truck.status}`}\n                      position={{\n                        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                        // @ts-ignore\n                        lat: truck.lastLocation[0],\n                        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                        // @ts-ignore\n                        lng: truck.lastLocation[1],\n                      }}\n                    />\n                  );\n                })}\n            </MarkerClusterer>\n          </Map>\n        </Wrapper>\n      </Box>\n      <Dialog\n        open={!!selectedTruck}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={handleDialogClose}\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <DialogTitle>\n          <span>\n            TRUCK NUMBER: \n            <a href={`./trucks/${selectedTruck?.id}`} target=\"_blank\">\n              {selectedTruck?.truckNumber}\n            </a>\n          </span>\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-slide-description\">\n            {`CURRENT STATUS: ${selectedTruck?.status}`}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleDialogClose}>Close</Button>\n        </DialogActions>\n      </Dialog>\n      <Loader visible={isLoading || isFetching} />\n    </>\n  );\n}\n\nconst render = (status: Status): React.ReactElement => {\n  const setSnackbarMessage = useSnackbar();\n  if (status === Status.FAILURE) {\n    setSnackbarMessage({\n      severity: 'error',\n      message: 'Error loading maps!',\n    });\n  }\n  return (\n    // ToDO move to loader provider\n    <>\n      <Loader visible={status === Status.LOADING} />\n    </>\n  );\n};\n\nfunction Map({\n  center,\n  zoom,\n  children,\n}: {\n  center: google.maps.LatLngLiteral;\n  zoom: number;\n  children?: React.ReactNode;\n}) {\n  const mapRef = React.useRef(null);\n  const [map, setMap] = React.useState<google.maps.Map>();\n\n  React.useEffect(() => {\n    if (mapRef.current && !map) {\n      setMap(\n        new window.google.maps.Map(mapRef.current, {\n          center,\n          zoom,\n        }),\n      );\n    }\n  }, [mapRef, map]);\n\n  const child = React.Children.only(children);\n\n  return (\n    <>\n      <div style={{ height: '100%', width: '100%' }} ref={mapRef} id=\"map\" />\n      {React.isValidElement(child) &&\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        React.cloneElement(child, { map })}\n    </>\n  );\n}\n\nfunction MarkerClusterer({\n  map,\n  children,\n}: {\n  map?: google.maps.Map;\n  children?: React.ReactNode;\n}) {\n  const [clusterer, setClasterer] = React.useState<MarkerClustererClass>();\n\n  React.useEffect(() => {\n    if (!clusterer) {\n      setClasterer(new MarkerClustererClass({}));\n    }\n\n    return () => {\n      if (clusterer) {\n        clusterer.setMap(null);\n      }\n    };\n  }, [clusterer]);\n\n  React.useEffect(() => {\n    if (clusterer && map) {\n      clusterer.setMap(map);\n    }\n  }, [map]);\n\n  React.useEffect(() => {\n    if (clusterer) {\n      clusterer.render();\n    }\n  }, [map, children]);\n  clusterer?.render();\n\n  return (\n    <>\n      {React.Children.map(children, (child) => {\n        if (React.isValidElement(child)) {\n          // set the map prop on the child component\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          return React.cloneElement(child, { map, clusterer });\n        }\n      })}\n    </>\n  );\n}\n\nconst Marker: React.FC<\n  google.maps.MarkerOptions & {\n    onCLick: () => void;\n    clusterer?: MarkerClustererClass;\n  }\n> = (options) => {\n  const { onCLick, clusterer, map, position, ...otherMarkerOptions } = options;\n  const [marker, setMarker] = React.useState<google.maps.Marker>();\n\n  React.useEffect(() => {\n    if (!marker) {\n      const newMarker = new window.google.maps.Marker();\n      setMarker(newMarker);\n      newMarker.addListener('click', onCLick);\n    }\n\n    return () => {\n      if (marker) {\n        marker.setMap(null);\n        clusterer?.removeMarker(marker, false);\n      }\n    };\n  }, [marker]);\n\n  React.useEffect(() => {\n    if (marker) {\n      marker.setMap(map || null);\n    }\n  }, [marker, map]);\n\n  React.useEffect(() => {\n    if (marker) {\n      marker.setPosition(position);\n    }\n  }, [marker, position && `${position?.lat},${position?.lng}`]);\n\n  React.useEffect(() => {\n    if (marker) {\n      clusterer?.addMarker(marker, false);\n    }\n  }, [marker, clusterer]);\n\n  React.useEffect(() => {\n    if (marker) {\n      marker.setOptions(otherMarkerOptions);\n    }\n  }, [marker, otherMarkerOptions]);\n\n  return null;\n};\n","import { authProvider } from '../utils/auth';\nimport {\n  Coordinator,\n  CreateCoordinator,\n  UpdateCoordinator,\n  Driver,\n  CreateDriver,\n  UpdateDriver,\n  Load,\n  CreateLoad,\n  UpdateLoad,\n  Location,\n  CreateLocation,\n  UpdateLocation,\n  Owner,\n  CreateOwner,\n  UpdateOwner,\n  Truck,\n  CreateTruck,\n  UpdateTruck,\n  User,\n  CreateUser,\n  UpdateUser,\n  Query,\n  QuerySingle,\n  Result,\n} from '../utils/dataTypes';\n\nconst SUCCESS_HTTP_CODE = 200;\nconst CREATED_HTTP_CODE = 201;\nconst FORBIDDEN_HTTP_CODE = 403;\nconst NOT_FOUND_HTTP_CODE = 404;\nconst CONFLICT_HTTP_CODE = 409;\n\nconst { origin } = new URL(window.location.href);\n\nconst transformBody = (body: object): Record<string, any> => {\n  const transformedBody: Record<string, any> = {};\n  Object.entries(body).forEach((entry) => {\n    if (Array.isArray(entry[1])) {\n      transformedBody[entry[0]] = entry[1].map((elem) =>\n        typeof elem === 'object' && !(elem instanceof Date) ? elem.id : elem,\n      );\n    } else if (typeof entry[1] === 'object' && !(entry[1] instanceof Date)) {\n      transformedBody[entry[0]] = entry[1] && entry[1].id;\n    } else {\n      transformedBody[entry[0]] = entry[1];\n    }\n  });\n  return transformedBody;\n};\n\nexport const authFetch: (\n  input: string | URL,\n  init?: RequestInit & { bodyObj?: object },\n) => Promise<object> = (input, init = {}) => {\n  const { bodyObj, ...restInit } = init;\n  const fetchInit = { ...restInit, headers: new Headers() };\n  fetchInit.headers.set(\n    'Authorization',\n    'Basic ' +\n      btoa(authProvider.user?.username + ':' + authProvider.user?.password),\n  );\n  if (bodyObj && typeof bodyObj === 'object') {\n    fetchInit.headers.set('Accept', 'application/json');\n    fetchInit.headers.set('Content-Type', 'application/json');\n    fetchInit.body = JSON.stringify(transformBody(bodyObj));\n  }\n  return fetch(input, fetchInit)\n    .catch((reason) => {\n      const error = new Error();\n      error.cause = reason;\n      error.name = 'Fetch error';\n      error.message = 'Network error has occurred';\n      throw error;\n    })\n    .then((response) => {\n      if (\n        response.status !== SUCCESS_HTTP_CODE &&\n        response.status !== CREATED_HTTP_CODE\n      ) {\n        const error = new Error();\n        error.cause = response;\n        if (response.status) {\n          error.name = response.status + ' ' + response.statusText;\n          switch (response.status) {\n            case FORBIDDEN_HTTP_CODE:\n              error.message = 'Insufficient permissions';\n              break;\n            case NOT_FOUND_HTTP_CODE:\n              error.message = 'Not found';\n              break;\n            case CONFLICT_HTTP_CODE:\n              error.message = 'Some field values invalidate unique constrain';\n              break;\n            default:\n              error.message = 'Some server error has occurred';\n          }\n        } else {\n          error.message = 'Network error has occurred';\n        }\n        throw error;\n      }\n      return response.json().catch((reason) => {\n        const error = new Error();\n        error.cause = reason;\n        error.name = 'Fetch error';\n        error.message = 'Server responded with incorrect data';\n        throw error;\n      });\n    });\n};\n\nexport const TrucksQuery: (\n  query: Query<{\n    search?: number;\n    truckNumber?: number;\n    lastLocation?: string;\n    distance?: string;\n  }>,\n) => Promise<Result<Truck>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/truck', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (queryParams?.search) {\n    url.searchParams.append('search', `${queryParams.search}`);\n  }\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  if (queryParams?.lastLocation && queryParams?.distance) {\n    url.searchParams.append('lastLocation', `${queryParams.lastLocation}`);\n    url.searchParams.append('distance', `${queryParams.distance}`);\n  }\n  return authFetch(url) as Promise<Result<Truck>>;\n};\n\nexport const TruckDelete = (userId: string): Promise<Truck> => {\n  const url = new URL(`/truck/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<Truck>;\n};\n\nexport const TruckCreate = (data: CreateTruck): Promise<Truck> => {\n  const url = new URL(`/truck`, origin);\n  return authFetch(url, {\n    method: 'POST',\n    bodyObj: data,\n  }) as Promise<Truck>;\n};\n\nexport const TruckUpdate = (data: UpdateTruck): Promise<Truck> => {\n  const { id, ...updatedData } = data;\n  const url = new URL(`/truck/${id}`, origin);\n  return authFetch(url, {\n    method: 'PATCH',\n    bodyObj: updatedData,\n  }) as Promise<Truck>;\n};\n\nexport const TruckQuery = (query: QuerySingle): Promise<Truck> => {\n  const url = new URL(`/truck/${query.queryKey[1]}`, origin);\n  return authFetch(url, {\n    method: 'GET',\n  }) as Promise<Truck>;\n};\n\nexport const LocationsQuery: (\n  query: Query<{ search?: string; name?: string }>,\n) => Promise<Result<Location>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/location', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.search) {\n    url.searchParams.append('search', `${queryParams.search}`);\n  }\n  if (queryParams?.name) {\n    url.searchParams.append('name', `${queryParams.name}`);\n  }\n  return authFetch(url) as Promise<Result<Location>>;\n};\n\nexport const LocationDelete = (userId: string): Promise<Location> => {\n  const url = new URL(`/location/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<Location>;\n};\n\nexport const LocationCreate = (data: CreateLocation): Promise<Location> => {\n  const url = new URL(`/location`, origin);\n  return authFetch(url, {\n    method: 'POST',\n    bodyObj: data,\n  }) as Promise<Location>;\n};\n\nexport const LocationUpdate = (data: UpdateLocation): Promise<Location> => {\n  const { id, ...updatedData } = data;\n  const url = new URL(`/location/${id}`, origin);\n  return authFetch(url, {\n    method: 'PATCH',\n    bodyObj: updatedData,\n  }) as Promise<Location>;\n};\n\nexport const LocationQuery = (query: QuerySingle): Promise<Location> => {\n  const url = new URL(`/location/${query.queryKey[1]}`, origin);\n  return authFetch(url, {\n    method: 'GET',\n  }) as Promise<Location>;\n};\n\nexport const LoadsQuery: (\n  query: Query<{ loadNumber?: number; truckNumber?: number }>,\n) => Promise<Result<Load>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/load', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.loadNumber) {\n    url.searchParams.append('loadNumber', `${queryParams.loadNumber}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  return authFetch(url) as Promise<Result<Load>>;\n};\n\nexport const LoadDelete = (userId: string): Promise<Load> => {\n  const url = new URL(`/load/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<Load>;\n};\n\nexport const LoadCreate = (data: CreateLoad): Promise<Load> => {\n  const url = new URL(`/load`, origin);\n  return authFetch(url, {\n    method: 'POST',\n    bodyObj: data,\n  }) as Promise<Load>;\n};\n\nexport const LoadUpdate = (data: UpdateLoad): Promise<Load> => {\n  const { id, ...updatedData } = data;\n  const url = new URL(`/load/${id}`, origin);\n  return authFetch(url, {\n    method: 'PATCH',\n    bodyObj: updatedData,\n  }) as Promise<Load>;\n};\n\nexport const LoadQuery = (query: QuerySingle): Promise<Load> => {\n  const url = new URL(`/load/${query.queryKey[1]}`, origin);\n  return authFetch(url, {\n    method: 'GET',\n  }) as Promise<Load>;\n};\n\nexport const OwnersQuery: (\n  query: Query<{ search?: string; fullName?: number; truckNumber?: number }>,\n) => Promise<Result<Owner>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/owner', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.search) {\n    url.searchParams.append('search', `${queryParams.search}`);\n  }\n  if (queryParams?.fullName) {\n    url.searchParams.append('fullName', `${queryParams.fullName}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  return authFetch(url) as Promise<Result<Owner>>;\n};\n\nexport const OwnerDelete = (userId: string): Promise<Owner> => {\n  const url = new URL(`/owner/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<Owner>;\n};\n\nexport const OwnerCreate = (data: CreateOwner): Promise<Owner> => {\n  const url = new URL(`/owner`, origin);\n  return authFetch(url, {\n    method: 'POST',\n    bodyObj: data,\n  }) as Promise<Owner>;\n};\n\nexport const OwnerUpdate = (data: UpdateOwner): Promise<Owner> => {\n  const { id, ...updatedData } = data;\n  const url = new URL(`/owner/${id}`, origin);\n  return authFetch(url, {\n    method: 'PATCH',\n    bodyObj: updatedData,\n  }) as Promise<Owner>;\n};\n\nexport const OwnerQuery = (query: QuerySingle): Promise<Owner> => {\n  const url = new URL(`/owner/${query.queryKey[1]}`, origin);\n  return authFetch(url, {\n    method: 'GET',\n  }) as Promise<Owner>;\n};\n\nexport const DriversQuery: (\n  query: Query<{\n    search?: string;\n    fullName?: number;\n    truckNumber?: number;\n    owner?: string;\n  }>,\n) => Promise<Result<Driver>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/driver', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.search) {\n    url.searchParams.append('search', `${queryParams.search}`);\n  }\n  if (queryParams?.fullName) {\n    url.searchParams.append('fullName', `${queryParams.fullName}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  if (queryParams?.owner) {\n    url.searchParams.append('owner', `${queryParams.owner}`);\n  }\n  return authFetch(url) as Promise<Result<Driver>>;\n};\n\nexport const DriverDelete = (userId: string): Promise<Driver> => {\n  const url = new URL(`/driver/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<Driver>;\n};\n\nexport const DriverCreate = (data: CreateDriver): Promise<Driver> => {\n  const url = new URL(`/driver`, origin);\n  return authFetch(url, {\n    method: 'POST',\n    bodyObj: data,\n  }) as Promise<Driver>;\n};\n\nexport const DriverUpdate = (data: UpdateDriver): Promise<Driver> => {\n  const { id, ...updatedData } = data;\n  const url = new URL(`/driver/${id}`, origin);\n  return authFetch(url, {\n    method: 'PATCH',\n    bodyObj: updatedData,\n  }) as Promise<Driver>;\n};\n\nexport const DriverQuery = (query: QuerySingle): Promise<Driver> => {\n  const url = new URL(`/driver/${query.queryKey[1]}`, origin);\n  return authFetch(url, {\n    method: 'GET',\n  }) as Promise<Driver>;\n};\n\nexport const CoordinatorsQuery: (\n  query: Query<{\n    search?: string;\n    fullName?: number;\n    truckNumber?: number;\n    owner?: string;\n  }>,\n) => Promise<Result<Coordinator>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/coordinator', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.search) {\n    url.searchParams.append('search', `${queryParams.search}`);\n  }\n  if (queryParams?.fullName) {\n    url.searchParams.append('fullName', `${queryParams.fullName}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  if (queryParams?.owner) {\n    url.searchParams.append('owner', `${queryParams.owner}`);\n  }\n  return authFetch(url) as Promise<Result<Coordinator>>;\n};\n\nexport const CoordinatorDelete = (userId: string): Promise<Coordinator> => {\n  const url = new URL(`/coordinator/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<Coordinator>;\n};\n\nexport const CoordinatorCreate = (\n  data: CreateCoordinator,\n): Promise<Coordinator> => {\n  const url = new URL(`/coordinator`, origin);\n  return authFetch(url, {\n    method: 'POST',\n    bodyObj: data,\n  }) as Promise<Coordinator>;\n};\n\nexport const CoordinatorUpdate = (\n  data: UpdateCoordinator,\n): Promise<Coordinator> => {\n  const { id, ...updatedData } = data;\n  const url = new URL(`/coordinator/${id}`, origin);\n  return authFetch(url, {\n    method: 'PATCH',\n    bodyObj: updatedData,\n  }) as Promise<Coordinator>;\n};\n\nexport const CoordinatorQuery = (query: QuerySingle): Promise<Coordinator> => {\n  const url = new URL(`/coordinator/${query.queryKey[1]}`, origin);\n  return authFetch(url, {\n    method: 'GET',\n  }) as Promise<Coordinator>;\n};\n\nexport const UsersQuery: (\n  query: Query<{ search?: string; fullName?: number }>,\n) => Promise<Result<User>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/user', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.search) {\n    url.searchParams.append('search', `${queryParams.search}`);\n  }\n  if (queryParams?.fullName) {\n    url.searchParams.append('fullName', `${queryParams.fullName}`);\n  }\n  return authFetch(url) as Promise<Result<User>>;\n};\n\nexport const UserDelete = (userId: string): Promise<User> => {\n  const url = new URL(`/user/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<User>;\n};\n\nexport const UserCreate = (data: CreateUser): Promise<User> => {\n  const url = new URL(`/user`, origin);\n  return authFetch(url, {\n    method: 'POST',\n    bodyObj: data,\n  }) as Promise<User>;\n};\n\nexport const UserUpdate = (data: UpdateUser): Promise<User> => {\n  const { id, ...updatedData } = data;\n  const url = new URL(`/user/${id}`, origin);\n  return authFetch(url, {\n    method: 'PATCH',\n    bodyObj: updatedData,\n  }) as Promise<User>;\n};\n\nexport const UserQuery = (query: QuerySingle): Promise<User> => {\n  const url = new URL(`/user/${query.queryKey[1]}`, origin);\n  return authFetch(url, {\n    method: 'GET',\n  }) as Promise<User>;\n};\n"],"names":["center","lat","lng","zoom","Transition","React","props","ref","_jsx","Slide","_objectSpread","direction","GeneralMap","_React$useState","_React$useState2","_slicedToArray","selectedTruck","setSelectedTruck","_useQuery","useQuery","queryKey","queryFn","TrucksQuery","keepPreviousData","isLoading","isFetching","_useQuery$data","data","rows","items","handleDialogClose","_jsxs","_Fragment","children","Box","component","sx","flexGrow","p","height","width","Wrapper","apiKey","render","Map","MarkerClusterer","filter","truck","lastLocation","map","Marker","onCLick","truckId","id","find","optimized","animation","window","google","maps","Animation","DROP","title","concat","truckNumber","status","position","Dialog","open","TransitionComponent","keepMounted","onClose","DialogTitle","href","target","DialogContent","DialogContentText","DialogActions","Button","onClick","Loader","visible","setSnackbarMessage","useSnackbar","Status","FAILURE","severity","message","LOADING","_ref","mapRef","_React$useState3","_React$useState4","setMap","current","child","only","style","_ref2","_React$useState5","_React$useState6","clusterer","setClasterer","MarkerClustererClass","options","otherMarkerOptions","_objectWithoutProperties","_excluded","_React$useState7","_React$useState8","marker","setMarker","newMarker","addListener","removeMarker","setPosition","addMarker","setOptions","origin","URL","location","authFetch","input","_authProvider$user","_authProvider$user2","init","arguments","length","undefined","bodyObj","restInit","fetchInit","headers","Headers","set","btoa","authProvider","user","username","password","body","JSON","stringify","transformedBody","Object","entries","forEach","entry","Array","isArray","elem","Date","transformBody","fetch","catch","reason","error","Error","cause","name","then","response","statusText","json","_ref$queryKey","page","rowsPerPage","orderBy","order","queryParams","url","searchParams","append","search","distance","TruckDelete","userId","method","TruckCreate","TruckUpdate","updatedData","_excluded2","TruckQuery","query","LocationsQuery","_ref2$queryKey","LocationDelete","LocationCreate","LocationUpdate","_excluded3","LocationQuery","LoadsQuery","_ref3","_ref3$queryKey","loadNumber","LoadDelete","LoadCreate","LoadUpdate","_excluded4","LoadQuery","OwnersQuery","_ref4","_ref4$queryKey","fullName","OwnerDelete","OwnerCreate","OwnerUpdate","_excluded5","OwnerQuery","DriversQuery","_ref5","_ref5$queryKey","owner","DriverDelete","DriverCreate","DriverUpdate","_excluded6","DriverQuery","CoordinatorsQuery","_ref6","_ref6$queryKey","CoordinatorDelete","CoordinatorCreate","CoordinatorUpdate","_excluded7","CoordinatorQuery","UsersQuery","_ref7","_ref7$queryKey","UserDelete","UserCreate","UserUpdate","_excluded8","UserQuery"],"sourceRoot":""}