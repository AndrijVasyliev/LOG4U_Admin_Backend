{"version":3,"file":"static/js/588.3e25f70a.chunk.js","mappings":"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","sources":["api/api.ts","utils/dataTypes.ts","users/CreateUser.tsx"],"sourcesContent":["import { authProvider } from '../utils/auth';\nimport {\n  Coordinator,\n  Driver,\n  Load,\n  Location,\n  Owner,\n  Truck,\n  User,\n  Query,\n  Result,\n} from '../utils/dataTypes';\n\nconst SUCCESS_HTTP_CODE = 200;\nconst CREATED_HTTP_CODE = 201;\nconst FORBIDDEN_HTTP_CODE = 403;\nconst NOT_FOUND_HTTP_CODE = 404;\n\nconst { origin } = new URL(window.location.href);\n\nexport const authFetch: (\n  input: string | URL,\n  init?: RequestInit,\n) => Promise<object> = (input, init = {}) => {\n  const fetchInit = { ...init, headers: new Headers() };\n  fetchInit.headers.set(\n    'Authorization',\n    'Basic ' +\n      btoa(authProvider.user?.username + ':' + authProvider.user?.password),\n  );\n  if (fetchInit.body) {\n    fetchInit.headers.set('Accept', 'application/json');\n    fetchInit.headers.set('Content-Type', 'application/json');\n  }\n  return fetch(input, fetchInit)\n    .catch((reason) => {\n      const error = new Error();\n      error.cause = reason;\n      error.name = 'Fetch error';\n      error.message = 'Network error has occurred';\n      throw error;\n    })\n    .then((response) => {\n      if (\n        response.status !== SUCCESS_HTTP_CODE &&\n        response.status !== CREATED_HTTP_CODE\n      ) {\n        const error = new Error();\n        error.cause = response;\n        if (response.status) {\n          error.name = response.status + ' ' + response.statusText;\n          switch (response.status) {\n            case FORBIDDEN_HTTP_CODE:\n              error.message = 'Insufficient permissions';\n              break;\n            case NOT_FOUND_HTTP_CODE:\n              error.message = 'Not found';\n              break;\n            default:\n              error.message = 'Some server error has occurred';\n          }\n        } else {\n          error.message = 'Network error has occurred';\n        }\n        throw error;\n      }\n      return response.json().catch((reason) => {\n        const error = new Error();\n        error.cause = reason;\n        error.name = 'Fetch error';\n        error.message = 'Server responded with incorrect data';\n        throw error;\n      });\n    });\n};\n\nexport const TrucksQuery: (\n  query: Query<{\n    truckNumber?: number;\n    lastLocation?: string;\n    distance?: string;\n  }>,\n) => Promise<Result<Truck>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/truck', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  if (queryParams?.lastLocation && queryParams?.distance) {\n    url.searchParams.append('lastLocation', `${queryParams.lastLocation}`);\n    url.searchParams.append('distance', `${queryParams.distance}`);\n  }\n  return authFetch(url) as Promise<Result<Truck>>;\n};\n\nexport const TruckDelete = (userId: string): Promise<Truck> => {\n  const url = new URL(`/truck/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<Truck>;\n};\n\nexport const LocationsQuery: (\n  query: Query<{ search?: string; name?: string }>,\n) => Promise<Result<Location>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/location', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.search) {\n    url.searchParams.append('search', `${queryParams.search}`);\n  }\n  if (queryParams?.name) {\n    url.searchParams.append('name', `${queryParams.name}`);\n  }\n  return authFetch(url) as Promise<Result<Location>>;\n};\n\nexport const LocationDelete = (userId: string): Promise<Location> => {\n  const url = new URL(`/location/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<Location>;\n};\n\nexport const LoadsQuery: (\n  query: Query<{ loadNumber?: number; truckNumber?: number }>,\n) => Promise<Result<Load>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/load', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.loadNumber) {\n    url.searchParams.append('loadNumber', `${queryParams.loadNumber}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  return authFetch(url) as Promise<Result<Load>>;\n};\n\nexport const LoadDelete = (userId: string): Promise<Load> => {\n  const url = new URL(`/load/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<Load>;\n};\n\nexport const OwnersQuery: (\n  query: Query<{ fullName?: number; truckNumber?: number }>,\n) => Promise<Result<Owner>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/owner', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.fullName) {\n    url.searchParams.append('fullName', `${queryParams.fullName}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  return authFetch(url) as Promise<Result<Owner>>;\n};\n\nexport const OwnerDelete = (userId: string): Promise<Owner> => {\n  const url = new URL(`/owner/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<Owner>;\n};\n\nexport const DriversQuery: (\n  query: Query<{ fullName?: number; truckNumber?: number }>,\n) => Promise<Result<Driver>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/driver', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.fullName) {\n    url.searchParams.append('fullName', `${queryParams.fullName}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  return authFetch(url) as Promise<Result<Driver>>;\n};\n\nexport const DriverDelete = (userId: string): Promise<Driver> => {\n  const url = new URL(`/driver/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<Driver>;\n};\n\nexport const CoordinatorsQuery: (\n  query: Query<{ fullName?: number; truckNumber?: number }>,\n) => Promise<Result<Coordinator>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/coordinator', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.fullName) {\n    url.searchParams.append('fullName', `${queryParams.fullName}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  return authFetch(url) as Promise<Result<Coordinator>>;\n};\n\nexport const CoordinatorDelete = (userId: string): Promise<Coordinator> => {\n  const url = new URL(`/coordinator/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<Coordinator>;\n};\n\nexport const UsersQuery: (\n  query: Query<{ fullName?: number }>,\n) => Promise<Result<User>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/user', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.fullName) {\n    url.searchParams.append('fullName', `${queryParams.fullName}`);\n  }\n  return authFetch(url) as Promise<Result<User>>;\n};\n\nexport const UserDelete = (userId: string): Promise<User> => {\n  const url = new URL(`/user/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<User>;\n};\n\nexport const UserCreate = (data: User): Promise<User> => {\n  const url = new URL(`/user`, origin);\n  return authFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(data),\n  }) as Promise<User>;\n};\n","import React from 'react';\nimport { AlertColor } from '@mui/material/Alert/Alert';\n\nexport const LangPriorities = ['EN', 'UA', 'ES', 'RU'] as const;\n\nexport const PersonTypes = [\n  'Owner',\n  'OwnerDriver',\n  'Coordinator',\n  'CoordinatorDriver',\n  'Driver',\n] as const;\n\nexport const UserRoles = ['Admin', 'Super Admin'] as const;\n\nexport const TruckTypes = [\n  'Cargo van',\n  'Reefer van',\n  'Box truck',\n  'Box truck Reefer',\n  'Straight truck',\n  'Hotshot',\n  'Tented box',\n] as const;\n\nexport const TruckStatuses = ['Available', 'Not Available'] as const;\n\nexport const TruckCrossborders = ['Yes', 'No'] as const;\n\nexport const TruckCertificates = [\n  'Hazmat',\n  'Tsa',\n  'TWIC',\n  'Tanker Endorsement',\n] as const;\n\nexport const TruckEquipments = [\n  'Dock height risers',\n  'Air ride',\n  'Lift gate',\n  'Keep from freezing',\n  'ICC bar',\n  'Vertical E-track',\n  'Horizontal E-track',\n  'Pallet jack',\n  'PPE',\n  'Ramps',\n  'Straps',\n  'Loads bars',\n  'Blankets',\n  'Pads',\n  'Fire extinguisher',\n] as const;\n\nexport type Order = 'asc' | 'desc';\nexport type Query<T> = {\n  queryKey: [\n    key: string,\n    page: number,\n    rowsPerPage: number,\n    orderBy?: string,\n    order?: Order,\n    queryParams?: T,\n  ];\n};\nexport type Result<T> = {\n  items: T[];\n  limit: number;\n  offset: number;\n  total: number;\n};\nexport interface AuthContextType {\n  user: any;\n  signin: (\n    username: string,\n    password: string,\n    callback: (res: boolean) => void,\n  ) => void;\n  signout: (callback: VoidFunction) => void;\n}\nexport type SnackbarMessage = {\n  message: string;\n  severity: AlertColor;\n  handleClose?: (event?: React.SyntheticEvent | Event, reason?: string) => void;\n};\nexport type PersonType = (typeof PersonTypes)[number];\nexport type LangPriority = (typeof LangPriorities)[number];\nexport type UserRole = (typeof UserRoles)[number];\nexport type TruckType = (typeof TruckTypes)[number];\nexport type TruckStatus = (typeof TruckStatuses)[number];\nexport type TruckCrossborder = (typeof TruckCrossborders)[number];\nexport type TruckCertificate = (typeof TruckCertificates)[number];\nexport type TruckEquipment = (typeof TruckEquipments)[number];\n\nexport interface City {\n  id: string;\n  zipCode: string;\n  name: string;\n  stateCode: string;\n  stateName: string;\n  location: [number, number];\n}\n\nexport interface Person {\n  id: string;\n  fullName: string;\n  type: PersonType;\n  phone?: string;\n}\n\nexport interface Owner extends Person {\n  type: PersonType;\n  phone: string;\n  phone2?: string;\n  email: string;\n  address: string;\n  ownTrucks?: Truck[];\n  coordinators?: Coordinator[];\n  drivers?: Driver[];\n}\n\nexport interface Coordinator extends Person {\n  type: PersonType;\n  phone: string;\n  phone2?: string;\n  email: string;\n  address: string;\n  coordinateTrucks?: Truck[];\n}\n\nexport interface Driver extends Person {\n  type: PersonType;\n  phone: string;\n  phone2?: string;\n  email?: string;\n  address?: string;\n  driveTrucks?: Truck[];\n}\n\nexport interface Truck {\n  id: string;\n  truckNumber: number;\n  status: string;\n  lastLocation?: [number, number];\n  lastCity?: City;\n  locationUpdatedAt?: string;\n  milesHaversine?: number;\n  milesByRoads?: number;\n  crossborder: string;\n  certificate: string;\n  type?: string;\n  equipment?: string[];\n  payload?: number;\n  grossWeight: string;\n  make: string;\n  model: string;\n  year: number;\n  color: string;\n  vinCode: string;\n  licencePlate: string;\n  licenceState: string;\n  insideDims: string;\n  doorDims?: string;\n  validDims: string;\n  owner?: Person;\n  coordinator?: Person;\n  driver?: Person;\n}\n\nexport interface Load {\n  id: string;\n  loadNumber: number;\n  pick?: City;\n  pickDate?: Date;\n  deliver?: City;\n  deliverDate?: Date;\n  milesByRoads?: number;\n  milesHaversine?: number;\n  weight: string;\n  truckType: TruckType[];\n  rate?: number;\n  bookedByUser?: Person;\n  bookedByCompany?: string;\n  dispatchers?: Person[];\n  checkInAs?: string;\n  truck?: Truck;\n}\n\nexport interface Location {\n  id: string;\n  zipCode: string;\n  name: string;\n  stateCode: string;\n  stateName: string;\n  location: [number, number];\n}\n\nexport interface User {\n  id: string;\n  fullName: string;\n  phone?: string;\n  userRole: UserRole;\n  jobTitle: string;\n  email: string;\n}\n","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport Select from '@mui/material/Select';\n\nimport Loader from '../components/Loader';\n\nimport { UserCreate } from '../api';\nimport { useSnackbar } from '../hooks';\nimport { User, UserRoles } from '../utils/dataTypes';\n\nconst validationSchema = yup.object({\n  fullName: yup.string().required('Full name is required'),\n  phone: yup.string(),\n  userRole: yup.string().oneOf(UserRoles).required('User role is required'),\n  jobTitle: yup.string().required('Job title is required'),\n  email: yup\n    .string()\n    .email('Enter a valid email')\n    .required('Email is required'),\n  password: yup\n    .string()\n    .min(8, 'Password should be of minimum 8 characters length')\n    .required('Password is required'),\n});\n\nexport default function CreateUser() {\n  const navigate = useNavigate();\n  const queryClient = useQueryClient();\n  const setSnackbarMessage = useSnackbar();\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  const { mutate, isLoading } = useMutation(UserCreate, {\n    onSuccess: () => {\n      setSnackbarMessage({\n        severity: 'success',\n        message: 'Created',\n      });\n      queryClient.invalidateQueries(['users']);\n      navigate(-1);\n    },\n    onError: (error: Error) => {\n      setSnackbarMessage({\n        severity: 'error',\n        message: error instanceof Error ? error.message : JSON.stringify(error),\n      });\n    },\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      fullName: '',\n      phone: '',\n      userRole: '',\n      jobTitle: '',\n      email: '',\n      password: '',\n    },\n    validationSchema: validationSchema,\n    onSubmit: (values) => {\n      // alert(JSON.stringify(values, null, 2));\n      mutate(values as unknown as User);\n    },\n    onReset: () => {\n      navigate(-1);\n    },\n  });\n\n  return (\n    <Box>\n      <form onSubmit={formik.handleSubmit} onReset={formik.handleReset}>\n        <Box key=\"controls\" sx={{ p: 1, display: 'inline-flex' }}>\n          <Box key=\"left\">\n            <TextField\n              sx={{ p: 1 }}\n              fullWidth\n              size=\"small\"\n              id=\"fullName\"\n              name=\"fullName\"\n              label=\"Full Name\"\n              value={formik.values.fullName}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              error={formik.touched.fullName && Boolean(formik.errors.fullName)}\n              helperText={formik.touched.fullName && formik.errors.fullName}\n            />\n            <FormControl\n              sx={{ p: 1 }}\n              fullWidth\n              size=\"small\"\n              error={formik.touched.userRole && Boolean(formik.errors.userRole)}\n            >\n              <InputLabel id=\"userRole\">User Role</InputLabel>\n              <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"userRole\"\n                name=\"userRole\"\n                label=\"User Role\"\n                value={formik.values.userRole}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n              >\n                {UserRoles.map((role) => (\n                  <MenuItem value={role}>{role}</MenuItem>\n                ))}\n              </Select>\n              <FormHelperText>\n                {formik.touched.userRole && formik.errors.userRole}\n              </FormHelperText>\n            </FormControl>\n            <TextField\n              sx={{ p: 1 }}\n              fullWidth\n              size=\"small\"\n              id=\"jobTitle\"\n              name=\"jobTitle\"\n              label=\"Job Title\"\n              value={formik.values.jobTitle}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              error={formik.touched.jobTitle && Boolean(formik.errors.jobTitle)}\n              helperText={formik.touched.jobTitle && formik.errors.jobTitle}\n            />\n          </Box>\n          <Box key=\"right\">\n            <TextField\n              sx={{ p: 1 }}\n              fullWidth\n              size=\"small\"\n              id=\"phone\"\n              name=\"phone\"\n              label=\"Phone\"\n              value={formik.values.phone}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              error={formik.touched.phone && Boolean(formik.errors.phone)}\n              helperText={formik.touched.phone && formik.errors.phone}\n            />\n            <TextField\n              sx={{ p: 1 }}\n              fullWidth\n              size=\"small\"\n              id=\"email\"\n              name=\"email\"\n              label=\"Email\"\n              value={formik.values.email}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              error={formik.touched.email && Boolean(formik.errors.email)}\n              helperText={formik.touched.email && formik.errors.email}\n            />\n            <TextField\n              sx={{ p: 1 }}\n              fullWidth\n              size=\"small\"\n              id=\"password\"\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              value={formik.values.password}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              error={formik.touched.password && Boolean(formik.errors.password)}\n              helperText={formik.touched.password && formik.errors.password}\n            />\n          </Box>\n        </Box>\n        <Box key=\"buttons\" sx={{ p: 1, display: 'inline-flex' }}>\n          <Box sx={{ p: 1 }}>\n            <Button\n              fullWidth\n              variant=\"contained\"\n              size=\"small\"\n              color=\"primary\"\n              type=\"submit\"\n            >\n              Create\n            </Button>\n          </Box>\n          <Box sx={{ p: 1 }}>\n            <Button\n              fullWidth\n              variant=\"contained\"\n              size=\"small\"\n              color=\"primary\"\n              type=\"reset\"\n            >\n              Cancel\n            </Button>\n          </Box>\n        </Box>\n      </form>\n      <Loader visible={isLoading} />\n    </Box>\n  );\n}\n"],"names":["origin","URL","window","location","href","authFetch","input","_authProvider$user","_authProvider$user2","init","arguments","length","undefined","fetchInit","_objectSpread","headers","Headers","set","btoa","authProvider","user","username","password","body","fetch","catch","reason","error","Error","cause","name","message","then","response","status","statusText","json","TrucksQuery","_ref","_ref$queryKey","_slicedToArray","queryKey","page","rowsPerPage","orderBy","order","queryParams","url","searchParams","append","concat","truckNumber","lastLocation","distance","TruckDelete","userId","method","LocationsQuery","_ref2","_ref2$queryKey","search","LocationDelete","LoadsQuery","_ref3","_ref3$queryKey","loadNumber","LoadDelete","OwnersQuery","_ref4","_ref4$queryKey","fullName","OwnerDelete","DriversQuery","_ref5","_ref5$queryKey","DriverDelete","CoordinatorsQuery","_ref6","_ref6$queryKey","CoordinatorDelete","UsersQuery","_ref7","_ref7$queryKey","UserDelete","UserCreate","data","JSON","stringify","UserRoles","validationSchema","yup","required","phone","userRole","oneOf","jobTitle","email","min","CreateUser","navigate","useNavigate","queryClient","useQueryClient","setSnackbarMessage","useSnackbar","_useMutation","useMutation","onSuccess","severity","invalidateQueries","onError","mutate","isLoading","formik","useFormik","initialValues","onSubmit","values","onReset","_jsxs","Box","children","handleSubmit","handleReset","sx","p","display","_jsx","TextField","fullWidth","size","id","label","value","onChange","handleChange","onBlur","handleBlur","touched","Boolean","errors","helperText","FormControl","InputLabel","Select","labelId","map","role","MenuItem","FormHelperText","type","Button","variant","color","Loader","visible"],"sourceRoot":""}