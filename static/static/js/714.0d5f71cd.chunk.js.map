{"version":3,"file":"static/js/714.0d5f71cd.chunk.js","mappings":"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","sources":["api/api.ts","locations/locations.tsx","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/icons-material/Edit.js"],"sourcesContent":["import { authProvider } from '../utils/auth';\nimport {\n  Coordinator,\n  Driver,\n  Load,\n  Location,\n  Owner,\n  Truck,\n  User,\n  CreateUser,\n  UpdateUser,\n  Query,\n  QuerySingle,\n  Result,\n} from '../utils/dataTypes';\n\nconst SUCCESS_HTTP_CODE = 200;\nconst CREATED_HTTP_CODE = 201;\nconst FORBIDDEN_HTTP_CODE = 403;\nconst NOT_FOUND_HTTP_CODE = 404;\n\nconst { origin } = new URL(window.location.href);\n\nexport const authFetch: (\n  input: string | URL,\n  init?: RequestInit,\n) => Promise<object> = (input, init = {}) => {\n  const fetchInit = { ...init, headers: new Headers() };\n  fetchInit.headers.set(\n    'Authorization',\n    'Basic ' +\n      btoa(authProvider.user?.username + ':' + authProvider.user?.password),\n  );\n  if (fetchInit.body) {\n    fetchInit.headers.set('Accept', 'application/json');\n    fetchInit.headers.set('Content-Type', 'application/json');\n  }\n  return fetch(input, fetchInit)\n    .catch((reason) => {\n      const error = new Error();\n      error.cause = reason;\n      error.name = 'Fetch error';\n      error.message = 'Network error has occurred';\n      throw error;\n    })\n    .then((response) => {\n      if (\n        response.status !== SUCCESS_HTTP_CODE &&\n        response.status !== CREATED_HTTP_CODE\n      ) {\n        const error = new Error();\n        error.cause = response;\n        if (response.status) {\n          error.name = response.status + ' ' + response.statusText;\n          switch (response.status) {\n            case FORBIDDEN_HTTP_CODE:\n              error.message = 'Insufficient permissions';\n              break;\n            case NOT_FOUND_HTTP_CODE:\n              error.message = 'Not found';\n              break;\n            default:\n              error.message = 'Some server error has occurred';\n          }\n        } else {\n          error.message = 'Network error has occurred';\n        }\n        throw error;\n      }\n      return response.json().catch((reason) => {\n        const error = new Error();\n        error.cause = reason;\n        error.name = 'Fetch error';\n        error.message = 'Server responded with incorrect data';\n        throw error;\n      });\n    });\n};\n\nexport const TrucksQuery: (\n  query: Query<{\n    truckNumber?: number;\n    lastLocation?: string;\n    distance?: string;\n  }>,\n) => Promise<Result<Truck>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/truck', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  if (queryParams?.lastLocation && queryParams?.distance) {\n    url.searchParams.append('lastLocation', `${queryParams.lastLocation}`);\n    url.searchParams.append('distance', `${queryParams.distance}`);\n  }\n  return authFetch(url) as Promise<Result<Truck>>;\n};\n\nexport const TruckDelete = (userId: string): Promise<Truck> => {\n  const url = new URL(`/truck/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<Truck>;\n};\n\nexport const LocationsQuery: (\n  query: Query<{ search?: string; name?: string }>,\n) => Promise<Result<Location>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/location', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.search) {\n    url.searchParams.append('search', `${queryParams.search}`);\n  }\n  if (queryParams?.name) {\n    url.searchParams.append('name', `${queryParams.name}`);\n  }\n  return authFetch(url) as Promise<Result<Location>>;\n};\n\nexport const LocationDelete = (userId: string): Promise<Location> => {\n  const url = new URL(`/location/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<Location>;\n};\n\nexport const LoadsQuery: (\n  query: Query<{ loadNumber?: number; truckNumber?: number }>,\n) => Promise<Result<Load>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/load', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.loadNumber) {\n    url.searchParams.append('loadNumber', `${queryParams.loadNumber}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  return authFetch(url) as Promise<Result<Load>>;\n};\n\nexport const LoadDelete = (userId: string): Promise<Load> => {\n  const url = new URL(`/load/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<Load>;\n};\n\nexport const OwnersQuery: (\n  query: Query<{ fullName?: number; truckNumber?: number }>,\n) => Promise<Result<Owner>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/owner', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.fullName) {\n    url.searchParams.append('fullName', `${queryParams.fullName}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  return authFetch(url) as Promise<Result<Owner>>;\n};\n\nexport const OwnerDelete = (userId: string): Promise<Owner> => {\n  const url = new URL(`/owner/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<Owner>;\n};\n\nexport const DriversQuery: (\n  query: Query<{ fullName?: number; truckNumber?: number }>,\n) => Promise<Result<Driver>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/driver', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.fullName) {\n    url.searchParams.append('fullName', `${queryParams.fullName}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  return authFetch(url) as Promise<Result<Driver>>;\n};\n\nexport const DriverDelete = (userId: string): Promise<Driver> => {\n  const url = new URL(`/driver/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<Driver>;\n};\n\nexport const CoordinatorsQuery: (\n  query: Query<{ fullName?: number; truckNumber?: number }>,\n) => Promise<Result<Coordinator>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/coordinator', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.fullName) {\n    url.searchParams.append('fullName', `${queryParams.fullName}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  return authFetch(url) as Promise<Result<Coordinator>>;\n};\n\nexport const CoordinatorDelete = (userId: string): Promise<Coordinator> => {\n  const url = new URL(`/coordinator/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<Coordinator>;\n};\n\nexport const UsersQuery: (\n  query: Query<{ fullName?: number }>,\n) => Promise<Result<User>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/user', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.fullName) {\n    url.searchParams.append('fullName', `${queryParams.fullName}`);\n  }\n  return authFetch(url) as Promise<Result<User>>;\n};\n\nexport const UserDelete = (userId: string): Promise<User> => {\n  const url = new URL(`/user/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<User>;\n};\n\nexport const UserCreate = (data: CreateUser): Promise<User> => {\n  const url = new URL(`/user`, origin);\n  return authFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(data),\n  }) as Promise<User>;\n};\n\nexport const UserUpdate = (data: UpdateUser): Promise<User> => {\n  const { id, ...updatedData } = data;\n  const url = new URL(`/user/${id}`, origin);\n  return authFetch(url, {\n    method: 'PATCH',\n    body: JSON.stringify(updatedData),\n  }) as Promise<User>;\n};\n\nexport const UserQuery = (query: QuerySingle): Promise<User> => {\n  const url = new URL(`/user/${query.queryKey[1]}`, origin);\n  return authFetch(url, {\n    method: 'GET',\n  }) as Promise<User>;\n};\n","import * as React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\n\nimport { alpha, styled } from '@mui/material/styles';\nimport TextField from '@mui/material/TextField';\nimport Checkbox from '@mui/material/Checkbox';\nimport Tooltip from '@mui/material/Tooltip';\nimport TableCell from '@mui/material/TableCell';\nimport Box from '@mui/material/Box';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport TableSortLabel from '@mui/material/TableSortLabel';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\nimport IconButton from '@mui/material/IconButton';\nimport AddIcon from '@mui/icons-material/Add';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport FilterListIcon from '@mui/icons-material/FilterList';\nimport FilterListOffIcon from '@mui/icons-material/FilterListOff';\nimport { visuallyHidden } from '@mui/utils';\n\nimport Loader from '../components/Loader';\n\nimport { LocationsQuery, LocationDelete } from '../api';\nimport { useSnackbar } from '../hooks';\nimport { Order, Location } from '../utils/dataTypes';\n\ninterface HeadCell {\n  id: string;\n  disablePadding: boolean;\n  orderField?: keyof Location;\n  getData: (row: Location) => { data: JSX.Element | string; title?: string };\n  label: string;\n  numeric: boolean;\n}\n\nconst headCells: readonly HeadCell[] = [\n  {\n    id: 'zipCode',\n    orderField: 'zipCode',\n    getData: (row) => ({ data: `${row.zipCode}` }),\n    numeric: true,\n    disablePadding: false,\n    label: 'Zip Code',\n  },\n  {\n    id: 'name',\n    orderField: 'name',\n    getData: (row) => ({ data: `${row.name}` }),\n    numeric: false,\n    disablePadding: true,\n    label: 'City Name',\n  },\n  {\n    id: 'stateCode',\n    orderField: 'stateCode',\n    getData: (row) => ({ data: `${row.stateCode}` }),\n    numeric: false,\n    disablePadding: true,\n    label: 'State Code',\n  },\n  {\n    id: 'stateName',\n    orderField: 'stateName',\n    getData: (row) => ({ data: `${row.stateName}` }),\n    numeric: false,\n    disablePadding: true,\n    label: 'State Name',\n  },\n  {\n    id: 'location',\n    getData: (row) => ({ data: `${row.location.join(',')}` }),\n    numeric: false,\n    disablePadding: true,\n    label: 'Geo Point',\n  },\n];\n\ninterface EnhancedTableProps {\n  numSelected: number;\n  onRequestSort: (\n    event: React.MouseEvent<unknown>,\n    property: keyof Location,\n  ) => void;\n  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  order: Order | undefined;\n  orderBy: string | undefined;\n  rowCount: number;\n}\n\nconst StyledTableHead = styled(TableHead)(({ theme }) => ({\n  backgroundColor: theme.palette.background.default,\n}));\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  maxWidth: '100px',\n  whiteSpace: 'nowrap',\n  textOverflow: 'ellipsis',\n  overflow: 'hidden',\n}));\n\nfunction stopPropagation(e: React.SyntheticEvent) {\n  e.stopPropagation();\n}\n\nfunction EnhancedTableHead(props: EnhancedTableProps) {\n  const {\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n  } = props;\n  const createSortHandler =\n    (property: keyof Location) => (event: React.MouseEvent<unknown>) => {\n      onRequestSort(event, property);\n    };\n\n  return (\n    <StyledTableHead>\n      <TableRow>\n        <StyledTableCell padding=\"checkbox\">\n          <Checkbox\n            name={'enhanced-table-checkbox-select-all'}\n            color=\"primary\"\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{\n              'aria-label': 'enhanced-table-checkbox-select-all',\n            }}\n          />\n        </StyledTableCell>\n        {headCells.map((headCell) => (\n          <StyledTableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'center'}\n            padding={headCell.disablePadding ? 'none' : 'normal'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={headCell.orderField && orderBy === headCell.orderField}\n              hideSortIcon={!headCell.orderField}\n              direction={orderBy === headCell.orderField ? order : 'asc'}\n              onClick={\n                headCell.orderField\n                  ? createSortHandler(headCell.orderField)\n                  : () => {\n                      return;\n                    }\n              }\n            >\n              {headCell.label}\n              {headCell.orderField && orderBy === headCell.orderField ? (\n                <Box component=\"span\" sx={visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </StyledTableCell>\n        ))}\n      </TableRow>\n    </StyledTableHead>\n  );\n}\n\ninterface EnhancedTableToolbarProps {\n  selected: readonly string[];\n  setQueryParams: React.Dispatch<React.SetStateAction<Record<string, string>>>;\n}\n\nfunction EnhancedTableToolbar(props: EnhancedTableToolbarProps) {\n  const { selected, setQueryParams } = props;\n  const [cityNameSearch, setCityNameSearch] = React.useState<string>('');\n  const [cityNameChanged, setCityNameChanged] = React.useState<boolean>(false);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const queryClient = useQueryClient();\n\n  const setSnackbarMessage = useSnackbar();\n\n  const { mutate, isLoading } = useMutation(LocationDelete, {\n    onSuccess: () => {\n      setSnackbarMessage({\n        severity: 'success',\n        message: 'Deleted',\n      });\n      queryClient.invalidateQueries(['locations']);\n    },\n    onError: (error: Error) => {\n      setSnackbarMessage({\n        severity: 'error',\n        message: error instanceof Error ? error.message : JSON.stringify(error),\n      });\n    },\n  });\n\n  const cityNameHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setCityNameSearch(event.target.value);\n    setCityNameChanged(true);\n  };\n  const locationClearHandler = () => {\n    setCityNameChanged(false);\n    setCityNameSearch('');\n    setQueryParams({});\n  };\n  const filterHandler = () => {\n    setCityNameChanged(false);\n    setQueryParams({ search: cityNameSearch });\n  };\n  const createHandler = () => {\n    navigate('./create', {\n      relative: 'path',\n      state: { from: location },\n      replace: false,\n    });\n  };\n  const editHandler = () => {\n    navigate(`./edit/${selected[0]}`, {\n      relative: 'path',\n      state: { from: location },\n      replace: false,\n    });\n  };\n  const deleteHandler = () => {\n    mutate(`${selected[0]}`);\n  };\n\n  return (\n    <Toolbar\n      sx={{\n        pl: { sm: 2 },\n        pr: { xs: 1, sm: 1 },\n        ...(selected.length > 0 && {\n          bgcolor: (theme) =>\n            alpha(\n              theme.palette.primary.main,\n              theme.palette.action.activatedOpacity,\n            ),\n        }),\n      }}\n    >\n      {selected.length > 0 ? (\n        <Typography\n          sx={{ flex: '1 1 100%' }}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {selected.length} selected\n        </Typography>\n      ) : (\n        <Typography\n          sx={{\n            flex: '1 1 100%',\n            whiteSpace: 'nowrap',\n            textOverflow: 'ellipsis',\n            overflow: 'hidden',\n          }}\n          variant=\"h6\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          Locations\n        </Typography>\n      )}\n      <TextField\n        label=\"City Name\"\n        value={cityNameSearch}\n        onChange={cityNameHandler}\n        size=\"small\"\n      />\n      <Tooltip title=\"Filter list\">\n        {(cityNameChanged || !cityNameSearch) &&\n        !(cityNameChanged && !cityNameSearch) ? (\n          <span>\n            <IconButton disabled={!cityNameSearch} onClick={filterHandler}>\n              <FilterListIcon />\n            </IconButton>\n          </span>\n        ) : (\n          <IconButton onClick={locationClearHandler}>\n            <FilterListOffIcon />\n          </IconButton>\n        )}\n      </Tooltip>\n      <Box sx={{ p: 1, display: 'inline-flex' }}>\n        <Tooltip title=\"Create\">\n          <span>\n            <IconButton onClick={createHandler}>\n              <AddIcon />\n            </IconButton>\n          </span>\n        </Tooltip>\n        <Tooltip title=\"Edit\">\n          <span>\n            <IconButton disabled={selected.length !== 1} onClick={editHandler}>\n              <EditIcon />\n            </IconButton>\n          </span>\n        </Tooltip>\n        <Tooltip title=\"Delete\">\n          <span>\n            <IconButton\n              disabled={selected.length !== 1}\n              onClick={deleteHandler}\n            >\n              <DeleteIcon />\n            </IconButton>\n          </span>\n        </Tooltip>\n      </Box>\n      <Loader visible={isLoading} />\n    </Toolbar>\n  );\n}\n\nexport default function EnhancedTable() {\n  const [order, setOrder] = React.useState<Order | undefined>('asc');\n  const [orderBy, setOrderBy] = React.useState<keyof Location | undefined>(\n    'name',\n  );\n  const [selected, setSelected] = React.useState<readonly string[]>([]);\n  const [page, setPage] = React.useState<number>(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState<number>(15);\n  const [queryParams, setQueryParams] = React.useState<Record<string, any>>({});\n  const tableContainerRef = React.useRef(null);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const setSnackbarMessage = useSnackbar();\n\n  const {\n    isLoading,\n    isFetching,\n    data: { items, total } = { items: [], total: 0 },\n  } = useQuery({\n    queryKey: ['locations', page, rowsPerPage, orderBy, order, queryParams],\n    queryFn: LocationsQuery,\n    keepPreviousData: true,\n    onError: (error: Error) => {\n      setSnackbarMessage({\n        severity: 'error',\n        message: error instanceof Error ? error.message : JSON.stringify(error),\n      });\n    },\n  });\n  const rows: Location[] = items || [];\n\n  React.useEffect(() => {\n    if (tableContainerRef.current) {\n      const container = tableContainerRef.current as HTMLElement;\n      container.scrollTo({\n        top: 0,\n        left: 0,\n        behavior: 'smooth',\n      });\n    }\n  }, [rows]);\n\n  React.useEffect(() => {\n    const newSelected: string[] = [];\n    selected.forEach((selectedItem) => {\n      const selectedRow = rows.find((row) => row.id === selectedItem);\n      if (selectedRow) {\n        newSelected.push(selectedItem);\n      }\n    });\n    setSelected(newSelected);\n  }, [rows]);\n\n  const handleRequestSort = (\n    event: React.MouseEvent<unknown>,\n    property: keyof Location,\n  ) => {\n    const isAsc = orderBy === property && order === 'asc';\n    const isDesc = orderBy === property && order === 'desc';\n    if (isDesc) {\n      setOrder(undefined);\n      setOrderBy(undefined);\n    } else {\n      setOrder(isAsc ? 'desc' : 'asc');\n      setOrderBy(property);\n    }\n  };\n\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.checked) {\n      const newSelected = rows.map((n: Location) => n.id);\n      setSelected(newSelected);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event: React.MouseEvent<unknown>, name: string) => {\n    navigate(`./view/${name}`, {\n      relative: 'path',\n      state: { from: location },\n      replace: false,\n    });\n  };\n\n  const handleSelect = (event: React.MouseEvent<unknown>, name: string) => {\n    event.stopPropagation();\n    const selectedIndex = selected.indexOf(name);\n    let newSelected: readonly string[] = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = (name: string) => selected.indexOf(name) !== -1;\n\n  return (\n    <Box sx={{ width: '100%', height: '100%' }}>\n      <Paper sx={{ width: '100%', height: '100%', backgroundColor: 'unset' }}>\n        <EnhancedTableToolbar\n          selected={selected}\n          setQueryParams={(query) => {\n            setQueryParams(query);\n            setPage(0);\n          }}\n        />\n        <TableContainer\n          ref={tableContainerRef}\n          sx={{ height: 'calc(100% - 115px)' }}\n        >\n          <Table\n            sx={{ minWidth: 750 }}\n            aria-labelledby=\"tableTitle\"\n            size=\"small\"\n            stickyHeader\n          >\n            <EnhancedTableHead\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {rows.map((row, index) => {\n                const isItemSelected = isSelected(`${row.id}`);\n                const labelId = `enhanced-table-checkbox-${index}`;\n                return (\n                  <TableRow\n                    hover\n                    onClick={(event) => handleClick(event, `${row.id}`)}\n                    role=\"checkbox\"\n                    aria-checked={isItemSelected}\n                    tabIndex={-1}\n                    key={row.id}\n                    selected={isItemSelected}\n                    sx={{ cursor: 'pointer' }}\n                  >\n                    <StyledTableCell padding=\"checkbox\">\n                      <Checkbox\n                        id={`${labelId}`}\n                        color=\"primary\"\n                        checked={isItemSelected}\n                        inputProps={{\n                          'aria-labelledby': labelId,\n                        }}\n                        onClick={(event) => handleSelect(event, `${row.id}`)}\n                      />\n                    </StyledTableCell>\n                    {headCells.map((cell) => {\n                      const cellData = cell.getData(row);\n                      return (\n                        <StyledTableCell\n                          key={cell.id}\n                          title={cellData.title}\n                          align={cell.numeric ? 'right' : 'center'}\n                        >\n                          {cellData.data}\n                        </StyledTableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 15, 20, 25, 35, 50]}\n          component=\"div\"\n          count={total}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <Loader visible={isLoading || isFetching} />\n    </Box>\n  );\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\nexports.default = _default;"],"names":["origin","URL","window","location","href","authFetch","input","_authProvider$user","_authProvider$user2","init","arguments","length","undefined","fetchInit","_objectSpread","headers","Headers","set","btoa","authProvider","user","username","password","body","fetch","catch","reason","error","Error","cause","name","message","then","response","status","statusText","json","TrucksQuery","_ref","_ref$queryKey","_slicedToArray","queryKey","page","rowsPerPage","orderBy","order","queryParams","url","searchParams","append","concat","truckNumber","lastLocation","distance","TruckDelete","userId","method","LocationsQuery","_ref2","_ref2$queryKey","search","LocationDelete","LoadsQuery","_ref3","_ref3$queryKey","loadNumber","LoadDelete","OwnersQuery","_ref4","_ref4$queryKey","fullName","OwnerDelete","DriversQuery","_ref5","_ref5$queryKey","DriverDelete","CoordinatorsQuery","_ref6","_ref6$queryKey","CoordinatorDelete","UsersQuery","_ref7","_ref7$queryKey","UserDelete","UserCreate","data","JSON","stringify","UserUpdate","id","updatedData","_objectWithoutProperties","_excluded","UserQuery","query","headCells","orderField","getData","row","zipCode","numeric","disablePadding","label","stateCode","stateName","join","StyledTableHead","styled","TableHead","backgroundColor","theme","palette","background","default","StyledTableCell","TableCell","maxWidth","whiteSpace","textOverflow","overflow","EnhancedTableHead","props","onSelectAllClick","numSelected","rowCount","onRequestSort","_jsx","children","_jsxs","TableRow","padding","Checkbox","color","indeterminate","checked","onChange","inputProps","map","headCell","align","sortDirection","TableSortLabel","active","hideSortIcon","direction","onClick","property","event","Box","component","sx","visuallyHidden","EnhancedTableToolbar","selected","setQueryParams","_React$useState","React","_React$useState2","cityNameSearch","setCityNameSearch","_React$useState3","_React$useState4","cityNameChanged","setCityNameChanged","useLocation","navigate","useNavigate","queryClient","useQueryClient","setSnackbarMessage","useSnackbar","_useMutation","useMutation","onSuccess","severity","invalidateQueries","onError","mutate","isLoading","Toolbar","pl","sm","pr","xs","bgcolor","alpha","primary","main","action","activatedOpacity","Typography","flex","variant","TextField","value","target","size","Tooltip","title","IconButton","FilterListOffIcon","disabled","FilterListIcon","p","display","relative","state","from","replace","AddIcon","EditIcon","DeleteIcon","Loader","visible","EnhancedTable","_React$useState5","_React$useState6","setOrder","_React$useState7","_React$useState8","setOrderBy","_React$useState9","_React$useState10","setSelected","_React$useState11","_React$useState12","setPage","_React$useState13","_React$useState14","setRowsPerPage","_React$useState15","_React$useState16","tableContainerRef","_useQuery","useQuery","queryFn","keepPreviousData","isFetching","_useQuery$data","_useQuery$data2","items","total","rows","current","scrollTo","top","left","behavior","newSelected","forEach","selectedItem","find","push","width","height","Paper","TableContainer","ref","Table","minWidth","stickyHeader","n","isAsc","TableBody","index","isItemSelected","indexOf","labelId","hover","handleClick","role","tabIndex","cursor","stopPropagation","selectedIndex","slice","handleSelect","cell","cellData","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","jsx","d"],"sourceRoot":""}