{"version":3,"file":"static/js/3939.d6b0e1f1.chunk.js","mappings":"6JAAA,SAASA,IAAa,OAAOA,EAAWC,OAAOC,OAASD,OAAOC,OAAOC,OAAS,SAAUC,GAAK,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAAIF,UAAUD,GAAI,IAAK,IAAII,KAAKD,GAAG,CAAG,GAAEE,eAAeC,KAAKH,EAAGC,KAAOL,EAAEK,GAAKD,EAAEC,GAAK,CAAE,OAAOL,CAAG,EAAGJ,EAASY,MAAM,KAAMN,UAAY,CAEnR,SAASO,EAAOC,EAAMC,GACpB,IAAI,MACFC,EAAK,QACLC,KACGC,GACDJ,EACJ,OAAoB,gBAAoB,MAAOd,EAAS,CACtDmB,GAAI,UACJ,YAAa,UACbC,MAAO,6BACPC,QAAS,cACTC,IAAKP,EACL,kBAAmBE,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3DG,GAAIF,GACHD,GAAS,KAAmB,gBAAoB,SAAU,CAC3DO,GAAI,GACJC,GAAI,GACJf,EAAG,GACHgB,KAAM,OACNC,YAAa,GACbC,MAAO,CACLC,OAAQ,kBAEK,gBAAoB,OAAQ,CAC3CC,EAAG,sFACHF,MAAO,CACLG,WAAY,OACZJ,YAAa,EACbE,OAAQ,eACRH,KAAM,4BAEO,gBAAoB,WAAY,CAC/CM,OAAQ,oCACRJ,MAAO,CACLC,OAAQ,eACRF,YAAa,EACbD,KAAM,sBAEO,gBAAoB,WAAY,CAC/CM,OAAQ,oCACRJ,MAAO,CACLC,OAAQ,eACRF,YAAa,EACbD,KAAM,sBAEO,gBAAoB,OAAQ,CAC3CI,EAAG,yDACHF,MAAO,CACLC,OAAQ,eACRE,WAAY,SACZE,cAAe,QACfN,YAAa,KAEA,gBAAoB,OAAQ,CAC3CG,EAAG,yDACHF,MAAO,CACLC,OAAQ,eACRF,YAAa,EACbM,cAAe,WAEF,gBAAoB,OAAQ,CAC3CH,EAAG,2DACHF,MAAO,CACLK,cAAe,QACfN,YAAa,EACbE,OAAQ,eACRE,WAAY,YAEC,gBAAoB,OAAQ,CAC3CD,EAAG,0DACHF,MAAO,CACLK,cAAe,QACfJ,OAAQ,eACRF,YAAa,KAEA,gBAAoB,WAAY,CAC/CK,OAAQ,8BACRJ,MAAO,CACLC,OAAQ,eACRF,YAAa,EACbI,WAAY,OACZE,cAAe,QACfP,KAAM,4BAGZ,CACA,MAAMQ,EAA0B,aAAiBpB,GAClC,G,gDC1Ff,SAASb,IAAa,OAAOA,EAAWC,OAAOC,OAASD,OAAOC,OAAOC,OAAS,SAAUC,GAAK,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAAIF,UAAUD,GAAI,IAAK,IAAII,KAAKD,GAAG,CAAG,GAAEE,eAAeC,KAAKH,EAAGC,KAAOL,EAAEK,GAAKD,EAAEC,GAAK,CAAE,OAAOL,CAAG,EAAGJ,EAASY,MAAM,KAAMN,UAAY,CAEnR,SAAS4B,EAASpB,EAAMC,GACtB,IAAI,MACFC,EAAK,QACLC,KACGC,GACDJ,EACJ,OAAoB,gBAAoB,MAAOd,EAAS,CACtDmC,UAAW,QACX,cAAe,OACfd,QAAS,YACT,cAAe,oBACfD,MAAO,6BACPE,IAAKP,EACL,kBAAmBE,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3DG,GAAIF,GACHD,GAAS,KAAmB,gBAAoB,OAAQ,CACzDa,EAAG,wzBACHF,MAAO,CACLS,SAAU,UACVX,KAAM,kBAGZ,CACA,MAAMQ,EAA0B,aAAiBC,GAClC,G,kJCZA,SAASG,EAAevB,GAUnC,IAVoC,SACtCwB,EAAQ,WACRC,EAAU,QACVC,EAAO,SACPC,GAMD3B,EACC,MAAO4B,EAAOC,GAAYC,EAAAA,SACxB,OAEKC,EAAOC,GAAYF,EAAAA,SAA6C,KAChEG,EAAUC,GAAeJ,EAAAA,SAC9B,MAGIK,EAAYL,EAAAA,SAAc,KACvBM,EAAAA,EAAAA,IAAUC,IACP,OAARJ,QAAQ,IAARA,GAAAA,EACIK,QAAQD,GACTE,MAAMC,IACL,GAAIA,EAAOC,QAAQhD,OAAS,GAAK4C,EAAeb,SAAU,CACxD,MAAMkB,EAAsB,IAAIC,OAAOC,KAAKC,OAC1CR,EAAeb,UAEXsB,EAAkC,CACtCC,mBAAoB,GACpBC,kBAAkB,IAADC,OAAMP,EAAoBQ,MAAK,MAAAD,OAAKP,EAAoBS,MAAK,KAC9EC,SAAU,CACR5B,SAAUkB,EACVW,cAAeV,OAAOC,KAAKU,qBAAqBC,YAChDC,SAAU,IAAIb,OAAOC,KAAKa,cAE5BC,SAAS,IAADT,OAAMP,EAAoBQ,MAAK,MAAAD,OAAKP,EAAoBS,MAAK,KACrEQ,MAAO,IAET3B,EAAS,CAACc,GACZ,MACEN,EAAOC,QAAQmB,SACZC,GACEA,EAAKb,mBAAoBc,EAAAA,EAAAA,GACxBD,EAAKd,sBAGXf,EAASQ,EAAOC,QAClB,IAEDsB,OAAOC,IACNhC,EAAS,GAAG,GACZ,GACH,MACF,CAACC,IAEJH,EAAAA,WAAgB,KACd,MAAMmC,EAAWzC,IAAY0C,EAAAA,EAAAA,GAAenC,GACxCP,GAAYyC,IAAoB,OAARA,QAAQ,IAARA,OAAQ,EAARA,EAAUP,aAAkB,OAAL9B,QAAK,IAALA,OAAK,EAALA,EAAO8B,UACxD7B,EAASoC,GACAzC,EACTW,EAAU,CACRX,SAAU,CACR0B,IAAK1B,EAAS,GACd2B,IAAK3B,EAAS,MAGRA,IACVQ,EAAS,IACTH,EAAS,MACX,GACC,CAACI,EAAUT,EAAUO,IA2BxB,OACEoC,EAAAA,EAAAA,MAAA,QAAMtD,MAAO,CAAEuD,QAAS,QAASzC,SAAA,EAC/B0C,EAAAA,EAAAA,KAACC,EAAAA,QAAO,KAAKC,EAAAA,EAAAA,MAAkBC,OA3BZC,IACrB,MAAMC,GAAqBC,EAAAA,EAAAA,OACpB,CAAEC,IAAuBC,EAAAA,EAAAA,MAoBhC,OAnBA/C,EAAAA,iBAAsB,KAChB2C,IAAWK,EAAAA,OAAOC,SACpBH,GAAoB,GAElBH,IAAWK,EAAAA,OAAOE,SACpBN,EAAmB,CACjBO,SAAU,QACVC,QAAS,wBAGTT,IAAWK,EAAAA,OAAOK,SACpBjD,EAAY,IAAIkD,OAAOzC,OAAOC,KAAKyC,UAE9B,KACDZ,IAAWK,EAAAA,OAAOC,SACpBH,GAAoB,EACtB,IAED,CAACH,IACG,IAAI,KAMTN,EAAAA,EAAAA,MAAA,QACEtD,MAAO,CACLyE,aAAc,WACdC,SAAU,SACVC,UAAW,QAEbtF,MAAO,GAAA+C,OAAGrB,EAAQA,EAAMoB,kBAAoB,IAAO,KAAOtB,EAAQC,SAAA,CAEjEF,GACC4C,EAAAA,EAAAA,KAAA,KAAGoB,KAAM,IAAKC,OAAO,SAASC,QAASlE,EAAWE,SAC/CC,EAAQA,EAAMoB,kBAAoB,KAEnCpB,EACFA,EAAMoB,kBAEN,GAEAtB,GACAyC,EAAAA,EAAAA,MAAAyB,EAAAA,SAAA,CAAAjE,SAAA,EACE0C,EAAAA,EAAAA,KAAA,SACC3C,KAHO,KAMXC,KAEDC,GACAyC,EAAAA,EAAAA,KAACwB,EAAAA,EAAU,CACTC,KAAK,QACLH,QAAUI,KACRC,EAAAA,EAAAA,GAAgBD,GAChBE,UAAUC,UAAUC,UAAUvE,EAAMoB,kBAAkB,EACtDrB,UAEF0C,EAAAA,EAAAA,KAAC+B,EAAAA,EAAW,CAACC,GAAI,CAAEC,OAAQ,OAAQC,MAAO,YARpC,OAahB,C,qbClJA,MAAMC,EAAkB,GAElBC,EAAuBC,IAG3B,IAAIC,GAAoBD,EAAe,IAAIE,MAAM,IAEjD,OADAD,EAAmBA,EAAmB,EAAIE,KAAKC,KAAKH,GAAoB,EACjEA,CAAgB,EAGV,SAASI,EAAkB/G,GAMtC,IANuC,MACzCgH,EAAK,MACLC,GAIDjH,EACC,MAAOkH,EAAgBC,GAAqBrF,EAAAA,SAAuB,IAC7D,WAAEsF,EAAU,WAAEC,GAAeL,EAC7BN,EACJU,IAAcE,EAAAA,EAAAA,GAAW,IAAIV,KAAKQ,GAAaZ,GAG3Ce,EAAa,IAAIX,KAASF,EAEhC5E,EAAAA,WAAgB,KACd,GAAIyF,EAAY,CACdJ,EAAkBV,EAAoBC,IACtC,MAAMc,EAAWC,aAAY,KAC3BN,EAAkBV,EAAoBC,GAAc,GACnD,KACH,MAAO,KACLgB,cAAcF,GACdL,EAAkB,EAAE,CAExB,IACC,CAACI,EAAYb,IAEhB,MAAMiB,GAAcC,EAAAA,EAAAA,OACd,OAAEC,EAAM,UAAEC,IAAcC,EAAAA,EAAAA,GAAYC,EAAAA,GAAa,CACrDC,UAAWA,KACTN,EAAYO,kBAAkB,CAC5BC,SAAU,CAAC,UACXC,YAAa,UAET,EAERC,QAAUC,IACF,IAUJC,EAAO,2BAAAtF,OAA8BgE,GACrC/G,EAAK,GAAA+C,OACTsE,GAAcF,EACV,iBACAA,EAAWmB,SACX,gBACAtB,EACA,MACA,IAEN,OACE7C,EAAAA,EAAAA,KAACoE,EAAAA,EAAM,CACLpI,GAAE,GAAA4C,OAAKsF,GACPrI,MAAOA,EACPmG,GAAI,CAAEqC,EAAG,EAAGpC,OAAQ,OAAQqC,WAAY,SAAUC,SAAU,WAC5DC,WAAS,EACTC,QAAQ,YACRhD,KAAK,QACLiD,MAAM,UACNC,eAzB+BjD,IACjCA,EAAMkD,iBACNlD,EAAMC,kBACN6B,EAAO,CAAExH,GAAI2G,EAAM3G,GAAI+G,WAAYG,EAAa,KAAO,IAAIX,MAAS,EAsBxBjF,SAEzC4F,GACCpD,EAAAA,EAAAA,MAAA,QAAAxC,SAAA,CAAM,aAEJ0C,EAAAA,EAAAA,KAAA,SAAM,IAAE6C,EAAe,UAGzB,WAIR,C,0IC/Ee,SAASgC,GAAqBlJ,GAczC,IAd0C,MAC5CmJ,EAAK,YACLC,EAAW,sBACXC,GAAwB,EAAK,SAC7BC,EAAQ,MACR1H,EAAK,SACLC,GAQD7B,EACC,MAAOuJ,EAAeC,GACpB1H,EAAAA,SAAkD,OAC7CC,EAAOC,GAAYF,EAAAA,SAA6C,KAChEG,EAAUC,GAAeJ,EAAAA,SAC9B,OAEK2H,EAASC,GAAc5H,EAAAA,SAE5B,IAEIK,EAAYL,EAAAA,SAAc,KACvBM,EAAAA,EAAAA,IAAUC,IACP,OAARJ,QAAQ,IAARA,GAAAA,EACIK,QAAQD,GACTE,MAAMC,IACL,GAAIA,EAAOC,QAAQhD,OAAS,GAAK4C,EAAeb,SAAU,CACxD,MAAMkB,EAAsB,IAAIC,OAAOC,KAAKC,OAC1CR,EAAeb,UAEXsB,EAAkC,CACtCC,mBAAoB,GACpBC,kBAAkB,IAADC,OAAMP,EAAoBQ,MAAK,MAAAD,OAAKP,EAAoBS,MAAK,KAC9EC,SAAU,CACR5B,SAAUkB,EACVW,cAAeV,OAAOC,KAAKU,qBAAqBC,YAChDC,SAAU,IAAIb,OAAOC,KAAKa,cAE5BC,SAAS,IAADT,OAAMP,EAAoBQ,MAAK,MAAAD,OAAKP,EAAoBS,MAAK,KACrEQ,MAAO,IAET3B,EAAS,CAACc,GACZ,MACEN,EAAOC,QAAQmB,SACZC,GACEA,EAAKb,mBAAoBc,EAAAA,GAAAA,GACxBD,EAAKd,sBAGXf,EAASQ,EAAOC,QAClB,IAEDsB,OAAOC,IACNhC,EAAS,GAAG,GACZ,GACH,MACF,CAACC,IAEJH,EAAAA,WAAgB,KAEZyH,IACCxH,EAAM4H,MAAM9F,IAAa,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMH,aAA0B,OAAb6F,QAAa,IAAbA,OAAa,EAAbA,EAAe7F,YAExDgG,EAAW,CAACH,KAAkBxH,IAE9B2H,EAAW,IAAI3H,GACjB,GACC,CAACA,EAAOwH,IAEXzH,EAAAA,WAAgB,KACd,MAAMmC,EAAWrC,IAASsC,EAAAA,GAAAA,GAAenC,GACrCH,GAASqC,IAAoB,OAARA,QAAQ,IAARA,OAAQ,EAARA,EAAUP,aAA0B,OAAb6F,QAAa,IAAbA,OAAa,EAAbA,EAAe7F,UAC7D8F,EAAiBvF,GACPrC,IACVI,EAAS,IACTwH,EAAiB,MACnB,GACC,CAACvH,EAAUL,IAoDd,OACEuC,EAAAA,EAAAA,MAAAyB,EAAAA,SAAA,CAAAjE,SAAA,EACE0C,EAAAA,EAAAA,KAACC,EAAAA,QAAO,KAAKC,EAAAA,GAAAA,MAAkBC,OA3BZC,IACrB,MAAMC,GAAqBC,EAAAA,EAAAA,OACpB,CAAEC,IAAuBC,EAAAA,EAAAA,MAoBhC,OAnBA/C,EAAAA,iBAAsB,KAChB2C,IAAWK,EAAAA,OAAOC,SACpBH,GAAoB,GAElBH,IAAWK,EAAAA,OAAOE,SACpBN,EAAmB,CACjBO,SAAU,QACVC,QAAS,wBAGTT,IAAWK,EAAAA,OAAOK,SACpBjD,EAAY,IAAIkD,OAAOzC,OAAOC,KAAKyC,UAE9B,KACDZ,IAAWK,EAAAA,OAAOC,SACpBH,GAAoB,EACtB,IAED,CAACH,IACG,IAAI,KAMTJ,EAAAA,EAAAA,KAACuF,EAAAA,EAAY,CACXN,SAAUA,EACVO,eAAiBC,GACG,kBAAXA,EAAsBA,EAASA,EAAO9G,mBAAqB,GAEpE+G,cAAgBC,GAAMA,EACtBP,QAASA,EACTQ,qBAlDuBA,CAC3BrI,EACAkI,KACQ,OAALlI,QAAK,IAALA,OAAK,EAALA,EAAO8B,aAAmB,OAANoG,QAAM,IAANA,OAAM,EAANA,EAAQpG,UAgD3BwG,cAAY,EACZC,oBAAkB,EAClBd,sBAAuBA,EACvBzH,MAAO2H,EACPa,cAAc,UACdC,SAlEeC,CACnBvE,EACAwE,KAEA,MAAMC,GACJC,EAAAA,GAAAA,GAAwBF,GAC1Bf,EAAiBe,GACjB1I,EAAS2I,EAAe,EA4DpBE,cApDoBC,CACxB5E,EACA6E,EACAC,KAEe,UAAXA,GACF1I,EAAU,CAAE2I,QAASF,GACvB,EA8CIG,YAAcC,IACZ3G,EAAAA,EAAAA,KAAC4G,EAAAA,EAAS,IACJD,EACJnC,WAAS,EACT/C,KAAK,QACLqD,MAAOA,EACPC,YAAaA,IAGjB8B,aAAcA,CAAC9K,EAAO0J,KACpBqB,EAAAA,EAAAA,eAAA,SACW/K,EAAOkJ,UAAU,EAC1B8B,IAAMhL,EAAckJ,UAAYQ,EAAOpG,WAEvCS,EAAAA,EAAAA,MAACkH,EAAAA,GAAI,CAACC,WAAS,EAACC,WAAW,SAAQ5J,SAAA,EACjC0C,EAAAA,EAAAA,KAACgH,EAAAA,GAAI,CAACxH,MAAI,EAACwC,GAAI,CAAEjC,QAAS,OAAQmC,MAAO,IAAK5E,UAC5C0C,EAAAA,EAAAA,KAACmH,EAAAA,EAAc,CAACnF,GAAI,CAAE0C,MAAO,uBAE/B1E,EAAAA,EAAAA,KAACgH,EAAAA,GAAI,CACHxH,MAAI,EACJwC,GAAI,CAAEE,MAAO,oBAAqBkF,SAAU,cAAe9J,UAE3D0C,EAAAA,EAAAA,KAACqH,EAAAA,EAAG,CAACC,UAAU,OAAOtF,GAAI,CAAEuF,WAAY,WAAYjK,SACjDmI,EAAO9G,8BAS1B,C,gDC3HA,MAAM6I,GAA8C,SAAlCC,aAAaC,QAAQ,SAAsB,OAAS,QAChEC,GAAiC,CACrC,CACE3L,GAAI,cACJ4L,WAAY,cACZC,QAAUC,IAAG,CAAQC,KAAK,GAADnJ,OAAKkJ,EAAIE,eAClCC,SAAS,EACTC,gBAAgB,EAChBpD,MAAO,mBAET,CACE9I,GAAI,kBACJ6L,QAAUC,IACR,MAAMK,EAASL,EAAIM,aAAeN,EAAIO,MACtC,IAAIC,EAAO,GACPC,EAAO,GACPC,EAAW,GACXC,EAAY,GAOhB,OANIN,IACFG,EAAI,KAAA1J,QAAQ8J,EAAAA,GAAAA,IAAQP,GAAO,UAAAvJ,OAASuJ,EAAOnM,IAC3CuM,EAAI,GAAA3J,QAAM+J,EAAAA,GAAAA,IAAQR,GAAO,KACzBK,EAAQ,GAAA5J,OAAMuJ,EAAOhE,UACrBsE,EAAS,GAAA7J,OAAY,OAANuJ,QAAM,IAANA,OAAM,EAANA,EAAQS,QAElB,CACLb,MACEjI,EAAAA,EAAAA,MAAA,QAAMtD,MAAO,CAAEuD,QAAS,QAASzC,SAAA,EAC/BwC,EAAAA,EAAAA,MAAA,QACEtD,MAAO,CACLyE,aAAc,WACdC,SAAU,SACVC,UAAW,QACX7D,SAAA,EAEF0C,EAAAA,EAAAA,KAAA,KAAA1C,SAAIiL,KACJvI,EAAAA,EAAAA,KAAA,KAAGoB,KAAMkH,EAAMjH,OAAO,SAASC,QAASK,GAAAA,EAAgBrE,SACrDkL,KAEHxI,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,KACEoB,KAAMqH,EAAS,OAAA7J,OAAU6J,QAAcI,EACvCxH,OAAO,SACPC,QAASK,GAAAA,EAAgBrE,SAExBmL,GAAa,aAGlBzI,EAAAA,EAAAA,KAACwB,EAAAA,EAAU,CACTC,KAAK,QACLH,QAAUI,KACRC,EAAAA,GAAAA,GAAgBD,GAChBE,UAAUC,UAAUC,UAAU0G,EAAW,IAAMC,EAAU,EACzDnL,UAEF0C,EAAAA,EAAAA,KAAC+B,EAAAA,EAAW,CAACC,GAAI,CAAEC,OAAQ,OAAQC,MAAO,eAIhDrG,MAAO0M,EAAO,GAAKC,EAAW,KAAOC,EACtC,EAEHR,SAAS,EACTC,gBAAgB,EAChBpD,MAAO,2BAET,CACE9I,GAAI,YACJ6L,QAAUC,IACR,MAAMU,EAAWV,EAAIS,KAAI,GAAA3J,OAAMkJ,EAAIS,MAAS,GACtCE,EAAYX,EAAIgB,UAAS,GAAAlK,OAAMkJ,EAAIgB,UAAUC,KAAK,OAAU,GAElE,MAAO,CACLhB,MACEjI,EAAAA,EAAAA,MAAA,QAAAxC,SAAA,CACGkL,GACDxI,EAAAA,EAAAA,KAAA,SACCyI,KAGL5M,MAAO2M,EAAW,KAAOC,EAC1B,EAEHR,SAAS,EACTC,gBAAgB,EAChBpD,MAAO,iBAET,CACE9I,GAAI,iBACJ6L,QAAUC,IACR,MAAMkB,EAAgBlB,EAAImB,WAAU,GAAArK,OAAMkJ,EAAImB,YAAe,GACvDC,EAAgBpB,EAAIqB,SAAQ,GAAAvK,OAAMkJ,EAAIqB,UAAa,GACnDV,EAAYX,EAAIsB,QAAO,GAAAxK,OAAMkJ,EAAIsB,SAAY,GAEnD,MAAO,CACLrB,MACEjI,EAAAA,EAAAA,MAAA,QAAAxC,SAAA,EACI0L,EAAgBA,EAAgB,IAAM,IAAE,GAAApK,OACrCsK,EAAgB,IAAMA,EAAgB,IAAM,KACjDlJ,EAAAA,EAAAA,KAAA,SACCyI,KAGL5M,OACGmN,EAAgBA,EAAgB,WAAa,KAC7CE,EAAgBA,EAAgB,SAAW,IAC5C,KACAT,EACA,WACH,EAEHR,SAAS,EACTC,gBAAgB,EAChBpD,MAAO,gBAET,CACE9I,GAAI,SACJ4L,WAAY,SACZC,QAAUC,IACR,MAAM1H,EAAM,GAAAxB,OAAMkJ,EAAI1H,QAChBiJ,EAAM,MACV,OAAQjJ,GACN,IAAK,oBACH,OACEJ,EAAAA,EAAAA,KAACsJ,EAAAA,EAAO,CACN9M,MAAO,CACLyF,OAAQ,OACRC,MAAO,OACPwC,MAAqB,SAAd8C,GAAuB+B,EAAAA,EAAK,KAAOA,EAAAA,EAAK,QAOvD,IAAK,WACH,OACEvJ,EAAAA,EAAAA,KAACwJ,EAAAA,EAAS,CACRhN,MAAO,CACLyF,OAAQ,OACRC,MAAO,OACPwC,MAAqB,SAAd8C,GAAuB+B,EAAAA,EAAK,KAAOA,EAAAA,EAAK,QAOvD,IAAK,YACH,OACEvJ,EAAAA,EAAAA,KAACyJ,EAAAA,EAAM,CACLzH,GAAI,CACFC,OAAQ,OACRC,MAAO,OACPwH,QAASC,EAAAA,EAAM,KACfC,OAAQ,QACRtM,SACH,MAIL,IAAK,gBACH,OACE0C,EAAAA,EAAAA,KAACyJ,EAAAA,EAAM,CACLzH,GAAI,CACFC,OAAQ,OACRC,MAAO,OACPwH,QAASH,EAAAA,EAAK,KACdK,OAAQ,QACRtM,SACH,MAIL,QACE,OAAO8C,EAEZ,EAzDW,GA2DZ,MAAO,CACL2H,MAAM/H,EAAAA,EAAAA,KAAA,QAAA1C,SAAO+L,IACbxN,MAAOuE,EACR,EAEH6H,SAAS,EACTC,gBAAgB,EAChBpD,MAAO,UAET,CACE9I,GAAI,mBACJ6L,QAAUC,IACR,GAAO,OAAHA,QAAG,IAAHA,GAAAA,EAAK+B,qBAAsB,CAC7B,MAAMpB,EAAS,GAAA7J,OACbkJ,EAAIgC,eACAC,GAAAA,EAAkBC,OAAO,IAAIzH,KAAKuF,EAAIgC,iBACtC,IAGN,MAAO,CACL/B,MACE/H,EAAAA,EAAAA,KAAC9C,EAAAA,EAAe,CACdC,SAAU2K,EAAI+B,qBACdxM,QAASoL,IAIjB,CACE,MAAO,CAAEV,KAAM,GACjB,EAEFE,SAAS,EACTC,gBAAgB,EAChBpD,MAAO,gCAET,CACE9I,GAAI,gBACJ6L,QAAUC,IAAG,CACXC,KAAK,GAADnJ,OAAKkJ,EAAImC,aAAenC,EAAImC,aAAaC,QAAQ,GAAK,MAE5DjC,SAAS,EACTC,gBAAgB,EAChBpD,MAAO,oBAET,CACE9I,GAAI,WACJ6L,QAASA,CAACC,EAAKqC,KACb,MAAM/M,EAAcsE,IAClBA,EAAMkD,kBACNjD,EAAAA,GAAAA,GAAgBD,GAChByI,EAAW,CAACrC,GAAK,EAGnB,GAAO,OAAHA,QAAG,IAAHA,GAAAA,EAAKsC,aAAc,CACrB,MAAM3B,EAAS,GAAA7J,OACbkJ,EAAIuC,kBACAN,GAAAA,EAAkBC,OAAO,IAAIzH,KAAKuF,EAAIuC,oBACtC,IAGN,MAAO,CACLtC,MACE/H,EAAAA,EAAAA,KAAC9C,EAAAA,EAAe,CACdC,SAAU2K,EAAIsC,aACdhN,WAAYA,EACZC,QAASoL,IAIjB,CACE,MAAO,CAAEV,KAAM,GACjB,EAEFE,SAAS,EACTC,gBAAgB,EAChBpD,MAAO,8BAyBLwF,IAAkBC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAAkB5O,IAAA,IAAC,MAAE8O,GAAO9O,EAAA,MAAM,CACxD+O,gBAAiBD,EAAME,QAAQC,WAAWC,QAC3C,IAEKC,IAAkBP,EAAAA,EAAAA,IAAOQ,EAAAA,EAAPR,EAAkBS,IAAA,IAAC,MAAEP,GAAOO,EAAA,MAAM,CACxDC,SAAU,QACVC,WAAY,MACZC,cAAe,MACfC,WAAY,SACZnK,aAAc,WACdC,SAAU,SACX,IAED,SAASmK,GAAkBtP,GACzB,MAAM,iBACJuP,EAAgB,MAChBC,EAAK,QACLC,EAAO,YACPC,EAAW,SACXC,EAAQ,cACRC,GACE5P,EAMJ,OACEiE,EAAAA,EAAAA,KAACsK,GAAe,CAAAhN,UACdwC,EAAAA,EAAAA,MAAC8L,EAAAA,EAAQ,CAAAtO,SAAA,EACP0C,EAAAA,EAAAA,KAAC8K,GAAe,CAACe,MAAM,SAASC,QAAQ,WAAUxO,SAAC,YAGlDqK,GAAUoE,KAAKC,IACdhM,SAAAA,EAAAA,KAAC8K,GAAe,CAEde,MAAOG,EAAS/D,QAAU,QAAU,SACpC6D,QAASE,EAAS9D,eAAiB,OAAS,SAC5C+D,cAAeT,IAAYQ,EAAShQ,IAAKuP,EAAcjO,UAEvDwC,EAAAA,EAAAA,MAACoM,EAAAA,EAAc,CACbC,OAAQH,EAASpE,YAAc4D,IAAYQ,EAASpE,WACpDwE,cAAeJ,EAASpE,WACxByE,UAAWb,IAAYQ,EAASpE,WAAa2D,EAAQ,MACrDjK,QACE0K,EAASpE,YAtBpB0E,EAuBiCN,EAASpE,WAvBflG,IAC1BiK,EAAcjK,EAAO4K,EAAS,GAuBhB,KACQ,EAEbhP,SAAA,CAEA0O,EAASlH,MACTkH,EAASpE,YAAc4D,IAAYQ,EAASpE,YAC3C5H,EAAAA,EAAAA,KAACqH,EAAAA,EAAG,CAACC,UAAU,OAAOtF,GAAIuK,EAAAA,EAAejP,SAC5B,SAAViO,EAAmB,oBAAsB,qBAE1C,SAtBDS,EAAShQ,IAZrBsQ,KAqCI,QAIT,CASA,SAASE,GAAqBzQ,GAC5B,MAAM,SAAE6D,EAAQ,eAAE6M,GAAmB1Q,GAE9B2Q,EAAeC,GAAoBlP,EAAAA,cAExCoL,IACK+D,EAAYC,GAAiBpP,EAAAA,SAAe,KAC5CqP,EAAsBC,GAA2BtP,EAAAA,SAErD,CAAC,IACG2H,EAASC,GAAc5H,EAAAA,SAAoC,KAC3DuP,EAAeC,GAAoBxP,EAAAA,SAA4B,OAC/DyP,EAAaC,GAAkB1P,EAAAA,SAA4B,OAC3D2P,EAAiBC,GAAoB5P,EAAAA,UAAwB,IAC7D6P,EAAeC,GAAkB9P,EAAAA,UAAwB,IACzD+P,EAAYC,GAAiBhQ,EAAAA,UAAwB,IACrDiQ,EAAaC,GAAkBlQ,EAAAA,SAA8B,CAClE,eAEKmQ,EAAeC,GAAoBpQ,EAAAA,SAAuB,MAC1DqQ,EAAmBC,GACxBtQ,EAAAA,UAAwB,GAIpB6F,IAFW0K,EAAAA,EAAAA,OACAC,EAAAA,EAAAA,OACG1K,EAAAA,EAAAA,OAEdlD,GAAqBC,EAAAA,EAAAA,OAErB,OAAEkD,EAAM,UAAEC,KAAcC,EAAAA,EAAAA,GAAYwK,EAAAA,GAAa,CACrDtK,UAAWA,KACTvD,EAAmB,CACjBO,SAAU,UACVC,QAAS,YAEXyC,EAAYO,kBAAkB,CAAC,UAAU,EAE3CG,QAAUC,IACR5D,EAAmB,CACjBO,SAAU,QACVC,QAASoD,aAAiBkK,MAAQlK,EAAMpD,QAAUuN,KAAKC,UAAUpK,IACjE,KASE8D,MAAM,MAAErK,IAAU,CAAEA,MAAO,GAAI4Q,MAAO,KAL5B7Q,EAAAA,SAAc,KACvBM,EAAAA,EAAAA,IAAUwQ,IACfxB,EAAwB,CAAEwB,UAAS,GAClC,MACF,KACmDC,EAAAA,EAAAA,GAKpD,CACA1K,SAAU,CAAC,YAAa,EAAG,GAAI,OAAQ,MAAOgJ,GAC9C2B,SAASC,EAAAA,GAAAA,IAAgBC,EAAAA,IAAgB,GACzCC,kBAAkB,EAClBC,OAAO,KAmEHC,GAAmBA,KAkBlB1B,GAAoBE,IACvBb,GAAgBsC,IACd,MAAMtQ,EAAM,IAAKsQ,GAajB,OANI/B,IACFvO,EAAIuQ,eAAiBhC,GAEnBE,IACFzO,EAAIwQ,gBAAkB/B,GAEjBzO,CAAG,IAEZsP,GAAqB,GACvB,EAwBImB,GAAoBA,KACxBzB,GAAc,GACd0B,IAAoB,EAEhBA,GAAqBA,KACrBzB,EAAYtS,QAAUsS,EAAYtS,SAAWgU,GAAAA,GAAchU,QAC7DqR,GAAgBsC,IAAI,IAAWA,EAAM3O,OAAQsN,MAC7CK,GAAqB,KAErBtB,GAAgBsC,IACd,MAAQ3O,OAAQiP,KAAMC,GAASP,EAC/B,MAAO,IAAKO,EAAM,IAEpBvB,GAAqB,GACvB,EAiFF,OACEjO,EAAAA,EAAAA,MAACyP,EAAAA,EAAO,CACNvN,GAAI,CACFd,SAAU,SACVsO,GAAI,CAAEC,GAAI,GACVC,GAAI,CAAEC,GAAI,EAAGF,GAAI,MACb7P,EAASxE,OAAS,GAAK,CACzBsO,QAAUe,IACRmF,EAAAA,EAAAA,IACEnF,EAAME,QAAQkF,QAAQC,KACtBrF,EAAME,QAAQoF,OAAOC,oBAG3B1S,SAAA,CAEDsC,EAASxE,OAAS,GACjB0E,EAAAA,EAAAA,MAACmQ,EAAAA,EAAU,CACTjO,GAAI,CAAEkO,KAAM,YACZxL,MAAM,UACND,QAAQ,YACR6C,UAAU,MAAKhK,SAAA,CAEdsC,EAASxE,OAAO,gBAGnB4E,EAAAA,EAAAA,KAACiQ,EAAAA,EAAU,CACTjO,GAAI,CACFkO,KAAM,WACN9E,WAAY,SACZnK,aAAc,WACdC,SAAU,UAEZuD,QAAQ,KACRzI,GAAG,aACHsL,UAAU,MAAKhK,SAChB,mBAIH0C,EAAAA,EAAAA,KAACqH,EAAAA,EAAG,CACFC,UAAU,MACVtF,GAAI,CACF,uBAAwB,CAAEqC,EAAG,EAAGnC,MAAO,UACvC5E,UAEF0C,EAAAA,EAAAA,KAAC6E,GAAqB,CACpBC,MAAO,2BACPvH,MAAOmP,EACPlP,SA5PsB0I,IAC5ByG,EAAiBzG,GACbA,GACFuG,GAAgBsC,IAAI,IACfA,EACH3E,aAAclE,EAAS6C,KAAK,KAC5BoH,SAAUvC,MAEZG,GAAqB,KAErBlB,EAAc,IACdJ,GAAgBsC,IACd,MACE3E,aAAcgG,EACdD,SAAUE,KACPf,GACDP,EACJ,OAAOO,CAAI,IAEbvB,GAAqB,GACvB,OA2OE/N,EAAAA,EAAAA,KAACqH,EAAAA,EAAG,CACFC,UAAU,MACVtF,GAAI,CACF,uBAAwB,CAAEqC,EAAG,EAAGnC,MAAO,UACvC5E,UAEF0C,EAAAA,EAAAA,KAACsQ,EAAAA,EAAc,CACbxL,MAAM,wBACNyL,MAAM,EACNC,aAAa,EACbC,YAAavD,QAA4BrE,EACzC6H,0CAA0C,EAC1CC,cAAe,CACbC,MAAOC,EAAAA,GACPC,QAASD,EAAAA,GACTE,QAASF,EAAAA,IAEXG,UAAW,CACTC,UAAW,CACTzM,WAAW,EACX/C,KAAM,QACNzF,GAAI,gBACJkV,KAAM,wBACNC,OAAQrC,KAGZvR,MAAOyP,EACPhH,SA/P2BzI,IACjC0P,EAAiB1P,GACjBwQ,GAAqB,EAAK,EA8PpBqD,QAAStC,GACT9K,QAzPuBC,IAE3BoJ,IADEpJ,EAIJ,OAuPEjE,EAAAA,EAAAA,KAACqH,EAAAA,EAAG,CACFC,UAAU,MACVtF,GAAI,CACF,uBAAwB,CAAEqC,EAAG,EAAGnC,MAAO,UACvC5E,UAEF0C,EAAAA,EAAAA,KAACsQ,EAAAA,EAAc,CACbxL,MAAM,sBACNyL,MAAM,EACNC,aAAa,EACba,YAAarE,QAAgCnE,EAC7C6H,0CAA0C,EAC1CC,cAAe,CACbC,MAAOC,EAAAA,GACPC,QAASD,EAAAA,GACTE,QAASF,EAAAA,IAEXG,UAAW,CACTC,UAAW,CACTzM,WAAW,EACX/C,KAAM,QACNzF,GAAI,cACJkV,KAAM,sBACNC,OAAQrC,KAGZvR,MAAO2P,EACPlH,SA3RyBzI,IAC/B4P,EAAe5P,GACfwQ,GAAqB,EAAK,EA0RpBqD,QAAStC,GACT9K,QAlRqBC,IAEzBsJ,IADEtJ,EAIJ,OAgREjE,EAAAA,EAAAA,KAACqH,EAAAA,EAAG,CACFC,UAAU,MACVtF,GAAI,CACF,uBAAwB,CAAEqC,EAAG,EAAGnC,MAAO,UACvC5E,UAEF0C,EAAAA,EAAAA,KAAC4G,EAAAA,EAAS,CACR0K,QAAM,EACNC,YAAa,CACXC,UAAU,EACVC,KAAMjE,EAGNkE,YAAc9R,GAA4BA,EAASmJ,KAAK,MACxD4I,OAnOeC,KACvBnE,GAAc,EAAK,EAmOX2D,QAASlC,IAEXpK,MAAM,gBACNvH,MAAOmQ,EACP1H,SA1PNtE,IAEAiM,EAAejM,EAAML,OAAO9D,OAC5BwQ,GAAqB,EAAK,EAwPpB8D,eAtPmBnQ,IACP,UAAdA,EAAMqF,OAGVpF,EAAAA,GAAAA,GAAgBD,GAChBwN,KAAmB,EAkPb4C,iBAhPqBpQ,IACT,UAAdA,EAAMqF,MAGVpF,EAAAA,GAAAA,GAAgBD,EAAM,EA6OhByP,OAAQhC,GACR1N,KAAK,QACL+C,WAAS,EACT3I,MAAO6R,EAAY3E,KAAK,MAAMzL,SAE7B8R,GAAAA,GAAcrD,KAAK3L,IAClBN,EAAAA,EAAAA,MAACiS,EAAAA,EAAQ,CAAcxU,MAAO6C,EAAO9C,SAAA,EACnC0C,EAAAA,EAAAA,KAACgS,EAAAA,EAAQ,CACPC,QAASvE,EAAYwE,QAAQ9R,IAA0B,EACvDpE,GAAIoE,KAENJ,EAAAA,EAAAA,KAACmS,EAAAA,EAAY,CAACtC,QAASzP,MALVA,UAUrBJ,EAAAA,EAAAA,KAACqH,EAAAA,EAAG,CACFC,UAAU,MACVtF,GAAI,CACF,uBAAwB,CAAEqC,EAAG,EAAGnC,MAAO,UACvC5E,UAEF0C,EAAAA,EAAAA,KAAC4G,EAAAA,EAAS,CACR0K,QAAM,EACNxM,MAAM,kBACNvH,MAAOqQ,EACP5H,SAjPNtE,IAEI0Q,OAAOC,UAAUD,OAAO1Q,EAAML,OAAO9D,UACvCsQ,EAAiBuE,OAAO1Q,EAAML,OAAO9D,QACjCmP,IACFD,GAAgBsC,IAAI,IACfA,EACHoB,SAAUiC,OAAO1Q,EAAML,OAAO9D,WAEhCwQ,GAAqB,IAGzB,EAsOMtM,KAAK,QACL+C,WAAS,EAAAlH,SAERgV,MAAMC,KACL,CAAEnX,OAAQ,KACV,CAACiU,EAAGzM,IAAU,GAAa,GAARA,IACnBmJ,KAAKtG,IACLzF,EAAAA,EAAAA,KAAC+R,EAAAA,EAAQ,CAAcxU,MAAOkI,EAAOnI,SAClCmI,GADYA,UAMrBzF,EAAAA,EAAAA,KAACwS,EAAAA,EAAO,CAAC3W,MAAM,cAAayB,SACzBwQ,KAECpB,GACAM,GACAE,GACwB,IAAvBQ,EAAYtS,QACXsS,EAAYtS,SAAWgU,GAAAA,GAAchU,SAEvC4E,EAAAA,EAAAA,KAAA,QAAA1C,UACE0C,EAAAA,EAAAA,KAACwB,EAAAA,EAAU,CACTyD,WACKyH,IAAkBkB,MAEjBZ,GACAE,GACwB,IAAvBQ,EAAYtS,QACXsS,EAAYtS,SAAWgU,GAAAA,GAAchU,SAE3CgS,GACAE,EAEFhM,QA9PcmR,KACxB,MAAMC,EAAmC,CAAC,EACtChG,IACFgG,EAAYtI,aAAesC,EAAc3D,KAAK,KAC9C2J,EAAYvC,SAAWvC,GAGA,IAAvBF,EAAYtS,QACZsS,EAAYtS,SAAWgU,GAAAA,GAAchU,SAErCsX,EAAYtS,OAASsN,GAsBvBgF,EAAY1D,eAAiBhC,EAC7B0F,EAAYzD,gBAAkB/B,EAE9BT,EAAeiG,GACf3E,GAAqB,EAAM,EA0NUzQ,UAE3B0C,EAAAA,EAAAA,KAAC2S,EAAAA,EAAc,SAInB3S,EAAAA,EAAAA,KAAA,QAAA1C,UACE0C,EAAAA,EAAAA,KAACwB,EAAAA,EAAU,CAACF,QA9QIsR,KACxBjG,OAAiB9D,GACjBoE,EAAiB,MACjBE,EAAe,MACfQ,EAAe,IAAIyB,GAAAA,KACnBvB,EAAiB,KACjBpB,EAAe,CAAC,GAChBsB,GAAqB,EAAM,EAuQoBzQ,UACrC0C,EAAAA,EAAAA,KAAC6S,EAAAA,EAAiB,WAK1B7S,EAAAA,EAAAA,KAAC8S,EAAAA,EAAM,CAACC,QAAStP,OAGvB,CAEe,SAASuP,KACtB,MAAOzH,EAAO0H,GAAYxV,EAAAA,cAAkCoL,IACrD2C,EAAS0H,GAAczV,EAAAA,cAC5BoL,IAEKjJ,EAAUuT,GAAe1V,EAAAA,SAAkC,KAC3D2V,EAAMC,GAAW5V,EAAAA,SAAuB,IACxC6V,EAAaC,GAAkB9V,EAAAA,SAAuB,KACtDiV,EAAajG,GAAkBhP,EAAAA,SAAoC,CACxE2C,OAAQ,CAAC,eAELoT,EAAoB/V,EAAAA,OAAa,MACjCN,GAAW6Q,EAAAA,EAAAA,MACXyF,GAAWxF,EAAAA,EAAAA,MACX5N,GAAqBC,EAAAA,EAAAA,OACpB,CAAE6J,IAAcuJ,EAAAA,EAAAA,OAEjB,UACJjQ,EAAS,WACTkQ,EACA5L,MAAM,MAAErK,EAAK,MAAE4Q,GAAU,CAAE5Q,MAAO,GAAI4Q,MAAO,KAC3CE,EAAAA,EAAAA,GAAS,CACX1K,SAAU,CAAC,SAAUsP,EAAME,EAAa9H,EAASD,EAAOmH,GACxDjE,QAASmF,EAAAA,GACThF,kBAAkB,EAClBC,OAAO,EACP7K,QAAUC,IACR5D,EAAmB,CACjBO,SAAU,QACVC,QAASoD,aAAiBkK,MAAQlK,EAAMpD,QAAUuN,KAAKC,UAAUpK,IACjE,IAGA4P,EAAOnW,GAAS,GAEtBD,EAAAA,WAAgB,KACd,GAAI+V,EAAkBM,QAAS,CACXN,EAAkBM,QAC1BC,SAAS,CACjBC,IAAK,EACLC,KAAM,EACNC,SAAU,UAEd,IACC,CAACL,IAEJpW,EAAAA,WAAgB,KACd,MAAM0W,EAAwB,GAC9BvU,EAASL,SAAS6U,IACIP,EAAKvO,MAAMwC,GAAQA,EAAI9L,KAAOoY,KAEhDD,EAAYE,KAAKD,EACnB,IAEFjB,EAAYgB,EAAY,GACvB,CAACN,IAuEJ,OACE/T,EAAAA,EAAAA,MAACuH,EAAAA,EAAG,CAACrF,GAAI,CAAEE,MAAO,OAAQD,OAAQ,QAAS3E,SAAA,EACzCwC,EAAAA,EAAAA,MAACwU,EAAAA,EAAK,CAACtS,GAAI,CAAEE,MAAO,OAAQD,OAAQ,OAAQyI,gBAAiB,SAAUpN,SAAA,EACrE0C,EAAAA,EAAAA,KAACwM,GAAoB,CACnB5M,SAAUA,EACV6M,eAAiB8H,IACf9H,EAAe8H,GACflB,EAAQ,EAAE,KAGdrT,EAAAA,EAAAA,KAACwU,EAAAA,EAAc,CACbrY,IAAKqX,EACLxR,GAAI,CAAEC,OAAQ,sBAAuB3E,UAErCwC,EAAAA,EAAAA,MAAC2U,EAAAA,EAAK,CACJzS,GAAI,CAAE0S,SAAU,KAChB,kBAAgB,aAChBjT,KAAK,QACLkT,cAAY,EAAArX,SAAA,EAEZ0C,EAAAA,EAAAA,KAACqL,GAAiB,CAChBI,YAAa7L,EAASxE,OACtBmQ,MAAOA,EACPC,QAASA,EACTF,iBA9EkB5J,IAC5B,GAAIA,EAAML,OAAO4Q,QAAjB,CACE,MAAMkC,EAAcN,EAAK9H,KAAK9Q,GAAaA,EAAEe,KAC7CmX,EAAYgB,EAEd,MACAhB,EAAY,GAAG,EAyELxH,cA9FciJ,CACxBlT,EACA4K,KAEA,MAAMuI,EAAQrJ,IAAYc,GAAsB,QAAVf,EACvBC,IAAYc,GAAsB,SAAVf,GAErC0H,OAASpK,GACTqK,OAAWrK,KAEXoK,EAAS4B,EAAQ,OAAS,OAC1B3B,EAAW5G,GACb,EAmFUZ,SAAUmI,EAAKzY,UAEjB4E,EAAAA,EAAAA,KAAC8U,EAAAA,EAAS,CAAAxX,SACPuW,EAAK9H,KAAI,CAACjE,EAAKlF,KACd,MAAMmS,GAhCA7D,EAgC4B,GAADtS,OAAIkJ,EAAI9L,KAhCU,IAA5B4D,EAASsS,QAAQhB,IAAlCA,MAiCN,OACEpR,EAAAA,EAAAA,MAAC8L,EAAAA,EAAQ,CACPoJ,OAAK,EACLC,cAAgBvT,IA3EhC+R,EAAS,UAAD7U,OA2EqDkJ,EA3ErC9L,IAAM,CAC5BkZ,SAAU,OACVC,MAAO,CAAE5C,KAAMpV,GACfiY,SAAS,GAwEuD,EAClDC,KAAK,WACL,eAAcN,EACdO,UAAW,EAEX1V,SAAUmV,EACV/S,GAAI,CAAEuT,OAAQ,WAAYjY,SAAA,EAE1B0C,EAAAA,EAAAA,KAAC8K,GAAe,CAACgB,QAAQ,WAAUxO,UACjC0C,EAAAA,EAAAA,KAAC0C,EAAkB,CAACC,MAAOmF,EAAKlF,MAAOA,MAExC+E,GAAUoE,KAAKyJ,IACd,MAAMC,EAAWD,EAAK3N,QAAQC,EAAKqC,GACnC,OACEnK,EAAAA,EAAAA,KAAC8K,GAAe,CAEdjP,MAAO4Z,EAAS5Z,MAChBgQ,MAAO2J,EAAKvN,QAAU,QAAU,SAAS3K,SAExCmY,EAAS1N,MAJLyN,EAAKxZ,GAKM,MAhBjB8L,EAAI9L,GAmBA,YAMrBgE,EAAAA,EAAAA,KAAC0V,EAAAA,EAAe,CACdC,mBAAoB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,IAC5CrO,UAAU,MACVsO,MAAOtH,EACPgF,YAAaA,EACbF,KAAMA,EACNyC,aAlFiBC,CAACpU,EAAgBqU,KACxC1C,EAAQ0C,EAAQ,EAkFVC,oBA9ENtU,IAEA6R,EAAe0C,SAASvU,EAAML,OAAO9D,MAAO,KAC5C8V,EAAQ,EAAE,QA8ERrT,EAAAA,EAAAA,KAAC8S,EAAAA,EAAM,CAACC,QAAStP,GAAakQ,MAGpC,C,+ICtmCO,MAAMuC,EAAiB,CAAC,KAAM,KAAM,KAAM,MAUpCC,EAAY,CAAC,QAAS,eAEtBC,EAAgB,CAC3B,kBACA,uBACA,6BACA,kCACA,6BACA,kCACA,SAGWC,EAAa,CACxB,YACA,aACA,YACA,mBACA,iBACA,UACA,cAGWjH,EAAgB,CAC3B,YACA,gBACA,oBACA,YAGWkH,EAAoB,CAAC,MAAO,MAE5BC,EAAoB,CAC/B,SACA,MACA,OACA,sBAGWC,EAAkB,CAC7B,qBACA,WACA,YACA,qBACA,UACA,mBACA,qBACA,cACA,MACA,QACA,SACA,aACA,WACA,OACA,oBACA,cACA,SACA,UAGWC,EAAe,CAC1B,YACA,UACA,cACA,OACA,YACA,aAGWC,EAAgB,CAAC,MAAO,KAAM,OAE9BC,EAAgB,CAAC,KAAM,KAAM,IAAK,MAiexC,IAAKC,EAAQ,SAARA,GAAQ,OAARA,EAAQ,gBAARA,EAAQ,oBAARA,CAAQ,MAKRC,EAAa,SAAbA,GAAa,OAAbA,EAAa,YAAbA,EAAa,YAAbA,EAAa,YAAbA,EAAa,gBAAbA,CAAa,K,kCCzjBlB,MAAM9M,EAAoB+M,KAAKC,eAAe,QAAS,CAC5DC,KAAM,UACNC,MAAO,UACPC,IAAK,UACLC,KAAM,UACNC,OAAQ,UACRC,OAAQ,UACRC,QAAQ,G,iBCLH,SAAS3V,EAAgBzG,GAC9BA,EAAEyG,iBACJ,C,qCCDI4V,EAAyBC,EAAQ,MAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,KAChDG,EAAcH,EAAQ,KACXC,EAAQ,GAAU,EAAIC,EAAe7M,UAAuB,EAAI8M,EAAYC,KAAK,OAAQ,CACtGlb,EAAG,8HACD,c,uFCeG,MAAMmb,UAKHC,EAAAA,EAeRC,WAAAA,CACEC,EACA5S,GAEA6S,QAEAC,KAAKF,OAASA,EACdE,KAAK7S,WAAWD,GAChB8S,KAAKC,cACLD,KAAKE,cACN,CAESD,WAAAA,GACRD,KAAK1U,OAAS0U,KAAK1U,OAAOxI,KAAKkd,MAC/BA,KAAKG,MAAQH,KAAKG,MAAMrd,KAAKkd,KAC9B,CAED7S,UAAAA,CACED,GACA,IAAAkT,EACA,MAAMC,EAAcL,KAAK9S,QACzB8S,KAAK9S,QAAU8S,KAAKF,OAAOQ,uBAAuBpT,IAC7CqT,EAAAA,EAAAA,IAAoBF,EAAaL,KAAK9S,UACzC8S,KAAKF,OAAOU,mBAAmBC,OAAO,CACpCpQ,KAAM,yBACNqQ,SAAUV,KAAKW,gBACfC,SAAUZ,OAGd,OAAAI,EAAAJ,KAAKW,kBAALP,EAAsBjT,WAAW6S,KAAK9S,QACvC,CAES2T,aAAAA,GACkB,IAAAC,EAArBd,KAAKe,iBACR,OAAAD,EAAAd,KAAKW,kBAALG,EAAsBE,eAAehB,MAExC,CAEDiB,gBAAAA,CAAiBpJ,GACfmI,KAAKE,eAGL,MAAMgB,EAA+B,CACnCC,WAAW,GAGO,YAAhBtJ,EAAOxH,KACT6Q,EAAcxV,WAAY,EACD,UAAhBmM,EAAOxH,OAChB6Q,EAAcpV,SAAU,GAG1BkU,KAAKS,OAAOS,EACb,CAEDE,gBAAAA,GAME,OAAOpB,KAAKqB,aACb,CAEDlB,KAAAA,GACEH,KAAKW,qBAAkBhQ,EACvBqP,KAAKE,eACLF,KAAKS,OAAO,CAAEU,WAAW,GAC1B,CAED7V,MAAAA,CACEgW,EACApU,GAgBA,OAdA8S,KAAKuB,cAAgBrU,EAEjB8S,KAAKW,iBACPX,KAAKW,gBAAgBK,eAAehB,MAGtCA,KAAKW,gBAAkBX,KAAKF,OAAOU,mBAAmBgB,MAAMxB,KAAKF,OAAQ,IACpEE,KAAK9S,QACRoU,UACuB,qBAAdA,EAA4BA,EAAYtB,KAAK9S,QAAQoU,YAGhEtB,KAAKW,gBAAgBc,YAAYzB,MAE1BA,KAAKW,gBAAgBe,SAC7B,CAEOxB,YAAAA,GACN,MAAMjD,EAAQ+C,KAAKW,gBACfX,KAAKW,gBAAgB1D,OACrB0E,EAAAA,EAAAA,KAEE1b,EAKF,IACCgX,EACH1R,UAA4B,YAAjB0R,EAAM/U,OACjB0Z,UAA4B,YAAjB3E,EAAM/U,OACjB2Z,QAA0B,UAAjB5E,EAAM/U,OACf4Z,OAAyB,SAAjB7E,EAAM/U,OACdoD,OAAQ0U,KAAK1U,OACb6U,MAAOH,KAAKG,OAGdH,KAAKqB,cAAgBpb,CAMtB,CAEOwa,MAAAA,CAAOvT,GACb6U,EAAAA,EAAcC,OAAM,KAGO,IAAAC,EAAAC,EAAAC,EAAAC,EADzB,GAAIpC,KAAKuB,eAAiBvB,KAAKe,eAC7B,GAAI7T,EAAQxB,UAER,OADFuW,GAAAC,EAAAlC,KAAKuB,eAAc7V,YACjBuW,EAAA3e,KAAA4e,EAAAlC,KAAKqB,cAAcxR,KACnBmQ,KAAKqB,cAAcC,UACnBtB,KAAKqB,cAAcgB,SAErB,OAAAF,GAAAC,EAAApC,KAAKuB,eAAce,YAAnBH,EAAA7e,KAAA8e,EACEpC,KAAKqB,cAAcxR,KACnB,KACAmQ,KAAKqB,cAAcC,UACnBtB,KAAKqB,cAAcgB,cAEhB,GAAInV,EAAQpB,QAAS,KAAAyW,EAAAC,EAAAC,EAAAC,EAExB,OADFH,GAAAC,EAAAxC,KAAKuB,eAAczV,UACjByW,EAAAjf,KAAAkf,EAAAxC,KAAKqB,cAActV,MACnBiU,KAAKqB,cAAcC,UACnBtB,KAAKqB,cAAcgB,SAErB,OAAAI,GAAAC,EAAA1C,KAAKuB,eAAce,YAAnBG,EAAAnf,KAAAof,OACE/R,EACAqP,KAAKqB,cAActV,MACnBiU,KAAKqB,cAAcC,UACnBtB,KAAKqB,cAAcgB,QAEtB,CAICnV,EAAQiU,WACVnB,KAAKmB,UAAU9Z,SAAQ5D,IAAkB,IAAjB,SAAEkf,GAAHlf,EACrBkf,EAAS3C,KAAKqB,cAAd,GAEH,GAEJ,E,kCC3II,SAAA7V,EAAAoX,EAAAC,EAAAC,G,yDAkBLlC,GAAArb,EAAAA,UAAA,QAAAoa,EAAAvU,EAAA8B,K,oCAUC,CAAA0T,EAAA1T,IAED,MAAAjH,GAAA8c,EAAAA,EAAAA,GAAAxd,EAAAA,aAAAyd,GAAApC,EAAAqC,UAAAlB,EAAAA,EAAAmB,WAAAF,KAAA,CAAApC,KAAA,IAAAA,EAAAQ,qBAAA,IAAAR,EAAAQ,qB,kDAeG,CAAAR,IAIH,GAAA3a,EAAA8F,QAAAoX,EAAAA,EAAAA,GAAAvC,EAAA1T,QAAAkW,iBAAA,CAAAnd,EAAA8F,Q,wDAQD,CAGD,SAAAsX,IAAA,C","sources":["icons/cat.svg","icons/truck.svg","components/LocationForGrid.tsx","trucksNearby/reserveTruckButton.tsx","components/SearchLocationForGrid.tsx","trucksNearby/trucksNearby.tsx","utils/dataTypes.ts","utils/dateTimeFormatters.ts","utils/stopPropagation.ts","../node_modules/@mui/icons-material/ContentCopy.js","../node_modules/@tanstack/query-core/src/mutationObserver.ts","../node_modules/@tanstack/react-query/src/useMutation.ts"],"sourcesContent":["function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgCat(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    \"data-name\": \"Layer 1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 128 128\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 64,\n    cy: 75,\n    r: 45,\n    fill: \"none\",\n    strokeWidth: 10,\n    style: {\n      stroke: \"currentcolor\"\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 96.94 40.17 C 96.94 23.36 82.19 9.73 64 9.73 C 45.81 9.73 31.06 23.36 31.06 40.17\",\n    style: {\n      paintOrder: \"fill\",\n      strokeWidth: 6,\n      stroke: \"currentcolor\",\n      fill: \"rgba(255, 255, 255, 0)\"\n    }\n  }), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"39.98 19.5 37.64 5.17 50.61 14.17\",\n    style: {\n      stroke: \"currentcolor\",\n      strokeWidth: 4,\n      fill: \"rgba(0, 0, 0, 0)\"\n    }\n  }), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"87.05 19.5 89.39 5.17 76.42 14.17\",\n    style: {\n      stroke: \"currentcolor\",\n      strokeWidth: 4,\n      fill: \"rgba(0, 0, 0, 0)\"\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 29.27 108.3 C 28.05 113.07 26.83 117.84 25.62 122.61\",\n    style: {\n      stroke: \"currentcolor\",\n      paintOrder: \"stroke\",\n      strokeLinecap: \"round\",\n      strokeWidth: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 25.72 122.61 C 38.31 122.83 50.91 123.05 63.5 123.28\",\n    style: {\n      stroke: \"currentcolor\",\n      strokeWidth: 4,\n      strokeLinecap: \"round\"\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 98.96 108.3 C 100.18 113.07 101.4 117.84 102.61 122.61\",\n    style: {\n      strokeLinecap: \"round\",\n      strokeWidth: 4,\n      stroke: \"currentcolor\",\n      paintOrder: \"stroke\"\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 102.5 122.61 C 88.91 122.85 76.32 123.07 64.72 123.28\",\n    style: {\n      strokeLinecap: \"round\",\n      stroke: \"currentcolor\",\n      strokeWidth: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"63 39.5 63 79.5 79.91 93.83\",\n    style: {\n      stroke: \"currentcolor\",\n      strokeWidth: 6,\n      paintOrder: \"fill\",\n      strokeLinecap: \"round\",\n      fill: \"rgba(255, 255, 255, 0)\"\n    }\n  }));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgCat);\nexport default __webpack_public_path__ + \"static/media/cat.b0cbea142ef6c467bbabb420d9425865.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgTruck(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    focusable: \"false\",\n    \"aria-hidden\": \"true\",\n    viewBox: \"0 0 24 24\",\n    \"data-testid\": \"LocalShippingIcon\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m20 8h-3v-4h-14c-1.1 0-2 .9-2 2v11h2c0 1.66 1.34 3 3 3s3-1.34 3-3h6c0 1.66 1.34 3 3 3s3-1.34 3-3h2v-5l-3-4zm-14 10.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm13.5-9 1.96 2.5h-4.46v-2.5h2.5zm-1.5 9c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm-14.7-9 1.53 0 0 1.66-3.03 0 1.51-1.66zm2.46-2.74 1.66-1.84 0 4.57.94 0 0 1.66-.94 0 0 1.93-1.66 0 0-6.33zm6.58 6.48c-.37-.06-.72-.19-1.04-.37-.32-.19-.61-.42-.86-.7-.28-.32-.49-.67-.61-1.05-.12-.39-.18-.87-.18-1.44l0-4.51 1.66 0 0 4.36c0 .31.01.57.05.78.03.21.08.39.16.55.08.15.19.28.32.38.14.1.31.19.52.27l0 1.74zm.91-1.74c.21-.07.37-.16.51-.26.14-.1.25-.23.33-.39.08-.14.14-.31.17-.5.03-.2.05-.47.05-.83l0-4.36 1.65 0 0 4.51c0 .58-.06 1.06-.18 1.44-.12.38-.33.73-.61 1.05-.25.29-.54.52-.87.7-.33.18-.68.3-1.04.37l0-1.74z\",\n    style: {\n      fillRule: \"evenodd\",\n      fill: \"currentcolor\"\n    }\n  }));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgTruck);\nexport default __webpack_public_path__ + \"static/media/truck.cd6a1057a38896c7dca3f9ca88d7879e.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\r\n\r\nimport { Wrapper, Status } from '@googlemaps/react-wrapper';\r\n\r\nimport { debounce } from '@mui/material/utils';\r\n\r\nimport { useSnackbar, useLoader } from '../hooks';\r\nimport { GeoPoint } from '../utils/dataTypes';\r\nimport { toStringLocation } from '../utils/toStringLocation';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport { stopPropagation } from '../utils/stopPropagation';\r\nimport ContentCopy from '@mui/icons-material/ContentCopy';\r\nimport { selectLocation } from '../utils/selectLocation';\r\nimport { getMapSettings } from '../utils/getMapSettings';\r\n\r\nexport default function LocationForGrid({\r\n  location,\r\n  onRefClick,\r\n  addInfo,\r\n  children,\r\n}: {\r\n  readonly location: GeoPoint;\r\n  onRefClick?: (event: React.SyntheticEvent) => void;\r\n  addInfo?: string;\r\n  children?: React.ReactNode;\r\n}) {\r\n  const [value, setValue] = React.useState<google.maps.GeocoderResult | null>(\r\n    null,\r\n  );\r\n  const [items, setItems] = React.useState<google.maps.GeocoderResult[]>([]);\r\n  const [geocoder, setGeocoder] = React.useState<google.maps.Geocoder | null>(\r\n    null,\r\n  );\r\n\r\n  const setSearch = React.useMemo(() => {\r\n    return debounce((geocodeRequest: google.maps.GeocoderRequest): void => {\r\n      geocoder\r\n        ?.geocode(geocodeRequest)\r\n        .then((result) => {\r\n          if (result.results.length < 1 && geocodeRequest.location) {\r\n            const locationFromRequest = new google.maps.LatLng(\r\n              geocodeRequest.location,\r\n            );\r\n            const res: google.maps.GeocoderResult = {\r\n              address_components: [],\r\n              formatted_address: `[${locationFromRequest.lat()}, ${locationFromRequest.lng()}]`,\r\n              geometry: {\r\n                location: locationFromRequest,\r\n                location_type: google.maps.GeocoderLocationType.APPROXIMATE,\r\n                viewport: new google.maps.LatLngBounds(),\r\n              },\r\n              place_id: `[${locationFromRequest.lat()}, ${locationFromRequest.lng()}]`,\r\n              types: [],\r\n            };\r\n            setItems([res]);\r\n          } else {\r\n            result.results.forEach(\r\n              (item) =>\r\n                (item.formatted_address = toStringLocation(\r\n                  item.address_components,\r\n                )),\r\n            );\r\n            setItems(result.results);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          setItems([]);\r\n        });\r\n    }, 400);\r\n  }, [geocoder]);\r\n\r\n  React.useEffect(() => {\r\n    const selected = location && selectLocation(items);\r\n    if (location && selected && selected?.place_id !== value?.place_id) {\r\n      setValue(selected);\r\n    } else if (location) {\r\n      setSearch({\r\n        location: {\r\n          lat: location[0],\r\n          lng: location[1],\r\n        },\r\n      });\r\n    } else if (!location) {\r\n      setItems([]);\r\n      setValue(null);\r\n    }\r\n  }, [geocoder, location, items]);\r\n\r\n  const handleApiLoad = (status: Status): React.ReactElement => {\r\n    const setSnackbarMessage = useSnackbar();\r\n    const [, setLoaderVisibility] = useLoader();\r\n    React.useLayoutEffect(() => {\r\n      if (status === Status.LOADING) {\r\n        setLoaderVisibility(true);\r\n      }\r\n      if (status === Status.FAILURE) {\r\n        setSnackbarMessage({\r\n          severity: 'error',\r\n          message: 'Error loading maps!',\r\n        });\r\n      }\r\n      if (status === Status.SUCCESS) {\r\n        setGeocoder(new window.google.maps.Geocoder());\r\n      }\r\n      return () => {\r\n        if (status === Status.LOADING) {\r\n          setLoaderVisibility(false);\r\n        }\r\n      };\r\n    }, [status]);\r\n    return null as unknown as React.ReactElement;\r\n  };\r\n\r\n  return (\r\n    <span style={{ display: 'flex' }}>\r\n      <Wrapper {...getMapSettings()} render={handleApiLoad} />\r\n      <span\r\n        style={{\r\n          textOverflow: 'ellipsis',\r\n          overflow: 'hidden',\r\n          textAlign: 'left',\r\n        }}\r\n        title={`${value ? value.formatted_address : ''}` + '\\n' + addInfo}\r\n      >\r\n        {onRefClick ? (\r\n          <a href={'#'} target=\"_blank\" onClick={onRefClick}>\r\n            {value ? value.formatted_address : ''}\r\n          </a>\r\n        ) : value ? (\r\n          value.formatted_address\r\n        ) : (\r\n          ''\r\n        )}\r\n        {!addInfo ? null : (\r\n          <>\r\n            <br />\r\n            {addInfo}\r\n          </>\r\n        )}\r\n        {children}\r\n      </span>\r\n      {!value ? null : (\r\n        <IconButton\r\n          size=\"small\"\r\n          onClick={(event) => {\r\n            stopPropagation(event);\r\n            navigator.clipboard.writeText(value.formatted_address);\r\n          }}\r\n        >\r\n          <ContentCopy sx={{ height: '16px', width: '16px' }} />\r\n        </IconButton>\r\n      )}\r\n    </span>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\r\nimport { addMinutes } from 'date-fns';\r\n\r\nimport { TruckUpdate } from '../api';\r\nimport { Truck } from '../utils/dataTypes';\r\n\r\nconst reservationTime = 15; // 15 minutes\r\n\r\nconst calcReserveWillLast = (reservedTill: Date | '' | undefined) => {\r\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n  // @ts-ignore\r\n  let reservedWillLast = (reservedTill - new Date()) / (1000 * 60);\r\n  reservedWillLast = reservedWillLast > 0 ? Math.ceil(reservedWillLast) : 0;\r\n  return reservedWillLast;\r\n};\r\n\r\nexport default function ReserveTruckButton({\r\n  truck,\r\n  index,\r\n}: {\r\n  truck: Truck;\r\n  index: number;\r\n}) {\r\n  const [remainReserved, setRemainReserved] = React.useState<number>(0);\r\n  const { reservedAt, reservedBy } = truck;\r\n  const reservedTill =\r\n    reservedAt && addMinutes(new Date(reservedAt), reservationTime);\r\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n  // @ts-ignore\r\n  const isReserved = new Date() < reservedTill;\r\n\r\n  React.useEffect(() => {\r\n    if (isReserved) {\r\n      setRemainReserved(calcReserveWillLast(reservedTill));\r\n      const interval = setInterval(() => {\r\n        setRemainReserved(calcReserveWillLast(reservedTill));\r\n      }, 1000 * 2);\r\n      return () => {\r\n        clearInterval(interval);\r\n        setRemainReserved(0);\r\n      };\r\n    }\r\n  }, [isReserved, reservedTill]);\r\n\r\n  const queryClient = useQueryClient();\r\n  const { mutate, isLoading } = useMutation(TruckUpdate, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries({\r\n        queryKey: ['trucks'],\r\n        refetchType: 'active',\r\n      });\r\n      return;\r\n    },\r\n    onError: (error: Error) => {\r\n      return;\r\n    },\r\n  });\r\n\r\n  const reserveButtonClickHandler = (event: React.SyntheticEvent) => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    mutate({ id: truck.id, reservedAt: isReserved ? null : new Date() });\r\n  };\r\n\r\n  const labelId = `enhanced-table-checkbox-${index}`;\r\n  const title = `${\r\n    isReserved && reservedBy\r\n      ? 'Reserved by:\\n' +\r\n        reservedBy.fullName +\r\n        '\\nTime left: ' +\r\n        remainReserved +\r\n        'min'\r\n      : ''\r\n  }`;\r\n  return (\r\n    <Button\r\n      id={`${labelId}`}\r\n      title={title}\r\n      sx={{ m: 1, height: '35px', lineHeight: 'normal', fontSize: 'x-small' }}\r\n      fullWidth\r\n      variant=\"contained\"\r\n      size=\"small\"\r\n      color=\"primary\"\r\n      onClickCapture={reserveButtonClickHandler}\r\n    >\r\n      {isReserved ? (\r\n        <span>\r\n          Unreserve\r\n          <br />({remainReserved}min)\r\n        </span>\r\n      ) : (\r\n        'Reserve'\r\n      )}\r\n    </Button>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport { Wrapper, Status } from '@googlemaps/react-wrapper';\r\n\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\r\nimport { debounce } from '@mui/material/utils';\r\n\r\nimport { useSnackbar, useLoader } from '../hooks';\r\nimport { toStringLocation } from '../utils/toStringLocation';\r\nimport { GeoPoint } from '../utils/dataTypes';\r\nimport { selectLocation } from '../utils/selectLocation';\r\nimport { getMapSettings } from '../utils/getMapSettings';\r\nimport { getGeoPointFromLocation } from '../utils/getGeoPointFromLocation';\r\n\r\nexport default function SearchLocationForGrid({\r\n  label,\r\n  placeholder,\r\n  filterSelectedOptions = false,\r\n  disabled,\r\n  value,\r\n  setValue,\r\n}: {\r\n  readonly label: string;\r\n  readonly placeholder?: string;\r\n  readonly filterSelectedOptions?: boolean;\r\n  readonly disabled?: boolean;\r\n  readonly value: GeoPoint | undefined;\r\n  readonly setValue: (value: GeoPoint | undefined) => void;\r\n}) {\r\n  const [selectedValue, setSelectedValue] =\r\n    React.useState<google.maps.GeocoderResult | null>(null);\r\n  const [items, setItems] = React.useState<google.maps.GeocoderResult[]>([]);\r\n  const [geocoder, setGeocoder] = React.useState<google.maps.Geocoder | null>(\r\n    null,\r\n  );\r\n  const [options, setOptions] = React.useState<\r\n    readonly google.maps.GeocoderResult[]\r\n  >([]);\r\n\r\n  const setSearch = React.useMemo(() => {\r\n    return debounce((geocodeRequest: google.maps.GeocoderRequest): void => {\r\n      geocoder\r\n        ?.geocode(geocodeRequest)\r\n        .then((result) => {\r\n          if (result.results.length < 1 && geocodeRequest.location) {\r\n            const locationFromRequest = new google.maps.LatLng(\r\n              geocodeRequest.location,\r\n            );\r\n            const res: google.maps.GeocoderResult = {\r\n              address_components: [],\r\n              formatted_address: `[${locationFromRequest.lat()}, ${locationFromRequest.lng()}]`,\r\n              geometry: {\r\n                location: locationFromRequest,\r\n                location_type: google.maps.GeocoderLocationType.APPROXIMATE,\r\n                viewport: new google.maps.LatLngBounds(),\r\n              },\r\n              place_id: `[${locationFromRequest.lat()}, ${locationFromRequest.lng()}]`,\r\n              types: [],\r\n            };\r\n            setItems([res]);\r\n          } else {\r\n            result.results.forEach(\r\n              (item) =>\r\n                (item.formatted_address = toStringLocation(\r\n                  item.address_components,\r\n                )),\r\n            );\r\n            setItems(result.results);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          setItems([]);\r\n        });\r\n    }, 400);\r\n  }, [geocoder]);\r\n\r\n  React.useEffect(() => {\r\n    if (\r\n      selectedValue &&\r\n      !items.find((item) => item?.place_id === selectedValue?.place_id)\r\n    ) {\r\n      setOptions([selectedValue, ...items]);\r\n    } else {\r\n      setOptions([...items]);\r\n    }\r\n  }, [items, selectedValue]);\r\n\r\n  React.useEffect(() => {\r\n    const selected = value && selectLocation(items);\r\n    if (value && selected && selected?.place_id !== selectedValue?.place_id) {\r\n      setSelectedValue(selected);\r\n    } else if (!value) {\r\n      setItems([]);\r\n      setSelectedValue(null);\r\n    }\r\n  }, [geocoder, value]);\r\n\r\n  const handleChange = (\r\n    event: any,\r\n    newValue: google.maps.GeocoderResult | null,\r\n  ) => {\r\n    const newCoordsValue: GeoPoint | undefined =\r\n      getGeoPointFromLocation(newValue);\r\n    setSelectedValue(newValue);\r\n    setValue(newCoordsValue);\r\n  };\r\n\r\n  const isOptionEqualToValue = (\r\n    value: google.maps.GeocoderResult,\r\n    option: google.maps.GeocoderResult,\r\n  ) => value?.place_id === option?.place_id;\r\n\r\n  const handleInputChange = (\r\n    event: any,\r\n    newInputValue: string,\r\n    reason: 'input' | 'reset' | 'clear',\r\n  ) => {\r\n    if (reason === 'input') {\r\n      setSearch({ address: newInputValue });\r\n    }\r\n  };\r\n\r\n  const handleApiLoad = (status: Status): React.ReactElement => {\r\n    const setSnackbarMessage = useSnackbar();\r\n    const [, setLoaderVisibility] = useLoader();\r\n    React.useLayoutEffect(() => {\r\n      if (status === Status.LOADING) {\r\n        setLoaderVisibility(true);\r\n      }\r\n      if (status === Status.FAILURE) {\r\n        setSnackbarMessage({\r\n          severity: 'error',\r\n          message: 'Error loading maps!',\r\n        });\r\n      }\r\n      if (status === Status.SUCCESS) {\r\n        setGeocoder(new window.google.maps.Geocoder());\r\n      }\r\n      return () => {\r\n        if (status === Status.LOADING) {\r\n          setLoaderVisibility(false);\r\n        }\r\n      };\r\n    }, [status]);\r\n    return null as unknown as React.ReactElement;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Wrapper {...getMapSettings()} render={handleApiLoad} />\r\n      <Autocomplete\r\n        disabled={disabled}\r\n        getOptionLabel={(option) =>\r\n          typeof option === 'string' ? option : option.formatted_address || ''\r\n        }\r\n        filterOptions={(x) => x}\r\n        options={options}\r\n        isOptionEqualToValue={isOptionEqualToValue}\r\n        autoComplete\r\n        includeInputInList\r\n        filterSelectedOptions={filterSelectedOptions}\r\n        value={selectedValue}\r\n        noOptionsText=\"No data\"\r\n        onChange={handleChange}\r\n        onInputChange={handleInputChange}\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            fullWidth\r\n            size=\"small\"\r\n            label={label}\r\n            placeholder={placeholder}\r\n          />\r\n        )}\r\n        renderOption={(props, option) => (\r\n          <li\r\n            {...{ ...props, disabled: true }}\r\n            key={(props as any).disabled || option.place_id}\r\n          >\r\n            <Grid container alignItems=\"center\">\r\n              <Grid item sx={{ display: 'flex', width: 44 }}>\r\n                <LocationOnIcon sx={{ color: 'text.secondary' }} />\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                sx={{ width: 'calc(100% - 44px)', wordWrap: 'break-word' }}\r\n              >\r\n                <Box component=\"span\" sx={{ fontWeight: 'regular' }}>\r\n                  {option.formatted_address}\r\n                </Box>\r\n              </Grid>\r\n            </Grid>\r\n          </li>\r\n        )}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\r\n\r\nimport { alpha, styled } from '@mui/material/styles';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport TextField from '@mui/material/TextField';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Box from '@mui/material/Box';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableSortLabel from '@mui/material/TableSortLabel';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\nimport Grid from '@mui/material/Grid';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport { renderTimeViewClock } from '@mui/x-date-pickers/timeViewRenderers';\r\nimport { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker';\r\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport Select from '@mui/material/Select';\r\nimport FormHelperText from '@mui/material/FormHelperText';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FilterListIcon from '@mui/icons-material/FilterList';\r\nimport FilterListOffIcon from '@mui/icons-material/FilterListOff';\r\nimport ContentCopy from '@mui/icons-material/ContentCopy';\r\nimport AccessTime from '@mui/icons-material/AccessTime';\r\nimport LocalShipping from '@mui/icons-material/LocalShipping';\r\nimport { visuallyHidden } from '@mui/utils';\r\nimport { debounce } from '@mui/material/utils';\r\nimport { grey, green, orange } from '@mui/material/colors';\r\n\r\nimport ReserveTruckButton from './reserveTruckButton';\r\nimport { ReactComponent as CatIcon } from '../icons/cat.svg';\r\nimport { ReactComponent as TruckIcon } from '../icons/truck.svg';\r\n\r\nimport Loader from '../components/Loader';\r\nimport LocationForGrid from '../components/LocationForGrid';\r\nimport SearchLocationForGrid from '../components/SearchLocationForGrid';\r\nimport { LocationsQuery, TrucksQuery, TruckDelete } from '../api';\r\nimport { useMap, useSnackbar } from '../hooks';\r\nimport {\r\n  Order,\r\n  Truck,\r\n  Location,\r\n  Result,\r\n  TruckStatuses,\r\n  TruckStatus,\r\n  GeoPoint,\r\n} from '../utils/dataTypes';\r\nimport { getPath, getType, modifyedQueryFn } from '../utils/queryHelpers';\r\nimport { stopPropagation } from '../utils/stopPropagation';\r\nimport { dateTimeFormatter } from '../utils/dateTimeFormatters';\r\n\r\ninterface HeadCell {\r\n  id: string;\r\n  disablePadding: boolean;\r\n  orderField?: keyof Truck;\r\n  getData: (\r\n    row: Truck,\r\n    setMapData: any,\r\n  ) => { data: JSX.Element | string; title?: string };\r\n  label: string;\r\n  numeric: boolean;\r\n}\r\nconst themeMode = localStorage.getItem('theme') === 'dark' ? 'dark' : 'light';\r\nconst headCells: readonly HeadCell[] = [\r\n  {\r\n    id: 'truckNumber',\r\n    orderField: 'truckNumber',\r\n    getData: (row) => ({ data: `${row.truckNumber}` }),\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Truck Number',\r\n  },\r\n  {\r\n    id: 'mainContactInfo',\r\n    getData: (row) => {\r\n      const person = row.coordinator || row.owner;\r\n      let path = '';\r\n      let type = '';\r\n      let firstRow = '';\r\n      let secondRow = '';\r\n      if (person) {\r\n        path = `./${getPath(person)}/view/${person.id}`;\r\n        type = `${getType(person)} `;\r\n        firstRow = `${person.fullName}`;\r\n        secondRow = `${person?.phone}`;\r\n      }\r\n      return {\r\n        data: (\r\n          <span style={{ display: 'flex' }}>\r\n            <span\r\n              style={{\r\n                textOverflow: 'ellipsis',\r\n                overflow: 'hidden',\r\n                textAlign: 'left',\r\n              }}\r\n            >\r\n              <b>{type}</b>\r\n              <a href={path} target=\"_blank\" onClick={stopPropagation}>\r\n                {firstRow}\r\n              </a>\r\n              <br />\r\n              <a\r\n                href={secondRow ? `tel:${secondRow}` : undefined}\r\n                target=\"_blank\"\r\n                onClick={stopPropagation}\r\n              >\r\n                {secondRow || ' '}\r\n              </a>\r\n            </span>\r\n            <IconButton\r\n              size=\"small\"\r\n              onClick={(event) => {\r\n                stopPropagation(event);\r\n                navigator.clipboard.writeText(firstRow + ' ' + secondRow);\r\n              }}\r\n            >\r\n              <ContentCopy sx={{ height: '16px', width: '16px' }} />\r\n            </IconButton>\r\n          </span>\r\n        ),\r\n        title: type + '' + firstRow + '\\n' + secondRow,\r\n      };\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Main Contact info',\r\n  },\r\n  {\r\n    id: 'truckInfo',\r\n    getData: (row) => {\r\n      const firstRow = row.type ? `${row.type}` : '';\r\n      const secondRow = row.equipment ? `${row.equipment.join(', ')}` : '';\r\n\r\n      return {\r\n        data: (\r\n          <span>\r\n            {firstRow}\r\n            <br />\r\n            {secondRow}\r\n          </span>\r\n        ),\r\n        title: firstRow + '\\n' + secondRow,\r\n      };\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Truck info',\r\n  },\r\n  {\r\n    id: 'dimsAndPayload',\r\n    getData: (row) => {\r\n      const firstRowPart1 = row.insideDims ? `${row.insideDims}` : '';\r\n      const firstRowPart2 = row.doorDims ? `${row.doorDims}` : '';\r\n      const secondRow = row.payload ? `${row.payload}` : '';\r\n\r\n      return {\r\n        data: (\r\n          <span>\r\n            {(firstRowPart1 ? firstRowPart1 + ' ' : '') +\r\n              `${firstRowPart2 ? '(' + firstRowPart2 + ')' : ''}`}\r\n            <br />\r\n            {secondRow}\r\n          </span>\r\n        ),\r\n        title:\r\n          (firstRowPart1 ? firstRowPart1 + ' Inside ' : '') +\r\n          (firstRowPart2 ? firstRowPart2 + ' Door ' : '') +\r\n          '\\n' +\r\n          secondRow +\r\n          ' Payload',\r\n      };\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'DIMS/Payload',\r\n  },\r\n  {\r\n    id: 'status',\r\n    orderField: 'status',\r\n    getData: (row) => {\r\n      const status = `${row.status}`;\r\n      const val = (() => {\r\n        switch (status) {\r\n          case 'Will be available':\r\n            return (\r\n              <CatIcon\r\n                style={{\r\n                  height: '24px',\r\n                  width: '24px',\r\n                  color: themeMode === 'dark' ? grey[100] : grey[900],\r\n                }}\r\n              />\r\n              /*<AccessTime\r\n                sx={{ height: '24px', width: '24px', color: grey[900] }}\r\n              />*/\r\n            );\r\n          case 'On route':\r\n            return (\r\n              <TruckIcon\r\n                style={{\r\n                  height: '24px',\r\n                  width: '24px',\r\n                  color: themeMode === 'dark' ? grey[300] : grey[700],\r\n                }}\r\n              />\r\n              /*<LocalShipping\r\n                sx={{ height: '24px', width: '24px', color: orange[500] }}\r\n              />*/\r\n            );\r\n          case 'Available':\r\n            return (\r\n              <Avatar\r\n                sx={{\r\n                  height: '24px',\r\n                  width: '24px',\r\n                  bgcolor: green[500],\r\n                  margin: 'auto',\r\n                }}\r\n              >\r\n                A\r\n              </Avatar>\r\n            );\r\n          case 'Not Available':\r\n            return (\r\n              <Avatar\r\n                sx={{\r\n                  height: '24px',\r\n                  width: '24px',\r\n                  bgcolor: grey[500],\r\n                  margin: 'auto',\r\n                }}\r\n              >\r\n                N\r\n              </Avatar>\r\n            );\r\n          default:\r\n            return status;\r\n        }\r\n      })();\r\n\r\n      return {\r\n        data: <span>{val}</span>,\r\n        title: status,\r\n      };\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Status',\r\n  },\r\n  {\r\n    id: 'willBeAtLocation',\r\n    getData: (row) => {\r\n      if (row?.availabilityLocation) {\r\n        const secondRow = `${\r\n          row.availabilityAt\r\n            ? dateTimeFormatter.format(new Date(row.availabilityAt))\r\n            : ''\r\n        }`;\r\n\r\n        return {\r\n          data: (\r\n            <LocationForGrid\r\n              location={row.availabilityLocation}\r\n              addInfo={secondRow}\r\n            />\r\n          ),\r\n        };\r\n      } else {\r\n        return { data: '' };\r\n      }\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Will be at location',\r\n  },\r\n  {\r\n    id: 'roadsDistance',\r\n    getData: (row) => ({\r\n      data: `${row.milesByRoads ? row.milesByRoads.toFixed(2) : ''}`,\r\n    }),\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Road distance',\r\n  },\r\n  {\r\n    id: 'location',\r\n    getData: (row, setMapData) => {\r\n      const onRefClick = (event: React.SyntheticEvent) => {\r\n        event.preventDefault();\r\n        stopPropagation(event);\r\n        setMapData([row]);\r\n      };\r\n\r\n      if (row?.lastLocation) {\r\n        const secondRow = `${\r\n          row.locationUpdatedAt\r\n            ? dateTimeFormatter.format(new Date(row.locationUpdatedAt))\r\n            : ''\r\n        }`;\r\n\r\n        return {\r\n          data: (\r\n            <LocationForGrid\r\n              location={row.lastLocation}\r\n              onRefClick={onRefClick}\r\n              addInfo={secondRow}\r\n            />\r\n          ),\r\n        };\r\n      } else {\r\n        return { data: '' };\r\n      }\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Last known location',\r\n  },\r\n  /*{\r\n    id: 'calcDistance',\r\n    getData: (row) => ({\r\n      data: `${row.milesHaversine ? row.milesHaversine.toFixed(2) : ''}`,\r\n    }),\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Origin away',\r\n  },*/\r\n];\r\n\r\ninterface EnhancedTableProps {\r\n  numSelected: number;\r\n  onRequestSort: (\r\n    event: React.MouseEvent<unknown>,\r\n    property: keyof Truck,\r\n  ) => void;\r\n  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n  order: Order | undefined;\r\n  orderBy: string | undefined;\r\n  rowCount: number;\r\n}\r\n\r\nconst StyledTableHead = styled(TableHead)(({ theme }) => ({\r\n  backgroundColor: theme.palette.background.default,\r\n}));\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n  maxWidth: '100px',\r\n  paddingTop: '6px',\r\n  paddingBottom: '6px',\r\n  whiteSpace: 'nowrap',\r\n  textOverflow: 'ellipsis',\r\n  overflow: 'hidden',\r\n}));\r\n\r\nfunction EnhancedTableHead(props: EnhancedTableProps) {\r\n  const {\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n  const createSortHandler =\r\n    (property: keyof Truck) => (event: React.MouseEvent<unknown>) => {\r\n      onRequestSort(event, property);\r\n    };\r\n\r\n  return (\r\n    <StyledTableHead>\r\n      <TableRow>\r\n        <StyledTableCell align=\"center\" padding=\"checkbox\">\r\n          Actions\r\n        </StyledTableCell>\r\n        {headCells.map((headCell) => (\r\n          <StyledTableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'center'}\r\n            padding={headCell.disablePadding ? 'none' : 'normal'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={headCell.orderField && orderBy === headCell.orderField}\r\n              hideSortIcon={!headCell.orderField}\r\n              direction={orderBy === headCell.orderField ? order : 'asc'}\r\n              onClick={\r\n                headCell.orderField\r\n                  ? createSortHandler(headCell.orderField)\r\n                  : () => {\r\n                      return;\r\n                    }\r\n              }\r\n            >\r\n              {headCell.label}\r\n              {headCell.orderField && orderBy === headCell.orderField ? (\r\n                <Box component=\"span\" sx={visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </Box>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </StyledTableCell>\r\n        ))}\r\n      </TableRow>\r\n    </StyledTableHead>\r\n  );\r\n}\r\n\r\ninterface EnhancedTableToolbarProps {\r\n  selected: readonly string[];\r\n  setQueryParams: React.Dispatch<\r\n    React.SetStateAction<Record<string, number | string | string[] | Date>>\r\n  >;\r\n}\r\n\r\nfunction EnhancedTableToolbar(props: EnhancedTableToolbarProps) {\r\n  const { selected, setQueryParams } = props;\r\n  // Location field state\r\n  const [locationValue, setLocationValue] = React.useState<\r\n    GeoPoint | undefined\r\n  >(undefined);\r\n  const [inputValue, setInputValue] = React.useState('');\r\n  const [locationsQueryParams, setLocationsQueryParams] = React.useState<{\r\n    search?: any;\r\n  }>({});\r\n  const [options, setOptions] = React.useState<readonly Location[]>([]);\r\n  const [availableFrom, setAvailableFrom] = React.useState<Date | null>(null);\r\n  const [availableTo, setAvailableTo] = React.useState<Date | null>(null);\r\n  const [isFromDateError, setFromDateError] = React.useState<boolean>(false);\r\n  const [isToDateError, setToDateError] = React.useState<boolean>(false);\r\n  const [statusOpen, setStatusOpen] = React.useState<boolean>(false);\r\n  const [statusValue, setStatusValue] = React.useState<TruckStatus[]>([\r\n    'Available',\r\n  ]);\r\n  const [distanceValue, setDistanceValue] = React.useState<number>(200);\r\n  const [searchDataChanged, setSearchDataChanged] =\r\n    React.useState<boolean>(false);\r\n\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const queryClient = useQueryClient();\r\n\r\n  const setSnackbarMessage = useSnackbar();\r\n\r\n  const { mutate, isLoading } = useMutation(TruckDelete, {\r\n    onSuccess: () => {\r\n      setSnackbarMessage({\r\n        severity: 'success',\r\n        message: 'Deleted',\r\n      });\r\n      queryClient.invalidateQueries(['trucks']);\r\n    },\r\n    onError: (error: Error) => {\r\n      setSnackbarMessage({\r\n        severity: 'error',\r\n        message: error instanceof Error ? error.message : JSON.stringify(error),\r\n      });\r\n    },\r\n  });\r\n\r\n  const setSearch = React.useMemo(() => {\r\n    return debounce((search: string): void => {\r\n      setLocationsQueryParams({ search });\r\n    }, 400);\r\n  }, []);\r\n  const { data: { items } = { items: [], total: 0 } } = useQuery<\r\n    Result<Location>,\r\n    Error,\r\n    Result<Location>,\r\n    any // ToDo fix type\r\n  >({\r\n    queryKey: ['locations', 0, 15, 'name', 'asc', locationsQueryParams],\r\n    queryFn: modifyedQueryFn(LocationsQuery, true),\r\n    keepPreviousData: true,\r\n    retry: false,\r\n  });\r\n\r\n  /*React.useEffect(() => {\r\n    if (locationValue) {\r\n      const notSelectedItems = items.filter(\r\n        (item) => item.id !== locationValue.id,\r\n      );\r\n      setOptions([locationValue, ...notSelectedItems]);\r\n    } else {\r\n      if (inputValue === '') {\r\n        setOptions([]);\r\n      } else {\r\n        setOptions([...items]);\r\n      }\r\n    }\r\n  }, [locationValue, items]);*/\r\n\r\n  const handleLocationChange = (newValue: GeoPoint | undefined) => {\r\n    setLocationValue(newValue);\r\n    if (newValue) {\r\n      setQueryParams((prev) => ({\r\n        ...prev,\r\n        lastLocation: newValue.join(','),\r\n        distance: distanceValue,\r\n      }));\r\n      setSearchDataChanged(false);\r\n    } else {\r\n      setInputValue('');\r\n      setQueryParams((prev) => {\r\n        const {\r\n          lastLocation: _lastLocation,\r\n          distance: _distance,\r\n          ...rest\r\n        } = prev;\r\n        return rest;\r\n      });\r\n      setSearchDataChanged(false);\r\n    }\r\n    // setSearchDataChanged(true);\r\n  };\r\n  /*const handleLocationInputChange = (event: any, newInputValue: string) => {\r\n    setInputValue(newInputValue);\r\n    setSearch(newInputValue);\r\n  };*/\r\n  const handleFromDateInputChange = (value: Date | null) => {\r\n    setAvailableFrom(value);\r\n    setSearchDataChanged(true);\r\n  };\r\n  const handleToDateInputChange = (value: Date | null) => {\r\n    setAvailableTo(value);\r\n    setSearchDataChanged(true);\r\n  };\r\n  const handleFromDateOnError = (error: any /*, value: any*/) => {\r\n    if (error) {\r\n      setFromDateError(true);\r\n    } else {\r\n      setFromDateError(false);\r\n    }\r\n  };\r\n  const handleToDateOnError = (error: any /*, value: any*/) => {\r\n    if (error) {\r\n      setToDateError(true);\r\n    } else {\r\n      setToDateError(false);\r\n    }\r\n  };\r\n  const handleDateChange = () => {\r\n    /*let from = availableFrom;\r\n    let to = availableTo;\r\n    if (!from && !to) {\r\n      from = new Date(Date.now() + 1000 * 60);\r\n    }\r\n    if (!to && from) {\r\n      to = new Date(from.getTime() + dateLag);\r\n    }\r\n    if (!from && to) {\r\n      from = new Date(to.getTime() - dateLag);\r\n    }\r\n    if (from !== availableFrom) {\r\n      setAvailableFrom(from);\r\n    }\r\n    if (to !== availableTo) {\r\n      setAvailableTo(to);\r\n    }*/\r\n    if (!isFromDateError && !isToDateError) {\r\n      setQueryParams((prev) => {\r\n        const res = { ...prev };\r\n        /*if (from) {\r\n          res.availableAfter = from;\r\n        }\r\n        if (to) {\r\n          res.availableBefore = to;\r\n        }*/\r\n        if (availableFrom) {\r\n          res.availableAfter = availableFrom;\r\n        }\r\n        if (availableTo) {\r\n          res.availableBefore = availableTo;\r\n        }\r\n        return res;\r\n      });\r\n      setSearchDataChanged(false);\r\n    }\r\n  };\r\n  const handleStatusInputChange = (\r\n    event: React.ChangeEvent<HTMLInputElement>,\r\n  ) => {\r\n    setStatusValue(event.target.value as unknown as TruckStatus[]);\r\n    setSearchDataChanged(true);\r\n  };\r\n  const handleStatusKeyUp = (event: React.KeyboardEvent) => {\r\n    if (event.key !== 'Enter') {\r\n      return;\r\n    }\r\n    stopPropagation(event);\r\n    handleStatusClose();\r\n  };\r\n  const handleStatusKeyDown = (event: React.KeyboardEvent) => {\r\n    if (event.key !== 'Enter') {\r\n      return;\r\n    }\r\n    stopPropagation(event);\r\n  };\r\n  const handleStatusOpen = () => {\r\n    setStatusOpen(true);\r\n  };\r\n  const handleStatusClose = () => {\r\n    setStatusOpen(false);\r\n    handleStatusChange();\r\n  };\r\n  const handleStatusChange = () => {\r\n    if (statusValue.length && statusValue.length !== TruckStatuses.length) {\r\n      setQueryParams((prev) => ({ ...prev, status: statusValue }));\r\n      setSearchDataChanged(false);\r\n    } else {\r\n      setQueryParams((prev) => {\r\n        const { status: _, ...rest } = prev;\r\n        return { ...rest };\r\n      });\r\n      setSearchDataChanged(false);\r\n    }\r\n  };\r\n  const handleDistanceInputChange = (\r\n    event: React.ChangeEvent<HTMLInputElement>,\r\n  ) => {\r\n    if (Number.isInteger(Number(event.target.value))) {\r\n      setDistanceValue(Number(event.target.value));\r\n      if (locationValue) {\r\n        setQueryParams((prev) => ({\r\n          ...prev,\r\n          distance: Number(event.target.value),\r\n        }));\r\n        setSearchDataChanged(false);\r\n      }\r\n      // setSearchDataChanged(true);\r\n    }\r\n  };\r\n  const handleClearFilter = () => {\r\n    setLocationValue(undefined);\r\n    setAvailableFrom(null);\r\n    setAvailableTo(null);\r\n    setStatusValue([...TruckStatuses]);\r\n    setDistanceValue(200);\r\n    setQueryParams({});\r\n    setSearchDataChanged(false);\r\n  };\r\n  const handleApplyFilter = () => {\r\n    const queryParams: Record<string, any> = {};\r\n    if (locationValue) {\r\n      queryParams.lastLocation = locationValue.join(',');\r\n      queryParams.distance = distanceValue;\r\n    }\r\n    if (\r\n      statusValue.length !== 0 &&\r\n      statusValue.length !== TruckStatuses.length\r\n    ) {\r\n      queryParams.status = statusValue;\r\n    }\r\n\r\n    /*let from = availableFrom;\r\n    let to = availableTo;\r\n    if (!from && !to) {\r\n      from = new Date(Date.now() + 1000 * 60);\r\n    }\r\n    if (!to && from) {\r\n      to = new Date(from.getTime() + dateLag);\r\n    }\r\n    if (!from && to) {\r\n      from = new Date(to.getTime() - dateLag);\r\n    }\r\n    if (from !== availableFrom) {\r\n      setAvailableFrom(from);\r\n    }\r\n    if (to !== availableTo) {\r\n      setAvailableTo(to);\r\n    }\r\n    queryParams.availableAfter = from;\r\n    queryParams.availableBefore = to;*/\r\n    queryParams.availableAfter = availableFrom;\r\n    queryParams.availableBefore = availableTo;\r\n\r\n    setQueryParams(queryParams);\r\n    setSearchDataChanged(false);\r\n  };\r\n  // const createHandler = () => {\r\n  //   navigate('./create', {\r\n  //     relative: 'path',\r\n  //     state: { from: location },\r\n  //     replace: false,\r\n  //   });\r\n  // };\r\n  // const editHandler = () => {\r\n  //   navigate(`./edit/${selected[0]}`, {\r\n  //     relative: 'path',\r\n  //     state: { from: location },\r\n  //     replace: false,\r\n  //   });\r\n  // };\r\n  // const deleteHandler = () => {\r\n  //   mutate(`${selected[0]}`);\r\n  // };\r\n  return (\r\n    <Toolbar\r\n      sx={{\r\n        overflow: 'hidden',\r\n        pl: { sm: 2 },\r\n        pr: { xs: 1, sm: 1 },\r\n        ...(selected.length > 0 && {\r\n          bgcolor: (theme) =>\r\n            alpha(\r\n              theme.palette.primary.main,\r\n              theme.palette.action.activatedOpacity,\r\n            ),\r\n        }),\r\n      }}\r\n    >\r\n      {selected.length > 0 ? (\r\n        <Typography\r\n          sx={{ flex: '1 1 100%' }}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {selected.length} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          sx={{\r\n            flex: '1 1 100%',\r\n            whiteSpace: 'nowrap',\r\n            textOverflow: 'ellipsis',\r\n            overflow: 'hidden',\r\n          }}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          Trucks Nearby\r\n        </Typography>\r\n      )}\r\n      <Box\r\n        component=\"div\"\r\n        sx={{\r\n          '& .MuiTextField-root': { m: 1, width: '350px' },\r\n        }}\r\n      >\r\n        <SearchLocationForGrid\r\n          label={'Enter city, state or zip'}\r\n          value={locationValue}\r\n          setValue={handleLocationChange}\r\n        />\r\n      </Box>\r\n      <Box\r\n        component=\"div\"\r\n        sx={{\r\n          '& .MuiTextField-root': { m: 1, width: '200px' },\r\n        }}\r\n      >\r\n        <DateTimePicker\r\n          label=\"Select available from\"\r\n          ampm={false}\r\n          disablePast={true}\r\n          maxDateTime={availableTo ? availableTo : undefined}\r\n          disableIgnoringDatePartForTimeValidation={true}\r\n          viewRenderers={{\r\n            hours: renderTimeViewClock,\r\n            minutes: renderTimeViewClock,\r\n            seconds: renderTimeViewClock,\r\n          }}\r\n          slotProps={{\r\n            textField: {\r\n              fullWidth: true,\r\n              size: 'small',\r\n              id: 'availableFrom',\r\n              name: 'Select available from',\r\n              onBlur: handleDateChange,\r\n            },\r\n          }}\r\n          value={availableFrom}\r\n          onChange={handleFromDateInputChange}\r\n          onClose={handleDateChange}\r\n          onError={handleFromDateOnError}\r\n        />\r\n      </Box>\r\n      <Box\r\n        component=\"div\"\r\n        sx={{\r\n          '& .MuiTextField-root': { m: 1, width: '200px' },\r\n        }}\r\n      >\r\n        <DateTimePicker\r\n          label=\"Select available to\"\r\n          ampm={false}\r\n          disablePast={true}\r\n          minDateTime={availableFrom ? availableFrom : undefined}\r\n          disableIgnoringDatePartForTimeValidation={true}\r\n          viewRenderers={{\r\n            hours: renderTimeViewClock,\r\n            minutes: renderTimeViewClock,\r\n            seconds: renderTimeViewClock,\r\n          }}\r\n          slotProps={{\r\n            textField: {\r\n              fullWidth: true,\r\n              size: 'small',\r\n              id: 'availableTo',\r\n              name: 'Select available to',\r\n              onBlur: handleDateChange,\r\n            },\r\n          }}\r\n          value={availableTo}\r\n          onChange={handleToDateInputChange}\r\n          onClose={handleDateChange}\r\n          onError={handleToDateOnError}\r\n        />\r\n      </Box>\r\n      <Box\r\n        component=\"div\"\r\n        sx={{\r\n          '& .MuiTextField-root': { m: 1, width: '140px' },\r\n        }}\r\n      >\r\n        <TextField\r\n          select\r\n          SelectProps={{\r\n            multiple: true,\r\n            open: statusOpen,\r\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n            //@ts-ignore\r\n            renderValue: (selected: TruckStatus[]) => selected.join(', '),\r\n            onOpen: handleStatusOpen,\r\n            onClose: handleStatusClose,\r\n          }}\r\n          label=\"Select Status\"\r\n          value={statusValue}\r\n          onChange={handleStatusInputChange}\r\n          onKeyUpCapture={handleStatusKeyUp}\r\n          onKeyDownCapture={handleStatusKeyDown}\r\n          onBlur={handleStatusChange}\r\n          size=\"small\"\r\n          fullWidth\r\n          title={statusValue.join(', ')}\r\n        >\r\n          {TruckStatuses.map((status) => (\r\n            <MenuItem key={status} value={status}>\r\n              <Checkbox\r\n                checked={statusValue.indexOf(status as TruckStatus) > -1}\r\n                id={status}\r\n              />\r\n              <ListItemText primary={status} />\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n      </Box>\r\n      <Box\r\n        component=\"div\"\r\n        sx={{\r\n          '& .MuiTextField-root': { m: 1, width: '140px' },\r\n        }}\r\n      >\r\n        <TextField\r\n          select\r\n          label=\"Select Distance\"\r\n          value={distanceValue}\r\n          onChange={handleDistanceInputChange}\r\n          size=\"small\"\r\n          fullWidth\r\n        >\r\n          {Array.from(\r\n            { length: (1000 - 50) / 50 + 1 },\r\n            (_, index) => 50 + index * 50,\r\n          ).map((option) => (\r\n            <MenuItem key={option} value={option}>\r\n              {option}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n      </Box>\r\n      <Tooltip title=\"Filter list\">\r\n        {searchDataChanged ||\r\n        !(\r\n          locationValue ||\r\n          availableFrom ||\r\n          availableTo ||\r\n          (statusValue.length !== 0 &&\r\n            statusValue.length !== TruckStatuses.length)\r\n        ) ? (\r\n          <span>\r\n            <IconButton\r\n              disabled={\r\n                ((!locationValue || !distanceValue) &&\r\n                  !(\r\n                    availableFrom ||\r\n                    availableTo ||\r\n                    (statusValue.length !== 0 &&\r\n                      statusValue.length !== TruckStatuses.length)\r\n                  )) ||\r\n                isFromDateError ||\r\n                isToDateError\r\n              }\r\n              onClick={handleApplyFilter}\r\n            >\r\n              <FilterListIcon />\r\n            </IconButton>\r\n          </span>\r\n        ) : (\r\n          <span>\r\n            <IconButton onClick={handleClearFilter}>\r\n              <FilterListOffIcon />\r\n            </IconButton>\r\n          </span>\r\n        )}\r\n      </Tooltip>\r\n      <Loader visible={isLoading} />\r\n    </Toolbar>\r\n  );\r\n}\r\n\r\nexport default function EnhancedTable() {\r\n  const [order, setOrder] = React.useState<Order | undefined>(undefined);\r\n  const [orderBy, setOrderBy] = React.useState<keyof Truck | undefined>(\r\n    undefined,\r\n  );\r\n  const [selected, setSelected] = React.useState<readonly string[]>([]);\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState<number>(15);\r\n  const [queryParams, setQueryParams] = React.useState<Record<string, any>>({\r\n    status: ['Available'],\r\n  });\r\n  const tableContainerRef = React.useRef(null);\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const setSnackbarMessage = useSnackbar();\r\n  const [, setMapData] = useMap();\r\n\r\n  const {\r\n    isLoading,\r\n    isFetching,\r\n    data: { items, total } = { items: [], total: 0 },\r\n  } = useQuery({\r\n    queryKey: ['trucks', page, rowsPerPage, orderBy, order, queryParams],\r\n    queryFn: TrucksQuery,\r\n    keepPreviousData: true,\r\n    retry: false,\r\n    onError: (error: Error) => {\r\n      setSnackbarMessage({\r\n        severity: 'error',\r\n        message: error instanceof Error ? error.message : JSON.stringify(error),\r\n      });\r\n    },\r\n  });\r\n  const rows = items || [];\r\n\r\n  React.useEffect(() => {\r\n    if (tableContainerRef.current) {\r\n      const container = tableContainerRef.current as HTMLElement;\r\n      container.scrollTo({\r\n        top: 0,\r\n        left: 0,\r\n        behavior: 'smooth',\r\n      });\r\n    }\r\n  }, [rows]);\r\n\r\n  React.useEffect(() => {\r\n    const newSelected: string[] = [];\r\n    selected.forEach((selectedItem) => {\r\n      const selectedRow = rows.find((row) => row.id === selectedItem);\r\n      if (selectedRow) {\r\n        newSelected.push(selectedItem);\r\n      }\r\n    });\r\n    setSelected(newSelected);\r\n  }, [rows]);\r\n\r\n  const handleRequestSort = (\r\n    event: React.MouseEvent<unknown>,\r\n    property: keyof Truck,\r\n  ) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    const isDesc = orderBy === property && order === 'desc';\r\n    if (isDesc) {\r\n      setOrder(undefined);\r\n      setOrderBy(undefined);\r\n    } else {\r\n      setOrder(isAsc ? 'desc' : 'asc');\r\n      setOrderBy(property);\r\n    }\r\n  };\r\n\r\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (event.target.checked) {\r\n      const newSelected = rows.map((n: Truck) => n.id);\r\n      setSelected(newSelected);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (\r\n    event: React.MouseEvent<unknown>,\r\n    item: (typeof rows)[number],\r\n  ) => {\r\n    navigate(`./view/${item.id}`, {\r\n      relative: 'path',\r\n      state: { from: location },\r\n      replace: false,\r\n    });\r\n  };\r\n\r\n  const handleSelect = (event: React.MouseEvent<unknown>, name: string) => {\r\n    event.stopPropagation();\r\n    // const selectedIndex = selected.indexOf(name);\r\n    // let newSelected: readonly string[] = [];\r\n    //\r\n    // if (selectedIndex === -1) {\r\n    //     newSelected = newSelected.concat(selected, name);\r\n    // } else if (selectedIndex === 0) {\r\n    //     newSelected = newSelected.concat(selected.slice(1));\r\n    // } else if (selectedIndex === selected.length - 1) {\r\n    //     newSelected = newSelected.concat(selected.slice(0, -1));\r\n    // } else if (selectedIndex > 0) {\r\n    //     newSelected = newSelected.concat(\r\n    //         selected.slice(0, selectedIndex),\r\n    //         selected.slice(selectedIndex + 1),\r\n    //     );\r\n    // }\r\n    //\r\n    // setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event: unknown, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (\r\n    event: React.ChangeEvent<HTMLInputElement>,\r\n  ) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const isSelected = (name: string) => selected.indexOf(name) !== -1;\r\n\r\n  return (\r\n    <Box sx={{ width: '100%', height: '100%' }}>\r\n      <Paper sx={{ width: '100%', height: '100%', backgroundColor: 'unset' }}>\r\n        <EnhancedTableToolbar\r\n          selected={selected}\r\n          setQueryParams={(query) => {\r\n            setQueryParams(query);\r\n            setPage(0);\r\n          }}\r\n        />\r\n        <TableContainer\r\n          ref={tableContainerRef}\r\n          sx={{ height: 'calc(100% - 115px)' }}\r\n        >\r\n          <Table\r\n            sx={{ minWidth: 750 }}\r\n            aria-labelledby=\"tableTitle\"\r\n            size=\"small\"\r\n            stickyHeader\r\n          >\r\n            <EnhancedTableHead\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {rows.map((row, index) => {\r\n                const isItemSelected = isSelected(`${row.id}`);\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    onDoubleClick={(event) => handleClick(event, row)}\r\n                    role=\"checkbox\"\r\n                    aria-checked={isItemSelected}\r\n                    tabIndex={-1}\r\n                    key={row.id}\r\n                    selected={isItemSelected}\r\n                    sx={{ cursor: 'pointer' }}\r\n                  >\r\n                    <StyledTableCell padding=\"checkbox\">\r\n                      <ReserveTruckButton truck={row} index={index} />\r\n                    </StyledTableCell>\r\n                    {headCells.map((cell) => {\r\n                      const cellData = cell.getData(row, setMapData);\r\n                      return (\r\n                        <StyledTableCell\r\n                          key={cell.id}\r\n                          title={cellData.title}\r\n                          align={cell.numeric ? 'right' : 'center'}\r\n                        >\r\n                          {cellData.data}\r\n                        </StyledTableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 15, 20, 25, 35, 50]}\r\n          component=\"div\"\r\n          count={total}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <Loader visible={isLoading || isFetching} />\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { AlertColor } from '@mui/material/Alert/Alert';\r\n\r\nexport const LangPriorities = ['EN', 'UA', 'ES', 'RU'] as const;\r\n\r\nexport const PersonTypes = [\r\n  'Owner',\r\n  'OwnerDriver',\r\n  'Coordinator',\r\n  'CoordinatorDriver',\r\n  'Driver',\r\n] as const;\r\n\r\nexport const UserRoles = ['Admin', 'Super Admin'] as const;\r\n\r\nexport const CustomerTypes = [\r\n  'BROKER DOMESTIC',\r\n  'BROKER INTERNATIONAL',\r\n  'FREIGHT FORWARDER DOMESTIC',\r\n  'FREIGHT FORWARDER INTERNATIONAL',\r\n  'SHIPPER/CONSIGNEE DOMESTIC',\r\n  'SHIPPER/CONSIGNEE INTERNATIONAL',\r\n  'OTHER',\r\n] as const;\r\n\r\nexport const TruckTypes = [\r\n  'Cargo van',\r\n  'Reefer van',\r\n  'Box truck',\r\n  'Box truck Reefer',\r\n  'Straight truck',\r\n  'Hotshot',\r\n  'Tented box',\r\n] as const;\r\n\r\nexport const TruckStatuses = [\r\n  'Available',\r\n  'Not Available',\r\n  'Will be available',\r\n  'On route',\r\n] as const;\r\n\r\nexport const TruckCrossborders = ['Yes', 'No'] as const;\r\n\r\nexport const TruckCertificates = [\r\n  'Hazmat',\r\n  'Tsa',\r\n  'TWIC',\r\n  'Tanker Endorsement',\r\n] as const;\r\n\r\nexport const TruckEquipments = [\r\n  'Dock height risers',\r\n  'Air ride',\r\n  'Lift gate',\r\n  'Keep from freezing',\r\n  'ICC bar',\r\n  'Vertical E-track',\r\n  'Horizontal E-track',\r\n  'Pallet jack',\r\n  'PPE',\r\n  'Ramps',\r\n  'Straps',\r\n  'Loads bars',\r\n  'Blankets',\r\n  'Pads',\r\n  'Fire extinguisher',\r\n  'Metal hooks',\r\n  'Reefer',\r\n  'Heater',\r\n] as const;\r\n\r\nexport const LoadStatuses = [\r\n  'Available',\r\n  'Planned',\r\n  'In Progress',\r\n  'TONU',\r\n  'Cancelled',\r\n  'Completed',\r\n] as const;\r\n\r\nexport const UnitsOfWeight = ['LBS', 'KG', 'TON'] as const;\r\n\r\nexport const UnitsOfLength = ['FT', 'IN', 'M', 'CM'] as const;\r\n\r\nexport const PUSH_STATES = [\r\n  'New',\r\n  'Ready for send',\r\n  'Processing send',\r\n  'Sent for deliver',\r\n  'Error sending',\r\n  'Ready for receiving receipt',\r\n  'Processing receiving receipt',\r\n  'Sent to user',\r\n  'Error from receipt',\r\n  'Error receiving receipt',\r\n] as const;\r\n\r\nexport const EMAIL_STATES = [\r\n  'New',\r\n  'Ready',\r\n  'Processing',\r\n  'Sent',\r\n  'Error',\r\n] as const;\r\n\r\nexport const EMAIL_TO_TYPES = ['User', 'Person'] as const;\r\n\r\nexport type Order = 'asc' | 'desc';\r\nexport type QueryKey<T> = readonly [\r\n  key: string,\r\n  page: number,\r\n  rowsPerPage: number,\r\n  orderBy?: string,\r\n  order?: Order,\r\n  queryParams?: T,\r\n];\r\n// export type BaseQuery = {\r\n//   readonly queryKey: QueryKey;\r\n// };\r\nexport type Query<T> = {\r\n  readonly queryKey: QueryKey<T>;\r\n};\r\nexport type QuerySingleKey = readonly [key: string, recordId: string];\r\nexport type QuerySingle = {\r\n  readonly queryKey: QuerySingleKey;\r\n};\r\nexport type Result<T> = {\r\n  items: T[];\r\n  limit: number;\r\n  offset: number;\r\n  total: number;\r\n};\r\nexport type QueryFn = (query: Query<{ search: any }>) => Promise<Result<any>>;\r\n\r\nexport type UserDataType = {\r\n  username: string;\r\n  password: string;\r\n} & Partial<User>;\r\nexport interface AuthContextType {\r\n  user: UserDataType | null;\r\n  signin: (\r\n    username: string,\r\n    password: string,\r\n    callback: (user: UserDataType | null) => void,\r\n  ) => void;\r\n  signout: (callback: VoidFunction) => void;\r\n}\r\nexport type SnackbarMessage = {\r\n  message: string;\r\n  severity: AlertColor;\r\n  handleClose?: (event?: React.SyntheticEvent | Event, reason?: string) => void;\r\n};\r\nexport type PersonType = (typeof PersonTypes)[number];\r\nexport type LangPriority = (typeof LangPriorities)[number];\r\nexport type UserRole = (typeof UserRoles)[number];\r\nexport type CustomerType = (typeof CustomerTypes)[number];\r\nexport type TruckType = (typeof TruckTypes)[number];\r\nexport type TruckStatus = (typeof TruckStatuses)[number];\r\nexport type TruckCrossborder = (typeof TruckCrossborders)[number];\r\nexport type TruckCertificate = (typeof TruckCertificates)[number];\r\nexport type TruckEquipment = (typeof TruckEquipments)[number];\r\nexport type LoadStatus = (typeof LoadStatuses)[number];\r\nexport type UnitOfWeight = (typeof UnitsOfWeight)[number];\r\nexport type UnitOfLength = (typeof UnitsOfLength)[number];\r\nexport type PushState = (typeof PUSH_STATES)[number];\r\nexport type EmailState = (typeof EMAIL_STATES)[number];\r\nexport type EmailToType = (typeof EMAIL_TO_TYPES)[number];\r\n\r\nexport type GeoPoint = [number, number];\r\n\r\nexport interface Person {\r\n  id: string;\r\n  fullName: string;\r\n  type: PersonType;\r\n  phone?: string;\r\n  email?: string;\r\n}\r\n\r\nexport interface Owner extends Person {\r\n  type: PersonType;\r\n  phone: string;\r\n  phone2?: string;\r\n  email: string;\r\n  address: string;\r\n  ownTrucks?: Truck[];\r\n  coordinators?: Coordinator[];\r\n  drivers?: Driver[];\r\n}\r\n\r\nexport interface CreateOwner {\r\n  fullName?: string;\r\n  birthDate?: Date;\r\n  citizenship?: string;\r\n  languagePriority?: LangPriority;\r\n  hiredBy?: string;\r\n  hireDate?: Date;\r\n  snn?: string;\r\n  company?: string;\r\n  insurancePolicy?: string;\r\n  insurancePolicyExp?: Date;\r\n  address?: string;\r\n  phone?: string;\r\n  phone2?: string;\r\n  email?: string;\r\n  emergencyContactName?: string;\r\n  emergencyContactRel?: string;\r\n  emergencyContactPhone?: string;\r\n  appLogin?: string;\r\n  appPass?: string;\r\n  notes?: string;\r\n}\r\n\r\nexport interface UpdateOwner extends Partial<CreateOwner> {\r\n  id: string;\r\n}\r\n\r\nexport interface CreateOwnerDriver {\r\n  fullName?: string;\r\n  birthDate?: Date;\r\n  citizenship?: string;\r\n  languagePriority?: LangPriority;\r\n  driverLicenceNumber?: string;\r\n  driverLicenceState?: string;\r\n  driverLicenceExp?: Date;\r\n  idDocId?: string;\r\n  idDocType?: string;\r\n  idDocExp?: Date;\r\n  hiredBy?: string;\r\n  hireDate?: Date;\r\n  snn?: string;\r\n  company?: string;\r\n  insurancePolicy?: string;\r\n  insurancePolicyExp?: Date;\r\n  address?: string;\r\n  phone?: string;\r\n  phone2?: string;\r\n  email?: string;\r\n  emergencyContactName?: string;\r\n  emergencyContactRel?: string;\r\n  emergencyContactPhone?: string;\r\n  appLogin?: string;\r\n  appPass?: string;\r\n  notes?: string;\r\n}\r\n\r\nexport interface UpdateOwnerDriver extends Partial<CreateOwnerDriver> {\r\n  id: string;\r\n}\r\n\r\nexport interface Coordinator extends Person {\r\n  type: PersonType;\r\n  phone: string;\r\n  phone2?: string;\r\n  email: string;\r\n  address: string;\r\n  coordinateTrucks?: Truck[];\r\n  owner: Owner;\r\n}\r\n\r\nexport interface CreateCoordinator {\r\n  fullName?: string;\r\n  birthDate?: Date;\r\n  citizenship?: string;\r\n  languagePriority?: LangPriority;\r\n  hiredBy?: string;\r\n  hireDate?: Date;\r\n  snn?: string;\r\n  company?: string;\r\n  insurancePolicy?: string;\r\n  insurancePolicyExp?: Date;\r\n  address?: string;\r\n  phone?: string;\r\n  phone2?: string;\r\n  email?: string;\r\n  emergencyContactName?: string;\r\n  emergencyContactRel?: string;\r\n  emergencyContactPhone?: string;\r\n  owner?: Owner | null;\r\n  notes?: string;\r\n}\r\n\r\nexport interface UpdateCoordinator extends Partial<CreateCoordinator> {\r\n  id: string;\r\n}\r\n\r\nexport interface CreateCoordinatorDriver {\r\n  fullName?: string;\r\n  birthDate?: Date;\r\n  citizenship?: string;\r\n  languagePriority?: LangPriority;\r\n  driverLicenceNumber?: string;\r\n  driverLicenceState?: string;\r\n  driverLicenceExp?: Date;\r\n  idDocId?: string;\r\n  idDocType?: string;\r\n  idDocExp?: Date;\r\n  hiredBy?: string;\r\n  hireDate?: Date;\r\n  snn?: string;\r\n  company?: string;\r\n  insurancePolicy?: string;\r\n  insurancePolicyExp?: Date;\r\n  address?: string;\r\n  phone?: string;\r\n  phone2?: string;\r\n  email?: string;\r\n  emergencyContactName?: string;\r\n  emergencyContactRel?: string;\r\n  emergencyContactPhone?: string;\r\n  appLogin?: string;\r\n  appPass?: string;\r\n  owner?: Owner | null;\r\n  notes?: string;\r\n}\r\n\r\nexport interface UpdateCoordinatorDriver\r\n  extends Partial<CreateCoordinatorDriver> {\r\n  id: string;\r\n}\r\n\r\nexport interface Driver extends Person {\r\n  type: PersonType;\r\n  phone: string;\r\n  phone2?: string;\r\n  email?: string;\r\n  address?: string;\r\n  driveTrucks?: Truck[];\r\n  owner: Owner;\r\n}\r\n\r\nexport interface CreateDriver {\r\n  fullName?: string;\r\n  birthDate?: Date;\r\n  citizenship?: string;\r\n  languagePriority?: LangPriority;\r\n  driverLicenceNumber?: string;\r\n  driverLicenceState?: string;\r\n  driverLicenceExp?: Date;\r\n  idDocId?: string;\r\n  idDocType?: string;\r\n  idDocExp?: Date;\r\n  hiredBy?: string;\r\n  hireDate?: Date;\r\n  address?: string;\r\n  phone?: string;\r\n  phone2?: string;\r\n  email?: string;\r\n  emergencyContactName?: string;\r\n  emergencyContactRel?: string;\r\n  emergencyContactPhone?: string;\r\n  appLogin?: string;\r\n  appPass?: string;\r\n  owner?: Owner | null;\r\n  notes?: string;\r\n}\r\n\r\nexport interface UpdateDriver extends Partial<CreateDriver> {\r\n  id: string;\r\n}\r\n\r\nexport interface Truck {\r\n  id: string;\r\n  truckNumber: number;\r\n  status: TruckStatus;\r\n  lastLocation?: GeoPoint;\r\n  lastCity?: string;\r\n  locationUpdatedAt?: string;\r\n  availabilityLocation?: GeoPoint;\r\n  // availabilityCity?: Location;\r\n  availabilityAt?: string;\r\n  milesHaversine?: number;\r\n  milesByRoads?: number;\r\n  crossborder: TruckCrossborder;\r\n  certificate: TruckCertificate;\r\n  type: TruckType;\r\n  equipment?: TruckEquipment[];\r\n  payload?: number;\r\n  grossWeight: string;\r\n  make: string;\r\n  model: string;\r\n  year: number;\r\n  color: string;\r\n  vinCode: string;\r\n  licencePlate: string;\r\n  insideDims: string;\r\n  doorDims?: string;\r\n  owner?: Owner;\r\n  coordinator?: Coordinator;\r\n  driver?: Driver;\r\n  reservedAt?: string; //Date;\r\n  reservedBy?: User;\r\n}\r\n\r\nexport interface TruckForMap {\r\n  id: string;\r\n  truckNumber: number;\r\n  status: TruckStatus;\r\n  lastLocation?: GeoPoint;\r\n}\r\n\r\nexport interface CreateTruck {\r\n  truckNumber?: number;\r\n  status?: TruckStatus;\r\n  crossborder?: TruckCrossborder;\r\n  certificate?: TruckCertificate;\r\n  type?: TruckType;\r\n  equipment?: TruckEquipment[];\r\n  payload?: number;\r\n  grossWeight?: string;\r\n  make?: string;\r\n  model?: string;\r\n  year?: number;\r\n  color?: string;\r\n  vinCode?: string;\r\n  licencePlate?: string;\r\n  insideDims?: string;\r\n  doorDims?: string;\r\n  owner?: Owner | null;\r\n  coordinator?: Coordinator | null;\r\n  driver?: Driver | null;\r\n}\r\n\r\nexport interface UpdateTruck extends Partial<CreateTruck> {\r\n  id: string;\r\n  reservedAt?: Date | null;\r\n  status?: TruckStatus;\r\n  availabilityLocation?: GeoPoint | null;\r\n  availabilityAt?: Date;\r\n}\r\n\r\nexport interface Load {\r\n  id: string;\r\n  loadNumber: number;\r\n  ref?: string[];\r\n  status: LoadStatus;\r\n  stops: (StopPickUp | StopDelivery)[];\r\n  milesByRoads?: number;\r\n  milesHaversine?: number;\r\n  weight: string;\r\n  truckType: TruckType[];\r\n  rate?: number;\r\n  totalCharges?: number;\r\n  currency: string;\r\n  bookedByUser?: User;\r\n  bookedByCompany?: string;\r\n  assignTo?: User[];\r\n  checkInAs?: string;\r\n  truck?: Truck;\r\n  bookedWith?: Customer;\r\n}\r\n\r\nexport interface CreateLoad {\r\n  status: LoadStatus;\r\n  ref?: string[];\r\n  stops: (StopPickUp | StopDelivery)[];\r\n  weight?: string;\r\n  truckType?: TruckType[];\r\n  rate?: number;\r\n  totalCharges?: number;\r\n  currency: string;\r\n  bookedByUser?: User | null;\r\n  bookedByCompany?: string;\r\n  assignTo?: User[];\r\n  checkInAs?: string;\r\n  truck?: Truck | null;\r\n  bookedWith?: Customer | null;\r\n}\r\n\r\nexport interface UpdateLoad extends Partial<CreateLoad> {\r\n  id: string;\r\n}\r\n\r\nexport interface Customer {\r\n  id: string;\r\n  name: string;\r\n  type: CustomerType;\r\n  address: string;\r\n  address2?: string;\r\n  city: string;\r\n  state: string;\r\n  zipCode: string;\r\n  phone: string;\r\n  fax?: string;\r\n  email: string;\r\n  website?: string;\r\n}\r\n\r\nexport interface CreateCustomer {\r\n  name?: string;\r\n  type?: CustomerType;\r\n  address?: string;\r\n  address2?: string;\r\n  city?: string;\r\n  state?: string;\r\n  zipCode?: string;\r\n  phone?: string;\r\n  fax?: string;\r\n  email?: string;\r\n  website?: string;\r\n}\r\n\r\nexport interface UpdateCustomer extends Partial<CreateCustomer> {\r\n  id: string;\r\n}\r\nexport interface Facility {\r\n  id: string;\r\n  readonly name: string;\r\n  readonly address: string;\r\n  readonly address2?: string;\r\n  readonly facilityLocation: GeoPoint;\r\n}\r\n\r\nexport interface CreateFacility {\r\n  readonly name?: string;\r\n  readonly address?: string;\r\n  readonly address2?: string;\r\n  readonly facilityLocation?: GeoPoint;\r\n}\r\n\r\nexport interface UpdateFacility extends Partial<CreateFacility> {\r\n  id: string;\r\n}\r\n\r\nexport interface Location {\r\n  id: string;\r\n  zipCode: string;\r\n  name: string;\r\n  stateCode: string;\r\n  stateName: string;\r\n  location: GeoPoint;\r\n}\r\n\r\nexport type CreateLocation = Omit<Location, 'id'>;\r\n\r\nexport interface UpdateLocation extends Partial<CreateLocation> {\r\n  id: string;\r\n}\r\n\r\nexport interface User {\r\n  id: string;\r\n  fullName: string;\r\n  phone?: string;\r\n  userRole: UserRole;\r\n  jobTitle: string;\r\n  email: string;\r\n}\r\n\r\nexport interface CreateUser extends Omit<User, 'id'> {\r\n  password?: string;\r\n}\r\n\r\nexport interface UpdateUser extends Partial<CreateUser> {\r\n  id: string;\r\n}\r\n\r\nexport interface File {\r\n  id: string;\r\n  filename: string;\r\n  contentType: string;\r\n  contentLength: number;\r\n  comment?: string;\r\n}\r\n\r\nexport enum StopType {\r\n  PickUp = 'PickUp',\r\n  Delivery = 'Delivery',\r\n}\r\n\r\nexport enum TimeFrameType {\r\n  FCFS = 'FCFS',\r\n  APPT = 'APPT',\r\n  ASAP = 'ASAP',\r\n  Direct = 'Direct',\r\n}\r\n\r\nexport type TimeFrameFCFS = {\r\n  type: TimeFrameType.FCFS;\r\n  from: Date | null;\r\n  to: Date | null;\r\n};\r\n\r\nexport type TimeFrameAPPT = {\r\n  type: TimeFrameType.APPT;\r\n  at: Date | null;\r\n};\r\n\r\nexport type TimeFrameASAP = {\r\n  type: TimeFrameType.ASAP;\r\n  at: Date | null;\r\n};\r\n\r\nexport type TimeFrameDirect = {\r\n  type: TimeFrameType.Direct;\r\n  at: Date | null;\r\n};\r\n\r\nexport interface StopPickUp {\r\n  type: StopType.PickUp;\r\n  timeFrame: TimeFrameFCFS | TimeFrameAPPT | TimeFrameASAP;\r\n  facility: Facility | null;\r\n  freightList: Freight[];\r\n  addInfo?: string;\r\n}\r\n\r\nexport interface StopDelivery {\r\n  type: StopType.Delivery;\r\n  timeFrame: TimeFrameFCFS | TimeFrameAPPT | TimeFrameDirect;\r\n  facility: Facility | null;\r\n  addInfo?: string;\r\n}\r\n\r\nexport interface Freight {\r\n  pieces: number | null;\r\n  unitOfWeight: UnitOfWeight;\r\n  weight: number | null;\r\n  unitOfLength: UnitOfLength;\r\n  length: number | null;\r\n}\r\n\r\nexport interface Push {\r\n  readonly id: string;\r\n  readonly state: PushState;\r\n  readonly to: Person;\r\n  readonly title?: string;\r\n  readonly subtitle?: string;\r\n  readonly body?: string;\r\n  readonly data?: Record<string, any>;\r\n  readonly badge?: number;\r\n  readonly sendResult?: Record<string, any>;\r\n  readonly receiptResult?: Record<string, any>;\r\n  readonly createdAt: Date;\r\n  readonly updatedAt: Date;\r\n}\r\n\r\nexport type To = {\r\n  readonly to: Person | User;\r\n  readonly toType: EmailToType;\r\n};\r\n\r\nexport interface Email {\r\n  readonly id: string;\r\n  readonly state: EmailState;\r\n  readonly from: string;\r\n  readonly to: To[];\r\n  readonly subject: string;\r\n  readonly text: string;\r\n  readonly html?: string;\r\n  readonly sendResult?: Record<string, any>;\r\n  readonly createdAt: Date;\r\n  readonly updatedAt: Date;\r\n}\r\n","export const dateTimeFormatter = Intl.DateTimeFormat('en-US', {\r\n  year: 'numeric',\r\n  month: 'numeric',\r\n  day: 'numeric',\r\n  hour: 'numeric',\r\n  minute: 'numeric',\r\n  second: 'numeric',\r\n  hour12: true,\r\n});\r\n","import * as React from 'react';\r\n\r\nexport function stopPropagation(e: React.SyntheticEvent) {\r\n  e.stopPropagation();\r\n}\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2m0 16H8V7h11z\"\n}), 'ContentCopy');","import { getDefaultState } from './mutation'\nimport { notifyManager } from './notifyManager'\nimport { Subscribable } from './subscribable'\nimport { shallowEqualObjects } from './utils'\nimport type { QueryClient } from './queryClient'\nimport type {\n  MutateOptions,\n  MutationObserverBaseResult,\n  MutationObserverOptions,\n  MutationObserverResult,\n} from './types'\nimport type { Action, Mutation } from './mutation'\n\n// TYPES\n\ntype MutationObserverListener<TData, TError, TVariables, TContext> = (\n  result: MutationObserverResult<TData, TError, TVariables, TContext>,\n) => void\n\ninterface NotifyOptions {\n  listeners?: boolean\n  onError?: boolean\n  onSuccess?: boolean\n}\n\n// CLASS\n\nexport class MutationObserver<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n> extends Subscribable<\n  MutationObserverListener<TData, TError, TVariables, TContext>\n> {\n  options!: MutationObserverOptions<TData, TError, TVariables, TContext>\n\n  private client: QueryClient\n  private currentResult!: MutationObserverResult<\n    TData,\n    TError,\n    TVariables,\n    TContext\n  >\n  private currentMutation?: Mutation<TData, TError, TVariables, TContext>\n  private mutateOptions?: MutateOptions<TData, TError, TVariables, TContext>\n\n  constructor(\n    client: QueryClient,\n    options: MutationObserverOptions<TData, TError, TVariables, TContext>,\n  ) {\n    super()\n\n    this.client = client\n    this.setOptions(options)\n    this.bindMethods()\n    this.updateResult()\n  }\n\n  protected bindMethods(): void {\n    this.mutate = this.mutate.bind(this)\n    this.reset = this.reset.bind(this)\n  }\n\n  setOptions(\n    options?: MutationObserverOptions<TData, TError, TVariables, TContext>,\n  ) {\n    const prevOptions = this.options\n    this.options = this.client.defaultMutationOptions(options)\n    if (!shallowEqualObjects(prevOptions, this.options)) {\n      this.client.getMutationCache().notify({\n        type: 'observerOptionsUpdated',\n        mutation: this.currentMutation,\n        observer: this,\n      })\n    }\n    this.currentMutation?.setOptions(this.options)\n  }\n\n  protected onUnsubscribe(): void {\n    if (!this.hasListeners()) {\n      this.currentMutation?.removeObserver(this)\n    }\n  }\n\n  onMutationUpdate(action: Action<TData, TError, TVariables, TContext>): void {\n    this.updateResult()\n\n    // Determine which callbacks to trigger\n    const notifyOptions: NotifyOptions = {\n      listeners: true,\n    }\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = true\n    } else if (action.type === 'error') {\n      notifyOptions.onError = true\n    }\n\n    this.notify(notifyOptions)\n  }\n\n  getCurrentResult(): MutationObserverResult<\n    TData,\n    TError,\n    TVariables,\n    TContext\n  > {\n    return this.currentResult\n  }\n\n  reset(): void {\n    this.currentMutation = undefined\n    this.updateResult()\n    this.notify({ listeners: true })\n  }\n\n  mutate(\n    variables?: TVariables,\n    options?: MutateOptions<TData, TError, TVariables, TContext>,\n  ): Promise<TData> {\n    this.mutateOptions = options\n\n    if (this.currentMutation) {\n      this.currentMutation.removeObserver(this)\n    }\n\n    this.currentMutation = this.client.getMutationCache().build(this.client, {\n      ...this.options,\n      variables:\n        typeof variables !== 'undefined' ? variables : this.options.variables,\n    })\n\n    this.currentMutation.addObserver(this)\n\n    return this.currentMutation.execute()\n  }\n\n  private updateResult(): void {\n    const state = this.currentMutation\n      ? this.currentMutation.state\n      : getDefaultState<TData, TError, TVariables, TContext>()\n\n    const result: MutationObserverBaseResult<\n      TData,\n      TError,\n      TVariables,\n      TContext\n    > = {\n      ...state,\n      isLoading: state.status === 'loading',\n      isSuccess: state.status === 'success',\n      isError: state.status === 'error',\n      isIdle: state.status === 'idle',\n      mutate: this.mutate,\n      reset: this.reset,\n    }\n\n    this.currentResult = result as MutationObserverResult<\n      TData,\n      TError,\n      TVariables,\n      TContext\n    >\n  }\n\n  private notify(options: NotifyOptions) {\n    notifyManager.batch(() => {\n      // First trigger the mutate callbacks\n      if (this.mutateOptions && this.hasListeners()) {\n        if (options.onSuccess) {\n          this.mutateOptions.onSuccess?.(\n            this.currentResult.data!,\n            this.currentResult.variables!,\n            this.currentResult.context!,\n          )\n          this.mutateOptions.onSettled?.(\n            this.currentResult.data!,\n            null,\n            this.currentResult.variables!,\n            this.currentResult.context,\n          )\n        } else if (options.onError) {\n          this.mutateOptions.onError?.(\n            this.currentResult.error!,\n            this.currentResult.variables!,\n            this.currentResult.context,\n          )\n          this.mutateOptions.onSettled?.(\n            undefined,\n            this.currentResult.error,\n            this.currentResult.variables!,\n            this.currentResult.context,\n          )\n        }\n      }\n\n      // Then trigger the listeners\n      if (options.listeners) {\n        this.listeners.forEach(({ listener }) => {\n          listener(this.currentResult)\n        })\n      }\n    })\n  }\n}\n","'use client'\nimport * as React from 'react'\nimport {\n  MutationObserver,\n  notifyManager,\n  parseMutationArgs,\n} from '@tanstack/query-core'\nimport { useSyncExternalStore } from './useSyncExternalStore'\n\nimport { useQueryClient } from './QueryClientProvider'\nimport { shouldThrowError } from './utils'\nimport type { MutationFunction, MutationKey } from '@tanstack/query-core'\nimport type {\n  UseMutateFunction,\n  UseMutationOptions,\n  UseMutationResult,\n} from './types'\n\n// HOOK\n\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  options: UseMutationOptions<TData, TError, TVariables, TContext>,\n): UseMutationResult<TData, TError, TVariables, TContext>\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  mutationFn: MutationFunction<TData, TVariables>,\n  options?: Omit<\n    UseMutationOptions<TData, TError, TVariables, TContext>,\n    'mutationFn'\n  >,\n): UseMutationResult<TData, TError, TVariables, TContext>\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  mutationKey: MutationKey,\n  options?: Omit<\n    UseMutationOptions<TData, TError, TVariables, TContext>,\n    'mutationKey'\n  >,\n): UseMutationResult<TData, TError, TVariables, TContext>\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  mutationKey: MutationKey,\n  mutationFn?: MutationFunction<TData, TVariables>,\n  options?: Omit<\n    UseMutationOptions<TData, TError, TVariables, TContext>,\n    'mutationKey' | 'mutationFn'\n  >,\n): UseMutationResult<TData, TError, TVariables, TContext>\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  arg1:\n    | MutationKey\n    | MutationFunction<TData, TVariables>\n    | UseMutationOptions<TData, TError, TVariables, TContext>,\n  arg2?:\n    | MutationFunction<TData, TVariables>\n    | UseMutationOptions<TData, TError, TVariables, TContext>,\n  arg3?: UseMutationOptions<TData, TError, TVariables, TContext>,\n): UseMutationResult<TData, TError, TVariables, TContext> {\n  const options = parseMutationArgs(arg1, arg2, arg3)\n  const queryClient = useQueryClient({ context: options.context })\n\n  const [observer] = React.useState(\n    () =>\n      new MutationObserver<TData, TError, TVariables, TContext>(\n        queryClient,\n        options,\n      ),\n  )\n\n  React.useEffect(() => {\n    observer.setOptions(options)\n  }, [observer, options])\n\n  const result = useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) =>\n        observer.subscribe(notifyManager.batchCalls(onStoreChange)),\n      [observer],\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult(),\n  )\n\n  const mutate = React.useCallback<\n    UseMutateFunction<TData, TError, TVariables, TContext>\n  >(\n    (variables, mutateOptions) => {\n      observer.mutate(variables, mutateOptions).catch(noop)\n    },\n    [observer],\n  )\n\n  if (\n    result.error &&\n    shouldThrowError(observer.options.useErrorBoundary, [result.error])\n  ) {\n    throw result.error\n  }\n\n  return { ...result, mutate, mutateAsync: result.mutate }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nfunction noop() {}\n"],"names":["_extends","Object","assign","bind","n","e","arguments","length","t","r","hasOwnProperty","call","apply","SvgCat","_ref","svgRef","title","titleId","props","id","xmlns","viewBox","ref","cx","cy","fill","strokeWidth","style","stroke","d","paintOrder","points","strokeLinecap","ForwardRef","SvgTruck","focusable","fillRule","LocationForGrid","location","onRefClick","addInfo","children","value","setValue","React","items","setItems","geocoder","setGeocoder","setSearch","debounce","geocodeRequest","geocode","then","result","results","locationFromRequest","google","maps","LatLng","res","address_components","formatted_address","concat","lat","lng","geometry","location_type","GeocoderLocationType","APPROXIMATE","viewport","LatLngBounds","place_id","types","forEach","item","toStringLocation","catch","err","selected","selectLocation","_jsxs","display","_jsx","Wrapper","getMapSettings","render","status","setSnackbarMessage","useSnackbar","setLoaderVisibility","useLoader","Status","LOADING","FAILURE","severity","message","SUCCESS","window","Geocoder","textOverflow","overflow","textAlign","href","target","onClick","_Fragment","IconButton","size","event","stopPropagation","navigator","clipboard","writeText","ContentCopy","sx","height","width","reservationTime","calcReserveWillLast","reservedTill","reservedWillLast","Date","Math","ceil","ReserveTruckButton","truck","index","remainReserved","setRemainReserved","reservedAt","reservedBy","addMinutes","isReserved","interval","setInterval","clearInterval","queryClient","useQueryClient","mutate","isLoading","useMutation","TruckUpdate","onSuccess","invalidateQueries","queryKey","refetchType","onError","error","labelId","fullName","Button","m","lineHeight","fontSize","fullWidth","variant","color","onClickCapture","preventDefault","SearchLocationForGrid","label","placeholder","filterSelectedOptions","disabled","selectedValue","setSelectedValue","options","setOptions","find","Autocomplete","getOptionLabel","option","filterOptions","x","isOptionEqualToValue","autoComplete","includeInputInList","noOptionsText","onChange","handleChange","newValue","newCoordsValue","getGeoPointFromLocation","onInputChange","handleInputChange","newInputValue","reason","address","renderInput","params","TextField","renderOption","_createElement","key","Grid","container","alignItems","LocationOnIcon","wordWrap","Box","component","fontWeight","themeMode","localStorage","getItem","headCells","orderField","getData","row","data","truckNumber","numeric","disablePadding","person","coordinator","owner","path","type","firstRow","secondRow","getPath","getType","phone","undefined","equipment","join","firstRowPart1","insideDims","firstRowPart2","doorDims","payload","val","CatIcon","grey","TruckIcon","Avatar","bgcolor","green","margin","availabilityLocation","availabilityAt","dateTimeFormatter","format","milesByRoads","toFixed","setMapData","lastLocation","locationUpdatedAt","StyledTableHead","styled","TableHead","theme","backgroundColor","palette","background","default","StyledTableCell","TableCell","_ref2","maxWidth","paddingTop","paddingBottom","whiteSpace","EnhancedTableHead","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","TableRow","align","padding","map","headCell","sortDirection","TableSortLabel","active","hideSortIcon","direction","property","visuallyHidden","EnhancedTableToolbar","setQueryParams","locationValue","setLocationValue","inputValue","setInputValue","locationsQueryParams","setLocationsQueryParams","availableFrom","setAvailableFrom","availableTo","setAvailableTo","isFromDateError","setFromDateError","isToDateError","setToDateError","statusOpen","setStatusOpen","statusValue","setStatusValue","distanceValue","setDistanceValue","searchDataChanged","setSearchDataChanged","useLocation","useNavigate","TruckDelete","Error","JSON","stringify","total","search","useQuery","queryFn","modifyedQueryFn","LocationsQuery","keepPreviousData","retry","handleDateChange","prev","availableAfter","availableBefore","handleStatusClose","handleStatusChange","TruckStatuses","_","rest","Toolbar","pl","sm","pr","xs","alpha","primary","main","action","activatedOpacity","Typography","flex","distance","_lastLocation","_distance","DateTimePicker","ampm","disablePast","maxDateTime","disableIgnoringDatePartForTimeValidation","viewRenderers","hours","renderTimeViewClock","minutes","seconds","slotProps","textField","name","onBlur","onClose","minDateTime","select","SelectProps","multiple","open","renderValue","onOpen","handleStatusOpen","onKeyUpCapture","onKeyDownCapture","MenuItem","Checkbox","checked","indexOf","ListItemText","Number","isInteger","Array","from","Tooltip","handleApplyFilter","queryParams","FilterListIcon","handleClearFilter","FilterListOffIcon","Loader","visible","EnhancedTable","setOrder","setOrderBy","setSelected","page","setPage","rowsPerPage","setRowsPerPage","tableContainerRef","navigate","useMap","isFetching","TrucksQuery","rows","current","scrollTo","top","left","behavior","newSelected","selectedItem","push","Paper","query","TableContainer","Table","minWidth","stickyHeader","handleRequestSort","isAsc","TableBody","isItemSelected","hover","onDoubleClick","relative","state","replace","role","tabIndex","cursor","cell","cellData","TablePagination","rowsPerPageOptions","count","onPageChange","handleChangePage","newPage","onRowsPerPageChange","parseInt","LangPriorities","UserRoles","CustomerTypes","TruckTypes","TruckCrossborders","TruckCertificates","TruckEquipments","LoadStatuses","UnitsOfWeight","UnitsOfLength","StopType","TimeFrameType","Intl","DateTimeFormat","year","month","day","hour","minute","second","hour12","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","jsx","MutationObserver","Subscribable","constructor","client","super","this","bindMethods","updateResult","reset","_this$currentMutation","prevOptions","defaultMutationOptions","shallowEqualObjects","getMutationCache","notify","mutation","currentMutation","observer","onUnsubscribe","_this$currentMutation2","hasListeners","removeObserver","onMutationUpdate","notifyOptions","listeners","getCurrentResult","currentResult","variables","mutateOptions","build","addObserver","execute","getDefaultState","isSuccess","isError","isIdle","notifyManager","batch","_this$mutateOptions$o","_this$mutateOptions","_this$mutateOptions$o2","_this$mutateOptions2","context","onSettled","_this$mutateOptions$o3","_this$mutateOptions3","_this$mutateOptions$o4","_this$mutateOptions4","listener","arg1","arg2","arg3","useSyncExternalStore","onStoreChange","subscribe","batchCalls","shouldThrowError","useErrorBoundary","noop"],"sourceRoot":""}