{"version":3,"file":"static/js/714.fad4dafd.chunk.js","mappings":"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","sources":["api/api.ts","locations/locations.tsx","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/icons-material/Edit.js"],"sourcesContent":["import { authProvider } from '../utils/auth';\n\nconst { origin } = new URL(window.location.href);\n\nexport type Order = 'asc' | 'desc';\n\nexport const authFetch: (\n  input: string | URL,\n  init?: RequestInit,\n) => Promise<Response> = (input, init = {}) => {\n  const fetchInit = { ...init, headers: new Headers() };\n  fetchInit.headers.set(\n    'Authorization',\n    'Basic ' +\n      btoa(authProvider.user?.username + ':' + authProvider.user?.password),\n  );\n  return fetch(input, fetchInit);\n};\n\nexport const TrucksQuery = (\n  page: number,\n  rowsPerPage: number,\n  orderBy?: string,\n  order?: Order,\n  queryParams?: {\n    truckNumber?: number;\n    lastLocation?: string;\n    distance?: string;\n  },\n) => {\n  const url = new URL('/truck', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  if (queryParams?.lastLocation && queryParams?.distance) {\n    url.searchParams.append('lastLocation', `${queryParams.lastLocation}`);\n    url.searchParams.append('distance', `${queryParams.distance}`);\n  }\n  return authFetch(url).then((res) => res.json());\n};\n\nexport const TruckDelete = (userId: string) => {\n  const url = new URL(`/truck/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }).then((res) => res.json());\n};\n\nexport const LocationsQuery = (\n  page: number,\n  rowsPerPage: number,\n  orderBy?: string,\n  order?: Order,\n  queryParams?: { search?: string; name?: string },\n) => {\n  const url = new URL('/location', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.search) {\n    url.searchParams.append('search', `${queryParams.search}`);\n  }\n  if (queryParams?.name) {\n    url.searchParams.append('name', `${queryParams.name}`);\n  }\n  return authFetch(url).then((res) => res.json());\n};\n\nexport const LocationDelete = (userId: string) => {\n  const url = new URL(`/location/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }).then((res) => res.json());\n};\n\nexport const LoadsQuery = (\n  page: number,\n  rowsPerPage: number,\n  orderBy?: string,\n  order?: Order,\n  queryParams?: { loadNumber?: number; truckNumber?: number },\n) => {\n  const url = new URL('/load', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.loadNumber) {\n    url.searchParams.append('loadNumber', `${queryParams.loadNumber}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  return authFetch(url).then((res) => res.json());\n};\n\nexport const LoadDelete = (userId: string) => {\n  const url = new URL(`/load/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }).then((res) => res.json());\n};\n\nexport const OwnersQuery = (\n  page: number,\n  rowsPerPage: number,\n  orderBy?: string,\n  order?: Order,\n  queryParams?: { fullName?: number; truckNumber?: number },\n) => {\n  const url = new URL('/owner', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.fullName) {\n    url.searchParams.append('fullName', `${queryParams.fullName}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  return authFetch(url).then((res) => res.json());\n};\n\nexport const OwnerDelete = (userId: string) => {\n  const url = new URL(`/owner/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }).then((res) => res.json());\n};\n\nexport const DriversQuery = (\n  page: number,\n  rowsPerPage: number,\n  orderBy?: string,\n  order?: Order,\n  queryParams?: { fullName?: number; truckNumber?: number },\n) => {\n  const url = new URL('/driver', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.fullName) {\n    url.searchParams.append('fullName', `${queryParams.fullName}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  return authFetch(url).then((res) => res.json());\n};\n\nexport const DriverDelete = (userId: string) => {\n  const url = new URL(`/driver/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }).then((res) => res.json());\n};\n\nexport const CoordinatorsQuery = (\n  page: number,\n  rowsPerPage: number,\n  orderBy?: string,\n  order?: Order,\n  queryParams?: { fullName?: number; truckNumber?: number },\n) => {\n  const url = new URL('/coordinator', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.fullName) {\n    url.searchParams.append('fullName', `${queryParams.fullName}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  return authFetch(url).then((res) => res.json());\n};\n\nexport const CoordinatorDelete = (userId: string) => {\n  const url = new URL(`/coordinator/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }).then((res) => res.json());\n};\n\nexport const UsersQuery = (\n  page: number,\n  rowsPerPage: number,\n  orderBy?: string,\n  order?: Order,\n  queryParams?: { fullName?: number },\n) => {\n  const url = new URL('/user', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.fullName) {\n    url.searchParams.append('fullName', `${queryParams.fullName}`);\n  }\n  return authFetch(url).then((res) => res.json());\n};\n\nexport const UserDelete = (userId: string) => {\n  const url = new URL(`/user/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }).then((res) => res.json());\n};\n","import * as React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\n\nimport { alpha, styled } from '@mui/material/styles';\nimport TextField from '@mui/material/TextField';\nimport Checkbox from '@mui/material/Checkbox';\nimport Tooltip from '@mui/material/Tooltip';\nimport TableCell from '@mui/material/TableCell';\nimport Box from '@mui/material/Box';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport TableSortLabel from '@mui/material/TableSortLabel';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\nimport IconButton from '@mui/material/IconButton';\nimport AddIcon from '@mui/icons-material/Add';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport FilterListIcon from '@mui/icons-material/FilterList';\nimport FilterListOffIcon from '@mui/icons-material/FilterListOff';\nimport { visuallyHidden } from '@mui/utils';\n\nimport Loader from '../components/Loader';\n\nimport { LocationsQuery, LocationDelete } from '../api';\nimport { Order, Location } from '../utils/dataTypes';\n\ninterface HeadCell {\n  id: string;\n  disablePadding: boolean;\n  orderField?: keyof Location;\n  getData: (row: Location) => { data: JSX.Element | string; title?: string };\n  label: string;\n  numeric: boolean;\n}\n\nconst headCells: readonly HeadCell[] = [\n  {\n    id: 'zipCode',\n    orderField: 'zipCode',\n    getData: (row) => ({ data: `${row.zipCode}` }),\n    numeric: true,\n    disablePadding: false,\n    label: 'Zip Code',\n  },\n  {\n    id: 'name',\n    orderField: 'name',\n    getData: (row) => ({ data: `${row.name}` }),\n    numeric: false,\n    disablePadding: true,\n    label: 'City Name',\n  },\n  {\n    id: 'stateCode',\n    orderField: 'stateCode',\n    getData: (row) => ({ data: `${row.stateCode}` }),\n    numeric: false,\n    disablePadding: true,\n    label: 'State Code',\n  },\n  {\n    id: 'stateName',\n    orderField: 'stateName',\n    getData: (row) => ({ data: `${row.stateName}` }),\n    numeric: false,\n    disablePadding: true,\n    label: 'State Name',\n  },\n  {\n    id: 'location',\n    getData: (row) => ({ data: `${row.location.join(',')}` }),\n    numeric: false,\n    disablePadding: true,\n    label: 'Geo Point',\n  },\n];\n\ninterface EnhancedTableProps {\n  numSelected: number;\n  onRequestSort: (\n    event: React.MouseEvent<unknown>,\n    property: keyof Location,\n  ) => void;\n  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  order: Order | undefined;\n  orderBy: string | undefined;\n  rowCount: number;\n}\n\nconst StyledTableHead = styled(TableHead)(({ theme }) => ({\n  backgroundColor: theme.palette.background.default,\n}));\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  maxWidth: '100px',\n  whiteSpace: 'nowrap',\n  textOverflow: 'ellipsis',\n  overflow: 'hidden',\n}));\n\nfunction stopPropagation(e: React.SyntheticEvent) {\n  e.stopPropagation();\n}\n\nfunction EnhancedTableHead(props: EnhancedTableProps) {\n  const {\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n  } = props;\n  const createSortHandler =\n    (property: keyof Location) => (event: React.MouseEvent<unknown>) => {\n      onRequestSort(event, property);\n    };\n\n  return (\n    <StyledTableHead>\n      <TableRow>\n        <StyledTableCell padding=\"checkbox\">\n          <Checkbox\n            name={'enhanced-table-checkbox-select-all'}\n            color=\"primary\"\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{\n              'aria-label': 'enhanced-table-checkbox-select-all',\n            }}\n          />\n        </StyledTableCell>\n        {headCells.map((headCell) => (\n          <StyledTableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'center'}\n            padding={headCell.disablePadding ? 'none' : 'normal'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={headCell.orderField && orderBy === headCell.orderField}\n              hideSortIcon={!headCell.orderField}\n              direction={orderBy === headCell.orderField ? order : 'asc'}\n              onClick={\n                headCell.orderField\n                  ? createSortHandler(headCell.orderField)\n                  : () => {\n                      return;\n                    }\n              }\n            >\n              {headCell.label}\n              {headCell.orderField && orderBy === headCell.orderField ? (\n                <Box component=\"span\" sx={visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </StyledTableCell>\n        ))}\n      </TableRow>\n    </StyledTableHead>\n  );\n}\n\ninterface EnhancedTableToolbarProps {\n  selected: readonly string[];\n  setQueryParams: React.Dispatch<React.SetStateAction<Record<string, string>>>;\n}\n\nfunction EnhancedTableToolbar(props: EnhancedTableToolbarProps) {\n  const { selected, setQueryParams } = props;\n  const [cityNameSearch, setCityNameSearch] = React.useState<string>('');\n  const [cityNameChanged, setCityNameChanged] = React.useState<boolean>(false);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const queryClient = useQueryClient();\n  const mutation = useMutation(LocationDelete, {\n    onSuccess: () => {\n      queryClient.invalidateQueries(['locations']);\n    },\n  });\n\n  const cityNameHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setCityNameSearch(event.target.value);\n    setCityNameChanged(true);\n  };\n  const locationClearHandler = () => {\n    setCityNameChanged(false);\n    setCityNameSearch('');\n    setQueryParams({});\n  };\n  const filterHandler = () => {\n    setCityNameChanged(false);\n    setQueryParams({ search: cityNameSearch });\n  };\n  const createHandler = () => {\n    navigate('./create', {\n      relative: 'path',\n      state: { from: location },\n      replace: false,\n    });\n  };\n  const editHandler = () => {\n    navigate(`./edit/${selected[0]}`, {\n      relative: 'path',\n      state: { from: location },\n      replace: false,\n    });\n  };\n  const deleteHandler = () => {\n    mutation.mutate(`${selected[0]}`);\n  };\n\n  return (\n    <Toolbar\n      sx={{\n        pl: { sm: 2 },\n        pr: { xs: 1, sm: 1 },\n        ...(selected.length > 0 && {\n          bgcolor: (theme) =>\n            alpha(\n              theme.palette.primary.main,\n              theme.palette.action.activatedOpacity,\n            ),\n        }),\n      }}\n    >\n      {selected.length > 0 ? (\n        <Typography\n          sx={{ flex: '1 1 100%' }}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {selected.length} selected\n        </Typography>\n      ) : (\n        <Typography\n          sx={{\n            flex: '1 1 100%',\n            whiteSpace: 'nowrap',\n            textOverflow: 'ellipsis',\n            overflow: 'hidden',\n          }}\n          variant=\"h6\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          Locations\n        </Typography>\n      )}\n      <TextField\n        label=\"City Name\"\n        value={cityNameSearch}\n        onChange={cityNameHandler}\n        size=\"small\"\n      />\n      <Tooltip title=\"Filter list\">\n        {(cityNameChanged || !cityNameSearch) &&\n        !(cityNameChanged && !cityNameSearch) ? (\n          <span>\n            <IconButton disabled={!cityNameSearch} onClick={filterHandler}>\n              <FilterListIcon />\n            </IconButton>\n          </span>\n        ) : (\n          <IconButton onClick={locationClearHandler}>\n            <FilterListOffIcon />\n          </IconButton>\n        )}\n      </Tooltip>\n      <Box sx={{ p: 1, display: 'inline-flex' }}>\n        <Tooltip title=\"Create\">\n          <span>\n            <IconButton onClick={createHandler}>\n              <AddIcon />\n            </IconButton>\n          </span>\n        </Tooltip>\n        <Tooltip title=\"Edit\">\n          <span>\n            <IconButton disabled={selected.length !== 1} onClick={editHandler}>\n              <EditIcon />\n            </IconButton>\n          </span>\n        </Tooltip>\n        <Tooltip title=\"Delete\">\n          <span>\n            <IconButton\n              disabled={selected.length !== 1}\n              onClick={deleteHandler}\n            >\n              <DeleteIcon />\n            </IconButton>\n          </span>\n        </Tooltip>\n      </Box>\n    </Toolbar>\n  );\n}\n\nexport default function EnhancedTable() {\n  const [order, setOrder] = React.useState<Order | undefined>('asc');\n  const [orderBy, setOrderBy] = React.useState<keyof Location | undefined>(\n    'name',\n  );\n  const [selected, setSelected] = React.useState<readonly string[]>([]);\n  const [page, setPage] = React.useState<number>(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState<number>(15);\n  const [queryParams, setQueryParams] = React.useState<Record<string, any>>({});\n  const tableContainerRef = React.useRef(null);\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const {\n    isLoading,\n    isFetching,\n    data: { items, total } = { items: [], total: 0 },\n  } = useQuery({\n    queryKey: ['locations', page, rowsPerPage, orderBy, order, queryParams],\n    queryFn: () =>\n      LocationsQuery(page, rowsPerPage, orderBy, order, queryParams),\n    keepPreviousData: true,\n  });\n  const rows: Location[] = items || [];\n\n  React.useEffect(() => {\n    if (tableContainerRef.current) {\n      const container = tableContainerRef.current as HTMLElement;\n      container.scrollTo({\n        top: 0,\n        left: 0,\n        behavior: 'smooth',\n      });\n    }\n  }, [rows]);\n\n  React.useEffect(() => {\n    const newSelected: string[] = [];\n    selected.forEach((selectedItem) => {\n      const selectedRow = rows.find((row) => row.id === selectedItem);\n      if (selectedRow) {\n        newSelected.push(selectedItem);\n      }\n    });\n    setSelected(newSelected);\n  }, [rows]);\n\n  const handleRequestSort = (\n    event: React.MouseEvent<unknown>,\n    property: keyof Location,\n  ) => {\n    const isAsc = orderBy === property && order === 'asc';\n    const isDesc = orderBy === property && order === 'desc';\n    if (isDesc) {\n      setOrder(undefined);\n      setOrderBy(undefined);\n    } else {\n      setOrder(isAsc ? 'desc' : 'asc');\n      setOrderBy(property);\n    }\n  };\n\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.checked) {\n      const newSelected = rows.map((n: Location) => n.id);\n      setSelected(newSelected);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event: React.MouseEvent<unknown>, name: string) => {\n    navigate(`./view/${name}`, {\n      relative: 'path',\n      state: { from: location },\n      replace: false,\n    });\n  };\n\n  const handleSelect = (event: React.MouseEvent<unknown>, name: string) => {\n    event.stopPropagation();\n    const selectedIndex = selected.indexOf(name);\n    let newSelected: readonly string[] = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = (name: string) => selected.indexOf(name) !== -1;\n\n  return (\n    <Box sx={{ width: '100%', height: '100%' }}>\n      <Paper sx={{ width: '100%', height: '100%', backgroundColor: 'unset' }}>\n        <EnhancedTableToolbar\n          selected={selected}\n          setQueryParams={(query) => {\n            setQueryParams(query);\n            setPage(0);\n          }}\n        />\n        <TableContainer\n          ref={tableContainerRef}\n          sx={{ height: 'calc(100% - 115px)' }}\n        >\n          <Table\n            sx={{ minWidth: 750 }}\n            aria-labelledby=\"tableTitle\"\n            size=\"small\"\n            stickyHeader\n          >\n            <EnhancedTableHead\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {rows.map((row, index) => {\n                const isItemSelected = isSelected(`${row.id}`);\n                const labelId = `enhanced-table-checkbox-${index}`;\n                return (\n                  <TableRow\n                    hover\n                    onClick={(event) => handleClick(event, `${row.id}`)}\n                    role=\"checkbox\"\n                    aria-checked={isItemSelected}\n                    tabIndex={-1}\n                    key={row.id}\n                    selected={isItemSelected}\n                    sx={{ cursor: 'pointer' }}\n                  >\n                    <StyledTableCell padding=\"checkbox\">\n                      <Checkbox\n                        id={`${labelId}`}\n                        color=\"primary\"\n                        checked={isItemSelected}\n                        inputProps={{\n                          'aria-labelledby': labelId,\n                        }}\n                        onClick={(event) => handleSelect(event, `${row.id}`)}\n                      />\n                    </StyledTableCell>\n                    {headCells.map((cell) => {\n                      const cellData = cell.getData(row);\n                      return (\n                        <StyledTableCell\n                          key={cell.id}\n                          title={cellData.title}\n                          align={cell.numeric ? 'right' : 'center'}\n                        >\n                          {cellData.data}\n                        </StyledTableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 15, 20, 25, 35, 50]}\n          component=\"div\"\n          count={total}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <Loader visible={isLoading || isFetching} />\n    </Box>\n  );\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\nexports.default = _default;"],"names":["origin","URL","window","location","href","authFetch","input","_authProvider$user","_authProvider$user2","init","arguments","length","undefined","fetchInit","_objectSpread","headers","Headers","set","btoa","authProvider","user","username","password","fetch","TrucksQuery","page","rowsPerPage","orderBy","order","queryParams","url","searchParams","append","concat","truckNumber","lastLocation","distance","then","res","json","TruckDelete","userId","method","LocationsQuery","search","name","LocationDelete","LoadsQuery","loadNumber","LoadDelete","OwnersQuery","fullName","OwnerDelete","DriversQuery","DriverDelete","CoordinatorsQuery","CoordinatorDelete","UsersQuery","UserDelete","headCells","id","orderField","getData","row","data","zipCode","numeric","disablePadding","label","stateCode","stateName","join","StyledTableHead","styled","TableHead","_ref","backgroundColor","theme","palette","background","default","StyledTableCell","TableCell","_ref2","maxWidth","whiteSpace","textOverflow","overflow","EnhancedTableHead","props","onSelectAllClick","numSelected","rowCount","onRequestSort","_jsx","children","_jsxs","TableRow","padding","Checkbox","color","indeterminate","checked","onChange","inputProps","map","headCell","align","sortDirection","TableSortLabel","active","hideSortIcon","direction","onClick","property","event","Box","component","sx","visuallyHidden","EnhancedTableToolbar","selected","setQueryParams","_React$useState","React","_React$useState2","_slicedToArray","cityNameSearch","setCityNameSearch","_React$useState3","_React$useState4","cityNameChanged","setCityNameChanged","useLocation","navigate","useNavigate","queryClient","useQueryClient","mutation","useMutation","onSuccess","invalidateQueries","Toolbar","pl","sm","pr","xs","bgcolor","alpha","primary","main","action","activatedOpacity","Typography","flex","variant","TextField","value","target","size","Tooltip","title","IconButton","FilterListOffIcon","disabled","FilterListIcon","p","display","relative","state","from","replace","AddIcon","EditIcon","mutate","DeleteIcon","EnhancedTable","_React$useState5","_React$useState6","setOrder","_React$useState7","_React$useState8","setOrderBy","_React$useState9","_React$useState10","setSelected","_React$useState11","_React$useState12","setPage","_React$useState13","_React$useState14","setRowsPerPage","_React$useState15","_React$useState16","tableContainerRef","_useQuery","useQuery","queryKey","queryFn","keepPreviousData","isLoading","isFetching","_useQuery$data","_useQuery$data2","items","total","rows","current","scrollTo","top","left","behavior","newSelected","forEach","selectedItem","find","push","width","height","Paper","query","TableContainer","ref","Table","minWidth","stickyHeader","n","isAsc","TableBody","index","isItemSelected","indexOf","labelId","hover","handleClick","role","tabIndex","cursor","stopPropagation","selectedIndex","slice","handleSelect","cell","cellData","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","Loader","visible","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","jsx","d"],"sourceRoot":""}