{"version":3,"file":"static/js/22.bb1c1300.chunk.js","mappings":"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","sources":["trucks/trucks.tsx","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/icons-material/Edit.js"],"sourcesContent":["import * as React from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\r\n\r\nimport { alpha, styled } from '@mui/material/styles';\r\nimport TextField from '@mui/material/TextField';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport Box from '@mui/material/Box';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableSortLabel from '@mui/material/TableSortLabel';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport FilterListIcon from '@mui/icons-material/FilterList';\r\nimport FilterListOffIcon from '@mui/icons-material/FilterListOff';\r\nimport { visuallyHidden } from '@mui/utils';\r\n\r\nimport Loader from '../components/Loader';\r\n\r\nimport { TrucksQuery, TruckDelete } from '../api';\r\nimport { useSnackbar } from '../hooks';\r\nimport { Order, Truck } from '../utils/dataTypes';\r\nimport { getPath, getType } from '../utils/queryHelpers';\r\nimport { stopPropagation } from '../utils/stopPropagation';\r\nimport ContentCopy from '@mui/icons-material/ContentCopy';\r\n\r\ninterface HeadCell {\r\n  id: string;\r\n  disablePadding: boolean;\r\n  orderField?: keyof Truck;\r\n  getData: (row: Truck) => { data: JSX.Element | string; title?: string };\r\n  label: string;\r\n  numeric: boolean;\r\n}\r\n\r\nconst headCells: readonly HeadCell[] = [\r\n  {\r\n    id: 'truckNumber',\r\n    orderField: 'truckNumber',\r\n    getData: (row) => ({ data: `${row.truckNumber}` }),\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Truck Number',\r\n  },\r\n  {\r\n    id: 'mainContactInfo',\r\n    getData: (row) => {\r\n      const person = row.coordinator || row.owner;\r\n      let path = '';\r\n      let type = '';\r\n      let firstRow = '';\r\n      let secondRow = '';\r\n      if (person) {\r\n        path = `./${getPath(person)}/view/${person.id}`;\r\n        type = `${getType(person)} `;\r\n        firstRow = `${person.fullName}`;\r\n        secondRow = `${person?.phone}`;\r\n      }\r\n      return {\r\n        data: (\r\n          <span style={{ display: 'flex' }}>\r\n            <span\r\n              style={{\r\n                textOverflow: 'ellipsis',\r\n                overflow: 'hidden',\r\n                textAlign: 'left',\r\n              }}\r\n            >\r\n              <b>{type}</b>\r\n              <a href={path} target=\"_blank\" onClick={stopPropagation}>\r\n                {firstRow}\r\n              </a>\r\n              <br />\r\n              <a\r\n                href={secondRow ? `tel:${secondRow}` : undefined}\r\n                target=\"_blank\"\r\n                onClick={stopPropagation}\r\n              >\r\n                {secondRow || ' '}\r\n              </a>\r\n            </span>\r\n            <IconButton\r\n              size=\"small\"\r\n              onClick={(event) => {\r\n                stopPropagation(event);\r\n                navigator.clipboard.writeText(firstRow + ' ' + secondRow);\r\n              }}\r\n            >\r\n              <ContentCopy sx={{ height: '16px', width: '16px' }} />\r\n            </IconButton>\r\n          </span>\r\n        ),\r\n        title: type + '' + firstRow + '\\n' + secondRow,\r\n      };\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Main Contact info',\r\n  },\r\n  {\r\n    id: 'status',\r\n    orderField: 'status',\r\n    getData: (row) => ({ data: `${row.status}` }),\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Status',\r\n  },\r\n  {\r\n    id: 'location',\r\n    getData: (row) => {\r\n      if (row?.lastCity) {\r\n        const path = `./locations/view/${row.lastCity.id}`;\r\n        const firstRow = `${row.lastCity.name}, ${row.lastCity.stateCode}, ${row.lastCity.zipCode},`;\r\n        const secondRow = `${\r\n          row.locationUpdatedAt\r\n            ? new Date(row.locationUpdatedAt).toLocaleString()\r\n            : ''\r\n        }`;\r\n\r\n        return {\r\n          data: (\r\n            <span>\r\n              <a href={path} target=\"_blank\" onClick={stopPropagation}>\r\n                {firstRow}\r\n              </a>\r\n              <br />\r\n              {secondRow}\r\n            </span>\r\n          ),\r\n          title: firstRow + '\\n' + secondRow,\r\n        };\r\n      } else {\r\n        return { data: '' };\r\n      }\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Last known location',\r\n  },\r\n  {\r\n    id: 'truckInfo',\r\n    getData: (row) => {\r\n      const firstRow = row.type ? `${row.type}` : '';\r\n      const secondRow = row.equipment ? `${row.equipment.join(', ')}` : '';\r\n\r\n      return {\r\n        data: (\r\n          <span>\r\n            {firstRow}\r\n            <br />\r\n            {secondRow}\r\n          </span>\r\n        ),\r\n        title: firstRow + '\\n' + secondRow,\r\n      };\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Truck info',\r\n  },\r\n  {\r\n    id: 'dimsAndPayload',\r\n    getData: (row) => {\r\n      const firstRowPart1 = row.insideDims ? `${row.insideDims}` : '';\r\n      const firstRowPart2 = row.doorDims ? `${row.doorDims}` : '';\r\n      const secondRow = row.payload ? `${row.payload}` : '';\r\n\r\n      return {\r\n        data: (\r\n          <span>\r\n            {(firstRowPart1 ? firstRowPart1 + ' ' : '') + firstRowPart2}\r\n            <br />\r\n            {secondRow}\r\n          </span>\r\n        ),\r\n        title:\r\n          (firstRowPart1 ? firstRowPart1 + ' Inside ' : '') +\r\n          (firstRowPart2 ? firstRowPart2 + ' Door ' : '') +\r\n          '\\n' +\r\n          secondRow +\r\n          ' Payload',\r\n      };\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'DIMS/Payload',\r\n  },\r\n  {\r\n    id: 'driverInfo',\r\n    getData: (row) => {\r\n      const driver = row.driver;\r\n      let path = '';\r\n      let type = '';\r\n      let firstRow = '';\r\n      let secondRow = '';\r\n      if (driver) {\r\n        path = `./${getPath(driver)}/view/${driver.id}`;\r\n        type = `${getType(driver)} `;\r\n        firstRow = `${driver.fullName}`;\r\n        secondRow = `${driver.phone}`;\r\n      }\r\n      return {\r\n        data: (\r\n          <span>\r\n            <b>{type}</b>\r\n            <a\r\n              href={firstRow ? path : undefined}\r\n              target=\"_blank\"\r\n              onClick={stopPropagation}\r\n            >\r\n              {firstRow}\r\n            </a>\r\n            <br />\r\n            <a\r\n              href={secondRow ? `tel:${secondRow}` : undefined}\r\n              target=\"_blank\"\r\n              onClick={stopPropagation}\r\n            >\r\n              {secondRow || ' '}\r\n            </a>\r\n          </span>\r\n        ),\r\n        title: type + '' + firstRow + '\\n' + secondRow,\r\n      };\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Driver info',\r\n  },\r\n];\r\n\r\ninterface EnhancedTableProps {\r\n  numSelected: number;\r\n  onRequestSort: (\r\n    event: React.MouseEvent<unknown>,\r\n    property: keyof Truck,\r\n  ) => void;\r\n  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n  order: Order | undefined;\r\n  orderBy: string | undefined;\r\n  rowCount: number;\r\n}\r\n\r\nconst StyledTableHead = styled(TableHead)(({ theme }) => ({\r\n  backgroundColor: theme.palette.background.default,\r\n}));\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n  maxWidth: '100px',\r\n  paddingTop: '6px',\r\n  paddingBottom: '6px',\r\n  whiteSpace: 'nowrap',\r\n  textOverflow: 'ellipsis',\r\n  overflow: 'hidden',\r\n}));\r\n\r\nfunction EnhancedTableHead(props: EnhancedTableProps) {\r\n  const {\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n  const createSortHandler =\r\n    (property: keyof Truck) => (event: React.MouseEvent<unknown>) => {\r\n      onRequestSort(event, property);\r\n    };\r\n\r\n  return (\r\n    <StyledTableHead>\r\n      <TableRow>\r\n        <StyledTableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            name={'enhanced-table-checkbox-select-all'}\r\n            color=\"primary\"\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{\r\n              'aria-label': 'enhanced-table-checkbox-select-all',\r\n            }}\r\n          />\r\n        </StyledTableCell>\r\n        {headCells.map((headCell) => (\r\n          <StyledTableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'center'}\r\n            padding={headCell.disablePadding ? 'none' : 'normal'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={headCell.orderField && orderBy === headCell.orderField}\r\n              hideSortIcon={!headCell.orderField}\r\n              direction={orderBy === headCell.orderField ? order : 'asc'}\r\n              onClick={\r\n                headCell.orderField\r\n                  ? createSortHandler(headCell.orderField)\r\n                  : () => {\r\n                      return;\r\n                    }\r\n              }\r\n            >\r\n              {headCell.label}\r\n              {headCell.orderField && orderBy === headCell.orderField ? (\r\n                <Box component=\"span\" sx={visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </Box>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </StyledTableCell>\r\n        ))}\r\n      </TableRow>\r\n    </StyledTableHead>\r\n  );\r\n}\r\n\r\ninterface EnhancedTableToolbarProps {\r\n  selected: readonly string[];\r\n  setQueryParams: React.Dispatch<React.SetStateAction<Record<string, number>>>;\r\n}\r\n\r\nfunction EnhancedTableToolbar(props: EnhancedTableToolbarProps) {\r\n  const { selected, setQueryParams } = props;\r\n  const [truckNumberSearch, setTruckNumberSearch] = React.useState<number>(0);\r\n  const [truckNumberChanged, setTruckNumberChanged] =\r\n    React.useState<boolean>(false);\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const queryClient = useQueryClient();\r\n\r\n  const setSnackbarMessage = useSnackbar();\r\n\r\n  const { mutate, isLoading } = useMutation(TruckDelete, {\r\n    onSuccess: () => {\r\n      setSnackbarMessage({\r\n        severity: 'success',\r\n        message: 'Deleted',\r\n      });\r\n      queryClient.invalidateQueries(['trucks']);\r\n    },\r\n    onError: (error: Error) => {\r\n      setSnackbarMessage({\r\n        severity: 'error',\r\n        message: error instanceof Error ? error.message : JSON.stringify(error),\r\n      });\r\n    },\r\n  });\r\n\r\n  const truckNumberHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (Number.isFinite(Number(event.target.value))) {\r\n      setTruckNumberSearch(Number(event.target.value));\r\n      setTruckNumberChanged(true);\r\n    }\r\n  };\r\n  const filterClearHandler = () => {\r\n    setTruckNumberChanged(false);\r\n    setTruckNumberSearch(0);\r\n    setQueryParams({});\r\n  };\r\n  const filterHandler = () => {\r\n    setTruckNumberChanged(false);\r\n    setQueryParams({ truckNumber: truckNumberSearch });\r\n  };\r\n  const keyUpHandler = (event: React.KeyboardEvent) => {\r\n    if (event.key !== 'Enter') {\r\n      return;\r\n    }\r\n    if (truckNumberSearch) {\r\n      filterHandler();\r\n    } else {\r\n      filterClearHandler();\r\n    }\r\n  };\r\n  const createHandler = () => {\r\n    navigate('./create', {\r\n      relative: 'path',\r\n      state: { from: location },\r\n      replace: false,\r\n    });\r\n  };\r\n  const editHandler = () => {\r\n    navigate(`./edit/${selected[0]}`, {\r\n      relative: 'path',\r\n      state: { from: location },\r\n      replace: false,\r\n    });\r\n  };\r\n  const deleteHandler = () => {\r\n    mutate(`${selected[0]}`);\r\n  };\r\n\r\n  return (\r\n    <Toolbar\r\n      sx={{\r\n        pl: { sm: 2 },\r\n        pr: { xs: 1, sm: 1 },\r\n        ...(selected.length > 0 && {\r\n          bgcolor: (theme) =>\r\n            alpha(\r\n              theme.palette.primary.main,\r\n              theme.palette.action.activatedOpacity,\r\n            ),\r\n        }),\r\n      }}\r\n    >\r\n      {selected.length > 0 ? (\r\n        <Typography\r\n          sx={{ flex: '1 1 100%' }}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {selected.length} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          sx={{\r\n            flex: '1 1 100%',\r\n            whiteSpace: 'nowrap',\r\n            textOverflow: 'ellipsis',\r\n            overflow: 'hidden',\r\n          }}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          Trucks\r\n        </Typography>\r\n      )}\r\n      <TextField\r\n        label=\"Truck Number\"\r\n        value={truckNumberSearch || ''}\r\n        onChange={truckNumberHandler}\r\n        onKeyUp={keyUpHandler}\r\n        size=\"small\"\r\n      />\r\n      <Tooltip title=\"Filter list\">\r\n        {(truckNumberChanged || !truckNumberSearch) &&\r\n        !(truckNumberChanged && !truckNumberSearch) ? (\r\n          <span>\r\n            <IconButton disabled={!truckNumberSearch} onClick={filterHandler}>\r\n              <FilterListIcon />\r\n            </IconButton>\r\n          </span>\r\n        ) : (\r\n          <span>\r\n            <IconButton onClick={filterClearHandler}>\r\n              <FilterListOffIcon />\r\n            </IconButton>\r\n          </span>\r\n        )}\r\n      </Tooltip>\r\n      <Box sx={{ p: 1, display: 'inline-flex' }}>\r\n        <Tooltip title=\"Create\">\r\n          <span>\r\n            <IconButton onClick={createHandler}>\r\n              <AddIcon />\r\n            </IconButton>\r\n          </span>\r\n        </Tooltip>\r\n        <Tooltip title=\"Edit\">\r\n          <span>\r\n            <IconButton disabled={selected.length !== 1} onClick={editHandler}>\r\n              <EditIcon />\r\n            </IconButton>\r\n          </span>\r\n        </Tooltip>\r\n        <Tooltip title=\"Delete\">\r\n          <span>\r\n            <IconButton\r\n              disabled={selected.length !== 1}\r\n              onClick={deleteHandler}\r\n            >\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </span>\r\n        </Tooltip>\r\n      </Box>\r\n      <Loader visible={isLoading} />\r\n    </Toolbar>\r\n  );\r\n}\r\n\r\nexport default function EnhancedTable() {\r\n  const [order, setOrder] = React.useState<Order | undefined>('asc');\r\n  const [orderBy, setOrderBy] = React.useState<keyof Truck | undefined>(\r\n    'truckNumber',\r\n  );\r\n  const [selected, setSelected] = React.useState<readonly string[]>([]);\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState<number>(15);\r\n  const [queryParams, setQueryParams] = React.useState<Record<string, any>>({});\r\n  const tableContainerRef = React.useRef(null);\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const setSnackbarMessage = useSnackbar();\r\n\r\n  const {\r\n    isLoading,\r\n    isFetching,\r\n    data: { items, total } = { items: [], total: 0 },\r\n  } = useQuery({\r\n    queryKey: ['trucks', page, rowsPerPage, orderBy, order, queryParams],\r\n    queryFn: TrucksQuery,\r\n    keepPreviousData: true,\r\n    retry: false,\r\n    onError: (error: Error) => {\r\n      setSnackbarMessage({\r\n        severity: 'error',\r\n        message: error instanceof Error ? error.message : JSON.stringify(error),\r\n      });\r\n    },\r\n  });\r\n  const rows = items || [];\r\n\r\n  React.useEffect(() => {\r\n    if (tableContainerRef.current) {\r\n      const container = tableContainerRef.current as HTMLElement;\r\n      container.scrollTo({\r\n        top: 0,\r\n        left: 0,\r\n        behavior: 'smooth',\r\n      });\r\n    }\r\n  }, [rows]);\r\n\r\n  React.useEffect(() => {\r\n    const newSelected: string[] = [];\r\n    selected.forEach((selectedItem) => {\r\n      const selectedRow = rows.find((row) => row.id === selectedItem);\r\n      if (selectedRow) {\r\n        newSelected.push(selectedItem);\r\n      }\r\n    });\r\n    setSelected(newSelected);\r\n  }, [rows]);\r\n\r\n  const handleRequestSort = (\r\n    event: React.MouseEvent<unknown>,\r\n    property: keyof Truck,\r\n  ) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    const isDesc = orderBy === property && order === 'desc';\r\n    if (isDesc) {\r\n      setOrder(undefined);\r\n      setOrderBy(undefined);\r\n    } else {\r\n      setOrder(isAsc ? 'desc' : 'asc');\r\n      setOrderBy(property);\r\n    }\r\n  };\r\n\r\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (event.target.checked) {\r\n      const newSelected = rows.map((n: Truck) => n.id);\r\n      setSelected(newSelected);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (\r\n    event: React.MouseEvent<unknown>,\r\n    item: (typeof rows)[number],\r\n  ) => {\r\n    navigate(`./view/${item.id}`, {\r\n      relative: 'path',\r\n      state: { from: location },\r\n      replace: false,\r\n    });\r\n  };\r\n\r\n  const handleSelect = (event: React.MouseEvent<unknown>, name: string) => {\r\n    event.stopPropagation();\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected: readonly string[] = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event: unknown, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (\r\n    event: React.ChangeEvent<HTMLInputElement>,\r\n  ) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const isSelected = (name: string) => selected.indexOf(name) !== -1;\r\n\r\n  return (\r\n    <Box sx={{ width: '100%', height: '100%' }}>\r\n      <Paper sx={{ width: '100%', height: '100%', backgroundColor: 'unset' }}>\r\n        <EnhancedTableToolbar\r\n          selected={selected}\r\n          setQueryParams={(query) => {\r\n            setQueryParams(query);\r\n            setPage(0);\r\n          }}\r\n        />\r\n        <TableContainer\r\n          ref={tableContainerRef}\r\n          sx={{ height: 'calc(100% - 115px)' }}\r\n        >\r\n          <Table\r\n            sx={{ minWidth: 750 }}\r\n            aria-labelledby=\"tableTitle\"\r\n            size=\"small\"\r\n            stickyHeader\r\n          >\r\n            <EnhancedTableHead\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {rows.map((row, index) => {\r\n                const isItemSelected = isSelected(`${row.id}`);\r\n                const labelId = `enhanced-table-checkbox-${index}`;\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    onClick={(event) => handleClick(event, row)}\r\n                    role=\"checkbox\"\r\n                    aria-checked={isItemSelected}\r\n                    tabIndex={-1}\r\n                    key={row.id}\r\n                    selected={isItemSelected}\r\n                    sx={{ cursor: 'pointer' }}\r\n                  >\r\n                    <StyledTableCell padding=\"checkbox\">\r\n                      <Checkbox\r\n                        id={`${labelId}`}\r\n                        color=\"primary\"\r\n                        checked={isItemSelected}\r\n                        inputProps={{\r\n                          'aria-labelledby': labelId,\r\n                        }}\r\n                        onClick={(event) => handleSelect(event, `${row.id}`)}\r\n                      />\r\n                    </StyledTableCell>\r\n                    {headCells.map((cell) => {\r\n                      const cellData = cell.getData(row);\r\n                      return (\r\n                        <StyledTableCell\r\n                          key={cell.id}\r\n                          title={cellData.title}\r\n                          align={cell.numeric ? 'right' : 'center'}\r\n                        >\r\n                          {cellData.data}\r\n                        </StyledTableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 15, 20, 25, 35, 50]}\r\n          component=\"div\"\r\n          count={total}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <Loader visible={isLoading || isFetching} />\r\n    </Box>\r\n  );\r\n}\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\nexports.default = _default;"],"names":["headCells","id","orderField","getData","row","data","concat","truckNumber","numeric","disablePadding","label","person","coordinator","owner","path","type","firstRow","secondRow","getPath","getType","fullName","phone","_jsxs","style","display","children","textOverflow","overflow","textAlign","_jsx","href","target","onClick","stopPropagation","undefined","IconButton","size","event","navigator","clipboard","writeText","ContentCopy","sx","height","width","title","status","lastCity","name","stateCode","zipCode","locationUpdatedAt","Date","toLocaleString","equipment","join","firstRowPart1","insideDims","firstRowPart2","doorDims","payload","driver","StyledTableHead","styled","TableHead","_ref","backgroundColor","theme","palette","background","default","StyledTableCell","TableCell","_ref2","maxWidth","paddingTop","paddingBottom","whiteSpace","EnhancedTableHead","props","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","TableRow","padding","Checkbox","color","indeterminate","checked","onChange","inputProps","map","headCell","align","sortDirection","TableSortLabel","active","hideSortIcon","direction","property","Box","component","visuallyHidden","EnhancedTableToolbar","selected","setQueryParams","_React$useState","React","_React$useState2","_slicedToArray","truckNumberSearch","setTruckNumberSearch","_React$useState3","_React$useState4","truckNumberChanged","setTruckNumberChanged","location","useLocation","navigate","useNavigate","queryClient","useQueryClient","setSnackbarMessage","useSnackbar","_useMutation","useMutation","TruckDelete","onSuccess","severity","message","invalidateQueries","onError","error","Error","JSON","stringify","mutate","isLoading","filterClearHandler","filterHandler","Toolbar","_objectSpread","pl","sm","pr","xs","length","bgcolor","alpha","primary","main","action","activatedOpacity","Typography","flex","variant","TextField","value","Number","isFinite","onKeyUp","key","Tooltip","FilterListOffIcon","disabled","FilterListIcon","p","relative","state","from","replace","AddIcon","EditIcon","DeleteIcon","Loader","visible","EnhancedTable","_React$useState5","_React$useState6","setOrder","_React$useState7","_React$useState8","setOrderBy","_React$useState9","_React$useState10","setSelected","_React$useState11","_React$useState12","page","setPage","_React$useState13","_React$useState14","rowsPerPage","setRowsPerPage","_React$useState15","_React$useState16","queryParams","tableContainerRef","_useQuery","useQuery","queryKey","queryFn","TrucksQuery","keepPreviousData","retry","isFetching","_useQuery$data","_useQuery$data2","items","total","rows","current","scrollTo","top","left","behavior","newSelected","forEach","selectedItem","find","push","Paper","query","TableContainer","ref","Table","minWidth","stickyHeader","n","isAsc","TableBody","index","isItemSelected","indexOf","labelId","hover","role","tabIndex","cursor","selectedIndex","slice","handleSelect","cell","cellData","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","jsx","d"],"sourceRoot":""}