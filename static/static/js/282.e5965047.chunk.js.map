{"version":3,"file":"static/js/282.e5965047.chunk.js","mappings":"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","sources":["api/api.ts","coordinators/coordinators.tsx","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/icons-material/Edit.js"],"sourcesContent":["import { authProvider } from '../utils/auth';\nimport {\n  Coordinator,\n  Driver,\n  Load,\n  Location,\n  Owner,\n  Truck,\n  User,\n  CreateUser,\n  Query,\n  QuerySingle,\n  Result,\n} from '../utils/dataTypes';\n\nconst SUCCESS_HTTP_CODE = 200;\nconst CREATED_HTTP_CODE = 201;\nconst FORBIDDEN_HTTP_CODE = 403;\nconst NOT_FOUND_HTTP_CODE = 404;\n\nconst { origin } = new URL(window.location.href);\n\nexport const authFetch: (\n  input: string | URL,\n  init?: RequestInit,\n) => Promise<object> = (input, init = {}) => {\n  const fetchInit = { ...init, headers: new Headers() };\n  fetchInit.headers.set(\n    'Authorization',\n    'Basic ' +\n      btoa(authProvider.user?.username + ':' + authProvider.user?.password),\n  );\n  if (fetchInit.body) {\n    fetchInit.headers.set('Accept', 'application/json');\n    fetchInit.headers.set('Content-Type', 'application/json');\n  }\n  return fetch(input, fetchInit)\n    .catch((reason) => {\n      const error = new Error();\n      error.cause = reason;\n      error.name = 'Fetch error';\n      error.message = 'Network error has occurred';\n      throw error;\n    })\n    .then((response) => {\n      if (\n        response.status !== SUCCESS_HTTP_CODE &&\n        response.status !== CREATED_HTTP_CODE\n      ) {\n        const error = new Error();\n        error.cause = response;\n        if (response.status) {\n          error.name = response.status + ' ' + response.statusText;\n          switch (response.status) {\n            case FORBIDDEN_HTTP_CODE:\n              error.message = 'Insufficient permissions';\n              break;\n            case NOT_FOUND_HTTP_CODE:\n              error.message = 'Not found';\n              break;\n            default:\n              error.message = 'Some server error has occurred';\n          }\n        } else {\n          error.message = 'Network error has occurred';\n        }\n        throw error;\n      }\n      return response.json().catch((reason) => {\n        const error = new Error();\n        error.cause = reason;\n        error.name = 'Fetch error';\n        error.message = 'Server responded with incorrect data';\n        throw error;\n      });\n    });\n};\n\nexport const TrucksQuery: (\n  query: Query<{\n    truckNumber?: number;\n    lastLocation?: string;\n    distance?: string;\n  }>,\n) => Promise<Result<Truck>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/truck', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  if (queryParams?.lastLocation && queryParams?.distance) {\n    url.searchParams.append('lastLocation', `${queryParams.lastLocation}`);\n    url.searchParams.append('distance', `${queryParams.distance}`);\n  }\n  return authFetch(url) as Promise<Result<Truck>>;\n};\n\nexport const TruckDelete = (userId: string): Promise<Truck> => {\n  const url = new URL(`/truck/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<Truck>;\n};\n\nexport const LocationsQuery: (\n  query: Query<{ search?: string; name?: string }>,\n) => Promise<Result<Location>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/location', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.search) {\n    url.searchParams.append('search', `${queryParams.search}`);\n  }\n  if (queryParams?.name) {\n    url.searchParams.append('name', `${queryParams.name}`);\n  }\n  return authFetch(url) as Promise<Result<Location>>;\n};\n\nexport const LocationDelete = (userId: string): Promise<Location> => {\n  const url = new URL(`/location/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<Location>;\n};\n\nexport const LoadsQuery: (\n  query: Query<{ loadNumber?: number; truckNumber?: number }>,\n) => Promise<Result<Load>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/load', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.loadNumber) {\n    url.searchParams.append('loadNumber', `${queryParams.loadNumber}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  return authFetch(url) as Promise<Result<Load>>;\n};\n\nexport const LoadDelete = (userId: string): Promise<Load> => {\n  const url = new URL(`/load/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<Load>;\n};\n\nexport const OwnersQuery: (\n  query: Query<{ fullName?: number; truckNumber?: number }>,\n) => Promise<Result<Owner>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/owner', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.fullName) {\n    url.searchParams.append('fullName', `${queryParams.fullName}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  return authFetch(url) as Promise<Result<Owner>>;\n};\n\nexport const OwnerDelete = (userId: string): Promise<Owner> => {\n  const url = new URL(`/owner/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<Owner>;\n};\n\nexport const DriversQuery: (\n  query: Query<{ fullName?: number; truckNumber?: number }>,\n) => Promise<Result<Driver>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/driver', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.fullName) {\n    url.searchParams.append('fullName', `${queryParams.fullName}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  return authFetch(url) as Promise<Result<Driver>>;\n};\n\nexport const DriverDelete = (userId: string): Promise<Driver> => {\n  const url = new URL(`/driver/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<Driver>;\n};\n\nexport const CoordinatorsQuery: (\n  query: Query<{ fullName?: number; truckNumber?: number }>,\n) => Promise<Result<Coordinator>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/coordinator', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.fullName) {\n    url.searchParams.append('fullName', `${queryParams.fullName}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  return authFetch(url) as Promise<Result<Coordinator>>;\n};\n\nexport const CoordinatorDelete = (userId: string): Promise<Coordinator> => {\n  const url = new URL(`/coordinator/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<Coordinator>;\n};\n\nexport const UsersQuery: (\n  query: Query<{ fullName?: number }>,\n) => Promise<Result<User>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/user', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.fullName) {\n    url.searchParams.append('fullName', `${queryParams.fullName}`);\n  }\n  return authFetch(url) as Promise<Result<User>>;\n};\n\nexport const UserDelete = (userId: string): Promise<User> => {\n  const url = new URL(`/user/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<User>;\n};\n\nexport const UserCreate = (data: CreateUser): Promise<User> => {\n  const url = new URL(`/user`, origin);\n  return authFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(data),\n  }) as Promise<User>;\n};\n\nexport const UserQuery = (query: QuerySingle): Promise<User> => {\n  const url = new URL(`/user/${query.queryKey[1]}`, origin);\n  return authFetch(url, {\n    method: 'GET',\n  }) as Promise<User>;\n};\n","import * as React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\n\nimport { alpha, styled } from '@mui/material/styles';\nimport TextField from '@mui/material/TextField';\nimport Checkbox from '@mui/material/Checkbox';\nimport Tooltip from '@mui/material/Tooltip';\nimport TableCell from '@mui/material/TableCell';\nimport Box from '@mui/material/Box';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport TableSortLabel from '@mui/material/TableSortLabel';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\nimport IconButton from '@mui/material/IconButton';\nimport AddIcon from '@mui/icons-material/Add';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport FilterListIcon from '@mui/icons-material/FilterList';\nimport FilterListOffIcon from '@mui/icons-material/FilterListOff';\nimport { visuallyHidden } from '@mui/utils';\n\nimport Loader from '../components/Loader';\n\nimport { CoordinatorsQuery, CoordinatorDelete } from '../api';\nimport { useSnackbar } from '../hooks';\nimport { Order, Coordinator } from '../utils/dataTypes';\n\ninterface HeadCell {\n  id: string;\n  disablePadding: boolean;\n  orderField?: keyof Coordinator;\n  getData: (row: Coordinator) => { data: JSX.Element | string; title?: string };\n  label: string;\n  numeric: boolean;\n}\n\nconst headCells: readonly HeadCell[] = [\n  {\n    id: 'fullName',\n    orderField: 'fullName',\n    getData: (row) => ({ data: `${row.fullName}` }),\n    numeric: false,\n    disablePadding: true,\n    label: 'Full name',\n  },\n  {\n    id: 'type',\n    getData: (row) => {\n      let type = '';\n      let title = '';\n      if (row.type === 'Coordinator') {\n        type = '(C) ';\n        title = 'Coordinator';\n      }\n      if (row.type === 'CoordinatorDriver') {\n        type = '(C/d) ';\n        title = 'Coordinator/Driver';\n      }\n      return {\n        data: (\n          <span>\n            <b>{type}</b>\n          </span>\n        ),\n        title: title,\n      };\n    },\n    numeric: false,\n    disablePadding: true,\n    label: 'Type',\n  },\n  {\n    id: 'phone',\n    getData: (row) => {\n      const firstRow = `${row.phone}`;\n      const secondRow = `${row.phone2 ? row.phone2 : ''}`;\n      return {\n        data: (\n          <span>\n            <a\n              href={`tel:${firstRow}`}\n              target=\"_blank\"\n              onClick={stopPropagation}\n            >\n              {firstRow}\n            </a>\n            <br />\n            <a\n              href={secondRow ? `tel:${secondRow}` : undefined}\n              target=\"_blank\"\n              onClick={stopPropagation}\n            >\n              {secondRow || ' '}\n            </a>\n          </span>\n        ),\n        title: firstRow + '\\n' + secondRow,\n      };\n    },\n    numeric: false,\n    disablePadding: true,\n    label: 'Mobile phone',\n  },\n  {\n    id: 'email',\n    getData: (row) => {\n      const firstRow = `${row.email}`;\n      return {\n        data: (\n          <span>\n            <a\n              href={`mailto:${firstRow}`}\n              target=\"_blank\"\n              onClick={stopPropagation}\n            >\n              {firstRow}\n            </a>\n          </span>\n        ),\n        title: firstRow,\n      };\n    },\n    numeric: false,\n    disablePadding: true,\n    label: 'Email',\n  },\n  {\n    id: 'address',\n    getData: (row) => {\n      const firstRow = `${row.address}`;\n      return {\n        data: <span>{firstRow}</span>,\n        title: firstRow,\n      };\n    },\n    numeric: false,\n    disablePadding: true,\n    label: 'Home address',\n  },\n  {\n    id: 'coordinateTrucks',\n    getData: (row) => {\n      if (row.coordinateTrucks && row.coordinateTrucks.length) {\n        const trucks = row.coordinateTrucks;\n        return {\n          data: (\n            <span>\n              {trucks.map((truck, index) => (\n                <a\n                  key={index}\n                  href={`/trucks/view/${truck.id}`}\n                  target=\"_blank\"\n                  onClick={stopPropagation}\n                >\n                  {`${truck.truckNumber}${\n                    index === trucks.length - 1 ? '' : ', '\n                  }`}\n                </a>\n              ))}\n            </span>\n          ),\n          title: trucks.map((truck) => truck.truckNumber).join(', '),\n        };\n      } else {\n        return { data: '' };\n      }\n    },\n    numeric: false,\n    disablePadding: true,\n    label: 'COORDINATE TRUCKS',\n  },\n];\n\ninterface EnhancedTableProps {\n  numSelected: number;\n  onRequestSort: (\n    event: React.MouseEvent<unknown>,\n    property: keyof Coordinator,\n  ) => void;\n  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  order: Order | undefined;\n  orderBy: string | undefined;\n  rowCount: number;\n}\n\nconst StyledTableHead = styled(TableHead)(({ theme }) => ({\n  backgroundColor: theme.palette.background.default,\n}));\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  maxWidth: '100px',\n  whiteSpace: 'nowrap',\n  textOverflow: 'ellipsis',\n  overflow: 'hidden',\n}));\n\nfunction stopPropagation(e: React.SyntheticEvent) {\n  e.stopPropagation();\n}\n\nfunction EnhancedTableHead(props: EnhancedTableProps) {\n  const {\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n  } = props;\n  const createSortHandler =\n    (property: keyof Coordinator) => (event: React.MouseEvent<unknown>) => {\n      onRequestSort(event, property);\n    };\n\n  return (\n    <StyledTableHead>\n      <TableRow>\n        <StyledTableCell padding=\"checkbox\">\n          <Checkbox\n            name={'enhanced-table-checkbox-select-all'}\n            color=\"primary\"\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{\n              'aria-label': 'enhanced-table-checkbox-select-all',\n            }}\n          />\n        </StyledTableCell>\n        {headCells.map((headCell) => (\n          <StyledTableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'center'}\n            padding={headCell.disablePadding ? 'none' : 'normal'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={headCell.orderField && orderBy === headCell.orderField}\n              hideSortIcon={!headCell.orderField}\n              direction={orderBy === headCell.orderField ? order : 'asc'}\n              onClick={\n                headCell.orderField\n                  ? createSortHandler(headCell.orderField)\n                  : () => {\n                      return;\n                    }\n              }\n            >\n              {headCell.label}\n              {headCell.orderField && orderBy === headCell.orderField ? (\n                <Box component=\"span\" sx={visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </StyledTableCell>\n        ))}\n      </TableRow>\n    </StyledTableHead>\n  );\n}\n\ninterface EnhancedTableToolbarProps {\n  selected: readonly string[];\n  setQueryParams: React.Dispatch<\n    React.SetStateAction<Record<string, number | string>>\n  >;\n}\n\nfunction EnhancedTableToolbar(props: EnhancedTableToolbarProps) {\n  const { selected, setQueryParams } = props;\n  const [fullNameSearch, setFullNameSearch] = React.useState<string>('');\n  const [truckNumberSearch, setTruckNumberSearch] = React.useState<number>(0);\n  const [searchChanged, setSearchChanged] = React.useState<boolean>(false);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const queryClient = useQueryClient();\n  const setSnackbarMessage = useSnackbar();\n\n  const { mutate, isLoading } = useMutation(CoordinatorDelete, {\n    onSuccess: () => {\n      setSnackbarMessage({\n        severity: 'success',\n        message: 'Deleted',\n      });\n      queryClient.invalidateQueries(['coordinators']);\n    },\n    onError: (error: Error) => {\n      setSnackbarMessage({\n        severity: 'error',\n        message: error instanceof Error ? error.message : JSON.stringify(error),\n      });\n    },\n  });\n\n  const fullNameHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setFullNameSearch(event.target.value);\n    setSearchChanged(true);\n  };\n  const truckNumberHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (Number.isFinite(Number(event.target.value))) {\n      setTruckNumberSearch(Number(event.target.value));\n      setSearchChanged(true);\n    }\n  };\n  const fullNameClearHandler = () => {\n    setSearchChanged(false);\n    setFullNameSearch('');\n    setTruckNumberSearch(0);\n    setQueryParams({});\n  };\n  const filterHandler = () => {\n    setSearchChanged(false);\n    const queryParams: Record<string, number | string> = {};\n    if (fullNameSearch) {\n      queryParams.fullName = fullNameSearch;\n    }\n    if (truckNumberSearch) {\n      queryParams.truckNumber = truckNumberSearch;\n    }\n    setQueryParams(queryParams);\n  };\n  const createHandler = () => {\n    navigate('./create', {\n      relative: 'path',\n      state: { from: location },\n      replace: false,\n    });\n  };\n  const editHandler = () => {\n    navigate(`./edit/${selected[0]}`, {\n      relative: 'path',\n      state: { from: location },\n      replace: false,\n    });\n  };\n  const deleteHandler = () => {\n    mutate(`${selected[0]}`);\n  };\n\n  return (\n    <Toolbar\n      sx={{\n        pl: { sm: 2 },\n        pr: { xs: 1, sm: 1 },\n        ...(selected.length > 0 && {\n          bgcolor: (theme) =>\n            alpha(\n              theme.palette.primary.main,\n              theme.palette.action.activatedOpacity,\n            ),\n        }),\n      }}\n    >\n      {selected.length > 0 ? (\n        <Typography\n          sx={{ flex: '1 1 100%' }}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {selected.length} selected\n        </Typography>\n      ) : (\n        <Typography\n          sx={{\n            flex: '1 1 100%',\n            whiteSpace: 'nowrap',\n            textOverflow: 'ellipsis',\n            overflow: 'hidden',\n          }}\n          variant=\"h6\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          Coordinators\n        </Typography>\n      )}\n      <Box\n        component=\"div\"\n        sx={{\n          '& .MuiTextField-root': { m: 1, width: '140px' },\n        }}\n      >\n        <TextField\n          label=\"Full name\"\n          value={fullNameSearch}\n          onChange={fullNameHandler}\n          size=\"small\"\n        />\n      </Box>\n      <Box\n        component=\"div\"\n        sx={{\n          '& .MuiTextField-root': { m: 1, width: '140px' },\n        }}\n      >\n        <TextField\n          label=\"Truck Number\"\n          value={truckNumberSearch || ''}\n          onChange={truckNumberHandler}\n          size=\"small\"\n        />\n      </Box>\n      <Tooltip title=\"Filter list\">\n        {(searchChanged || (!fullNameSearch && !truckNumberSearch)) &&\n        (!(searchChanged && !fullNameSearch) ||\n          !(searchChanged && !truckNumberSearch)) ? (\n          <span>\n            <IconButton\n              disabled={!fullNameSearch && !truckNumberSearch}\n              onClick={filterHandler}\n            >\n              <FilterListIcon />\n            </IconButton>\n          </span>\n        ) : (\n          <IconButton onClick={fullNameClearHandler}>\n            <FilterListOffIcon />\n          </IconButton>\n        )}\n      </Tooltip>\n      <Box sx={{ p: 1, display: 'inline-flex' }}>\n        <Tooltip title=\"Create\">\n          <span>\n            <IconButton onClick={createHandler}>\n              <AddIcon />\n            </IconButton>\n          </span>\n        </Tooltip>\n        <Tooltip title=\"Edit\">\n          <span>\n            <IconButton disabled={selected.length !== 1} onClick={editHandler}>\n              <EditIcon />\n            </IconButton>\n          </span>\n        </Tooltip>\n        <Tooltip title=\"Delete\">\n          <span>\n            <IconButton\n              disabled={selected.length !== 1}\n              onClick={deleteHandler}\n            >\n              <DeleteIcon />\n            </IconButton>\n          </span>\n        </Tooltip>\n      </Box>\n      <Loader visible={isLoading} />\n    </Toolbar>\n  );\n}\n\nexport default function EnhancedTable() {\n  const [order, setOrder] = React.useState<Order | undefined>('asc');\n  const [orderBy, setOrderBy] = React.useState<keyof Coordinator | undefined>(\n    'fullName',\n  );\n  const [selected, setSelected] = React.useState<readonly string[]>([]);\n  const [page, setPage] = React.useState<number>(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState<number>(15);\n  const [queryParams, setQueryParams] = React.useState<Record<string, any>>({});\n  const tableContainerRef = React.useRef(null);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const setSnackbarMessage = useSnackbar();\n\n  const {\n    isLoading,\n    isFetching,\n    data: { items, total } = { items: [], total: 0 },\n  } = useQuery({\n    queryKey: ['coordinators', page, rowsPerPage, orderBy, order, queryParams],\n    queryFn: CoordinatorsQuery,\n    keepPreviousData: true,\n    onError: (error: Error) => {\n      setSnackbarMessage({\n        severity: 'error',\n        message: error instanceof Error ? error.message : JSON.stringify(error),\n      });\n    },\n  });\n  const rows: Coordinator[] = items || [];\n\n  React.useEffect(() => {\n    if (tableContainerRef.current) {\n      const container = tableContainerRef.current as HTMLElement;\n      container.scrollTo({\n        top: 0,\n        left: 0,\n        behavior: 'smooth',\n      });\n    }\n  }, [rows]);\n\n  React.useEffect(() => {\n    const newSelected: string[] = [];\n    selected.forEach((selectedItem) => {\n      const selectedRow = rows.find((row) => row.id === selectedItem);\n      if (selectedRow) {\n        newSelected.push(selectedItem);\n      }\n    });\n    setSelected(newSelected);\n  }, [rows]);\n\n  const handleRequestSort = (\n    event: React.MouseEvent<unknown>,\n    property: keyof Coordinator,\n  ) => {\n    const isAsc = orderBy === property && order === 'asc';\n    const isDesc = orderBy === property && order === 'desc';\n    if (isDesc) {\n      setOrder(undefined);\n      setOrderBy(undefined);\n    } else {\n      setOrder(isAsc ? 'desc' : 'asc');\n      setOrderBy(property);\n    }\n  };\n\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.checked) {\n      const newSelected = rows.map((n: Coordinator) => n.id);\n      setSelected(newSelected);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event: React.MouseEvent<unknown>, name: string) => {\n    navigate(`./view/${name}`, {\n      relative: 'path',\n      state: { from: location },\n      replace: false,\n    });\n  };\n\n  const handleSelect = (event: React.MouseEvent<unknown>, name: string) => {\n    event.stopPropagation();\n    const selectedIndex = selected.indexOf(name);\n    let newSelected: readonly string[] = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = (name: string) => selected.indexOf(name) !== -1;\n\n  return (\n    <Box sx={{ width: '100%', height: '100%' }}>\n      <Paper sx={{ width: '100%', height: '100%', backgroundColor: 'unset' }}>\n        <EnhancedTableToolbar\n          selected={selected}\n          setQueryParams={(query) => {\n            setQueryParams(query);\n            setPage(0);\n          }}\n        />\n        <TableContainer\n          ref={tableContainerRef}\n          sx={{ height: 'calc(100% - 115px)' }}\n        >\n          <Table\n            sx={{ minWidth: 750 }}\n            aria-labelledby=\"tableTitle\"\n            size=\"small\"\n            stickyHeader\n          >\n            <EnhancedTableHead\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {rows.map((row, index) => {\n                const isItemSelected = isSelected(`${row.id}`);\n                const labelId = `enhanced-table-checkbox-${index}`;\n                return (\n                  <TableRow\n                    hover\n                    onClick={(event) => handleClick(event, `${row.id}`)}\n                    role=\"checkbox\"\n                    aria-checked={isItemSelected}\n                    tabIndex={-1}\n                    key={row.id}\n                    selected={isItemSelected}\n                    sx={{ cursor: 'pointer' }}\n                  >\n                    <StyledTableCell padding=\"checkbox\">\n                      <Checkbox\n                        id={`${labelId}`}\n                        color=\"primary\"\n                        checked={isItemSelected}\n                        inputProps={{\n                          'aria-labelledby': labelId,\n                        }}\n                        onClick={(event) => handleSelect(event, `${row.id}`)}\n                      />\n                    </StyledTableCell>\n                    {headCells.map((cell) => {\n                      const cellData = cell.getData(row);\n                      return (\n                        <StyledTableCell\n                          key={cell.id}\n                          title={cellData.title}\n                          align={cell.numeric ? 'right' : 'center'}\n                        >\n                          {cellData.data}\n                        </StyledTableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 15, 20, 25, 35, 50]}\n          component=\"div\"\n          count={total}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <Loader visible={isLoading || isFetching} />\n    </Box>\n  );\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\nexports.default = _default;"],"names":["origin","URL","window","location","href","authFetch","input","_authProvider$user","_authProvider$user2","init","arguments","length","undefined","fetchInit","_objectSpread","headers","Headers","set","btoa","authProvider","user","username","password","body","fetch","catch","reason","error","Error","cause","name","message","then","response","status","statusText","json","TrucksQuery","_ref","_ref$queryKey","_slicedToArray","queryKey","page","rowsPerPage","orderBy","order","queryParams","url","searchParams","append","concat","truckNumber","lastLocation","distance","TruckDelete","userId","method","LocationsQuery","_ref2","_ref2$queryKey","search","LocationDelete","LoadsQuery","_ref3","_ref3$queryKey","loadNumber","LoadDelete","OwnersQuery","_ref4","_ref4$queryKey","fullName","OwnerDelete","DriversQuery","_ref5","_ref5$queryKey","DriverDelete","CoordinatorsQuery","_ref6","_ref6$queryKey","CoordinatorDelete","UsersQuery","_ref7","_ref7$queryKey","UserDelete","UserCreate","data","JSON","stringify","UserQuery","query","headCells","id","orderField","getData","row","numeric","disablePadding","label","type","title","_jsx","children","firstRow","phone","secondRow","phone2","_jsxs","target","onClick","stopPropagation","email","address","coordinateTrucks","trucks","map","truck","index","join","StyledTableHead","styled","TableHead","backgroundColor","theme","palette","background","default","StyledTableCell","TableCell","maxWidth","whiteSpace","textOverflow","overflow","e","EnhancedTableHead","props","onSelectAllClick","numSelected","rowCount","onRequestSort","TableRow","padding","Checkbox","color","indeterminate","checked","onChange","inputProps","headCell","align","sortDirection","TableSortLabel","active","hideSortIcon","direction","property","event","Box","component","sx","visuallyHidden","EnhancedTableToolbar","selected","setQueryParams","_React$useState","React","_React$useState2","fullNameSearch","setFullNameSearch","_React$useState3","_React$useState4","truckNumberSearch","setTruckNumberSearch","_React$useState5","_React$useState6","searchChanged","setSearchChanged","useLocation","navigate","useNavigate","queryClient","useQueryClient","setSnackbarMessage","useSnackbar","_useMutation","useMutation","onSuccess","severity","invalidateQueries","onError","mutate","isLoading","Toolbar","pl","sm","pr","xs","bgcolor","alpha","primary","main","action","activatedOpacity","Typography","flex","variant","m","width","TextField","value","size","Number","isFinite","Tooltip","IconButton","FilterListOffIcon","disabled","FilterListIcon","p","display","relative","state","from","replace","AddIcon","EditIcon","DeleteIcon","Loader","visible","EnhancedTable","_React$useState7","_React$useState8","setOrder","_React$useState9","_React$useState10","setOrderBy","_React$useState11","_React$useState12","setSelected","_React$useState13","_React$useState14","setPage","_React$useState15","_React$useState16","setRowsPerPage","_React$useState17","_React$useState18","tableContainerRef","_useQuery","useQuery","queryFn","keepPreviousData","isFetching","_useQuery$data","_useQuery$data2","items","total","rows","current","scrollTo","top","left","behavior","newSelected","forEach","selectedItem","find","push","height","Paper","TableContainer","ref","Table","minWidth","stickyHeader","n","isAsc","TableBody","isItemSelected","indexOf","labelId","hover","handleClick","role","tabIndex","cursor","selectedIndex","slice","handleSelect","cell","cellData","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","jsx","d"],"sourceRoot":""}