{"version":3,"file":"static/js/714.c8695af9.chunk.js","mappings":"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","sources":["locations/locations.tsx","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/icons-material/Edit.js"],"sourcesContent":["import * as React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\n\nimport { alpha, styled } from '@mui/material/styles';\nimport TextField from '@mui/material/TextField';\nimport Checkbox from '@mui/material/Checkbox';\nimport Tooltip from '@mui/material/Tooltip';\nimport TableCell from '@mui/material/TableCell';\nimport Box from '@mui/material/Box';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport TableSortLabel from '@mui/material/TableSortLabel';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\nimport IconButton from '@mui/material/IconButton';\nimport AddIcon from '@mui/icons-material/Add';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport FilterListIcon from '@mui/icons-material/FilterList';\nimport FilterListOffIcon from '@mui/icons-material/FilterListOff';\nimport { visuallyHidden } from '@mui/utils';\n\nimport Loader from '../components/Loader';\n\nimport { LocationsQuery, LocationDelete } from '../api';\nimport { useSnackbar } from '../hooks';\nimport { Order, Location } from '../utils/dataTypes';\n\ninterface HeadCell {\n  id: string;\n  disablePadding: boolean;\n  orderField?: keyof Location;\n  getData: (row: Location) => { data: JSX.Element | string; title?: string };\n  label: string;\n  numeric: boolean;\n}\n\nconst headCells: readonly HeadCell[] = [\n  {\n    id: 'zipCode',\n    orderField: 'zipCode',\n    getData: (row) => ({ data: `${row.zipCode}` }),\n    numeric: true,\n    disablePadding: false,\n    label: 'Zip Code',\n  },\n  {\n    id: 'name',\n    orderField: 'name',\n    getData: (row) => ({ data: `${row.name}` }),\n    numeric: false,\n    disablePadding: true,\n    label: 'City Name',\n  },\n  {\n    id: 'stateCode',\n    orderField: 'stateCode',\n    getData: (row) => ({ data: `${row.stateCode}` }),\n    numeric: false,\n    disablePadding: true,\n    label: 'State Code',\n  },\n  {\n    id: 'stateName',\n    orderField: 'stateName',\n    getData: (row) => ({ data: `${row.stateName}` }),\n    numeric: false,\n    disablePadding: true,\n    label: 'State Name',\n  },\n  {\n    id: 'location',\n    getData: (row) => ({ data: `${row.location.join(',')}` }),\n    numeric: false,\n    disablePadding: true,\n    label: 'Geo Point',\n  },\n];\n\ninterface EnhancedTableProps {\n  numSelected: number;\n  onRequestSort: (\n    event: React.MouseEvent<unknown>,\n    property: keyof Location,\n  ) => void;\n  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  order: Order | undefined;\n  orderBy: string | undefined;\n  rowCount: number;\n}\n\nconst StyledTableHead = styled(TableHead)(({ theme }) => ({\n  backgroundColor: theme.palette.background.default,\n}));\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  maxWidth: '100px',\n  paddingTop: '6px',\n  paddingBottom: '6px',\n  whiteSpace: 'nowrap',\n  textOverflow: 'ellipsis',\n  overflow: 'hidden',\n}));\n\nfunction stopPropagation(e: React.SyntheticEvent) {\n  e.stopPropagation();\n}\n\nfunction EnhancedTableHead(props: EnhancedTableProps) {\n  const {\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n  } = props;\n  const createSortHandler =\n    (property: keyof Location) => (event: React.MouseEvent<unknown>) => {\n      onRequestSort(event, property);\n    };\n\n  return (\n    <StyledTableHead>\n      <TableRow>\n        <StyledTableCell padding=\"checkbox\">\n          <Checkbox\n            name={'enhanced-table-checkbox-select-all'}\n            color=\"primary\"\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{\n              'aria-label': 'enhanced-table-checkbox-select-all',\n            }}\n          />\n        </StyledTableCell>\n        {headCells.map((headCell) => (\n          <StyledTableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'center'}\n            padding={headCell.disablePadding ? 'none' : 'normal'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={headCell.orderField && orderBy === headCell.orderField}\n              hideSortIcon={!headCell.orderField}\n              direction={orderBy === headCell.orderField ? order : 'asc'}\n              onClick={\n                headCell.orderField\n                  ? createSortHandler(headCell.orderField)\n                  : () => {\n                      return;\n                    }\n              }\n            >\n              {headCell.label}\n              {headCell.orderField && orderBy === headCell.orderField ? (\n                <Box component=\"span\" sx={visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </StyledTableCell>\n        ))}\n      </TableRow>\n    </StyledTableHead>\n  );\n}\n\ninterface EnhancedTableToolbarProps {\n  selected: readonly string[];\n  setQueryParams: React.Dispatch<React.SetStateAction<Record<string, string>>>;\n}\n\nfunction EnhancedTableToolbar(props: EnhancedTableToolbarProps) {\n  const { selected, setQueryParams } = props;\n  const [cityNameSearch, setCityNameSearch] = React.useState<string>('');\n  const [cityNameChanged, setCityNameChanged] = React.useState<boolean>(false);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const queryClient = useQueryClient();\n\n  const setSnackbarMessage = useSnackbar();\n\n  const { mutate, isLoading } = useMutation(LocationDelete, {\n    onSuccess: () => {\n      setSnackbarMessage({\n        severity: 'success',\n        message: 'Deleted',\n      });\n      queryClient.invalidateQueries(['locations']);\n    },\n    onError: (error: Error) => {\n      setSnackbarMessage({\n        severity: 'error',\n        message: error instanceof Error ? error.message : JSON.stringify(error),\n      });\n    },\n  });\n\n  const cityNameHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setCityNameSearch(event.target.value);\n    setCityNameChanged(true);\n  };\n  const locationClearHandler = () => {\n    setCityNameChanged(false);\n    setCityNameSearch('');\n    setQueryParams({});\n  };\n  const filterHandler = () => {\n    setCityNameChanged(false);\n    setQueryParams({ search: cityNameSearch });\n  };\n  const createHandler = () => {\n    navigate('./create', {\n      relative: 'path',\n      state: { from: location },\n      replace: false,\n    });\n  };\n  const editHandler = () => {\n    navigate(`./edit/${selected[0]}`, {\n      relative: 'path',\n      state: { from: location },\n      replace: false,\n    });\n  };\n  const deleteHandler = () => {\n    mutate(`${selected[0]}`);\n  };\n\n  return (\n    <Toolbar\n      sx={{\n        pl: { sm: 2 },\n        pr: { xs: 1, sm: 1 },\n        ...(selected.length > 0 && {\n          bgcolor: (theme) =>\n            alpha(\n              theme.palette.primary.main,\n              theme.palette.action.activatedOpacity,\n            ),\n        }),\n      }}\n    >\n      {selected.length > 0 ? (\n        <Typography\n          sx={{ flex: '1 1 100%' }}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {selected.length} selected\n        </Typography>\n      ) : (\n        <Typography\n          sx={{\n            flex: '1 1 100%',\n            whiteSpace: 'nowrap',\n            textOverflow: 'ellipsis',\n            overflow: 'hidden',\n          }}\n          variant=\"h6\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          Locations\n        </Typography>\n      )}\n      <TextField\n        label=\"City Name\"\n        value={cityNameSearch}\n        onChange={cityNameHandler}\n        size=\"small\"\n      />\n      <Tooltip title=\"Filter list\">\n        {(cityNameChanged || !cityNameSearch) &&\n        !(cityNameChanged && !cityNameSearch) ? (\n          <span>\n            <IconButton disabled={!cityNameSearch} onClick={filterHandler}>\n              <FilterListIcon />\n            </IconButton>\n          </span>\n        ) : (\n          <span>\n            <IconButton onClick={locationClearHandler}>\n              <FilterListOffIcon />\n            </IconButton>\n          </span>\n        )}\n      </Tooltip>\n      <Box sx={{ p: 1, display: 'inline-flex' }}>\n        <Tooltip title=\"Create\">\n          <span>\n            <IconButton onClick={createHandler}>\n              <AddIcon />\n            </IconButton>\n          </span>\n        </Tooltip>\n        <Tooltip title=\"Edit\">\n          <span>\n            <IconButton disabled={selected.length !== 1} onClick={editHandler}>\n              <EditIcon />\n            </IconButton>\n          </span>\n        </Tooltip>\n        <Tooltip title=\"Delete\">\n          <span>\n            <IconButton\n              disabled={selected.length !== 1}\n              onClick={deleteHandler}\n            >\n              <DeleteIcon />\n            </IconButton>\n          </span>\n        </Tooltip>\n      </Box>\n      <Loader visible={isLoading} />\n    </Toolbar>\n  );\n}\n\nexport default function EnhancedTable() {\n  const [order, setOrder] = React.useState<Order | undefined>('asc');\n  const [orderBy, setOrderBy] = React.useState<keyof Location | undefined>(\n    'name',\n  );\n  const [selected, setSelected] = React.useState<readonly string[]>([]);\n  const [page, setPage] = React.useState<number>(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState<number>(15);\n  const [queryParams, setQueryParams] = React.useState<Record<string, any>>({});\n  const tableContainerRef = React.useRef(null);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const setSnackbarMessage = useSnackbar();\n\n  const {\n    isLoading,\n    isFetching,\n    data: { items, total } = { items: [], total: 0 },\n  } = useQuery({\n    queryKey: ['locations', page, rowsPerPage, orderBy, order, queryParams],\n    queryFn: LocationsQuery,\n    keepPreviousData: true,\n    onError: (error: Error) => {\n      setSnackbarMessage({\n        severity: 'error',\n        message: error instanceof Error ? error.message : JSON.stringify(error),\n      });\n    },\n  });\n  const rows: Location[] = items || [];\n\n  React.useEffect(() => {\n    if (tableContainerRef.current) {\n      const container = tableContainerRef.current as HTMLElement;\n      container.scrollTo({\n        top: 0,\n        left: 0,\n        behavior: 'smooth',\n      });\n    }\n  }, [rows]);\n\n  React.useEffect(() => {\n    const newSelected: string[] = [];\n    selected.forEach((selectedItem) => {\n      const selectedRow = rows.find((row) => row.id === selectedItem);\n      if (selectedRow) {\n        newSelected.push(selectedItem);\n      }\n    });\n    setSelected(newSelected);\n  }, [rows]);\n\n  const handleRequestSort = (\n    event: React.MouseEvent<unknown>,\n    property: keyof Location,\n  ) => {\n    const isAsc = orderBy === property && order === 'asc';\n    const isDesc = orderBy === property && order === 'desc';\n    if (isDesc) {\n      setOrder(undefined);\n      setOrderBy(undefined);\n    } else {\n      setOrder(isAsc ? 'desc' : 'asc');\n      setOrderBy(property);\n    }\n  };\n\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.checked) {\n      const newSelected = rows.map((n: Location) => n.id);\n      setSelected(newSelected);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (\n    event: React.MouseEvent<unknown>,\n    item: (typeof rows)[number],\n  ) => {\n    navigate(`./view/${item.id}`, {\n      relative: 'path',\n      state: { from: location },\n      replace: false,\n    });\n  };\n\n  const handleSelect = (event: React.MouseEvent<unknown>, name: string) => {\n    event.stopPropagation();\n    const selectedIndex = selected.indexOf(name);\n    let newSelected: readonly string[] = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = (name: string) => selected.indexOf(name) !== -1;\n\n  return (\n    <Box sx={{ width: '100%', height: '100%' }}>\n      <Paper sx={{ width: '100%', height: '100%', backgroundColor: 'unset' }}>\n        <EnhancedTableToolbar\n          selected={selected}\n          setQueryParams={(query) => {\n            setQueryParams(query);\n            setPage(0);\n          }}\n        />\n        <TableContainer\n          ref={tableContainerRef}\n          sx={{ height: 'calc(100% - 115px)' }}\n        >\n          <Table\n            sx={{ minWidth: 750 }}\n            aria-labelledby=\"tableTitle\"\n            size=\"small\"\n            stickyHeader\n          >\n            <EnhancedTableHead\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {rows.map((row, index) => {\n                const isItemSelected = isSelected(`${row.id}`);\n                const labelId = `enhanced-table-checkbox-${index}`;\n                return (\n                  <TableRow\n                    hover\n                    onClick={(event) => handleClick(event, row)}\n                    role=\"checkbox\"\n                    aria-checked={isItemSelected}\n                    tabIndex={-1}\n                    key={row.id}\n                    selected={isItemSelected}\n                    sx={{ cursor: 'pointer' }}\n                  >\n                    <StyledTableCell padding=\"checkbox\">\n                      <Checkbox\n                        id={`${labelId}`}\n                        color=\"primary\"\n                        checked={isItemSelected}\n                        inputProps={{\n                          'aria-labelledby': labelId,\n                        }}\n                        onClick={(event) => handleSelect(event, `${row.id}`)}\n                      />\n                    </StyledTableCell>\n                    {headCells.map((cell) => {\n                      const cellData = cell.getData(row);\n                      return (\n                        <StyledTableCell\n                          key={cell.id}\n                          title={cellData.title}\n                          align={cell.numeric ? 'right' : 'center'}\n                        >\n                          {cellData.data}\n                        </StyledTableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 15, 20, 25, 35, 50]}\n          component=\"div\"\n          count={total}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <Loader visible={isLoading || isFetching} />\n    </Box>\n  );\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\nexports.default = _default;"],"names":["headCells","id","orderField","getData","row","data","concat","zipCode","numeric","disablePadding","label","name","stateCode","stateName","location","join","StyledTableHead","styled","TableHead","_ref","backgroundColor","theme","palette","background","default","StyledTableCell","TableCell","_ref2","maxWidth","paddingTop","paddingBottom","whiteSpace","textOverflow","overflow","EnhancedTableHead","props","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","_jsx","children","_jsxs","TableRow","padding","Checkbox","color","indeterminate","checked","onChange","inputProps","map","headCell","align","sortDirection","TableSortLabel","active","hideSortIcon","direction","onClick","property","event","Box","component","sx","visuallyHidden","EnhancedTableToolbar","selected","setQueryParams","_React$useState","React","_React$useState2","_slicedToArray","cityNameSearch","setCityNameSearch","_React$useState3","_React$useState4","cityNameChanged","setCityNameChanged","useLocation","navigate","useNavigate","queryClient","useQueryClient","setSnackbarMessage","useSnackbar","_useMutation","useMutation","LocationDelete","onSuccess","severity","message","invalidateQueries","onError","error","Error","JSON","stringify","mutate","isLoading","Toolbar","_objectSpread","pl","sm","pr","xs","length","bgcolor","alpha","primary","main","action","activatedOpacity","Typography","flex","variant","TextField","value","target","size","Tooltip","title","IconButton","FilterListOffIcon","disabled","search","FilterListIcon","p","display","relative","state","from","replace","AddIcon","EditIcon","DeleteIcon","Loader","visible","EnhancedTable","_React$useState5","_React$useState6","setOrder","_React$useState7","_React$useState8","setOrderBy","_React$useState9","_React$useState10","setSelected","_React$useState11","_React$useState12","page","setPage","_React$useState13","_React$useState14","rowsPerPage","setRowsPerPage","_React$useState15","_React$useState16","queryParams","tableContainerRef","_useQuery","useQuery","queryKey","queryFn","LocationsQuery","keepPreviousData","isFetching","_useQuery$data","_useQuery$data2","items","total","rows","current","scrollTo","top","left","behavior","newSelected","forEach","selectedItem","find","push","width","height","Paper","query","TableContainer","ref","Table","minWidth","stickyHeader","n","isAsc","undefined","TableBody","index","isItemSelected","indexOf","labelId","hover","role","tabIndex","cursor","stopPropagation","selectedIndex","slice","handleSelect","cell","cellData","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","jsx","d"],"sourceRoot":""}