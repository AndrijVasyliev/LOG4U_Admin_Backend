{"version":3,"file":"static/js/9056.1a198c4c.chunk.js","mappings":"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","sources":["GoogleMaps/map.tsx","GoogleMaps/mapComponent.tsx","utils/stopPropagation.ts"],"sourcesContent":["import * as React from 'react';\r\nimport { useQuery } from '@tanstack/react-query';\r\n\r\nimport MapComponent from './mapComponent';\r\nimport Loader from '../components/Loader';\r\nimport { TrucksForMapQuery } from '../api';\r\nimport { TruckForMap } from '../utils/dataTypes';\r\n\r\nexport default function GeneralMap() {\r\n  const {\r\n    isLoading: isTruckListLoading,\r\n    isFetching: isTruckListFetching,\r\n    data: truckListData,\r\n  } = useQuery({\r\n    queryKey: ['trucksForMap'],\r\n    queryFn: TrucksForMapQuery,\r\n    keepPreviousData: false,\r\n    retry: false,\r\n  });\r\n  const rows: TruckForMap[] = (truckListData || []).filter(\r\n    (truck) => truck.lastLocation,\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <MapComponent truckListData={rows} />\r\n      <Loader visible={isTruckListLoading || isTruckListFetching} />\r\n    </>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport { Wrapper, Status } from '@googlemaps/react-wrapper';\r\nimport { Library } from '@googlemaps/js-api-loader/src';\r\nimport { MarkerClusterer as MarkerClustererClass } from '@googlemaps/markerclusterer';\r\n\r\nimport Slide from '@mui/material/Slide';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport Button from '@mui/material/Button';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Box from '@mui/material/Box';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport { TransitionProps } from '@mui/material/transitions';\r\nimport ContentCopy from '@mui/icons-material/ContentCopy';\r\n\r\nimport Loader from '../components/Loader';\r\nimport { TruckQuery } from '../api';\r\nimport { useSnackbar } from '../hooks';\r\nimport { Truck, TruckForMap } from '../utils/dataTypes';\r\nimport { getType } from '../utils/queryHelpers';\r\nimport { stopPropagation } from '../utils/stopPropagation';\r\nimport { getMapSettings } from '../utils/getMapSettings';\r\n\r\nconst center = { lat: 39.828922654821866, lng: -98.57947970000001 };\r\nconst zoom = 5;\r\nconst mapId = '865ca10c27c22749';\r\n\r\nconst Transition = React.forwardRef(function Transition(\r\n  props: TransitionProps & {\r\n    children: React.ReactElement<any, any>;\r\n  },\r\n  ref: React.Ref<unknown>,\r\n) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function MapComponent({\r\n  truckListData,\r\n}: {\r\n  truckListData: TruckForMap[];\r\n}) {\r\n  let mapCenter = center;\r\n  let mapZoom = zoom;\r\n  if (truckListData.length === 1 && truckListData[0].lastLocation) {\r\n    mapCenter = {\r\n      lat: truckListData[0].lastLocation[0],\r\n      lng: truckListData[0].lastLocation[1],\r\n    };\r\n    mapZoom = mapZoom * 2;\r\n  }\r\n\r\n  const [selectedTruckId, setSelectedTruckId] = React.useState<string>('');\r\n  const [selectedTruck, setSelectedTruck] = React.useState<Truck | null>(null);\r\n\r\n  const {\r\n    // isLoading: isTruckLoading,\r\n    isFetching: isTruckFetching,\r\n    data: truck,\r\n    refetch,\r\n  } = useQuery({\r\n    queryKey: ['truckForMap', selectedTruckId],\r\n    queryFn: TruckQuery,\r\n    keepPreviousData: false,\r\n    retry: false,\r\n    enabled: false,\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (!selectedTruckId) {\r\n      setSelectedTruck(null);\r\n    } else {\r\n      refetch();\r\n    }\r\n  }, [selectedTruckId]);\r\n\r\n  React.useEffect(() => {\r\n    setSelectedTruck(truck || null);\r\n  }, [truck]);\r\n\r\n  const handleClickOpen = (truckId: string) => {\r\n    setSelectedTruckId(truckId);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setSelectedTruckId('');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        component=\"main\"\r\n        sx={{ flexGrow: 1, p: 1, height: '100%', width: '100%' }}\r\n      >\r\n        <Wrapper {...getMapSettings()} render={render}>\r\n          <Map center={mapCenter} zoom={mapZoom} mapId={mapId}>\r\n            <MarkerClusterer>\r\n              {truckListData.map((truck) => {\r\n                return (\r\n                  <Marker\r\n                    key={truck.id}\r\n                    onCLick={() => handleClickOpen(truck.id)}\r\n                    optimized\r\n                    animation={window?.google?.maps?.Animation?.DROP}\r\n                    title={`${truck.truckNumber}\\n${truck.status}`}\r\n                    position={{\r\n                      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n                      // @ts-ignore\r\n                      lat: truck.lastLocation[0],\r\n                      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n                      // @ts-ignore\r\n                      lng: truck.lastLocation[1],\r\n                    }}\r\n                  />\r\n                );\r\n              })}\r\n            </MarkerClusterer>\r\n          </Map>\r\n        </Wrapper>\r\n      </Box>\r\n      <Dialog\r\n        open={!!selectedTruck}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleDialogClose}\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle>\r\n          <span>\r\n            TRUCK NUMBER: \r\n            <a href={`./trucks/view/${selectedTruck?.id}`} target=\"_blank\">\r\n              {selectedTruck?.truckNumber}\r\n            </a>\r\n          </span>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"truck-status\">\r\n            {`CURRENT STATUS: ${selectedTruck?.status}`}\r\n          </DialogContentText>\r\n          <DialogContentText id=\"main-contact\">\r\n            <span>\r\n              {'MAIN CONTACT: '}\r\n              <b>{`${\r\n                selectedTruck?.coordinator || selectedTruck?.owner\r\n                  ? // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n                    //@ts-ignore\r\n                    getType(selectedTruck?.coordinator || selectedTruck?.owner)\r\n                  : ''\r\n              }`}</b>\r\n              {` ${\r\n                selectedTruck?.coordinator || selectedTruck?.owner\r\n                  ? // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n                    //@ts-ignore\r\n                    (selectedTruck?.coordinator || selectedTruck?.owner)\r\n                      .fullName\r\n                  : ''\r\n              }`}\r\n              <IconButton\r\n                size=\"small\"\r\n                onClick={(event) => {\r\n                  stopPropagation(event);\r\n                  navigator.clipboard.writeText(\r\n                    ` ${\r\n                      selectedTruck?.coordinator || selectedTruck?.owner\r\n                        ? // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n                          //@ts-ignore\r\n                          (selectedTruck?.coordinator || selectedTruck?.owner)\r\n                            .fullName\r\n                        : ''\r\n                    } ${\r\n                      (selectedTruck?.coordinator || selectedTruck?.owner)\r\n                        ?.phone || ''\r\n                    }`,\r\n                  );\r\n                }}\r\n              >\r\n                <ContentCopy sx={{ height: '16px', width: '16px' }} />\r\n              </IconButton>\r\n            </span>\r\n          </DialogContentText>\r\n          <DialogContentText id=\"main-contact-number\">\r\n            <span>\r\n              {'MAIN CONTACT #: '}\r\n              <a\r\n                href={\r\n                  selectedTruck?.coordinator || selectedTruck?.owner\r\n                    ? `tel:${\r\n                        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n                        //@ts-ignore\r\n                        (selectedTruck?.coordinator || selectedTruck?.owner)\r\n                          .phone\r\n                      }`\r\n                    : undefined\r\n                }\r\n                target=\"_blank\"\r\n                onClick={stopPropagation}\r\n              >\r\n                {(selectedTruck?.coordinator || selectedTruck?.owner)?.phone ||\r\n                  ''}\r\n              </a>\r\n            </span>\r\n          </DialogContentText>\r\n          <DialogContentText id=\"last-location\">\r\n            <span>\r\n              {'LAST LOCATION #: '}\r\n              <a\r\n                href={`${\r\n                  selectedTruck?.lastCity\r\n                    ? './locations/view/' + selectedTruck?.lastCity.id\r\n                    : ''\r\n                }`}\r\n                target=\"_blank\"\r\n                onClick={stopPropagation}\r\n              >\r\n                {`${selectedTruck?.lastCity?.name}, ${selectedTruck?.lastCity?.stateCode}, ${selectedTruck?.lastCity?.zipCode}`}\r\n              </a>\r\n              <IconButton\r\n                size=\"small\"\r\n                onClick={(event) => {\r\n                  stopPropagation(event);\r\n                  navigator.clipboard.writeText(\r\n                    `${selectedTruck?.lastCity?.name}, ${selectedTruck?.lastCity?.stateCode}, ${selectedTruck?.lastCity?.zipCode}`,\r\n                  );\r\n                }}\r\n              >\r\n                <ContentCopy sx={{ height: '16px', width: '16px' }} />\r\n              </IconButton>\r\n            </span>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleDialogClose}>Close</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Loader visible={isTruckFetching} />\r\n    </>\r\n  );\r\n}\r\n\r\nconst render = (status: Status): React.ReactElement => {\r\n  const setSnackbarMessage = useSnackbar();\r\n  if (status === Status.FAILURE) {\r\n    setSnackbarMessage({\r\n      severity: 'error',\r\n      message: 'Error loading maps!',\r\n    });\r\n  }\r\n  return (\r\n    <>\r\n      <Loader visible={status === Status.LOADING} />\r\n    </>\r\n  );\r\n};\r\n\r\nfunction Map({\r\n  center,\r\n  zoom,\r\n  mapId,\r\n  children,\r\n}: {\r\n  center: google.maps.LatLngLiteral;\r\n  zoom: number;\r\n  mapId: string;\r\n  children?: React.ReactNode;\r\n}) {\r\n  const mapRef = React.useRef(null);\r\n  const [map, setMap] = React.useState<google.maps.Map>();\r\n\r\n  React.useEffect(() => {\r\n    if (mapRef.current && !map) {\r\n      setMap(\r\n        new window.google.maps.Map(mapRef.current, {\r\n          center,\r\n          zoom,\r\n          mapId,\r\n        }),\r\n      );\r\n    }\r\n  }, [mapRef, map]);\r\n\r\n  const child = React.Children.only(children);\r\n\r\n  return (\r\n    <>\r\n      <div style={{ height: '100%', width: '100%' }} ref={mapRef} id=\"map\" />\r\n      {React.isValidElement(child) &&\r\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n        // @ts-ignore\r\n        React.cloneElement(child, { map })}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction MarkerClusterer({\r\n  map,\r\n  children,\r\n}: {\r\n  map?: google.maps.Map;\r\n  children?: React.ReactNode;\r\n}) {\r\n  const [clusterer, setClasterer] = React.useState<MarkerClustererClass>();\r\n\r\n  React.useEffect(() => {\r\n    if (!clusterer) {\r\n      setClasterer(new MarkerClustererClass({}));\r\n    }\r\n\r\n    return () => {\r\n      if (clusterer) {\r\n        clusterer.setMap(null);\r\n      }\r\n    };\r\n  }, [clusterer]);\r\n\r\n  React.useEffect(() => {\r\n    if (clusterer && map) {\r\n      clusterer.setMap(map);\r\n    }\r\n  }, [map]);\r\n\r\n  React.useEffect(() => {\r\n    if (clusterer) {\r\n      clusterer.render();\r\n    }\r\n  }, [map, children]);\r\n  clusterer?.render();\r\n\r\n  return (\r\n    <>\r\n      {React.Children.map(children, (child) => {\r\n        if (React.isValidElement(child)) {\r\n          // set the map prop on the child component\r\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n          // @ts-ignore\r\n          return React.cloneElement(child, { map, clusterer });\r\n        }\r\n      })}\r\n    </>\r\n  );\r\n}\r\n\r\nconst Marker: React.FC<\r\n  google.maps.MarkerOptions & {\r\n    onCLick: () => void;\r\n    clusterer?: MarkerClustererClass;\r\n  }\r\n> = (options) => {\r\n  const { onCLick, clusterer, map, position, ...otherMarkerOptions } = options;\r\n  const [marker, setMarker] = React.useState<google.maps.Marker>();\r\n\r\n  React.useEffect(() => {\r\n    if (!marker) {\r\n      const newMarker = new window.google.maps.Marker();\r\n      setMarker(newMarker);\r\n      newMarker.addListener('click', onCLick);\r\n    }\r\n\r\n    return () => {\r\n      if (marker) {\r\n        marker.setMap(null);\r\n        clusterer?.removeMarker(marker, false);\r\n      }\r\n    };\r\n  }, [marker]);\r\n\r\n  React.useEffect(() => {\r\n    if (marker) {\r\n      marker.setMap(map || null);\r\n    }\r\n  }, [marker, map]);\r\n\r\n  React.useEffect(() => {\r\n    if (marker) {\r\n      marker.setPosition(position);\r\n    }\r\n  }, [marker, position && `${position?.lat},${position?.lng}`]);\r\n\r\n  React.useEffect(() => {\r\n    if (marker) {\r\n      clusterer?.addMarker(marker, false);\r\n    }\r\n  }, [marker, clusterer]);\r\n\r\n  React.useEffect(() => {\r\n    if (marker) {\r\n      marker.setOptions(otherMarkerOptions);\r\n    }\r\n  }, [marker, otherMarkerOptions]);\r\n\r\n  return null;\r\n};\r\n","import * as React from 'react';\r\n\r\nexport function stopPropagation(e: React.SyntheticEvent) {\r\n  e.stopPropagation();\r\n}\r\n"],"names":["GeneralMap","_useQuery","useQuery","queryKey","queryFn","TrucksForMapQuery","keepPreviousData","retry","isTruckListLoading","isLoading","isTruckListFetching","isFetching","rows","data","filter","truck","lastLocation","_jsxs","_Fragment","children","_jsx","MapComponent","truckListData","Loader","visible","center","lat","lng","zoom","mapId","Transition","React","props","ref","Slide","_objectSpread","direction","_ref","_ref3","_selectedTruck$lastCi","_selectedTruck$lastCi2","_selectedTruck$lastCi3","mapCenter","mapZoom","length","_React$useState","_React$useState2","_slicedToArray","selectedTruckId","setSelectedTruckId","_React$useState3","_React$useState4","selectedTruck","setSelectedTruck","TruckQuery","enabled","isTruckFetching","refetch","handleDialogClose","Box","component","sx","flexGrow","p","height","width","Wrapper","getMapSettings","render","Map","MarkerClusterer","map","_window","_window$google","_window$google$maps","_window$google$maps$A","Marker","onCLick","truckId","id","optimized","animation","window","google","maps","Animation","DROP","title","concat","truckNumber","status","position","Dialog","open","TransitionComponent","keepMounted","onClose","DialogTitle","href","target","DialogContent","DialogContentText","coordinator","owner","getType","fullName","IconButton","size","onClick","event","_ref2","stopPropagation","navigator","clipboard","writeText","phone","ContentCopy","undefined","lastCity","name","stateCode","zipCode","_selectedTruck$lastCi4","_selectedTruck$lastCi5","_selectedTruck$lastCi6","DialogActions","Button","setSnackbarMessage","useSnackbar","Status","FAILURE","severity","message","LOADING","_ref4","mapRef","_React$useState5","_React$useState6","setMap","current","child","only","style","_ref5","_React$useState7","_React$useState8","clusterer","setClasterer","MarkerClustererClass","options","otherMarkerOptions","_objectWithoutProperties","_excluded","_React$useState9","_React$useState10","marker","setMarker","newMarker","addListener","removeMarker","setPosition","addMarker","setOptions","e"],"sourceRoot":""}