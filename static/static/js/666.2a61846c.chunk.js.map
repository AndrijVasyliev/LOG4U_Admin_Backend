{"version":3,"file":"static/js/666.2a61846c.chunk.js","mappings":"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","sources":["icons/cat.svg","icons/truck.svg","trucksNearby/reserveTruckButton.tsx","trucksNearby/trucksNearby.tsx","utils/dataTypes.ts","../node_modules/@mui/material/internal/svg-icons/Person.js","../node_modules/@mui/material/Avatar/avatarClasses.js","../node_modules/@mui/material/Avatar/Avatar.js","../node_modules/@tanstack/query-core/src/mutationObserver.ts","../node_modules/@tanstack/react-query/src/useMutation.ts"],"sourcesContent":["var _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgCat(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    \"data-name\": \"Layer 1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 128 128\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 64,\n    cy: 75,\n    r: 45,\n    fill: \"none\",\n    strokeWidth: 10,\n    style: {\n      stroke: \"currentcolor\"\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 96.94 40.17 C 96.94 23.36 82.19 9.73 64 9.73 C 45.81 9.73 31.06 23.36 31.06 40.17\",\n    style: {\n      paintOrder: \"fill\",\n      strokeWidth: 6,\n      stroke: \"currentcolor\",\n      fill: \"rgba(255, 255, 255, 0)\"\n    }\n  }), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"39.98 19.5 37.64 5.17 50.61 14.17\",\n    style: {\n      stroke: \"currentcolor\",\n      strokeWidth: 4,\n      fill: \"rgba(0, 0, 0, 0)\"\n    }\n  }), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"87.05 19.5 89.39 5.17 76.42 14.17\",\n    style: {\n      stroke: \"currentcolor\",\n      strokeWidth: 4,\n      fill: \"rgba(0, 0, 0, 0)\"\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 29.27 108.3 C 28.05 113.07 26.83 117.84 25.62 122.61\",\n    style: {\n      stroke: \"currentcolor\",\n      paintOrder: \"stroke\",\n      strokeLinecap: \"round\",\n      strokeWidth: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 25.72 122.61 C 38.31 122.83 50.91 123.05 63.5 123.28\",\n    style: {\n      stroke: \"currentcolor\",\n      strokeWidth: 4,\n      strokeLinecap: \"round\"\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 98.96 108.3 C 100.18 113.07 101.4 117.84 102.61 122.61\",\n    style: {\n      strokeLinecap: \"round\",\n      strokeWidth: 4,\n      stroke: \"currentcolor\",\n      paintOrder: \"stroke\"\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 102.5 122.61 C 88.91 122.85 76.32 123.07 64.72 123.28\",\n    style: {\n      strokeLinecap: \"round\",\n      stroke: \"currentcolor\",\n      strokeWidth: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"63 39.5 63 79.5 79.91 93.83\",\n    style: {\n      stroke: \"currentcolor\",\n      strokeWidth: 6,\n      paintOrder: \"fill\",\n      strokeLinecap: \"round\",\n      fill: \"rgba(255, 255, 255, 0)\"\n    }\n  }));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCat);\nexport default __webpack_public_path__ + \"static/media/cat.b0cbea142ef6c467bbabb420d9425865.svg\";\nexport { ForwardRef as ReactComponent };","var _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgTruck(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    focusable: \"false\",\n    \"aria-hidden\": \"true\",\n    viewBox: \"0 0 24 24\",\n    \"data-testid\": \"LocalShippingIcon\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m20 8h-3v-4h-14c-1.1 0-2 .9-2 2v11h2c0 1.66 1.34 3 3 3s3-1.34 3-3h6c0 1.66 1.34 3 3 3s3-1.34 3-3h2v-5l-3-4zm-14 10.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm13.5-9 1.96 2.5h-4.46v-2.5h2.5zm-1.5 9c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm-14.7-9 1.53 0 0 1.66-3.03 0 1.51-1.66zm2.46-2.74 1.66-1.84 0 4.57.94 0 0 1.66-.94 0 0 1.93-1.66 0 0-6.33zm6.58 6.48c-.37-.06-.72-.19-1.04-.37-.32-.19-.61-.42-.86-.7-.28-.32-.49-.67-.61-1.05-.12-.39-.18-.87-.18-1.44l0-4.51 1.66 0 0 4.36c0 .31.01.57.05.78.03.21.08.39.16.55.08.15.19.28.32.38.14.1.31.19.52.27l0 1.74zm.91-1.74c.21-.07.37-.16.51-.26.14-.1.25-.23.33-.39.08-.14.14-.31.17-.5.03-.2.05-.47.05-.83l0-4.36 1.65 0 0 4.51c0 .58-.06 1.06-.18 1.44-.12.38-.33.73-.61 1.05-.25.29-.54.52-.87.7-.33.18-.68.3-1.04.37l0-1.74z\",\n    style: {\n      fillRule: \"evenodd\",\n      fill: \"currentcolor\"\n    }\n  }));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgTruck);\nexport default __webpack_public_path__ + \"static/media/truck.cd6a1057a38896c7dca3f9ca88d7879e.svg\";\nexport { ForwardRef as ReactComponent };","import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\r\nimport { addMinutes } from 'date-fns';\r\n\r\nimport { TruckUpdate } from '../api';\r\nimport { Truck } from '../utils/dataTypes';\r\n\r\nconst reservationTime = 15; // 15 minutes\r\n\r\nconst calcReserveWillLast = (reservedTill: Date | '' | undefined) => {\r\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n  // @ts-ignore\r\n  let reservedWillLast = (reservedTill - new Date()) / (1000 * 60);\r\n  reservedWillLast = reservedWillLast > 0 ? Math.ceil(reservedWillLast) : 0;\r\n  return reservedWillLast;\r\n};\r\n\r\nexport default function ReserveTruckButton({\r\n  truck,\r\n  index,\r\n}: {\r\n  truck: Truck;\r\n  index: number;\r\n}) {\r\n  const [remainReserved, setRemainReserved] = React.useState<number>(0);\r\n  const { reservedAt, reservedBy } = truck;\r\n  const reservedTill =\r\n    reservedAt && addMinutes(new Date(reservedAt), reservationTime);\r\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n  // @ts-ignore\r\n  const isReserved = new Date() < reservedTill;\r\n\r\n  React.useEffect(() => {\r\n    if (isReserved) {\r\n      setRemainReserved(calcReserveWillLast(reservedTill));\r\n      const interval = setInterval(() => {\r\n        setRemainReserved(calcReserveWillLast(reservedTill));\r\n      }, 1000 * 2);\r\n      return () => {\r\n        clearInterval(interval);\r\n        setRemainReserved(0);\r\n      };\r\n    }\r\n  }, [isReserved, reservedTill]);\r\n\r\n  const queryClient = useQueryClient();\r\n  const { mutate, isLoading } = useMutation(TruckUpdate, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries({\r\n        queryKey: ['trucks'],\r\n        refetchType: 'active',\r\n      });\r\n      return;\r\n    },\r\n    onError: (error: Error) => {\r\n      return;\r\n    },\r\n  });\r\n\r\n  const reserveButtonClickHandler = (event: React.SyntheticEvent) => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    mutate({ id: truck.id, reservedAt: isReserved ? null : new Date() });\r\n  };\r\n\r\n  const labelId = `enhanced-table-checkbox-${index}`;\r\n  const title = `${\r\n    isReserved && reservedBy\r\n      ? 'Reserved by:\\n' +\r\n        reservedBy.fullName +\r\n        '\\nTime left: ' +\r\n        remainReserved +\r\n        'min'\r\n      : ''\r\n  }`;\r\n  return (\r\n    <Button\r\n      id={`${labelId}`}\r\n      title={title}\r\n      sx={{ m: 1, height: '35px', lineHeight: 'normal', fontSize: 'x-small' }}\r\n      fullWidth\r\n      variant=\"contained\"\r\n      size=\"small\"\r\n      color=\"primary\"\r\n      onClickCapture={reserveButtonClickHandler}\r\n    >\r\n      {isReserved ? (\r\n        <span>\r\n          Unreserve\r\n          <br />({remainReserved}min)\r\n        </span>\r\n      ) : (\r\n        'Reserve'\r\n      )}\r\n    </Button>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\r\n\r\nimport { alpha, styled } from '@mui/material/styles';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport TextField from '@mui/material/TextField';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Box from '@mui/material/Box';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableSortLabel from '@mui/material/TableSortLabel';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\nimport Grid from '@mui/material/Grid';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport { renderTimeViewClock } from '@mui/x-date-pickers/timeViewRenderers';\r\nimport { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker';\r\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport Select from '@mui/material/Select';\r\nimport FormHelperText from '@mui/material/FormHelperText';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FilterListIcon from '@mui/icons-material/FilterList';\r\nimport FilterListOffIcon from '@mui/icons-material/FilterListOff';\r\nimport ContentCopy from '@mui/icons-material/ContentCopy';\r\nimport AccessTime from '@mui/icons-material/AccessTime';\r\nimport LocalShipping from '@mui/icons-material/LocalShipping';\r\nimport { visuallyHidden } from '@mui/utils';\r\nimport { debounce } from '@mui/material/utils';\r\nimport { grey, green, orange } from '@mui/material/colors';\r\n\r\nimport ReserveTruckButton from './reserveTruckButton';\r\nimport { ReactComponent as CatIcon } from '../icons/cat.svg';\r\nimport { ReactComponent as TruckIcon } from '../icons/truck.svg';\r\n\r\nimport Loader from '../components/Loader';\r\nimport { LocationsQuery, TrucksQuery, TruckDelete } from '../api';\r\nimport { useMap, useSnackbar } from '../hooks';\r\nimport {\r\n  Order,\r\n  Truck,\r\n  Location,\r\n  Result,\r\n  TruckStatuses,\r\n  TruckStatus,\r\n} from '../utils/dataTypes';\r\nimport { getPath, getType, modifyedQueryFn } from '../utils/queryHelpers';\r\nimport { stopPropagation } from '../utils/stopPropagation';\r\n\r\ninterface HeadCell {\r\n  id: string;\r\n  disablePadding: boolean;\r\n  orderField?: keyof Truck;\r\n  getData: (\r\n    row: Truck,\r\n    setMapData: any,\r\n  ) => { data: JSX.Element | string; title?: string };\r\n  label: string;\r\n  numeric: boolean;\r\n}\r\nconst themeMode = localStorage.getItem('theme') === 'dark' ? 'dark' : 'light';\r\nconst headCells: readonly HeadCell[] = [\r\n  {\r\n    id: 'truckNumber',\r\n    orderField: 'truckNumber',\r\n    getData: (row) => ({ data: `${row.truckNumber}` }),\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Truck Number',\r\n  },\r\n  {\r\n    id: 'mainContactInfo',\r\n    getData: (row) => {\r\n      const person = row.coordinator || row.owner;\r\n      let path = '';\r\n      let type = '';\r\n      let firstRow = '';\r\n      let secondRow = '';\r\n      if (person) {\r\n        path = `./${getPath(person)}/view/${person.id}`;\r\n        type = `${getType(person)} `;\r\n        firstRow = `${person.fullName}`;\r\n        secondRow = `${person?.phone}`;\r\n      }\r\n      return {\r\n        data: (\r\n          <span style={{ display: 'flex' }}>\r\n            <span\r\n              style={{\r\n                textOverflow: 'ellipsis',\r\n                overflow: 'hidden',\r\n                textAlign: 'left',\r\n              }}\r\n            >\r\n              <b>{type}</b>\r\n              <a href={path} target=\"_blank\" onClick={stopPropagation}>\r\n                {firstRow}\r\n              </a>\r\n              <br />\r\n              <a\r\n                href={secondRow ? `tel:${secondRow}` : undefined}\r\n                target=\"_blank\"\r\n                onClick={stopPropagation}\r\n              >\r\n                {secondRow || ' '}\r\n              </a>\r\n            </span>\r\n            <IconButton\r\n              size=\"small\"\r\n              onClick={(event) => {\r\n                stopPropagation(event);\r\n                navigator.clipboard.writeText(firstRow + ' ' + secondRow);\r\n              }}\r\n            >\r\n              <ContentCopy sx={{ height: '16px', width: '16px' }} />\r\n            </IconButton>\r\n          </span>\r\n        ),\r\n        title: type + '' + firstRow + '\\n' + secondRow,\r\n      };\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Main Contact info',\r\n  },\r\n  {\r\n    id: 'truckInfo',\r\n    getData: (row) => {\r\n      const firstRow = row.type ? `${row.type}` : '';\r\n      const secondRow = row.equipment ? `${row.equipment.join(', ')}` : '';\r\n\r\n      return {\r\n        data: (\r\n          <span>\r\n            {firstRow}\r\n            <br />\r\n            {secondRow}\r\n          </span>\r\n        ),\r\n        title: firstRow + '\\n' + secondRow,\r\n      };\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Truck info',\r\n  },\r\n  {\r\n    id: 'dimsAndPayload',\r\n    getData: (row) => {\r\n      const firstRowPart1 = row.insideDims ? `${row.insideDims}` : '';\r\n      const firstRowPart2 = row.doorDims ? `${row.doorDims}` : '';\r\n      const secondRow = row.payload ? `${row.payload}` : '';\r\n\r\n      return {\r\n        data: (\r\n          <span>\r\n            {(firstRowPart1 ? firstRowPart1 + ' ' : '') +\r\n              `${firstRowPart2 ? '(' + firstRowPart2 + ')' : ''}`}\r\n            <br />\r\n            {secondRow}\r\n          </span>\r\n        ),\r\n        title:\r\n          (firstRowPart1 ? firstRowPart1 + ' Inside ' : '') +\r\n          (firstRowPart2 ? firstRowPart2 + ' Door ' : '') +\r\n          '\\n' +\r\n          secondRow +\r\n          ' Payload',\r\n      };\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'DIMS/Payload',\r\n  },\r\n  {\r\n    id: 'status',\r\n    orderField: 'status',\r\n    getData: (row) => {\r\n      const status = `${row.status}`;\r\n      const val = (() => {\r\n        switch (status) {\r\n          case 'Will be available':\r\n            return (\r\n              <CatIcon\r\n                style={{\r\n                  height: '24px',\r\n                  width: '24px',\r\n                  color: themeMode === 'dark' ? grey[100] : grey[900],\r\n                }}\r\n              />\r\n              /*<AccessTime\r\n                sx={{ height: '24px', width: '24px', color: grey[900] }}\r\n              />*/\r\n            );\r\n          case 'On route':\r\n            return (\r\n              <TruckIcon\r\n                style={{\r\n                  height: '24px',\r\n                  width: '24px',\r\n                  color: themeMode === 'dark' ? grey[300] : grey[700],\r\n                }}\r\n              />\r\n              /*<LocalShipping\r\n                sx={{ height: '24px', width: '24px', color: orange[500] }}\r\n              />*/\r\n            );\r\n          case 'Available':\r\n            return (\r\n              <Avatar\r\n                sx={{\r\n                  height: '24px',\r\n                  width: '24px',\r\n                  bgcolor: green[500],\r\n                  margin: 'auto',\r\n                }}\r\n              >\r\n                A\r\n              </Avatar>\r\n            );\r\n          case 'Not Available':\r\n            return (\r\n              <Avatar\r\n                sx={{\r\n                  height: '24px',\r\n                  width: '24px',\r\n                  bgcolor: grey[500],\r\n                  margin: 'auto',\r\n                }}\r\n              >\r\n                N\r\n              </Avatar>\r\n            );\r\n          default:\r\n            return status;\r\n        }\r\n      })();\r\n\r\n      return {\r\n        data: <span>{val}</span>,\r\n        title: status,\r\n      };\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Status',\r\n  },\r\n  {\r\n    id: 'willBeAtLocation',\r\n    getData: (row, setMapData) => {\r\n      const onRefClick = (event: React.SyntheticEvent) => {\r\n        // event.preventDefault();\r\n        stopPropagation(event);\r\n        // setMapData([row]);\r\n      };\r\n\r\n      if (row?.availabilityCity) {\r\n        const path = `./locations/view/${row.availabilityCity.id}`;\r\n        const firstRow = `${row.availabilityCity.name}, ${row.availabilityCity.stateCode}, ${row.availabilityCity.zipCode}`;\r\n        const secondRow = `${\r\n          row.availabilityAt\r\n            ? new Date(row.availabilityAt).toLocaleString()\r\n            : ''\r\n        }`;\r\n\r\n        return {\r\n          data: (\r\n            <span style={{ display: 'flex' }}>\r\n              <span\r\n                style={{\r\n                  textOverflow: 'ellipsis',\r\n                  overflow: 'hidden',\r\n                  textAlign: 'left',\r\n                }}\r\n              >\r\n                <a href={path} target=\"_blank\" onClick={onRefClick}>\r\n                  {firstRow}\r\n                </a>\r\n                <br />\r\n                {secondRow}\r\n              </span>\r\n              <IconButton\r\n                size=\"small\"\r\n                onClick={(event) => {\r\n                  stopPropagation(event);\r\n                  navigator.clipboard.writeText(firstRow);\r\n                }}\r\n              >\r\n                <ContentCopy sx={{ height: '16px', width: '16px' }} />\r\n              </IconButton>\r\n            </span>\r\n          ),\r\n          title: firstRow + '\\n' + secondRow,\r\n        };\r\n      } else {\r\n        return { data: '' };\r\n      }\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Will be at location',\r\n  },\r\n  {\r\n    id: 'roadsDistance',\r\n    getData: (row) => ({\r\n      data: `${row.milesByRoads ? row.milesByRoads.toFixed(2) : ''}`,\r\n    }),\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Road distance',\r\n  },\r\n  {\r\n    id: 'location',\r\n    getData: (row, setMapData) => {\r\n      const onRefClick = (event: React.SyntheticEvent) => {\r\n        event.preventDefault();\r\n        stopPropagation(event);\r\n        setMapData([row]);\r\n      };\r\n\r\n      if (row?.lastCity) {\r\n        const path = `./locations/view/${row.lastCity.id}`;\r\n        const firstRow = `${row.lastCity.name}, ${row.lastCity.stateCode}, ${row.lastCity.zipCode}`;\r\n        const secondRow = `${\r\n          row.locationUpdatedAt\r\n            ? new Date(row.locationUpdatedAt).toLocaleString()\r\n            : ''\r\n        }`;\r\n\r\n        return {\r\n          data: (\r\n            <span style={{ display: 'flex' }}>\r\n              <span\r\n                style={{\r\n                  textOverflow: 'ellipsis',\r\n                  overflow: 'hidden',\r\n                  textAlign: 'left',\r\n                }}\r\n              >\r\n                <a href={path} target=\"_blank\" onClick={onRefClick}>\r\n                  {firstRow}\r\n                </a>\r\n                <br />\r\n                {secondRow}\r\n              </span>\r\n              <IconButton\r\n                size=\"small\"\r\n                onClick={(event) => {\r\n                  stopPropagation(event);\r\n                  navigator.clipboard.writeText(firstRow);\r\n                }}\r\n              >\r\n                <ContentCopy sx={{ height: '16px', width: '16px' }} />\r\n              </IconButton>\r\n            </span>\r\n          ),\r\n          title: firstRow + '\\n' + secondRow,\r\n        };\r\n      } else {\r\n        return { data: '' };\r\n      }\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Last known location',\r\n  },\r\n  /*{\r\n    id: 'calcDistance',\r\n    getData: (row) => ({\r\n      data: `${row.milesHaversine ? row.milesHaversine.toFixed(2) : ''}`,\r\n    }),\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Origin away',\r\n  },*/\r\n];\r\n\r\ninterface EnhancedTableProps {\r\n  numSelected: number;\r\n  onRequestSort: (\r\n    event: React.MouseEvent<unknown>,\r\n    property: keyof Truck,\r\n  ) => void;\r\n  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n  order: Order | undefined;\r\n  orderBy: string | undefined;\r\n  rowCount: number;\r\n}\r\n\r\nconst StyledTableHead = styled(TableHead)(({ theme }) => ({\r\n  backgroundColor: theme.palette.background.default,\r\n}));\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n  maxWidth: '100px',\r\n  paddingTop: '6px',\r\n  paddingBottom: '6px',\r\n  whiteSpace: 'nowrap',\r\n  textOverflow: 'ellipsis',\r\n  overflow: 'hidden',\r\n}));\r\n\r\nfunction EnhancedTableHead(props: EnhancedTableProps) {\r\n  const {\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n  const createSortHandler =\r\n    (property: keyof Truck) => (event: React.MouseEvent<unknown>) => {\r\n      onRequestSort(event, property);\r\n    };\r\n\r\n  return (\r\n    <StyledTableHead>\r\n      <TableRow>\r\n        <StyledTableCell align=\"center\" padding=\"checkbox\">\r\n          Actions\r\n        </StyledTableCell>\r\n        {headCells.map((headCell) => (\r\n          <StyledTableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'center'}\r\n            padding={headCell.disablePadding ? 'none' : 'normal'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={headCell.orderField && orderBy === headCell.orderField}\r\n              hideSortIcon={!headCell.orderField}\r\n              direction={orderBy === headCell.orderField ? order : 'asc'}\r\n              onClick={\r\n                headCell.orderField\r\n                  ? createSortHandler(headCell.orderField)\r\n                  : () => {\r\n                      return;\r\n                    }\r\n              }\r\n            >\r\n              {headCell.label}\r\n              {headCell.orderField && orderBy === headCell.orderField ? (\r\n                <Box component=\"span\" sx={visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </Box>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </StyledTableCell>\r\n        ))}\r\n      </TableRow>\r\n    </StyledTableHead>\r\n  );\r\n}\r\n\r\ninterface EnhancedTableToolbarProps {\r\n  selected: readonly string[];\r\n  setQueryParams: React.Dispatch<\r\n    React.SetStateAction<Record<string, number | string | string[] | Date>>\r\n  >;\r\n}\r\n\r\nfunction EnhancedTableToolbar(props: EnhancedTableToolbarProps) {\r\n  const { selected, setQueryParams } = props;\r\n  // Location field state\r\n  const [locationValue, setLocationValue] = React.useState<Location | null>(\r\n    null,\r\n  );\r\n  const [inputValue, setInputValue] = React.useState('');\r\n  const [locationsQueryParams, setLocationsQueryParams] = React.useState<{\r\n    search?: any;\r\n  }>({});\r\n  const [options, setOptions] = React.useState<readonly Location[]>([]);\r\n  const [availableFrom, setAvailableFrom] = React.useState<Date | null>(null);\r\n  const [availableTo, setAvailableTo] = React.useState<Date | null>(null);\r\n  const [isFromDateError, setFromDateError] = React.useState<boolean>(false);\r\n  const [isToDateError, setToDateError] = React.useState<boolean>(false);\r\n  const [statusOpen, setStatusOpen] = React.useState<boolean>(false);\r\n  const [statusValue, setStatusValue] = React.useState<TruckStatus[]>([\r\n    'Available',\r\n  ]);\r\n  const [distanceValue, setDistanceValue] = React.useState<number>(200);\r\n  const [searchDataChanged, setSearchDataChanged] =\r\n    React.useState<boolean>(false);\r\n\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const queryClient = useQueryClient();\r\n\r\n  const setSnackbarMessage = useSnackbar();\r\n\r\n  const { mutate, isLoading } = useMutation(TruckDelete, {\r\n    onSuccess: () => {\r\n      setSnackbarMessage({\r\n        severity: 'success',\r\n        message: 'Deleted',\r\n      });\r\n      queryClient.invalidateQueries(['trucks']);\r\n    },\r\n    onError: (error: Error) => {\r\n      setSnackbarMessage({\r\n        severity: 'error',\r\n        message: error instanceof Error ? error.message : JSON.stringify(error),\r\n      });\r\n    },\r\n  });\r\n\r\n  const setSearch = React.useMemo(() => {\r\n    return debounce((search: string): void => {\r\n      setLocationsQueryParams({ search });\r\n    }, 400);\r\n  }, []);\r\n  const { data: { items } = { items: [], total: 0 } } = useQuery<\r\n    Result<Location>,\r\n    Error,\r\n    Result<Location>,\r\n    any // ToDo fix type\r\n  >({\r\n    queryKey: ['locations', 0, 15, 'name', 'asc', locationsQueryParams],\r\n    queryFn: modifyedQueryFn(LocationsQuery, true),\r\n    keepPreviousData: true,\r\n    retry: false,\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (locationValue) {\r\n      const notSelectedItems = items.filter(\r\n        (item) => item.id !== locationValue.id,\r\n      );\r\n      setOptions([locationValue, ...notSelectedItems]);\r\n    } else {\r\n      if (inputValue === '') {\r\n        setOptions([]);\r\n      } else {\r\n        setOptions([...items]);\r\n      }\r\n    }\r\n  }, [locationValue, items]);\r\n\r\n  const handleLocationChange = (event: any, newValue: Location | null) => {\r\n    setLocationValue(newValue);\r\n    if (newValue?.location) {\r\n      setQueryParams((prev) => ({\r\n        ...prev,\r\n        lastLocation: newValue.location.join(','),\r\n        distance: distanceValue,\r\n      }));\r\n      setSearchDataChanged(false);\r\n    } else if (!newValue) {\r\n      setInputValue('');\r\n      setQueryParams((prev) => {\r\n        const {\r\n          lastLocation: _lastLocation,\r\n          distance: _distance,\r\n          ...rest\r\n        } = prev;\r\n        return rest;\r\n      });\r\n      setSearchDataChanged(false);\r\n    }\r\n    // setSearchDataChanged(true);\r\n  };\r\n  const handleLocationInputChange = (event: any, newInputValue: string) => {\r\n    setInputValue(newInputValue);\r\n    setSearch(newInputValue);\r\n  };\r\n  const handleFromDateInputChange = (value: Date | null) => {\r\n    setAvailableFrom(value);\r\n    setSearchDataChanged(true);\r\n  };\r\n  const handleToDateInputChange = (value: Date | null) => {\r\n    setAvailableTo(value);\r\n    setSearchDataChanged(true);\r\n  };\r\n  const handleFromDateOnError = (error: any /*, value: any*/) => {\r\n    if (error) {\r\n      setFromDateError(true);\r\n    } else {\r\n      setFromDateError(false);\r\n    }\r\n  };\r\n  const handleToDateOnError = (error: any /*, value: any*/) => {\r\n    if (error) {\r\n      setToDateError(true);\r\n    } else {\r\n      setToDateError(false);\r\n    }\r\n  };\r\n  const handleDateChange = () => {\r\n    /*let from = availableFrom;\r\n    let to = availableTo;\r\n    if (!from && !to) {\r\n      from = new Date(Date.now() + 1000 * 60);\r\n    }\r\n    if (!to && from) {\r\n      to = new Date(from.getTime() + dateLag);\r\n    }\r\n    if (!from && to) {\r\n      from = new Date(to.getTime() - dateLag);\r\n    }\r\n    if (from !== availableFrom) {\r\n      setAvailableFrom(from);\r\n    }\r\n    if (to !== availableTo) {\r\n      setAvailableTo(to);\r\n    }*/\r\n    if (!isFromDateError && !isToDateError) {\r\n      setQueryParams((prev) => {\r\n        const res = { ...prev };\r\n        /*if (from) {\r\n          res.availableAfter = from;\r\n        }\r\n        if (to) {\r\n          res.availableBefore = to;\r\n        }*/\r\n        if (availableFrom) {\r\n          res.availableAfter = availableFrom;\r\n        }\r\n        if (availableTo) {\r\n          res.availableBefore = availableTo;\r\n        }\r\n        return res;\r\n      });\r\n      setSearchDataChanged(false);\r\n    }\r\n  };\r\n  const handleStatusInputChange = (\r\n    event: React.ChangeEvent<HTMLInputElement>,\r\n  ) => {\r\n    setStatusValue(event.target.value as unknown as TruckStatus[]);\r\n    setSearchDataChanged(true);\r\n  };\r\n  const handleStatusKeyUp = (event: React.KeyboardEvent) => {\r\n    if (event.key !== 'Enter') {\r\n      return;\r\n    }\r\n    stopPropagation(event);\r\n    handleStatusClose();\r\n  };\r\n  const handleStatusKeyDown = (event: React.KeyboardEvent) => {\r\n    if (event.key !== 'Enter') {\r\n      return;\r\n    }\r\n    stopPropagation(event);\r\n  };\r\n  const handleStatusOpen = () => {\r\n    setStatusOpen(true);\r\n  };\r\n  const handleStatusClose = () => {\r\n    setStatusOpen(false);\r\n    handleStatusChange();\r\n  };\r\n  const handleStatusChange = () => {\r\n    if (statusValue.length && statusValue.length !== TruckStatuses.length) {\r\n      setQueryParams((prev) => ({ ...prev, status: statusValue }));\r\n      setSearchDataChanged(false);\r\n    } else {\r\n      setQueryParams((prev) => {\r\n        const { status: _, ...rest } = prev;\r\n        return { ...rest };\r\n      });\r\n      setSearchDataChanged(false);\r\n    }\r\n  };\r\n  const handleDistanceInputChange = (\r\n    event: React.ChangeEvent<HTMLInputElement>,\r\n  ) => {\r\n    if (Number.isInteger(Number(event.target.value))) {\r\n      setDistanceValue(Number(event.target.value));\r\n      if (locationValue?.location) {\r\n        setQueryParams((prev) => ({\r\n          ...prev,\r\n          distance: Number(event.target.value),\r\n        }));\r\n        setSearchDataChanged(false);\r\n      }\r\n      // setSearchDataChanged(true);\r\n    }\r\n  };\r\n  const handleClearFilter = () => {\r\n    setLocationValue(null);\r\n    setInputValue('');\r\n    setAvailableFrom(null);\r\n    setAvailableTo(null);\r\n    setStatusValue([...TruckStatuses]);\r\n    setDistanceValue(200);\r\n    setQueryParams({});\r\n    setSearchDataChanged(false);\r\n  };\r\n  const handleApplyFilter = () => {\r\n    const queryParams: Record<string, any> = {};\r\n    if (locationValue?.location) {\r\n      queryParams.lastLocation = locationValue.location.join(',');\r\n      queryParams.distance = distanceValue;\r\n    }\r\n    if (\r\n      statusValue.length !== 0 &&\r\n      statusValue.length !== TruckStatuses.length\r\n    ) {\r\n      queryParams.status = statusValue;\r\n    }\r\n\r\n    /*let from = availableFrom;\r\n    let to = availableTo;\r\n    if (!from && !to) {\r\n      from = new Date(Date.now() + 1000 * 60);\r\n    }\r\n    if (!to && from) {\r\n      to = new Date(from.getTime() + dateLag);\r\n    }\r\n    if (!from && to) {\r\n      from = new Date(to.getTime() - dateLag);\r\n    }\r\n    if (from !== availableFrom) {\r\n      setAvailableFrom(from);\r\n    }\r\n    if (to !== availableTo) {\r\n      setAvailableTo(to);\r\n    }\r\n    queryParams.availableAfter = from;\r\n    queryParams.availableBefore = to;*/\r\n    queryParams.availableAfter = availableFrom;\r\n    queryParams.availableBefore = availableTo;\r\n\r\n    setQueryParams(queryParams);\r\n    setSearchDataChanged(false);\r\n  };\r\n  // const createHandler = () => {\r\n  //   navigate('./create', {\r\n  //     relative: 'path',\r\n  //     state: { from: location },\r\n  //     replace: false,\r\n  //   });\r\n  // };\r\n  // const editHandler = () => {\r\n  //   navigate(`./edit/${selected[0]}`, {\r\n  //     relative: 'path',\r\n  //     state: { from: location },\r\n  //     replace: false,\r\n  //   });\r\n  // };\r\n  // const deleteHandler = () => {\r\n  //   mutate(`${selected[0]}`);\r\n  // };\r\n  return (\r\n    <Toolbar\r\n      sx={{\r\n        overflow: 'hidden',\r\n        pl: { sm: 2 },\r\n        pr: { xs: 1, sm: 1 },\r\n        ...(selected.length > 0 && {\r\n          bgcolor: (theme) =>\r\n            alpha(\r\n              theme.palette.primary.main,\r\n              theme.palette.action.activatedOpacity,\r\n            ),\r\n        }),\r\n      }}\r\n    >\r\n      {selected.length > 0 ? (\r\n        <Typography\r\n          sx={{ flex: '1 1 100%' }}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {selected.length} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          sx={{\r\n            flex: '1 1 100%',\r\n            whiteSpace: 'nowrap',\r\n            textOverflow: 'ellipsis',\r\n            overflow: 'hidden',\r\n          }}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          Trucks Nearby\r\n        </Typography>\r\n      )}\r\n      <Box\r\n        component=\"div\"\r\n        sx={{\r\n          '& .MuiTextField-root': { m: 1, width: '350px' },\r\n        }}\r\n      >\r\n        <Autocomplete\r\n          getOptionLabel={(option) =>\r\n            typeof option === 'string'\r\n              ? option\r\n              : `${option.name}, ${option.zipCode}, ${option.stateName}`\r\n          }\r\n          filterOptions={(x) => x}\r\n          options={options}\r\n          autoComplete\r\n          includeInputInList\r\n          filterSelectedOptions={false}\r\n          value={locationValue}\r\n          noOptionsText=\"No locations\"\r\n          onChange={handleLocationChange}\r\n          onInputChange={handleLocationInputChange}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label=\"Enter city, state or zip\"\r\n              size=\"small\"\r\n              fullWidth\r\n            />\r\n          )}\r\n          renderOption={(props, option) => (\r\n            <li {...props}>\r\n              <Grid container alignItems=\"center\">\r\n                <Grid item sx={{ display: 'flex', width: 44 }}>\r\n                  <LocationOnIcon sx={{ color: 'text.secondary' }} />\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  sx={{ width: 'calc(100% - 44px)', wordWrap: 'break-word' }}\r\n                >\r\n                  <Box component=\"span\" sx={{ fontWeight: 'regular' }}>\r\n                    {`${option.name}, ${option.stateCode}`}\r\n                  </Box>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    {`${option.zipCode}, ${option.stateName}`}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </li>\r\n          )}\r\n        />\r\n      </Box>\r\n      <Box\r\n        component=\"div\"\r\n        sx={{\r\n          '& .MuiTextField-root': { m: 1, width: '200px' },\r\n        }}\r\n      >\r\n        <DateTimePicker\r\n          label=\"Select available from\"\r\n          ampm={false}\r\n          disablePast={true}\r\n          maxDateTime={availableTo ? availableTo : undefined}\r\n          disableIgnoringDatePartForTimeValidation={true}\r\n          viewRenderers={{\r\n            hours: renderTimeViewClock,\r\n            minutes: renderTimeViewClock,\r\n            seconds: renderTimeViewClock,\r\n          }}\r\n          slotProps={{\r\n            textField: {\r\n              fullWidth: true,\r\n              size: 'small',\r\n              id: 'availableFrom',\r\n              name: 'Select available from',\r\n              onBlur: handleDateChange,\r\n            },\r\n          }}\r\n          value={availableFrom}\r\n          onChange={handleFromDateInputChange}\r\n          onClose={handleDateChange}\r\n          onError={handleFromDateOnError}\r\n        />\r\n      </Box>\r\n      <Box\r\n        component=\"div\"\r\n        sx={{\r\n          '& .MuiTextField-root': { m: 1, width: '200px' },\r\n        }}\r\n      >\r\n        <DateTimePicker\r\n          label=\"Select available to\"\r\n          ampm={false}\r\n          disablePast={true}\r\n          minDateTime={availableFrom ? availableFrom : undefined}\r\n          disableIgnoringDatePartForTimeValidation={true}\r\n          viewRenderers={{\r\n            hours: renderTimeViewClock,\r\n            minutes: renderTimeViewClock,\r\n            seconds: renderTimeViewClock,\r\n          }}\r\n          slotProps={{\r\n            textField: {\r\n              fullWidth: true,\r\n              size: 'small',\r\n              id: 'availableTo',\r\n              name: 'Select available to',\r\n              onBlur: handleDateChange,\r\n            },\r\n          }}\r\n          value={availableTo}\r\n          onChange={handleToDateInputChange}\r\n          onClose={handleDateChange}\r\n          onError={handleToDateOnError}\r\n        />\r\n      </Box>\r\n      <Box\r\n        component=\"div\"\r\n        sx={{\r\n          '& .MuiTextField-root': { m: 1, width: '140px' },\r\n        }}\r\n      >\r\n        <TextField\r\n          select\r\n          SelectProps={{\r\n            multiple: true,\r\n            open: statusOpen,\r\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n            //@ts-ignore\r\n            renderValue: (selected: TruckStatus[]) => selected.join(', '),\r\n            onOpen: handleStatusOpen,\r\n            onClose: handleStatusClose,\r\n          }}\r\n          label=\"Select Status\"\r\n          value={statusValue}\r\n          onChange={handleStatusInputChange}\r\n          onKeyUpCapture={handleStatusKeyUp}\r\n          onKeyDownCapture={handleStatusKeyDown}\r\n          onBlur={handleStatusChange}\r\n          size=\"small\"\r\n          fullWidth\r\n          title={statusValue.join(', ')}\r\n        >\r\n          {TruckStatuses.map((status) => (\r\n            <MenuItem key={status} value={status}>\r\n              <Checkbox\r\n                checked={statusValue.indexOf(status as TruckStatus) > -1}\r\n                id={status}\r\n              />\r\n              <ListItemText primary={status} />\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n      </Box>\r\n      <Box\r\n        component=\"div\"\r\n        sx={{\r\n          '& .MuiTextField-root': { m: 1, width: '140px' },\r\n        }}\r\n      >\r\n        <TextField\r\n          select\r\n          label=\"Select Distance\"\r\n          value={distanceValue}\r\n          onChange={handleDistanceInputChange}\r\n          size=\"small\"\r\n          fullWidth\r\n        >\r\n          {Array.from(\r\n            { length: (1000 - 50) / 50 + 1 },\r\n            (_, index) => 50 + index * 50,\r\n          ).map((option) => (\r\n            <MenuItem key={option} value={option}>\r\n              {option}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n      </Box>\r\n      <Tooltip title=\"Filter list\">\r\n        {searchDataChanged ||\r\n        !(\r\n          locationValue ||\r\n          availableFrom ||\r\n          availableTo ||\r\n          (statusValue.length !== 0 &&\r\n            statusValue.length !== TruckStatuses.length)\r\n        ) ? (\r\n          <span>\r\n            <IconButton\r\n              disabled={\r\n                ((!locationValue || !distanceValue) &&\r\n                  !(\r\n                    availableFrom ||\r\n                    availableTo ||\r\n                    (statusValue.length !== 0 &&\r\n                      statusValue.length !== TruckStatuses.length)\r\n                  )) ||\r\n                isFromDateError ||\r\n                isToDateError\r\n              }\r\n              onClick={handleApplyFilter}\r\n            >\r\n              <FilterListIcon />\r\n            </IconButton>\r\n          </span>\r\n        ) : (\r\n          <span>\r\n            <IconButton onClick={handleClearFilter}>\r\n              <FilterListOffIcon />\r\n            </IconButton>\r\n          </span>\r\n        )}\r\n      </Tooltip>\r\n      <Loader visible={isLoading} />\r\n    </Toolbar>\r\n  );\r\n}\r\n\r\nexport default function EnhancedTable() {\r\n  const [order, setOrder] = React.useState<Order | undefined>(undefined);\r\n  const [orderBy, setOrderBy] = React.useState<keyof Truck | undefined>(\r\n    undefined,\r\n  );\r\n  const [selected, setSelected] = React.useState<readonly string[]>([]);\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState<number>(15);\r\n  const [queryParams, setQueryParams] = React.useState<Record<string, any>>({\r\n    status: ['Available'],\r\n  });\r\n  const tableContainerRef = React.useRef(null);\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const setSnackbarMessage = useSnackbar();\r\n  const [, setMapData] = useMap();\r\n\r\n  const {\r\n    isLoading,\r\n    isFetching,\r\n    data: { items, total } = { items: [], total: 0 },\r\n  } = useQuery({\r\n    queryKey: ['trucks', page, rowsPerPage, orderBy, order, queryParams],\r\n    queryFn: TrucksQuery,\r\n    keepPreviousData: true,\r\n    retry: false,\r\n    onError: (error: Error) => {\r\n      setSnackbarMessage({\r\n        severity: 'error',\r\n        message: error instanceof Error ? error.message : JSON.stringify(error),\r\n      });\r\n    },\r\n  });\r\n  const rows = items || [];\r\n\r\n  React.useEffect(() => {\r\n    if (tableContainerRef.current) {\r\n      const container = tableContainerRef.current as HTMLElement;\r\n      container.scrollTo({\r\n        top: 0,\r\n        left: 0,\r\n        behavior: 'smooth',\r\n      });\r\n    }\r\n  }, [rows]);\r\n\r\n  React.useEffect(() => {\r\n    const newSelected: string[] = [];\r\n    selected.forEach((selectedItem) => {\r\n      const selectedRow = rows.find((row) => row.id === selectedItem);\r\n      if (selectedRow) {\r\n        newSelected.push(selectedItem);\r\n      }\r\n    });\r\n    setSelected(newSelected);\r\n  }, [rows]);\r\n\r\n  const handleRequestSort = (\r\n    event: React.MouseEvent<unknown>,\r\n    property: keyof Truck,\r\n  ) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    const isDesc = orderBy === property && order === 'desc';\r\n    if (isDesc) {\r\n      setOrder(undefined);\r\n      setOrderBy(undefined);\r\n    } else {\r\n      setOrder(isAsc ? 'desc' : 'asc');\r\n      setOrderBy(property);\r\n    }\r\n  };\r\n\r\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (event.target.checked) {\r\n      const newSelected = rows.map((n: Truck) => n.id);\r\n      setSelected(newSelected);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (\r\n    event: React.MouseEvent<unknown>,\r\n    item: (typeof rows)[number],\r\n  ) => {\r\n    navigate(`./view/${item.id}`, {\r\n      relative: 'path',\r\n      state: { from: location },\r\n      replace: false,\r\n    });\r\n  };\r\n\r\n  const handleSelect = (event: React.MouseEvent<unknown>, name: string) => {\r\n    event.stopPropagation();\r\n    // const selectedIndex = selected.indexOf(name);\r\n    // let newSelected: readonly string[] = [];\r\n    //\r\n    // if (selectedIndex === -1) {\r\n    //     newSelected = newSelected.concat(selected, name);\r\n    // } else if (selectedIndex === 0) {\r\n    //     newSelected = newSelected.concat(selected.slice(1));\r\n    // } else if (selectedIndex === selected.length - 1) {\r\n    //     newSelected = newSelected.concat(selected.slice(0, -1));\r\n    // } else if (selectedIndex > 0) {\r\n    //     newSelected = newSelected.concat(\r\n    //         selected.slice(0, selectedIndex),\r\n    //         selected.slice(selectedIndex + 1),\r\n    //     );\r\n    // }\r\n    //\r\n    // setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event: unknown, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (\r\n    event: React.ChangeEvent<HTMLInputElement>,\r\n  ) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const isSelected = (name: string) => selected.indexOf(name) !== -1;\r\n\r\n  return (\r\n    <Box sx={{ width: '100%', height: '100%' }}>\r\n      <Paper sx={{ width: '100%', height: '100%', backgroundColor: 'unset' }}>\r\n        <EnhancedTableToolbar\r\n          selected={selected}\r\n          setQueryParams={(query) => {\r\n            setQueryParams(query);\r\n            setPage(0);\r\n          }}\r\n        />\r\n        <TableContainer\r\n          ref={tableContainerRef}\r\n          sx={{ height: 'calc(100% - 115px)' }}\r\n        >\r\n          <Table\r\n            sx={{ minWidth: 750 }}\r\n            aria-labelledby=\"tableTitle\"\r\n            size=\"small\"\r\n            stickyHeader\r\n          >\r\n            <EnhancedTableHead\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {rows.map((row, index) => {\r\n                const isItemSelected = isSelected(`${row.id}`);\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    onDoubleClick={(event) => handleClick(event, row)}\r\n                    role=\"checkbox\"\r\n                    aria-checked={isItemSelected}\r\n                    tabIndex={-1}\r\n                    key={row.id}\r\n                    selected={isItemSelected}\r\n                    sx={{ cursor: 'pointer' }}\r\n                  >\r\n                    <StyledTableCell padding=\"checkbox\">\r\n                      <ReserveTruckButton truck={row} index={index} />\r\n                    </StyledTableCell>\r\n                    {headCells.map((cell) => {\r\n                      const cellData = cell.getData(row, setMapData);\r\n                      return (\r\n                        <StyledTableCell\r\n                          key={cell.id}\r\n                          title={cellData.title}\r\n                          align={cell.numeric ? 'right' : 'center'}\r\n                        >\r\n                          {cellData.data}\r\n                        </StyledTableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 15, 20, 25, 35, 50]}\r\n          component=\"div\"\r\n          count={total}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <Loader visible={isLoading || isFetching} />\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { AlertColor } from '@mui/material/Alert/Alert';\r\n\r\nexport const LangPriorities = ['EN', 'UA', 'ES', 'RU'] as const;\r\n\r\nexport const PersonTypes = [\r\n  'Owner',\r\n  'OwnerDriver',\r\n  'Coordinator',\r\n  'CoordinatorDriver',\r\n  'Driver',\r\n] as const;\r\n\r\nexport const UserRoles = ['Admin', 'Super Admin'] as const;\r\n\r\nexport const TruckTypes = [\r\n  'Cargo van',\r\n  'Reefer van',\r\n  'Box truck',\r\n  'Box truck Reefer',\r\n  'Straight truck',\r\n  'Hotshot',\r\n  'Tented box',\r\n] as const;\r\n\r\nexport const TruckStatuses = [\r\n  'Available',\r\n  'Not Available',\r\n  'Will be available',\r\n  'On route',\r\n] as const;\r\n\r\nexport const TruckCrossborders = ['Yes', 'No'] as const;\r\n\r\nexport const TruckCertificates = [\r\n  'Hazmat',\r\n  'Tsa',\r\n  'TWIC',\r\n  'Tanker Endorsement',\r\n] as const;\r\n\r\nexport const TruckEquipments = [\r\n  'Dock height risers',\r\n  'Air ride',\r\n  'Lift gate',\r\n  'Keep from freezing',\r\n  'ICC bar',\r\n  'Vertical E-track',\r\n  'Horizontal E-track',\r\n  'Pallet jack',\r\n  'PPE',\r\n  'Ramps',\r\n  'Straps',\r\n  'Loads bars',\r\n  'Blankets',\r\n  'Pads',\r\n  'Fire extinguisher',\r\n  'Metal hooks',\r\n  'Reefer',\r\n  'Heater',\r\n] as const;\r\n\r\nexport type Order = 'asc' | 'desc';\r\nexport type QueryKey<T> = readonly [\r\n  key: string,\r\n  page: number,\r\n  rowsPerPage: number,\r\n  orderBy?: string,\r\n  order?: Order,\r\n  queryParams?: T,\r\n];\r\n// export type BaseQuery = {\r\n//   readonly queryKey: QueryKey;\r\n// };\r\nexport type Query<T> = {\r\n  readonly queryKey: QueryKey<T>;\r\n};\r\nexport type QuerySingleKey = readonly [key: string, recordId: string];\r\nexport type QuerySingle = {\r\n  readonly queryKey: QuerySingleKey;\r\n};\r\nexport type Result<T> = {\r\n  items: T[];\r\n  limit: number;\r\n  offset: number;\r\n  total: number;\r\n};\r\nexport type QueryFn = (query: Query<{ search: any }>) => Promise<Result<any>>;\r\n\r\nexport type UserDataType = {\r\n  username: string;\r\n  password: string;\r\n} & Partial<User>;\r\nexport interface AuthContextType {\r\n  user: UserDataType | null;\r\n  signin: (\r\n    username: string,\r\n    password: string,\r\n    callback: (user: UserDataType | null) => void,\r\n  ) => void;\r\n  signout: (callback: VoidFunction) => void;\r\n}\r\nexport type SnackbarMessage = {\r\n  message: string;\r\n  severity: AlertColor;\r\n  handleClose?: (event?: React.SyntheticEvent | Event, reason?: string) => void;\r\n};\r\nexport type PersonType = (typeof PersonTypes)[number];\r\nexport type LangPriority = (typeof LangPriorities)[number];\r\nexport type UserRole = (typeof UserRoles)[number];\r\nexport type TruckType = (typeof TruckTypes)[number];\r\nexport type TruckStatus = (typeof TruckStatuses)[number];\r\nexport type TruckCrossborder = (typeof TruckCrossborders)[number];\r\nexport type TruckCertificate = (typeof TruckCertificates)[number];\r\nexport type TruckEquipment = (typeof TruckEquipments)[number];\r\n\r\nexport type GeoPoint = [number, number];\r\n\r\nexport interface Person {\r\n  id: string;\r\n  fullName: string;\r\n  type: PersonType;\r\n  phone?: string;\r\n}\r\n\r\nexport interface Owner extends Person {\r\n  type: PersonType;\r\n  phone: string;\r\n  phone2?: string;\r\n  email: string;\r\n  address: string;\r\n  ownTrucks?: Truck[];\r\n  coordinators?: Coordinator[];\r\n  drivers?: Driver[];\r\n}\r\n\r\nexport interface CreateOwner {\r\n  fullName?: string;\r\n  birthDate?: Date;\r\n  citizenship?: string;\r\n  languagePriority?: LangPriority;\r\n  hiredBy?: string;\r\n  hireDate?: Date;\r\n  snn?: string;\r\n  company?: string;\r\n  insurancePolicy?: string;\r\n  insurancePolicyExp?: Date;\r\n  address?: string;\r\n  phone?: string;\r\n  phone2?: string;\r\n  email?: string;\r\n  emergencyContactName?: string;\r\n  emergencyContactRel?: string;\r\n  emergencyContactPhone?: string;\r\n  appLogin?: string;\r\n  appPass?: string;\r\n  notes?: string;\r\n}\r\n\r\nexport interface UpdateOwner extends Partial<CreateOwner> {\r\n  id: string;\r\n}\r\n\r\nexport interface CreateOwnerDriver {\r\n  fullName?: string;\r\n  birthDate?: Date;\r\n  citizenship?: string;\r\n  languagePriority?: LangPriority;\r\n  driverLicenceNumber?: string;\r\n  driverLicenceState?: string;\r\n  driverLicenceExp?: Date;\r\n  idDocId?: string;\r\n  idDocType?: string;\r\n  idDocExp?: Date;\r\n  hiredBy?: string;\r\n  hireDate?: Date;\r\n  snn?: string;\r\n  company?: string;\r\n  insurancePolicy?: string;\r\n  insurancePolicyExp?: Date;\r\n  address?: string;\r\n  phone?: string;\r\n  phone2?: string;\r\n  email?: string;\r\n  emergencyContactName?: string;\r\n  emergencyContactRel?: string;\r\n  emergencyContactPhone?: string;\r\n  appLogin?: string;\r\n  appPass?: string;\r\n  notes?: string;\r\n}\r\n\r\nexport interface UpdateOwnerDriver extends Partial<CreateOwnerDriver> {\r\n  id: string;\r\n}\r\n\r\nexport interface Coordinator extends Person {\r\n  type: PersonType;\r\n  phone: string;\r\n  phone2?: string;\r\n  email: string;\r\n  address: string;\r\n  coordinateTrucks?: Truck[];\r\n  owner: Owner;\r\n}\r\n\r\nexport interface CreateCoordinator {\r\n  fullName?: string;\r\n  birthDate?: Date;\r\n  citizenship?: string;\r\n  languagePriority?: LangPriority;\r\n  hiredBy?: string;\r\n  hireDate?: Date;\r\n  snn?: string;\r\n  company?: string;\r\n  insurancePolicy?: string;\r\n  insurancePolicyExp?: Date;\r\n  address?: string;\r\n  phone?: string;\r\n  phone2?: string;\r\n  email?: string;\r\n  emergencyContactName?: string;\r\n  emergencyContactRel?: string;\r\n  emergencyContactPhone?: string;\r\n  owner?: Owner | null;\r\n  notes?: string;\r\n}\r\n\r\nexport interface UpdateCoordinator extends Partial<CreateCoordinator> {\r\n  id: string;\r\n}\r\n\r\nexport interface CreateCoordinatorDriver {\r\n  fullName?: string;\r\n  birthDate?: Date;\r\n  citizenship?: string;\r\n  languagePriority?: LangPriority;\r\n  driverLicenceNumber?: string;\r\n  driverLicenceState?: string;\r\n  driverLicenceExp?: Date;\r\n  idDocId?: string;\r\n  idDocType?: string;\r\n  idDocExp?: Date;\r\n  hiredBy?: string;\r\n  hireDate?: Date;\r\n  snn?: string;\r\n  company?: string;\r\n  insurancePolicy?: string;\r\n  insurancePolicyExp?: Date;\r\n  address?: string;\r\n  phone?: string;\r\n  phone2?: string;\r\n  email?: string;\r\n  emergencyContactName?: string;\r\n  emergencyContactRel?: string;\r\n  emergencyContactPhone?: string;\r\n  appLogin?: string;\r\n  appPass?: string;\r\n  owner?: Owner | null;\r\n  notes?: string;\r\n}\r\n\r\nexport interface UpdateCoordinatorDriver\r\n  extends Partial<CreateCoordinatorDriver> {\r\n  id: string;\r\n}\r\n\r\nexport interface Driver extends Person {\r\n  type: PersonType;\r\n  phone: string;\r\n  phone2?: string;\r\n  email?: string;\r\n  address?: string;\r\n  driveTrucks?: Truck[];\r\n  owner: Owner;\r\n}\r\n\r\nexport interface CreateDriver {\r\n  fullName?: string;\r\n  birthDate?: Date;\r\n  citizenship?: string;\r\n  languagePriority?: LangPriority;\r\n  driverLicenceNumber?: string;\r\n  driverLicenceState?: string;\r\n  driverLicenceExp?: Date;\r\n  idDocId?: string;\r\n  idDocType?: string;\r\n  idDocExp?: Date;\r\n  hiredBy?: string;\r\n  hireDate?: Date;\r\n  address?: string;\r\n  phone?: string;\r\n  phone2?: string;\r\n  email?: string;\r\n  emergencyContactName?: string;\r\n  emergencyContactRel?: string;\r\n  emergencyContactPhone?: string;\r\n  appLogin?: string;\r\n  appPass?: string;\r\n  owner?: Owner | null;\r\n  notes?: string;\r\n}\r\n\r\nexport interface UpdateDriver extends Partial<CreateDriver> {\r\n  id: string;\r\n}\r\n\r\nexport interface Truck {\r\n  id: string;\r\n  truckNumber: number;\r\n  status: TruckStatus;\r\n  lastLocation?: GeoPoint;\r\n  lastCity?: Location;\r\n  locationUpdatedAt?: string;\r\n  availabilityLocation?: GeoPoint;\r\n  availabilityCity?: Location;\r\n  availabilityAt?: string;\r\n  milesHaversine?: number;\r\n  milesByRoads?: number;\r\n  crossborder: TruckCrossborder;\r\n  certificate: TruckCertificate;\r\n  type: TruckType;\r\n  equipment?: TruckEquipment[];\r\n  payload?: number;\r\n  grossWeight: string;\r\n  make: string;\r\n  model: string;\r\n  year: number;\r\n  color: string;\r\n  vinCode: string;\r\n  licencePlate: string;\r\n  insideDims: string;\r\n  doorDims?: string;\r\n  owner?: Owner;\r\n  coordinator?: Coordinator;\r\n  driver?: Driver;\r\n  reservedAt?: string; //Date;\r\n  reservedBy?: User;\r\n}\r\n\r\nexport interface TruckForMap {\r\n  id: string;\r\n  truckNumber: number;\r\n  status: TruckStatus;\r\n  lastLocation?: GeoPoint;\r\n}\r\n\r\nexport interface CreateTruck {\r\n  truckNumber?: number;\r\n  status?: TruckStatus;\r\n  crossborder?: TruckCrossborder;\r\n  certificate?: TruckCertificate;\r\n  type?: TruckType;\r\n  equipment?: TruckEquipment[];\r\n  payload?: number;\r\n  grossWeight?: string;\r\n  make?: string;\r\n  model?: string;\r\n  year?: number;\r\n  color?: string;\r\n  vinCode?: string;\r\n  licencePlate?: string;\r\n  insideDims?: string;\r\n  doorDims?: string;\r\n  owner?: Owner | null;\r\n  coordinator?: Coordinator | null;\r\n  driver?: Driver | null;\r\n}\r\n\r\nexport interface UpdateTruck extends Partial<CreateTruck> {\r\n  id: string;\r\n  reservedAt?: Date | null;\r\n  status?: TruckStatus;\r\n  availabilityLocation?: GeoPoint | null;\r\n  availabilityAt?: Date;\r\n}\r\n\r\nexport interface Load {\r\n  id: string;\r\n  loadNumber: number;\r\n  pick?: google.maps.GeocoderResult;\r\n  pickLocation?: Location;\r\n  pickDate?: Date;\r\n  deliver?: google.maps.GeocoderResult;\r\n  deliverLocation?: Location;\r\n  deliverDate?: Date;\r\n  milesByRoads?: number;\r\n  milesHaversine?: number;\r\n  weight: string;\r\n  truckType: TruckType[];\r\n  rate?: number;\r\n  bookedByUser?: User;\r\n  bookedByCompany?: string;\r\n  dispatchers?: User[];\r\n  checkInAs?: string;\r\n  truck?: Truck;\r\n}\r\n\r\nexport interface CreateLoad {\r\n  pick?: google.maps.GeocoderResult | null;\r\n  pickDate?: Date;\r\n  deliver?: google.maps.GeocoderResult | null;\r\n  deliverDate?: Date;\r\n  weight?: string;\r\n  truckType?: TruckType[];\r\n  rate?: number;\r\n  bookedByUser?: User | null;\r\n  bookedByCompany?: string;\r\n  dispatchers?: User[];\r\n  checkInAs?: string;\r\n  truck?: Truck | null;\r\n}\r\n\r\nexport interface UpdateLoad extends Partial<CreateLoad> {\r\n  id: string;\r\n}\r\n\r\nexport interface Location {\r\n  id: string;\r\n  zipCode: string;\r\n  name: string;\r\n  stateCode: string;\r\n  stateName: string;\r\n  location: GeoPoint;\r\n}\r\n\r\nexport type CreateLocation = Omit<Location, 'id'>;\r\n\r\nexport interface UpdateLocation extends Partial<CreateLocation> {\r\n  id: string;\r\n}\r\n\r\nexport interface User {\r\n  id: string;\r\n  fullName: string;\r\n  phone?: string;\r\n  userRole: UserRole;\r\n  jobTitle: string;\r\n  email: string;\r\n}\r\n\r\nexport interface CreateUser extends Omit<User, 'id'> {\r\n  password?: string;\r\n}\r\n\r\nexport interface UpdateUser extends Partial<CreateUser> {\r\n  id: string;\r\n}\r\n\r\nexport interface File {\r\n  id: string;\r\n  filename: string;\r\n  contentType: string;\r\n  contentLength: number;\r\n  comment?: string;\r\n}\r\n","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getAvatarUtilityClass(slot) {\n  return generateUtilityClass('MuiAvatar', slot);\n}\nconst avatarClasses = generateUtilityClasses('MuiAvatar', ['root', 'colorDefault', 'circular', 'rounded', 'square', 'img', 'fallback']);\nexport default avatarClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"alt\", \"children\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Person from '../internal/svg-icons/Person';\nimport { getAvatarUtilityClass } from './avatarClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    colorDefault\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, colorDefault && 'colorDefault'],\n    img: ['img'],\n    fallback: ['fallback']\n  };\n  return composeClasses(slots, getAvatarUtilityClass, classes);\n};\nconst AvatarRoot = styled('div', {\n  name: 'MuiAvatar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.colorDefault && styles.colorDefault];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  position: 'relative',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  flexShrink: 0,\n  width: 40,\n  height: 40,\n  fontFamily: theme.typography.fontFamily,\n  fontSize: theme.typography.pxToRem(20),\n  lineHeight: 1,\n  borderRadius: '50%',\n  overflow: 'hidden',\n  userSelect: 'none'\n}, ownerState.variant === 'rounded' && {\n  borderRadius: (theme.vars || theme).shape.borderRadius\n}, ownerState.variant === 'square' && {\n  borderRadius: 0\n}, ownerState.colorDefault && _extends({\n  color: (theme.vars || theme).palette.background.default\n}, theme.vars ? {\n  backgroundColor: theme.vars.palette.Avatar.defaultBg\n} : {\n  backgroundColor: theme.palette.mode === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n})));\nconst AvatarImg = styled('img', {\n  name: 'MuiAvatar',\n  slot: 'Img',\n  overridesResolver: (props, styles) => styles.img\n})({\n  width: '100%',\n  height: '100%',\n  textAlign: 'center',\n  // Handle non-square image. The property isn't supported by IE11.\n  objectFit: 'cover',\n  // Hide alt text.\n  color: 'transparent',\n  // Hide the image broken icon, only works on Chrome.\n  textIndent: 10000\n});\nconst AvatarFallback = styled(Person, {\n  name: 'MuiAvatar',\n  slot: 'Fallback',\n  overridesResolver: (props, styles) => styles.fallback\n})({\n  width: '75%',\n  height: '75%'\n});\nfunction useLoaded({\n  crossOrigin,\n  referrerPolicy,\n  src,\n  srcSet\n}) {\n  const [loaded, setLoaded] = React.useState(false);\n  React.useEffect(() => {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n    setLoaded(false);\n    let active = true;\n    const image = new Image();\n    image.onload = () => {\n      if (!active) {\n        return;\n      }\n      setLoaded('loaded');\n    };\n    image.onerror = () => {\n      if (!active) {\n        return;\n      }\n      setLoaded('error');\n    };\n    image.crossOrigin = crossOrigin;\n    image.referrerPolicy = referrerPolicy;\n    image.src = src;\n    if (srcSet) {\n      image.srcset = srcSet;\n    }\n    return () => {\n      active = false;\n    };\n  }, [crossOrigin, referrerPolicy, src, srcSet]);\n  return loaded;\n}\nconst Avatar = /*#__PURE__*/React.forwardRef(function Avatar(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAvatar'\n  });\n  const {\n      alt,\n      children: childrenProp,\n      className,\n      component = 'div',\n      imgProps,\n      sizes,\n      src,\n      srcSet,\n      variant = 'circular'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  let children = null;\n\n  // Use a hook instead of onError on the img element to support server-side rendering.\n  const loaded = useLoaded(_extends({}, imgProps, {\n    src,\n    srcSet\n  }));\n  const hasImg = src || srcSet;\n  const hasImgNotFailing = hasImg && loaded !== 'error';\n  const ownerState = _extends({}, props, {\n    colorDefault: !hasImgNotFailing,\n    component,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/_jsx(AvatarImg, _extends({\n      alt: alt,\n      srcSet: srcSet,\n      src: src,\n      sizes: sizes,\n      ownerState: ownerState,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenProp != null) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/_jsx(AvatarFallback, {\n      ownerState: ownerState,\n      className: classes.fallback\n    });\n  }\n  return /*#__PURE__*/_jsx(AvatarRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attributes) applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   */\n  imgProps: PropTypes.object,\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The shape of the avatar.\n   * @default 'circular'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rounded', 'square']), PropTypes.string])\n} : void 0;\nexport default Avatar;","import { getDefaultState } from './mutation'\nimport { notifyManager } from './notifyManager'\nimport { Subscribable } from './subscribable'\nimport { shallowEqualObjects } from './utils'\nimport type { QueryClient } from './queryClient'\nimport type {\n  MutateOptions,\n  MutationObserverBaseResult,\n  MutationObserverOptions,\n  MutationObserverResult,\n} from './types'\nimport type { Action, Mutation } from './mutation'\n\n// TYPES\n\ntype MutationObserverListener<TData, TError, TVariables, TContext> = (\n  result: MutationObserverResult<TData, TError, TVariables, TContext>,\n) => void\n\ninterface NotifyOptions {\n  listeners?: boolean\n  onError?: boolean\n  onSuccess?: boolean\n}\n\n// CLASS\n\nexport class MutationObserver<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n> extends Subscribable<\n  MutationObserverListener<TData, TError, TVariables, TContext>\n> {\n  options!: MutationObserverOptions<TData, TError, TVariables, TContext>\n\n  private client: QueryClient\n  private currentResult!: MutationObserverResult<\n    TData,\n    TError,\n    TVariables,\n    TContext\n  >\n  private currentMutation?: Mutation<TData, TError, TVariables, TContext>\n  private mutateOptions?: MutateOptions<TData, TError, TVariables, TContext>\n\n  constructor(\n    client: QueryClient,\n    options: MutationObserverOptions<TData, TError, TVariables, TContext>,\n  ) {\n    super()\n\n    this.client = client\n    this.setOptions(options)\n    this.bindMethods()\n    this.updateResult()\n  }\n\n  protected bindMethods(): void {\n    this.mutate = this.mutate.bind(this)\n    this.reset = this.reset.bind(this)\n  }\n\n  setOptions(\n    options?: MutationObserverOptions<TData, TError, TVariables, TContext>,\n  ) {\n    const prevOptions = this.options\n    this.options = this.client.defaultMutationOptions(options)\n    if (!shallowEqualObjects(prevOptions, this.options)) {\n      this.client.getMutationCache().notify({\n        type: 'observerOptionsUpdated',\n        mutation: this.currentMutation,\n        observer: this,\n      })\n    }\n    this.currentMutation?.setOptions(this.options)\n  }\n\n  protected onUnsubscribe(): void {\n    if (!this.hasListeners()) {\n      this.currentMutation?.removeObserver(this)\n    }\n  }\n\n  onMutationUpdate(action: Action<TData, TError, TVariables, TContext>): void {\n    this.updateResult()\n\n    // Determine which callbacks to trigger\n    const notifyOptions: NotifyOptions = {\n      listeners: true,\n    }\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = true\n    } else if (action.type === 'error') {\n      notifyOptions.onError = true\n    }\n\n    this.notify(notifyOptions)\n  }\n\n  getCurrentResult(): MutationObserverResult<\n    TData,\n    TError,\n    TVariables,\n    TContext\n  > {\n    return this.currentResult\n  }\n\n  reset(): void {\n    this.currentMutation = undefined\n    this.updateResult()\n    this.notify({ listeners: true })\n  }\n\n  mutate(\n    variables?: TVariables,\n    options?: MutateOptions<TData, TError, TVariables, TContext>,\n  ): Promise<TData> {\n    this.mutateOptions = options\n\n    if (this.currentMutation) {\n      this.currentMutation.removeObserver(this)\n    }\n\n    this.currentMutation = this.client.getMutationCache().build(this.client, {\n      ...this.options,\n      variables:\n        typeof variables !== 'undefined' ? variables : this.options.variables,\n    })\n\n    this.currentMutation.addObserver(this)\n\n    return this.currentMutation.execute()\n  }\n\n  private updateResult(): void {\n    const state = this.currentMutation\n      ? this.currentMutation.state\n      : getDefaultState<TData, TError, TVariables, TContext>()\n\n    const result: MutationObserverBaseResult<\n      TData,\n      TError,\n      TVariables,\n      TContext\n    > = {\n      ...state,\n      isLoading: state.status === 'loading',\n      isSuccess: state.status === 'success',\n      isError: state.status === 'error',\n      isIdle: state.status === 'idle',\n      mutate: this.mutate,\n      reset: this.reset,\n    }\n\n    this.currentResult = result as MutationObserverResult<\n      TData,\n      TError,\n      TVariables,\n      TContext\n    >\n  }\n\n  private notify(options: NotifyOptions) {\n    notifyManager.batch(() => {\n      // First trigger the mutate callbacks\n      if (this.mutateOptions && this.hasListeners()) {\n        if (options.onSuccess) {\n          this.mutateOptions.onSuccess?.(\n            this.currentResult.data!,\n            this.currentResult.variables!,\n            this.currentResult.context!,\n          )\n          this.mutateOptions.onSettled?.(\n            this.currentResult.data!,\n            null,\n            this.currentResult.variables!,\n            this.currentResult.context,\n          )\n        } else if (options.onError) {\n          this.mutateOptions.onError?.(\n            this.currentResult.error!,\n            this.currentResult.variables!,\n            this.currentResult.context,\n          )\n          this.mutateOptions.onSettled?.(\n            undefined,\n            this.currentResult.error,\n            this.currentResult.variables!,\n            this.currentResult.context,\n          )\n        }\n      }\n\n      // Then trigger the listeners\n      if (options.listeners) {\n        this.listeners.forEach(({ listener }) => {\n          listener(this.currentResult)\n        })\n      }\n    })\n  }\n}\n","'use client'\nimport * as React from 'react'\nimport {\n  MutationObserver,\n  notifyManager,\n  parseMutationArgs,\n} from '@tanstack/query-core'\nimport { useSyncExternalStore } from './useSyncExternalStore'\n\nimport { useQueryClient } from './QueryClientProvider'\nimport { shouldThrowError } from './utils'\nimport type { MutationFunction, MutationKey } from '@tanstack/query-core'\nimport type {\n  UseMutateFunction,\n  UseMutationOptions,\n  UseMutationResult,\n} from './types'\n\n// HOOK\n\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  options: UseMutationOptions<TData, TError, TVariables, TContext>,\n): UseMutationResult<TData, TError, TVariables, TContext>\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  mutationFn: MutationFunction<TData, TVariables>,\n  options?: Omit<\n    UseMutationOptions<TData, TError, TVariables, TContext>,\n    'mutationFn'\n  >,\n): UseMutationResult<TData, TError, TVariables, TContext>\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  mutationKey: MutationKey,\n  options?: Omit<\n    UseMutationOptions<TData, TError, TVariables, TContext>,\n    'mutationKey'\n  >,\n): UseMutationResult<TData, TError, TVariables, TContext>\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  mutationKey: MutationKey,\n  mutationFn?: MutationFunction<TData, TVariables>,\n  options?: Omit<\n    UseMutationOptions<TData, TError, TVariables, TContext>,\n    'mutationKey' | 'mutationFn'\n  >,\n): UseMutationResult<TData, TError, TVariables, TContext>\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  arg1:\n    | MutationKey\n    | MutationFunction<TData, TVariables>\n    | UseMutationOptions<TData, TError, TVariables, TContext>,\n  arg2?:\n    | MutationFunction<TData, TVariables>\n    | UseMutationOptions<TData, TError, TVariables, TContext>,\n  arg3?: UseMutationOptions<TData, TError, TVariables, TContext>,\n): UseMutationResult<TData, TError, TVariables, TContext> {\n  const options = parseMutationArgs(arg1, arg2, arg3)\n  const queryClient = useQueryClient({ context: options.context })\n\n  const [observer] = React.useState(\n    () =>\n      new MutationObserver<TData, TError, TVariables, TContext>(\n        queryClient,\n        options,\n      ),\n  )\n\n  React.useEffect(() => {\n    observer.setOptions(options)\n  }, [observer, options])\n\n  const result = useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) =>\n        observer.subscribe(notifyManager.batchCalls(onStoreChange)),\n      [observer],\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult(),\n  )\n\n  const mutate = React.useCallback<\n    UseMutateFunction<TData, TError, TVariables, TContext>\n  >(\n    (variables, mutateOptions) => {\n      observer.mutate(variables, mutateOptions).catch(noop)\n    },\n    [observer],\n  )\n\n  if (\n    result.error &&\n    shouldThrowError(observer.options.useErrorBoundary, [result.error])\n  ) {\n    throw result.error\n  }\n\n  return { ...result, mutate, mutateAsync: result.mutate }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nfunction noop() {}\n"],"names":["_excluded","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgCat","_ref","svgRef","title","titleId","props","id","xmlns","viewBox","ref","cx","cy","r","fill","strokeWidth","style","stroke","d","paintOrder","points","strokeLinecap","ForwardRef","SvgTruck","focusable","fillRule","reservationTime","calcReserveWillLast","reservedTill","reservedWillLast","Date","Math","ceil","ReserveTruckButton","truck","index","_React$useState","React","_React$useState2","_slicedToArray","remainReserved","setRemainReserved","reservedAt","reservedBy","addMinutes","isReserved","interval","setInterval","clearInterval","queryClient","useQueryClient","_useMutation","useMutation","TruckUpdate","onSuccess","invalidateQueries","queryKey","refetchType","onError","error","mutate","labelId","isLoading","concat","fullName","_jsx","Button","sx","m","height","lineHeight","fontSize","fullWidth","variant","size","color","onClickCapture","event","preventDefault","stopPropagation","children","_jsxs","themeMode","localStorage","getItem","headCells","orderField","getData","row","data","truckNumber","numeric","disablePadding","label","person","coordinator","owner","path","type","firstRow","secondRow","getPath","getType","phone","display","textOverflow","overflow","textAlign","href","onClick","undefined","IconButton","navigator","clipboard","writeText","ContentCopy","width","equipment","join","firstRowPart1","insideDims","firstRowPart2","doorDims","payload","status","val","CatIcon","grey","TruckIcon","Avatar","bgcolor","green","margin","setMapData","availabilityCity","name","stateCode","zipCode","availabilityAt","toLocaleString","milesByRoads","toFixed","lastCity","locationUpdatedAt","StyledTableHead","styled","TableHead","backgroundColor","theme","palette","background","default","StyledTableCell","TableCell","_ref2","maxWidth","paddingTop","paddingBottom","whiteSpace","EnhancedTableHead","onSelectAllClick","order","orderBy","onRequestSort","numSelected","rowCount","TableRow","align","padding","map","headCell","sortDirection","TableSortLabel","active","hideSortIcon","direction","property","Box","component","visuallyHidden","EnhancedTableToolbar","selected","setQueryParams","locationValue","setLocationValue","_React$useState3","_React$useState4","inputValue","setInputValue","_React$useState5","_React$useState6","locationsQueryParams","setLocationsQueryParams","_React$useState7","_React$useState8","options","setOptions","_React$useState9","_React$useState10","availableFrom","setAvailableFrom","_React$useState11","_React$useState12","availableTo","setAvailableTo","_React$useState13","_React$useState14","isFromDateError","setFromDateError","_React$useState15","_React$useState16","isToDateError","setToDateError","_React$useState17","_React$useState18","statusOpen","setStatusOpen","_React$useState19","_React$useState20","statusValue","setStatusValue","_React$useState21","_React$useState22","distanceValue","setDistanceValue","_React$useState23","_React$useState24","searchDataChanged","setSearchDataChanged","useLocation","useNavigate","setSnackbarMessage","useSnackbar","TruckDelete","severity","message","Error","JSON","stringify","setSearch","debounce","search","_useQuery$data","useQuery","queryFn","modifyedQueryFn","LocationsQuery","keepPreviousData","retry","items","total","notSelectedItems","filter","item","_toConsumableArray","handleDateChange","prev","res","_objectSpread","availableAfter","availableBefore","handleStatusClose","handleStatusChange","TruckStatuses","rest","_excluded2","Toolbar","pl","sm","pr","xs","alpha","primary","main","action","activatedOpacity","Typography","flex","Autocomplete","getOptionLabel","option","stateName","filterOptions","x","autoComplete","includeInputInList","filterSelectedOptions","value","noOptionsText","onChange","newValue","location","lastLocation","distance","onInputChange","newInputValue","renderInput","params","TextField","renderOption","Grid","container","alignItems","LocationOnIcon","wordWrap","fontWeight","DateTimePicker","ampm","disablePast","maxDateTime","disableIgnoringDatePartForTimeValidation","viewRenderers","hours","renderTimeViewClock","minutes","seconds","slotProps","textField","onBlur","onClose","minDateTime","select","SelectProps","multiple","open","renderValue","onOpen","onKeyUpCapture","onKeyDownCapture","MenuItem","Checkbox","checked","ListItemText","Number","isInteger","Array","from","_","Tooltip","disabled","queryParams","FilterListIcon","FilterListOffIcon","Loader","visible","EnhancedTable","_React$useState25","_React$useState26","setOrder","_React$useState27","_React$useState28","setOrderBy","_React$useState29","_React$useState30","setSelected","_React$useState31","_React$useState32","page","setPage","_React$useState33","_React$useState34","rowsPerPage","setRowsPerPage","_React$useState35","_React$useState36","tableContainerRef","navigate","_useMap","useMap","_useQuery2","TrucksQuery","isFetching","_useQuery2$data","_useQuery2$data2","rows","current","scrollTo","top","left","behavior","newSelected","forEach","selectedItem","find","push","Paper","query","TableContainer","Table","minWidth","stickyHeader","n","isAsc","TableBody","isItemSelected","hover","onDoubleClick","relative","state","replace","role","tabIndex","cursor","cell","cellData","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","LangPriorities","UserRoles","TruckTypes","TruckCrossborders","TruckCertificates","TruckEquipments","createSvgIcon","getAvatarUtilityClass","slot","generateUtilityClass","generateUtilityClasses","AvatarRoot","overridesResolver","styles","ownerState","root","colorDefault","position","justifyContent","flexShrink","fontFamily","typography","pxToRem","borderRadius","userSelect","vars","shape","defaultBg","mode","AvatarImg","img","objectFit","textIndent","AvatarFallback","Person","fallback","inProps","useThemeProps","alt","childrenProp","className","_props$component","imgProps","sizes","src","srcSet","_props$variant","other","loaded","crossOrigin","referrerPolicy","setLoaded","image","Image","onload","onerror","srcset","useLoaded","hasImg","hasImgNotFailing","classes","slots","composeClasses","useUtilityClasses","as","clsx","MutationObserver","_Subscribable","_inherits","_super","_createSuper","client","_this","_classCallCheck","bindMethods","updateResult","_createClass","reset","_this$currentMutation","prevOptions","defaultMutationOptions","shallowEqualObjects","getMutationCache","notify","mutation","currentMutation","observer","_this$currentMutation2","hasListeners","removeObserver","notifyOptions","listeners","currentResult","variables","mutateOptions","build","addObserver","execute","getDefaultState","result","isSuccess","isError","isIdle","_this2","notifyManager","batch","_this$mutateOptions$o","_this$mutateOptions","_this$mutateOptions$o2","_this$mutateOptions2","context","onSettled","_this$mutateOptions$o3","_this$mutateOptions3","_this$mutateOptions$o4","_this$mutateOptions4","listener","Subscribable","arg1","arg2","arg3","useSyncExternalStore","onStoreChange","subscribe","batchCalls","getCurrentResult","shouldThrowError","useErrorBoundary","noop"],"sourceRoot":""}