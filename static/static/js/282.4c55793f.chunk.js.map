{"version":3,"file":"static/js/282.4c55793f.chunk.js","mappings":"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","sources":["api/api.ts","coordinators/coordinators.tsx"],"sourcesContent":["import { authProvider } from '../utils/auth';\n\nconst { origin } = new URL(window.location.href);\n\nexport type Order = 'asc' | 'desc';\n\nexport const authFetch: (input: string | URL) => Promise<Response> = (\n  input,\n) => {\n  const init = { headers: new Headers() };\n  init.headers.set(\n    'Authorization',\n    'Basic ' +\n      btoa(authProvider.user?.username + ':' + authProvider.user?.password),\n  );\n  return fetch(input, init);\n};\n\nexport const TrucksQuery = (\n  page: number,\n  rowsPerPage: number,\n  orderBy?: string,\n  order?: Order,\n  queryParams?: {\n    truckNumber?: number;\n    lastLocation?: string;\n    distance?: string;\n  },\n) => {\n  const url = new URL('/truck', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  if (queryParams?.lastLocation && queryParams?.distance) {\n    url.searchParams.append('lastLocation', `${queryParams.lastLocation}`);\n    url.searchParams.append('distance', `${queryParams.distance}`);\n  }\n  return authFetch(url).then((res) => res.json());\n};\n\nexport const LocationsQuery = (\n  page: number,\n  rowsPerPage: number,\n  orderBy?: string,\n  order?: Order,\n  queryParams?: { search?: string; name?: string },\n) => {\n  const url = new URL('/location', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.search) {\n    url.searchParams.append('search', `${queryParams.search}`);\n  }\n  if (queryParams?.name) {\n    url.searchParams.append('name', `${queryParams.name}`);\n  }\n  return authFetch(url).then((res) => res.json());\n};\n\nexport const LoadsQuery = (\n  page: number,\n  rowsPerPage: number,\n  orderBy?: string,\n  order?: Order,\n  queryParams?: { loadNumber?: number; truckNumber?: number },\n) => {\n  const url = new URL('/load', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.loadNumber) {\n    url.searchParams.append('loadNumber', `${queryParams.loadNumber}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  return authFetch(url).then((res) => res.json());\n};\n\nexport const OwnersQuery = (\n  page: number,\n  rowsPerPage: number,\n  orderBy?: string,\n  order?: Order,\n  queryParams?: { fullName?: number; truckNumber?: number },\n) => {\n  const url = new URL('/owner', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.fullName) {\n    url.searchParams.append('fullName', `${queryParams.fullName}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  return authFetch(url).then((res) => res.json());\n};\n\nexport const DriversQuery = (\n  page: number,\n  rowsPerPage: number,\n  orderBy?: string,\n  order?: Order,\n  queryParams?: { fullName?: number; truckNumber?: number },\n) => {\n  const url = new URL('/driver', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.fullName) {\n    url.searchParams.append('fullName', `${queryParams.fullName}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  return authFetch(url).then((res) => res.json());\n};\n\nexport const CoordinatorsQuery = (\n  page: number,\n  rowsPerPage: number,\n  orderBy?: string,\n  order?: Order,\n  queryParams?: { fullName?: number; truckNumber?: number },\n) => {\n  const url = new URL('/coordinator', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.fullName) {\n    url.searchParams.append('fullName', `${queryParams.fullName}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  return authFetch(url).then((res) => res.json());\n};\n\nexport const UsersQuery = (\n  page: number,\n  rowsPerPage: number,\n  orderBy?: string,\n  order?: Order,\n  queryParams?: { fullName?: number },\n) => {\n  const url = new URL('/user', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.fullName) {\n    url.searchParams.append('fullName', `${queryParams.fullName}`);\n  }\n  return authFetch(url).then((res) => res.json());\n};\n","import * as React from 'react';\nimport { useQuery } from '@tanstack/react-query';\n\nimport { alpha, styled } from '@mui/material/styles';\nimport TextField from '@mui/material/TextField';\nimport Tooltip from '@mui/material/Tooltip';\nimport TableCell from '@mui/material/TableCell';\nimport Box from '@mui/material/Box';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport TableSortLabel from '@mui/material/TableSortLabel';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport FilterListIcon from '@mui/icons-material/FilterList';\nimport FilterListOffIcon from '@mui/icons-material/FilterListOff';\nimport { visuallyHidden } from '@mui/utils';\n\nimport Loader from '../components/Loader';\n\nimport { CoordinatorsQuery } from '../api';\nimport { Order, Coordinator } from '../utils/dataTypes';\nimport Checkbox from '@mui/material/Checkbox';\n\ninterface HeadCell {\n  id: string;\n  disablePadding: boolean;\n  orderField?: keyof Coordinator;\n  getData: (row: Coordinator) => { data: JSX.Element | string; title?: string };\n  label: string;\n  numeric: boolean;\n}\n\nconst headCells: readonly HeadCell[] = [\n  {\n    id: 'fullName',\n    orderField: 'fullName',\n    getData: (row) => ({ data: `${row.fullName}` }),\n    numeric: false,\n    disablePadding: true,\n    label: 'Full name',\n  },\n  {\n    id: 'type',\n    getData: (row) => {\n      let type = '';\n      let title = '';\n      if (row.type === 'Coordinator') {\n        type = '(C) ';\n        title = 'Coordinator';\n      }\n      if (row.type === 'CoordinatorDriver') {\n        type = '(C/d) ';\n        title = 'Coordinator/Driver';\n      }\n      return {\n        data: (\n          <span>\n            <b>{type}</b>\n          </span>\n        ),\n        title: title,\n      };\n    },\n    numeric: false,\n    disablePadding: true,\n    label: 'Type',\n  },\n  {\n    id: 'phone',\n    getData: (row) => {\n      const firstRow = `${row.phone}`;\n      const secondRow = `${row.phone2 ? row.phone2 : ''}`;\n      return {\n        data: (\n          <span>\n            <a\n              href={`tel:${firstRow}`}\n              target=\"_blank\"\n              onClick={stopPropagation}\n            >\n              {firstRow}\n            </a>\n            <br />\n            <a\n              href={secondRow ? `tel:${secondRow}` : undefined}\n              target=\"_blank\"\n              onClick={stopPropagation}\n            >\n              {secondRow || ' '}\n            </a>\n          </span>\n        ),\n        title: firstRow + '\\n' + secondRow,\n      };\n    },\n    numeric: false,\n    disablePadding: true,\n    label: 'Mobile phone',\n  },\n  {\n    id: 'email',\n    getData: (row) => {\n      const firstRow = `${row.email}`;\n      return {\n        data: (\n          <span>\n            <a\n              href={`mailto:${firstRow}`}\n              target=\"_blank\"\n              onClick={stopPropagation}\n            >\n              {firstRow}\n            </a>\n          </span>\n        ),\n        title: firstRow,\n      };\n    },\n    numeric: false,\n    disablePadding: true,\n    label: 'Email',\n  },\n  {\n    id: 'address',\n    getData: (row) => {\n      const firstRow = `${row.address}`;\n      return {\n        data: <span>{firstRow}</span>,\n        title: firstRow,\n      };\n    },\n    numeric: false,\n    disablePadding: true,\n    label: 'Home address',\n  },\n  {\n    id: 'coordinateTrucks',\n    getData: (row) => {\n      if (row.coordinateTrucks && row.coordinateTrucks.length) {\n        const trucks = row.coordinateTrucks;\n        return {\n          data: (\n            <span>\n              {trucks.map((truck, index) => (\n                <a\n                  key={index}\n                  href={`/trucks/${truck.id}`}\n                  target=\"_blank\"\n                  onClick={stopPropagation}\n                >\n                  {`${truck.truckNumber}${\n                    index === trucks.length - 1 ? '' : ', '\n                  }`}\n                </a>\n              ))}\n            </span>\n          ),\n          title: trucks.map((truck) => truck.truckNumber).join(', '),\n        };\n      } else {\n        return { data: '' };\n      }\n    },\n    numeric: false,\n    disablePadding: true,\n    label: 'COORDINATE TRUCKS',\n  },\n];\n\ninterface EnhancedTableProps {\n  numSelected: number;\n  onRequestSort: (\n    event: React.MouseEvent<unknown>,\n    property: keyof Coordinator,\n  ) => void;\n  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  order: Order | undefined;\n  orderBy: string | undefined;\n  rowCount: number;\n}\n\nconst StyledTableHead = styled(TableHead)(({ theme }) => ({\n  backgroundColor: theme.palette.background.default,\n}));\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  maxWidth: '100px',\n  whiteSpace: 'nowrap',\n  textOverflow: 'ellipsis',\n  overflow: 'hidden',\n}));\n\nfunction stopPropagation(e: React.SyntheticEvent) {\n  e.stopPropagation();\n}\n\nfunction EnhancedTableHead(props: EnhancedTableProps) {\n  const {\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n  } = props;\n  const createSortHandler =\n    (property: keyof Coordinator) => (event: React.MouseEvent<unknown>) => {\n      onRequestSort(event, property);\n    };\n\n  return (\n    <StyledTableHead>\n      <TableRow>\n        <StyledTableCell padding=\"checkbox\">\n          <Checkbox\n            name={'enhanced-table-checkbox-select-all'}\n            color=\"primary\"\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{\n              'aria-label': 'enhanced-table-checkbox-select-all',\n            }}\n          />\n        </StyledTableCell>\n        {headCells.map((headCell) => (\n          <StyledTableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'center'}\n            padding={headCell.disablePadding ? 'none' : 'normal'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={headCell.orderField && orderBy === headCell.orderField}\n              hideSortIcon={!headCell.orderField}\n              direction={orderBy === headCell.orderField ? order : 'asc'}\n              onClick={\n                headCell.orderField\n                  ? createSortHandler(headCell.orderField)\n                  : () => {\n                      return;\n                    }\n              }\n            >\n              {headCell.label}\n              {headCell.orderField && orderBy === headCell.orderField ? (\n                <Box component=\"span\" sx={visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </StyledTableCell>\n        ))}\n      </TableRow>\n    </StyledTableHead>\n  );\n}\n\ninterface EnhancedTableToolbarProps {\n  numSelected: number;\n  setQueryParams: React.Dispatch<\n    React.SetStateAction<Record<string, number | string>>\n  >;\n}\n\nfunction EnhancedTableToolbar(props: EnhancedTableToolbarProps) {\n  const { numSelected, setQueryParams } = props;\n  const [fullNameSearch, setFullNameSearch] = React.useState<string>('');\n  const [truckNumberSearch, setTruckNumberSearch] = React.useState<number>(0);\n  const [searchChanged, setSearchChanged] = React.useState<boolean>(false);\n\n  const fullNameHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setFullNameSearch(event.target.value);\n    setSearchChanged(true);\n  };\n  const truckNumberHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (Number.isFinite(Number(event.target.value))) {\n      setTruckNumberSearch(Number(event.target.value));\n      setSearchChanged(true);\n    }\n  };\n  const fullNameClearHandler = () => {\n    setSearchChanged(false);\n    setFullNameSearch('');\n    setTruckNumberSearch(0);\n    setQueryParams({});\n  };\n  const filterHandler = () => {\n    setSearchChanged(false);\n    const queryParams: Record<string, number | string> = {};\n    if (fullNameSearch) {\n      queryParams.fullName = fullNameSearch;\n    }\n    if (truckNumberSearch) {\n      queryParams.truckNumber = truckNumberSearch;\n    }\n    setQueryParams(queryParams);\n  };\n\n  return (\n    <Toolbar\n      sx={{\n        pl: { sm: 2 },\n        pr: { xs: 1, sm: 1 },\n        ...(numSelected > 0 && {\n          bgcolor: (theme) =>\n            alpha(\n              theme.palette.primary.main,\n              theme.palette.action.activatedOpacity,\n            ),\n        }),\n      }}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          sx={{ flex: '1 1 100%' }}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography\n          sx={{\n            flex: '1 1 100%',\n            whiteSpace: 'nowrap',\n            textOverflow: 'ellipsis',\n            overflow: 'hidden',\n          }}\n          variant=\"h6\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          Coordinators\n        </Typography>\n      )}\n      <Box\n        component=\"div\"\n        sx={{\n          '& .MuiTextField-root': { m: 1, width: '140px' },\n        }}\n      >\n        <TextField\n          label=\"Full name\"\n          id=\"fullName\"\n          value={fullNameSearch}\n          onChange={fullNameHandler}\n          size=\"small\"\n        />\n      </Box>\n      <Box\n        component=\"div\"\n        sx={{\n          '& .MuiTextField-root': { m: 1, width: '140px' },\n        }}\n      >\n        <TextField\n          label=\"Truck Number\"\n          id=\"truckNumber\"\n          value={truckNumberSearch || ''}\n          onChange={truckNumberHandler}\n          size=\"small\"\n        />\n      </Box>\n      {numSelected === 1 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton>\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          {(searchChanged || (!fullNameSearch && !truckNumberSearch)) &&\n          (!(searchChanged && !fullNameSearch) ||\n            !(searchChanged && !truckNumberSearch)) ? (\n            <span>\n              <IconButton\n                disabled={!fullNameSearch && !truckNumberSearch}\n                onClick={filterHandler}\n              >\n                <FilterListIcon />\n              </IconButton>\n            </span>\n          ) : (\n            <IconButton onClick={fullNameClearHandler}>\n              <FilterListOffIcon />\n            </IconButton>\n          )}\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n}\n\nexport default function EnhancedTable() {\n  const [order, setOrder] = React.useState<Order | undefined>('asc');\n  const [orderBy, setOrderBy] = React.useState<keyof Coordinator | undefined>(\n    'fullName',\n  );\n  const [selected, setSelected] = React.useState<readonly string[]>([]);\n  const [page, setPage] = React.useState<number>(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState<number>(15);\n  const [queryParams, setQueryParams] = React.useState<Record<string, any>>({});\n  const tableContainerRef = React.useRef(null);\n\n  const {\n    isLoading,\n    isFetching,\n    data: { items, total } = { items: [], total: 0 },\n  } = useQuery({\n    queryKey: ['coordinators', page, rowsPerPage, orderBy, order, queryParams],\n    queryFn: () =>\n      CoordinatorsQuery(page, rowsPerPage, orderBy, order, queryParams),\n    keepPreviousData: true,\n  });\n  const rows: Coordinator[] = items || [];\n\n  React.useEffect(() => {\n    if (tableContainerRef.current) {\n      const container = tableContainerRef.current as HTMLElement;\n      container.scrollTo({\n        top: 0,\n        left: 0,\n        behavior: 'smooth',\n      });\n    }\n  }, [rows]);\n\n  const handleRequestSort = (\n    event: React.MouseEvent<unknown>,\n    property: keyof Coordinator,\n  ) => {\n    const isAsc = orderBy === property && order === 'asc';\n    const isDesc = orderBy === property && order === 'desc';\n    if (isDesc) {\n      setOrder(undefined);\n      setOrderBy(undefined);\n    } else {\n      setOrder(isAsc ? 'desc' : 'asc');\n      setOrderBy(property);\n    }\n  };\n\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.checked) {\n      const newSelected = rows.map((n: Coordinator) => n.id);\n      setSelected(newSelected);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event: React.MouseEvent<unknown>, name: string) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected: readonly string[] = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = (name: string) => selected.indexOf(name) !== -1;\n\n  return (\n    <Box sx={{ width: '100%', height: '100%' }}>\n      <Paper sx={{ width: '100%', height: '100%', backgroundColor: 'unset' }}>\n        <EnhancedTableToolbar\n          numSelected={selected.length}\n          setQueryParams={(query) => {\n            setQueryParams(query);\n            setPage(0);\n          }}\n        />\n        <TableContainer\n          ref={tableContainerRef}\n          sx={{ height: 'calc(100% - 115px)' }}\n        >\n          <Table\n            sx={{ minWidth: 750 }}\n            aria-labelledby=\"tableTitle\"\n            size=\"small\"\n            stickyHeader\n          >\n            <EnhancedTableHead\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {rows.map((row, index) => {\n                const isItemSelected = isSelected(`${row.id}`);\n                const labelId = `enhanced-table-checkbox-${index}`;\n                return (\n                  <TableRow\n                    hover\n                    onClick={(event) => handleClick(event, `${row.id}`)}\n                    role=\"checkbox\"\n                    aria-checked={isItemSelected}\n                    tabIndex={-1}\n                    key={row.id}\n                    selected={isItemSelected}\n                    sx={{ cursor: 'pointer' }}\n                  >\n                    <StyledTableCell padding=\"checkbox\">\n                      <Checkbox\n                        id={`${labelId}`}\n                        color=\"primary\"\n                        checked={isItemSelected}\n                        inputProps={{\n                          'aria-labelledby': labelId,\n                        }}\n                      />\n                    </StyledTableCell>\n                    {headCells.map((cell) => {\n                      const cellData = cell.getData(row);\n                      return (\n                        <StyledTableCell\n                          key={cell.id}\n                          title={cellData.title}\n                          align={cell.numeric ? 'right' : 'center'}\n                        >\n                          {cellData.data}\n                        </StyledTableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 15, 20, 25, 35, 50]}\n          component=\"div\"\n          count={total}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <Loader visible={isLoading || isFetching} />\n    </Box>\n  );\n}\n"],"names":["origin","URL","window","location","href","authFetch","input","_authProvider$user","_authProvider$user2","init","headers","Headers","set","btoa","authProvider","user","username","password","fetch","TrucksQuery","page","rowsPerPage","orderBy","order","queryParams","url","searchParams","append","concat","truckNumber","lastLocation","distance","then","res","json","LocationsQuery","search","name","LoadsQuery","loadNumber","OwnersQuery","fullName","DriversQuery","CoordinatorsQuery","UsersQuery","headCells","id","orderField","getData","row","data","numeric","disablePadding","label","type","title","_jsx","children","firstRow","phone","secondRow","phone2","_jsxs","target","onClick","stopPropagation","undefined","email","address","coordinateTrucks","length","trucks","map","truck","index","join","StyledTableHead","styled","TableHead","_ref","backgroundColor","theme","palette","background","default","StyledTableCell","TableCell","_ref2","maxWidth","whiteSpace","textOverflow","overflow","e","EnhancedTableHead","props","onSelectAllClick","numSelected","rowCount","onRequestSort","TableRow","padding","Checkbox","color","indeterminate","checked","onChange","inputProps","headCell","align","sortDirection","TableSortLabel","active","hideSortIcon","direction","property","event","Box","component","sx","visuallyHidden","EnhancedTableToolbar","setQueryParams","_React$useState","React","_React$useState2","_slicedToArray","fullNameSearch","setFullNameSearch","_React$useState3","_React$useState4","truckNumberSearch","setTruckNumberSearch","_React$useState5","_React$useState6","searchChanged","setSearchChanged","Toolbar","_objectSpread","pl","sm","pr","xs","bgcolor","alpha","primary","main","action","activatedOpacity","Typography","flex","variant","m","width","TextField","value","size","Number","isFinite","Tooltip","IconButton","DeleteIcon","FilterListOffIcon","disabled","FilterListIcon","EnhancedTable","_React$useState7","_React$useState8","setOrder","_React$useState9","_React$useState10","setOrderBy","_React$useState11","_React$useState12","selected","setSelected","_React$useState13","_React$useState14","setPage","_React$useState15","_React$useState16","setRowsPerPage","_React$useState17","_React$useState18","tableContainerRef","_useQuery","useQuery","queryKey","queryFn","keepPreviousData","isLoading","isFetching","_useQuery$data","_useQuery$data2","items","total","rows","current","scrollTo","top","left","behavior","height","Paper","query","TableContainer","ref","Table","minWidth","stickyHeader","newSelected","n","isAsc","TableBody","isItemSelected","indexOf","labelId","hover","selectedIndex","slice","handleClick","role","tabIndex","cursor","cell","cellData","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","Loader","visible"],"sourceRoot":""}