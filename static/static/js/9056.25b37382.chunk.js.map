{"version":3,"file":"static/js/9056.25b37382.chunk.js","mappings":"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","sources":["GoogleMaps/map.tsx","GoogleMaps/mapComponent.tsx","utils/stopPropagation.ts"],"sourcesContent":["import * as React from 'react';\r\nimport { useQuery } from '@tanstack/react-query';\r\n\r\nimport MapComponent from './mapComponent';\r\nimport Loader from '../components/Loader';\r\nimport { TrucksForMapQuery } from '../api';\r\nimport { TruckForMap } from '../utils/dataTypes';\r\n\r\nexport default function GeneralMap() {\r\n  const {\r\n    isLoading: isTruckListLoading,\r\n    isFetching: isTruckListFetching,\r\n    data: truckListData,\r\n  } = useQuery({\r\n    queryKey: ['trucksForMap'],\r\n    queryFn: TrucksForMapQuery,\r\n    keepPreviousData: false,\r\n    retry: false,\r\n  });\r\n  const rows: TruckForMap[] = (truckListData || []).filter(\r\n    (truck) => truck.lastLocation,\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <MapComponent truckListData={rows} />\r\n      <Loader visible={isTruckListLoading || isTruckListFetching} />\r\n    </>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport { Wrapper, Status } from '@googlemaps/react-wrapper';\r\nimport { Library } from '@googlemaps/js-api-loader/src';\r\nimport { MarkerClusterer as MarkerClustererClass } from '@googlemaps/markerclusterer';\r\n\r\nimport Slide from '@mui/material/Slide';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport Button from '@mui/material/Button';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Box from '@mui/material/Box';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport { TransitionProps } from '@mui/material/transitions';\r\nimport ContentCopy from '@mui/icons-material/ContentCopy';\r\n\r\nimport Loader from '../components/Loader';\r\nimport { TruckQuery } from '../api';\r\nimport { useLoader, useSnackbar } from '../hooks';\r\nimport { Truck, TruckForMap } from '../utils/dataTypes';\r\nimport { getType } from '../utils/queryHelpers';\r\nimport { stopPropagation } from '../utils/stopPropagation';\r\nimport { getMapSettings } from '../utils/getMapSettings';\r\nimport { selectLocation } from '../utils/selectLocation';\r\nimport { toStringLocation } from '../utils/toStringLocation';\r\n\r\nconst center = { lat: 39.828922654821866, lng: -98.57947970000001 };\r\nconst zoom = 5;\r\nconst mapId = '865ca10c27c22749';\r\n\r\nconst Transition = React.forwardRef(function Transition(\r\n  props: TransitionProps & {\r\n    children: React.ReactElement<any, any>;\r\n  },\r\n  ref: React.Ref<unknown>,\r\n) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function MapComponent({\r\n  truckListData,\r\n}: {\r\n  truckListData: TruckForMap[];\r\n}) {\r\n  let mapCenter = center;\r\n  let mapZoom = zoom;\r\n  if (truckListData.length === 1 && truckListData[0].lastLocation) {\r\n    mapCenter = {\r\n      lat: truckListData[0].lastLocation[0],\r\n      lng: truckListData[0].lastLocation[1],\r\n    };\r\n    mapZoom = mapZoom * 2;\r\n  }\r\n\r\n  const [geocoder, setGeocoder] = React.useState<google.maps.Geocoder | null>(\r\n    null,\r\n  );\r\n  const [selectedTruckId, setSelectedTruckId] = React.useState<string>('');\r\n  const [selectedTruck, setSelectedTruck] = React.useState<Truck | null>(null);\r\n  const [isTruckLoading, setIsTruckLoading] = React.useState<boolean>(false);\r\n\r\n  const {\r\n    // isLoading: isTruckLoading,\r\n    // isFetching: isTruckFetching,\r\n    // data: truck,\r\n    refetch,\r\n  } = useQuery({\r\n    queryKey: ['truckForMap', selectedTruckId],\r\n    queryFn: TruckQuery,\r\n    keepPreviousData: false,\r\n    retry: false,\r\n    enabled: false,\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (!selectedTruckId) {\r\n      setSelectedTruck(null);\r\n    } else {\r\n      setIsTruckLoading(true);\r\n      const truckItem = truckListData?.find(\r\n        (truck) => truck.id === selectedTruckId,\r\n      );\r\n      const truckLocation = truckItem && truckItem?.lastLocation;\r\n\r\n      Promise.all([\r\n        refetch().then((res) => res.data),\r\n        truckLocation &&\r\n          geocoder\r\n            ?.geocode({\r\n              location: { lat: truckLocation[0], lng: truckLocation[1] },\r\n            })\r\n            .then((res) => {\r\n              const location = selectLocation(res.results);\r\n              if (location) {\r\n                return toStringLocation(location.address_components);\r\n              }\r\n              return '';\r\n            }),\r\n      ])\r\n        .then(([truck, location]) => {\r\n          if (truck) {\r\n            setSelectedTruck({ ...truck, lastCity: location || '' });\r\n          } else {\r\n            setSelectedTruck(null);\r\n          }\r\n        })\r\n        .catch(() => setSelectedTruck(null))\r\n        .finally(() => setIsTruckLoading(false));\r\n    }\r\n  }, [selectedTruckId]);\r\n\r\n  const handleClickOpen = (truckId: string) => {\r\n    setSelectedTruckId(truckId);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setSelectedTruckId('');\r\n  };\r\n\r\n  const handleApiLoad = (status: Status): React.ReactElement => {\r\n    const setSnackbarMessage = useSnackbar();\r\n    const [, setLoaderVisibility] = useLoader();\r\n    React.useLayoutEffect(() => {\r\n      if (status === Status.LOADING) {\r\n        setLoaderVisibility(true);\r\n      }\r\n      if (status === Status.FAILURE) {\r\n        setSnackbarMessage({\r\n          severity: 'error',\r\n          message: 'Error loading maps!',\r\n        });\r\n      }\r\n      if (status === Status.SUCCESS) {\r\n        setGeocoder(new window.google.maps.Geocoder());\r\n      }\r\n      return () => {\r\n        if (status === Status.LOADING) {\r\n          setLoaderVisibility(false);\r\n        }\r\n      };\r\n    }, [status]);\r\n    return null as unknown as React.ReactElement;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        component=\"main\"\r\n        sx={{ flexGrow: 1, p: 1, height: '100%', width: '100%' }}\r\n      >\r\n        <Wrapper {...getMapSettings()} render={handleApiLoad} />\r\n        {!geocoder ? null : (\r\n          <Map center={mapCenter} zoom={mapZoom} mapId={mapId}>\r\n            <MarkerClusterer>\r\n              {truckListData.map((truck) => {\r\n                return (\r\n                  <Marker\r\n                    key={truck.id}\r\n                    onCLick={() => handleClickOpen(truck.id)}\r\n                    optimized\r\n                    animation={window?.google?.maps?.Animation?.DROP}\r\n                    title={`${truck.truckNumber}\\n${truck.status}`}\r\n                    position={{\r\n                      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n                      // @ts-ignore\r\n                      lat: truck.lastLocation[0],\r\n                      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n                      // @ts-ignore\r\n                      lng: truck.lastLocation[1],\r\n                    }}\r\n                  />\r\n                );\r\n              })}\r\n            </MarkerClusterer>\r\n          </Map>\r\n        )}\r\n      </Box>\r\n      <Dialog\r\n        open={!!selectedTruck}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleDialogClose}\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle>\r\n          <span>\r\n            TRUCK NUMBER: \r\n            <a href={`./trucks/view/${selectedTruck?.id}`} target=\"_blank\">\r\n              {selectedTruck?.truckNumber}\r\n            </a>\r\n          </span>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"truck-status\">\r\n            {`CURRENT STATUS: ${selectedTruck?.status}`}\r\n          </DialogContentText>\r\n          <DialogContentText id=\"main-contact\">\r\n            <span>\r\n              {'MAIN CONTACT: '}\r\n              <b>{`${\r\n                selectedTruck?.coordinator || selectedTruck?.owner\r\n                  ? // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n                    //@ts-ignore\r\n                    getType(selectedTruck?.coordinator || selectedTruck?.owner)\r\n                  : ''\r\n              }`}</b>\r\n              {` ${\r\n                selectedTruck?.coordinator || selectedTruck?.owner\r\n                  ? // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n                    //@ts-ignore\r\n                    (selectedTruck?.coordinator || selectedTruck?.owner)\r\n                      .fullName\r\n                  : ''\r\n              }`}\r\n              <IconButton\r\n                size=\"small\"\r\n                onClick={(event) => {\r\n                  stopPropagation(event);\r\n                  navigator.clipboard.writeText(\r\n                    ` ${\r\n                      selectedTruck?.coordinator || selectedTruck?.owner\r\n                        ? // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n                          //@ts-ignore\r\n                          (selectedTruck?.coordinator || selectedTruck?.owner)\r\n                            .fullName\r\n                        : ''\r\n                    } ${\r\n                      (selectedTruck?.coordinator || selectedTruck?.owner)\r\n                        ?.phone || ''\r\n                    }`,\r\n                  );\r\n                }}\r\n              >\r\n                <ContentCopy sx={{ height: '16px', width: '16px' }} />\r\n              </IconButton>\r\n            </span>\r\n          </DialogContentText>\r\n          <DialogContentText id=\"main-contact-number\">\r\n            <span>\r\n              {'MAIN CONTACT #: '}\r\n              <a\r\n                href={\r\n                  selectedTruck?.coordinator || selectedTruck?.owner\r\n                    ? `tel:${\r\n                        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n                        //@ts-ignore\r\n                        (selectedTruck?.coordinator || selectedTruck?.owner)\r\n                          .phone\r\n                      }`\r\n                    : undefined\r\n                }\r\n                target=\"_blank\"\r\n                onClick={stopPropagation}\r\n              >\r\n                {(selectedTruck?.coordinator || selectedTruck?.owner)?.phone ||\r\n                  ''}\r\n              </a>\r\n            </span>\r\n          </DialogContentText>\r\n          <DialogContentText id=\"last-location\">\r\n            <span>\r\n              {`LAST LOCATION #: ${selectedTruck?.lastCity}`}\r\n              <IconButton\r\n                size=\"small\"\r\n                onClick={(event) => {\r\n                  stopPropagation(event);\r\n                  navigator.clipboard.writeText(`${selectedTruck?.lastCity}`);\r\n                }}\r\n              >\r\n                <ContentCopy sx={{ height: '16px', width: '16px' }} />\r\n              </IconButton>\r\n            </span>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleDialogClose}>Close</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Loader visible={isTruckLoading} />\r\n    </>\r\n  );\r\n}\r\n\r\nconst render = (status: Status): React.ReactElement => {\r\n  const setSnackbarMessage = useSnackbar();\r\n  if (status === Status.FAILURE) {\r\n    setSnackbarMessage({\r\n      severity: 'error',\r\n      message: 'Error loading maps!',\r\n    });\r\n  }\r\n  return (\r\n    <>\r\n      <Loader visible={status === Status.LOADING} />\r\n    </>\r\n  );\r\n};\r\n\r\nfunction Map({\r\n  center,\r\n  zoom,\r\n  mapId,\r\n  children,\r\n}: {\r\n  center: google.maps.LatLngLiteral;\r\n  zoom: number;\r\n  mapId: string;\r\n  children?: React.ReactNode;\r\n}) {\r\n  const mapRef = React.useRef(null);\r\n  const [map, setMap] = React.useState<google.maps.Map>();\r\n\r\n  React.useEffect(() => {\r\n    if (mapRef.current && !map) {\r\n      setMap(\r\n        new window.google.maps.Map(mapRef.current, {\r\n          center,\r\n          zoom,\r\n          mapId,\r\n        }),\r\n      );\r\n    }\r\n  }, [mapRef, map]);\r\n\r\n  const child = React.Children.only(children);\r\n\r\n  return (\r\n    <>\r\n      <div style={{ height: '100%', width: '100%' }} ref={mapRef} id=\"map\" />\r\n      {React.isValidElement(child) &&\r\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n        // @ts-ignore\r\n        React.cloneElement(child, { map })}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction MarkerClusterer({\r\n  map,\r\n  children,\r\n}: {\r\n  map?: google.maps.Map;\r\n  children?: React.ReactNode;\r\n}) {\r\n  const [clusterer, setClasterer] = React.useState<MarkerClustererClass>();\r\n\r\n  React.useEffect(() => {\r\n    if (!clusterer) {\r\n      setClasterer(new MarkerClustererClass({}));\r\n    }\r\n\r\n    return () => {\r\n      if (clusterer) {\r\n        clusterer.setMap(null);\r\n      }\r\n    };\r\n  }, [clusterer]);\r\n\r\n  React.useEffect(() => {\r\n    if (clusterer && map) {\r\n      clusterer.setMap(map);\r\n    }\r\n  }, [map]);\r\n\r\n  React.useEffect(() => {\r\n    if (clusterer) {\r\n      clusterer.render();\r\n    }\r\n  }, [map, children]);\r\n  clusterer?.render();\r\n\r\n  return (\r\n    <>\r\n      {React.Children.map(children, (child) => {\r\n        if (React.isValidElement(child)) {\r\n          // set the map prop on the child component\r\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n          // @ts-ignore\r\n          return React.cloneElement(child, { map, clusterer });\r\n        }\r\n      })}\r\n    </>\r\n  );\r\n}\r\n\r\nconst Marker: React.FC<\r\n  google.maps.MarkerOptions & {\r\n    onCLick: () => void;\r\n    clusterer?: MarkerClustererClass;\r\n  }\r\n> = (options) => {\r\n  const { onCLick, clusterer, map, position, ...otherMarkerOptions } = options;\r\n  const [marker, setMarker] = React.useState<google.maps.Marker>();\r\n\r\n  React.useEffect(() => {\r\n    if (!marker) {\r\n      const newMarker = new window.google.maps.Marker();\r\n      setMarker(newMarker);\r\n      newMarker.addListener('click', onCLick);\r\n    }\r\n\r\n    return () => {\r\n      if (marker) {\r\n        marker.setMap(null);\r\n        clusterer?.removeMarker(marker, false);\r\n      }\r\n    };\r\n  }, [marker]);\r\n\r\n  React.useEffect(() => {\r\n    if (marker) {\r\n      marker.setMap(map || null);\r\n    }\r\n  }, [marker, map]);\r\n\r\n  React.useEffect(() => {\r\n    if (marker) {\r\n      marker.setPosition(position);\r\n    }\r\n  }, [marker, position && `${position?.lat},${position?.lng}`]);\r\n\r\n  React.useEffect(() => {\r\n    if (marker) {\r\n      clusterer?.addMarker(marker, false);\r\n    }\r\n  }, [marker, clusterer]);\r\n\r\n  React.useEffect(() => {\r\n    if (marker) {\r\n      marker.setOptions(otherMarkerOptions);\r\n    }\r\n  }, [marker, otherMarkerOptions]);\r\n\r\n  return null;\r\n};\r\n","import * as React from 'react';\r\n\r\nexport function stopPropagation(e: React.SyntheticEvent) {\r\n  e.stopPropagation();\r\n}\r\n"],"names":["GeneralMap","_useQuery","useQuery","queryKey","queryFn","TrucksForMapQuery","keepPreviousData","retry","isTruckListLoading","isLoading","isTruckListFetching","isFetching","rows","data","filter","truck","lastLocation","_jsxs","_Fragment","children","_jsx","MapComponent","truckListData","Loader","visible","center","lat","lng","zoom","mapId","Transition","React","props","ref","Slide","_objectSpread","direction","_ref","_ref5","mapCenter","mapZoom","length","_React$useState","_React$useState2","_slicedToArray","geocoder","setGeocoder","_React$useState3","_React$useState4","selectedTruckId","setSelectedTruckId","_React$useState5","_React$useState6","selectedTruck","setSelectedTruck","_React$useState7","_React$useState8","isTruckLoading","setIsTruckLoading","refetch","TruckQuery","enabled","truckItem","find","id","truckLocation","Promise","all","then","res","geocode","location","selectLocation","results","toStringLocation","address_components","_ref2","_ref3","lastCity","catch","finally","handleDialogClose","Box","component","sx","flexGrow","p","height","width","Wrapper","getMapSettings","render","status","setSnackbarMessage","useSnackbar","_useLoader","useLoader","setLoaderVisibility","Status","LOADING","FAILURE","severity","message","SUCCESS","window","google","maps","Geocoder","Map","MarkerClusterer","map","_window","_window$google","_window$google$maps","_window$google$maps$A","Marker","onCLick","truckId","optimized","animation","Animation","DROP","title","concat","truckNumber","position","Dialog","open","TransitionComponent","keepMounted","onClose","DialogTitle","href","target","DialogContent","DialogContentText","coordinator","owner","getType","fullName","IconButton","size","onClick","event","_ref4","stopPropagation","navigator","clipboard","writeText","phone","ContentCopy","undefined","DialogActions","Button","_ref6","mapRef","_React$useState9","_React$useState10","setMap","current","child","only","style","_ref7","_React$useState11","_React$useState12","clusterer","setClasterer","MarkerClustererClass","options","otherMarkerOptions","_objectWithoutProperties","_excluded","_React$useState13","_React$useState14","marker","setMarker","newMarker","addListener","removeMarker","setPosition","addMarker","setOptions","e"],"sourceRoot":""}