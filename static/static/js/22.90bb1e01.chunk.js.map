{"version":3,"file":"static/js/22.90bb1e01.chunk.js","mappings":"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","sources":["trucks/trucks.tsx","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/icons-material/Edit.js"],"sourcesContent":["import * as React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\n\nimport { alpha, styled } from '@mui/material/styles';\nimport TextField from '@mui/material/TextField';\nimport Checkbox from '@mui/material/Checkbox';\nimport Tooltip from '@mui/material/Tooltip';\nimport TableCell from '@mui/material/TableCell';\nimport Box from '@mui/material/Box';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport TableSortLabel from '@mui/material/TableSortLabel';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\nimport IconButton from '@mui/material/IconButton';\nimport AddIcon from '@mui/icons-material/Add';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport FilterListIcon from '@mui/icons-material/FilterList';\nimport FilterListOffIcon from '@mui/icons-material/FilterListOff';\nimport { visuallyHidden } from '@mui/utils';\n\nimport Loader from '../components/Loader';\n\nimport { TrucksQuery, TruckDelete } from '../api';\nimport { useSnackbar } from '../hooks';\nimport { Order, Truck } from '../utils/dataTypes';\nimport { getPath, getType } from '../utils/queryHelpers';\n\ninterface HeadCell {\n  id: string;\n  disablePadding: boolean;\n  orderField?: keyof Truck;\n  getData: (row: Truck) => { data: JSX.Element | string; title?: string };\n  label: string;\n  numeric: boolean;\n}\n\nconst headCells: readonly HeadCell[] = [\n  {\n    id: 'truckNumber',\n    orderField: 'truckNumber',\n    getData: (row) => ({ data: `${row.truckNumber}` }),\n    numeric: true,\n    disablePadding: false,\n    label: 'Truck Number',\n  },\n  {\n    id: 'mainContactInfo',\n    getData: (row) => {\n      const person = row.coordinator || row.owner;\n      let path = '';\n      let type = '';\n      let firstRow = '';\n      let secondRow = '';\n      if (person) {\n        path = `./${getPath(person)}/view/${person.id}`;\n        type = `${getType(person)} `;\n        firstRow = `${person.fullName}`;\n        secondRow = `${person?.phone}`;\n      }\n      return {\n        data: (\n          <span>\n            <b>{type}</b>\n            <a href={path} target=\"_blank\" onClick={stopPropagation}>\n              {firstRow}\n            </a>\n            <br />\n            <a\n              href={secondRow ? `tel:${secondRow}` : undefined}\n              target=\"_blank\"\n              onClick={stopPropagation}\n            >\n              {secondRow || ' '}\n            </a>\n          </span>\n        ),\n        title: type + '' + firstRow + '\\n' + secondRow,\n      };\n    },\n    numeric: false,\n    disablePadding: true,\n    label: 'Main Contact info',\n  },\n  {\n    id: 'status',\n    orderField: 'status',\n    getData: (row) => ({ data: `${row.status}` }),\n    numeric: false,\n    disablePadding: true,\n    label: 'Status',\n  },\n  {\n    id: 'location',\n    getData: (row) => {\n      if (row?.lastCity) {\n        const path = `./locations/view/${row.lastCity.id}`;\n        const firstRow = `${row.lastCity.name}, ${row.lastCity.stateCode}, ${row.lastCity.zipCode},`;\n        const secondRow = `${\n          row.locationUpdatedAt\n            ? new Date(row.locationUpdatedAt).toLocaleString()\n            : ''\n        }`;\n\n        return {\n          data: (\n            <span>\n              <a href={path} target=\"_blank\" onClick={stopPropagation}>\n                {firstRow}\n              </a>\n              <br />\n              {secondRow}\n            </span>\n          ),\n          title: firstRow + '\\n' + secondRow,\n        };\n      } else {\n        return { data: '' };\n      }\n    },\n    numeric: false,\n    disablePadding: true,\n    label: 'Last known location',\n  },\n  {\n    id: 'truckInfo',\n    getData: (row) => {\n      const firstRow = row.type ? `${row.type}` : '';\n      const secondRow = row.equipment ? `${row.equipment.join(', ')}` : '';\n\n      return {\n        data: (\n          <span>\n            {firstRow}\n            <br />\n            {secondRow}\n          </span>\n        ),\n        title: firstRow + '\\n' + secondRow,\n      };\n    },\n    numeric: false,\n    disablePadding: true,\n    label: 'Truck info',\n  },\n  {\n    id: 'dimsPayload',\n    getData: (row) => {\n      const firstRow = row.doorDims ? `${row.doorDims}` : '';\n      const secondRow = row.payload ? `${row.payload}` : '';\n\n      return {\n        data: (\n          <span>\n            {firstRow}\n            <br />\n            {secondRow}\n          </span>\n        ),\n        title: firstRow + '\\n' + secondRow,\n      };\n    },\n    numeric: false,\n    disablePadding: true,\n    label: 'DIMS/Payload',\n  },\n  {\n    id: 'driverInfo',\n    getData: (row) => {\n      const driver = row.driver;\n      let path = '';\n      let type = '';\n      let firstRow = '';\n      let secondRow = '';\n      if (driver) {\n        path = `./${getPath(driver)}/view/${driver.id}`;\n        type = `${getType(driver)} `;\n        firstRow = `${driver.fullName}`;\n        secondRow = `${driver.phone}`;\n      }\n      return {\n        data: (\n          <span>\n            <b>{type}</b>\n            <a\n              href={firstRow ? path : undefined}\n              target=\"_blank\"\n              onClick={stopPropagation}\n            >\n              {firstRow}\n            </a>\n            <br />\n            <a\n              href={secondRow ? `tel:${secondRow}` : undefined}\n              target=\"_blank\"\n              onClick={stopPropagation}\n            >\n              {secondRow || ' '}\n            </a>\n          </span>\n        ),\n        title: type + '' + firstRow + '\\n' + secondRow,\n      };\n    },\n    numeric: false,\n    disablePadding: true,\n    label: 'Driver info',\n  },\n];\n\ninterface EnhancedTableProps {\n  numSelected: number;\n  onRequestSort: (\n    event: React.MouseEvent<unknown>,\n    property: keyof Truck,\n  ) => void;\n  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  order: Order | undefined;\n  orderBy: string | undefined;\n  rowCount: number;\n}\n\nconst StyledTableHead = styled(TableHead)(({ theme }) => ({\n  backgroundColor: theme.palette.background.default,\n}));\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  maxWidth: '100px',\n  paddingTop: '6px',\n  paddingBottom: '6px',\n  whiteSpace: 'nowrap',\n  textOverflow: 'ellipsis',\n  overflow: 'hidden',\n}));\n\nfunction stopPropagation(e: React.SyntheticEvent) {\n  e.stopPropagation();\n}\n\nfunction EnhancedTableHead(props: EnhancedTableProps) {\n  const {\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n  } = props;\n  const createSortHandler =\n    (property: keyof Truck) => (event: React.MouseEvent<unknown>) => {\n      onRequestSort(event, property);\n    };\n\n  return (\n    <StyledTableHead>\n      <TableRow>\n        <StyledTableCell padding=\"checkbox\">\n          <Checkbox\n            name={'enhanced-table-checkbox-select-all'}\n            color=\"primary\"\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{\n              'aria-label': 'enhanced-table-checkbox-select-all',\n            }}\n          />\n        </StyledTableCell>\n        {headCells.map((headCell) => (\n          <StyledTableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'center'}\n            padding={headCell.disablePadding ? 'none' : 'normal'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={headCell.orderField && orderBy === headCell.orderField}\n              hideSortIcon={!headCell.orderField}\n              direction={orderBy === headCell.orderField ? order : 'asc'}\n              onClick={\n                headCell.orderField\n                  ? createSortHandler(headCell.orderField)\n                  : () => {\n                      return;\n                    }\n              }\n            >\n              {headCell.label}\n              {headCell.orderField && orderBy === headCell.orderField ? (\n                <Box component=\"span\" sx={visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </StyledTableCell>\n        ))}\n      </TableRow>\n    </StyledTableHead>\n  );\n}\n\ninterface EnhancedTableToolbarProps {\n  selected: readonly string[];\n  setQueryParams: React.Dispatch<React.SetStateAction<Record<string, number>>>;\n}\n\nfunction EnhancedTableToolbar(props: EnhancedTableToolbarProps) {\n  const { selected, setQueryParams } = props;\n  const [truckNumberSearch, setTruckNumberSearch] = React.useState<number>(0);\n  const [truckNumberChanged, setTruckNumberChanged] =\n    React.useState<boolean>(false);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const queryClient = useQueryClient();\n\n  const setSnackbarMessage = useSnackbar();\n\n  const { mutate, isLoading } = useMutation(TruckDelete, {\n    onSuccess: () => {\n      setSnackbarMessage({\n        severity: 'success',\n        message: 'Deleted',\n      });\n      queryClient.invalidateQueries(['trucks']);\n    },\n    onError: (error: Error) => {\n      setSnackbarMessage({\n        severity: 'error',\n        message: error instanceof Error ? error.message : JSON.stringify(error),\n      });\n    },\n  });\n\n  const truckNumberHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (Number.isFinite(Number(event.target.value))) {\n      setTruckNumberSearch(Number(event.target.value));\n      setTruckNumberChanged(true);\n    }\n  };\n  const truckClearHandler = () => {\n    setTruckNumberChanged(false);\n    setTruckNumberSearch(0);\n    setQueryParams({});\n  };\n  const filterHandler = () => {\n    setTruckNumberChanged(false);\n    setQueryParams({ truckNumber: truckNumberSearch });\n  };\n  const createHandler = () => {\n    navigate('./create', {\n      relative: 'path',\n      state: { from: location },\n      replace: false,\n    });\n  };\n  const editHandler = () => {\n    navigate(`./edit/${selected[0]}`, {\n      relative: 'path',\n      state: { from: location },\n      replace: false,\n    });\n  };\n  const deleteHandler = () => {\n    mutate(`${selected[0]}`);\n  };\n\n  return (\n    <Toolbar\n      sx={{\n        pl: { sm: 2 },\n        pr: { xs: 1, sm: 1 },\n        ...(selected.length > 0 && {\n          bgcolor: (theme) =>\n            alpha(\n              theme.palette.primary.main,\n              theme.palette.action.activatedOpacity,\n            ),\n        }),\n      }}\n    >\n      {selected.length > 0 ? (\n        <Typography\n          sx={{ flex: '1 1 100%' }}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {selected.length} selected\n        </Typography>\n      ) : (\n        <Typography\n          sx={{\n            flex: '1 1 100%',\n            whiteSpace: 'nowrap',\n            textOverflow: 'ellipsis',\n            overflow: 'hidden',\n          }}\n          variant=\"h6\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          Trucks\n        </Typography>\n      )}\n      <TextField\n        label=\"Truck Number\"\n        value={truckNumberSearch || ''}\n        onChange={truckNumberHandler}\n        size=\"small\"\n      />\n      <Tooltip title=\"Filter list\">\n        {(truckNumberChanged || !truckNumberSearch) &&\n        !(truckNumberChanged && !truckNumberSearch) ? (\n          <span>\n            <IconButton disabled={!truckNumberSearch} onClick={filterHandler}>\n              <FilterListIcon />\n            </IconButton>\n          </span>\n        ) : (\n          <span>\n            <IconButton onClick={truckClearHandler}>\n              <FilterListOffIcon />\n            </IconButton>\n          </span>\n        )}\n      </Tooltip>\n      <Box sx={{ p: 1, display: 'inline-flex' }}>\n        <Tooltip title=\"Create\">\n          <span>\n            <IconButton onClick={createHandler}>\n              <AddIcon />\n            </IconButton>\n          </span>\n        </Tooltip>\n        <Tooltip title=\"Edit\">\n          <span>\n            <IconButton disabled={selected.length !== 1} onClick={editHandler}>\n              <EditIcon />\n            </IconButton>\n          </span>\n        </Tooltip>\n        <Tooltip title=\"Delete\">\n          <span>\n            <IconButton\n              disabled={selected.length !== 1}\n              onClick={deleteHandler}\n            >\n              <DeleteIcon />\n            </IconButton>\n          </span>\n        </Tooltip>\n      </Box>\n      <Loader visible={isLoading} />\n    </Toolbar>\n  );\n}\n\nexport default function EnhancedTable() {\n  const [order, setOrder] = React.useState<Order | undefined>('asc');\n  const [orderBy, setOrderBy] = React.useState<keyof Truck | undefined>(\n    'truckNumber',\n  );\n  const [selected, setSelected] = React.useState<readonly string[]>([]);\n  const [page, setPage] = React.useState<number>(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState<number>(15);\n  const [queryParams, setQueryParams] = React.useState<Record<string, any>>({});\n  const tableContainerRef = React.useRef(null);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const setSnackbarMessage = useSnackbar();\n\n  const {\n    isLoading,\n    isFetching,\n    data: { items, total } = { items: [], total: 0 },\n  } = useQuery({\n    queryKey: ['trucks', page, rowsPerPage, orderBy, order, queryParams],\n    queryFn: TrucksQuery,\n    keepPreviousData: true,\n    onError: (error: Error) => {\n      setSnackbarMessage({\n        severity: 'error',\n        message: error instanceof Error ? error.message : JSON.stringify(error),\n      });\n    },\n  });\n  const rows = items || [];\n\n  React.useEffect(() => {\n    if (tableContainerRef.current) {\n      const container = tableContainerRef.current as HTMLElement;\n      container.scrollTo({\n        top: 0,\n        left: 0,\n        behavior: 'smooth',\n      });\n    }\n  }, [rows]);\n\n  React.useEffect(() => {\n    const newSelected: string[] = [];\n    selected.forEach((selectedItem) => {\n      const selectedRow = rows.find((row) => row.id === selectedItem);\n      if (selectedRow) {\n        newSelected.push(selectedItem);\n      }\n    });\n    setSelected(newSelected);\n  }, [rows]);\n\n  const handleRequestSort = (\n    event: React.MouseEvent<unknown>,\n    property: keyof Truck,\n  ) => {\n    const isAsc = orderBy === property && order === 'asc';\n    const isDesc = orderBy === property && order === 'desc';\n    if (isDesc) {\n      setOrder(undefined);\n      setOrderBy(undefined);\n    } else {\n      setOrder(isAsc ? 'desc' : 'asc');\n      setOrderBy(property);\n    }\n  };\n\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.checked) {\n      const newSelected = rows.map((n: Truck) => n.id);\n      setSelected(newSelected);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (\n    event: React.MouseEvent<unknown>,\n    item: (typeof rows)[number],\n  ) => {\n    navigate(`./view/${item.id}`, {\n      relative: 'path',\n      state: { from: location },\n      replace: false,\n    });\n  };\n\n  const handleSelect = (event: React.MouseEvent<unknown>, name: string) => {\n    event.stopPropagation();\n    const selectedIndex = selected.indexOf(name);\n    let newSelected: readonly string[] = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = (name: string) => selected.indexOf(name) !== -1;\n\n  return (\n    <Box sx={{ width: '100%', height: '100%' }}>\n      <Paper sx={{ width: '100%', height: '100%', backgroundColor: 'unset' }}>\n        <EnhancedTableToolbar\n          selected={selected}\n          setQueryParams={(query) => {\n            setQueryParams(query);\n            setPage(0);\n          }}\n        />\n        <TableContainer\n          ref={tableContainerRef}\n          sx={{ height: 'calc(100% - 115px)' }}\n        >\n          <Table\n            sx={{ minWidth: 750 }}\n            aria-labelledby=\"tableTitle\"\n            size=\"small\"\n            stickyHeader\n          >\n            <EnhancedTableHead\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {rows.map((row, index) => {\n                const isItemSelected = isSelected(`${row.id}`);\n                const labelId = `enhanced-table-checkbox-${index}`;\n                return (\n                  <TableRow\n                    hover\n                    onClick={(event) => handleClick(event, row)}\n                    role=\"checkbox\"\n                    aria-checked={isItemSelected}\n                    tabIndex={-1}\n                    key={row.id}\n                    selected={isItemSelected}\n                    sx={{ cursor: 'pointer' }}\n                  >\n                    <StyledTableCell padding=\"checkbox\">\n                      <Checkbox\n                        id={`${labelId}`}\n                        color=\"primary\"\n                        checked={isItemSelected}\n                        inputProps={{\n                          'aria-labelledby': labelId,\n                        }}\n                        onClick={(event) => handleSelect(event, `${row.id}`)}\n                      />\n                    </StyledTableCell>\n                    {headCells.map((cell) => {\n                      const cellData = cell.getData(row);\n                      return (\n                        <StyledTableCell\n                          key={cell.id}\n                          title={cellData.title}\n                          align={cell.numeric ? 'right' : 'center'}\n                        >\n                          {cellData.data}\n                        </StyledTableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 15, 20, 25, 35, 50]}\n          component=\"div\"\n          count={total}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <Loader visible={isLoading || isFetching} />\n    </Box>\n  );\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\nexports.default = _default;"],"names":["headCells","id","orderField","getData","row","data","concat","truckNumber","numeric","disablePadding","label","person","coordinator","owner","path","type","firstRow","secondRow","getPath","getType","fullName","phone","_jsxs","children","_jsx","href","target","onClick","stopPropagation","undefined","title","status","lastCity","name","stateCode","zipCode","locationUpdatedAt","Date","toLocaleString","equipment","join","doorDims","payload","driver","StyledTableHead","styled","TableHead","_ref","backgroundColor","theme","palette","background","default","StyledTableCell","TableCell","_ref2","maxWidth","paddingTop","paddingBottom","whiteSpace","textOverflow","overflow","e","EnhancedTableHead","props","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","TableRow","padding","Checkbox","color","indeterminate","checked","onChange","inputProps","map","headCell","align","sortDirection","TableSortLabel","active","hideSortIcon","direction","property","event","Box","component","sx","visuallyHidden","EnhancedTableToolbar","selected","setQueryParams","_React$useState","React","_React$useState2","_slicedToArray","truckNumberSearch","setTruckNumberSearch","_React$useState3","_React$useState4","truckNumberChanged","setTruckNumberChanged","location","useLocation","navigate","useNavigate","queryClient","useQueryClient","setSnackbarMessage","useSnackbar","_useMutation","useMutation","TruckDelete","onSuccess","severity","message","invalidateQueries","onError","error","Error","JSON","stringify","mutate","isLoading","Toolbar","_objectSpread","pl","sm","pr","xs","length","bgcolor","alpha","primary","main","action","activatedOpacity","Typography","flex","variant","TextField","value","Number","isFinite","size","Tooltip","IconButton","FilterListOffIcon","disabled","FilterListIcon","p","display","relative","state","from","replace","AddIcon","EditIcon","DeleteIcon","Loader","visible","EnhancedTable","_React$useState5","_React$useState6","setOrder","_React$useState7","_React$useState8","setOrderBy","_React$useState9","_React$useState10","setSelected","_React$useState11","_React$useState12","page","setPage","_React$useState13","_React$useState14","rowsPerPage","setRowsPerPage","_React$useState15","_React$useState16","queryParams","tableContainerRef","_useQuery","useQuery","queryKey","queryFn","TrucksQuery","keepPreviousData","isFetching","_useQuery$data","_useQuery$data2","items","total","rows","current","scrollTo","top","left","behavior","newSelected","forEach","selectedItem","find","push","width","height","Paper","query","TableContainer","ref","Table","minWidth","stickyHeader","n","isAsc","TableBody","index","isItemSelected","indexOf","labelId","hover","role","tabIndex","cursor","selectedIndex","slice","handleSelect","cell","cellData","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","jsx","d"],"sourceRoot":""}