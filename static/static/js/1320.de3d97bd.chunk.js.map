{"version":3,"file":"static/js/1320.de3d97bd.chunk.js","mappings":"6JAAA,SAASA,IAAa,OAAOA,EAAWC,OAAOC,OAASD,OAAOC,OAAOC,OAAS,SAAUC,GAAK,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAAIF,UAAUD,GAAI,IAAK,IAAII,KAAKD,GAAG,CAAG,GAAEE,eAAeC,KAAKH,EAAGC,KAAOL,EAAEK,GAAKD,EAAEC,GAAK,CAAE,OAAOL,CAAG,EAAGJ,EAASY,MAAM,KAAMN,UAAY,CAEnR,SAASO,EAAOC,EAAMC,GACpB,IAAI,MACFC,EAAK,QACLC,KACGC,GACDJ,EACJ,OAAoB,gBAAoB,MAAOd,EAAS,CACtDmB,GAAI,UACJ,YAAa,UACbC,MAAO,6BACPC,QAAS,cACTC,IAAKP,EACL,kBAAmBE,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3DG,GAAIF,GACHD,GAAS,KAAmB,gBAAoB,SAAU,CAC3DO,GAAI,GACJC,GAAI,GACJf,EAAG,GACHgB,KAAM,OACNC,YAAa,GACbC,MAAO,CACLC,OAAQ,kBAEK,gBAAoB,OAAQ,CAC3CC,EAAG,sFACHF,MAAO,CACLG,WAAY,OACZJ,YAAa,EACbE,OAAQ,eACRH,KAAM,4BAEO,gBAAoB,WAAY,CAC/CM,OAAQ,oCACRJ,MAAO,CACLC,OAAQ,eACRF,YAAa,EACbD,KAAM,sBAEO,gBAAoB,WAAY,CAC/CM,OAAQ,oCACRJ,MAAO,CACLC,OAAQ,eACRF,YAAa,EACbD,KAAM,sBAEO,gBAAoB,OAAQ,CAC3CI,EAAG,yDACHF,MAAO,CACLC,OAAQ,eACRE,WAAY,SACZE,cAAe,QACfN,YAAa,KAEA,gBAAoB,OAAQ,CAC3CG,EAAG,yDACHF,MAAO,CACLC,OAAQ,eACRF,YAAa,EACbM,cAAe,WAEF,gBAAoB,OAAQ,CAC3CH,EAAG,2DACHF,MAAO,CACLK,cAAe,QACfN,YAAa,EACbE,OAAQ,eACRE,WAAY,YAEC,gBAAoB,OAAQ,CAC3CD,EAAG,0DACHF,MAAO,CACLK,cAAe,QACfJ,OAAQ,eACRF,YAAa,KAEA,gBAAoB,WAAY,CAC/CK,OAAQ,8BACRJ,MAAO,CACLC,OAAQ,eACRF,YAAa,EACbI,WAAY,OACZE,cAAe,QACfP,KAAM,4BAGZ,CACA,MAAMQ,EAA0B,aAAiBpB,GAClC,G,gDC1Ff,SAASb,IAAa,OAAOA,EAAWC,OAAOC,OAASD,OAAOC,OAAOC,OAAS,SAAUC,GAAK,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAAIF,UAAUD,GAAI,IAAK,IAAII,KAAKD,GAAG,CAAG,GAAEE,eAAeC,KAAKH,EAAGC,KAAOL,EAAEK,GAAKD,EAAEC,GAAK,CAAE,OAAOL,CAAG,EAAGJ,EAASY,MAAM,KAAMN,UAAY,CAEnR,SAAS4B,EAASpB,EAAMC,GACtB,IAAI,MACFC,EAAK,QACLC,KACGC,GACDJ,EACJ,OAAoB,gBAAoB,MAAOd,EAAS,CACtDmC,UAAW,QACX,cAAe,OACfd,QAAS,YACT,cAAe,oBACfD,MAAO,6BACPE,IAAKP,EACL,kBAAmBE,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3DG,GAAIF,GACHD,GAAS,KAAmB,gBAAoB,OAAQ,CACzDa,EAAG,wzBACHF,MAAO,CACLS,SAAU,UACVX,KAAM,kBAGZ,CACA,MAAMQ,EAA0B,aAAiBC,GAClC,G,kJCZA,SAASG,EAAevB,GAUnC,IAVoC,SACtCwB,EAAQ,WACRC,EAAU,QACVC,EAAO,SACPC,GAMD3B,EACC,MAAO4B,EAAOC,GAAYC,EAAAA,SACxB,OAEKC,EAAOC,GAAYF,EAAAA,SAA6C,KAChEG,EAAUC,GAAeJ,EAAAA,SAC9B,MAGIK,EAAYL,EAAAA,SAAc,KACvBM,EAAAA,EAAAA,IAAUC,MACN,OAARJ,QAAQ,IAARA,OAAQ,EAARA,EAAUK,QAAQD,KAAmBE,QAAQC,UAC3CC,MAAMC,IACL,GAAIA,EAAOC,QAAQlD,OAAS,GAAK4C,EAAeb,SAAU,CACxD,MAAMoB,EAAsB,IAAIC,OAAOC,KAAKC,OAC1CV,EAAeb,UAEXwB,EAAkC,CACtCC,mBAAoB,GACpBC,kBAAkB,IAADC,OAAMP,EAAoBQ,MAAK,MAAAD,OAAKP,EAAoBS,MAAK,KAC9EC,SAAU,CACR9B,SAAUoB,EACVW,cAAeV,OAAOC,KAAKU,qBAAqBC,YAChDC,SAAU,IAAIb,OAAOC,KAAKa,cAE5BC,SAAS,IAADT,OAAMP,EAAoBQ,MAAK,MAAAD,OAAKP,EAAoBS,MAAK,KACrEQ,MAAO,IAET7B,EAAS,CAACgB,GACZ,MACEN,EAAOC,QAAQmB,SACZC,GACEA,EAAKb,mBAAoBc,EAAAA,EAAAA,GACxBD,EAAKd,sBAGXjB,EAASU,EAAOC,QAClB,IAEDsB,OAAOC,IACNlC,EAAS,GAAG,GACZ,GACH,MACF,CAACC,IAEJH,EAAAA,WAAgB,KACd,MAAMqC,EAAW3C,IAAY4C,EAAAA,EAAAA,GAAerC,GACxCP,GAAY2C,IAAoB,OAARA,QAAQ,IAARA,OAAQ,EAARA,EAAUP,aAAkB,OAALhC,QAAK,IAALA,OAAK,EAALA,EAAOgC,UACxD/B,EAASsC,GACA3C,EACTW,EAAU,CACRX,SAAU,CACR4B,IAAK5B,EAAS,GACd6B,IAAK7B,EAAS,MAGRA,IACVQ,EAAS,IACTH,EAAS,MACX,GACC,CAACI,EAAUT,EAAUO,IA2BxB,OACEsC,EAAAA,EAAAA,MAAA,QAAMxD,MAAO,CAAEyD,QAAS,QAAS3C,SAAA,EAC/B4C,EAAAA,EAAAA,KAACC,EAAAA,QAAO,KAAKC,EAAAA,EAAAA,MAAkBC,OA3BZC,IACrB,MAAMC,GAAqBC,EAAAA,EAAAA,OACpB,CAAEC,IAAuBC,EAAAA,EAAAA,MAoBhC,OAnBAjD,EAAAA,iBAAsB,KAChB6C,IAAWK,EAAAA,OAAOC,SACpBH,GAAoB,GAElBH,IAAWK,EAAAA,OAAOE,SACpBN,EAAmB,CACjBO,SAAU,QACVC,QAAS,wBAGTT,IAAWK,EAAAA,OAAOK,SACpBnD,EAAY,IAAIoD,OAAOzC,OAAOC,KAAKyC,UAE9B,KACDZ,IAAWK,EAAAA,OAAOC,SACpBH,GAAoB,EACtB,IAED,CAACH,IACG,IAAI,KAMTN,EAAAA,EAAAA,MAAA,QACExD,MAAO,CACL2E,aAAc,WACdC,SAAU,SACVC,UAAW,QAEbxF,MAAO,GAAAiD,OAAGvB,EAAQA,EAAMsB,kBAAoB,IAAO,KAAOxB,EAAQC,SAAA,CAEjEF,GACC8C,EAAAA,EAAAA,KAAA,KAAGoB,KAAM,IAAKC,OAAO,SAASC,QAASpE,EAAWE,SAC/CC,EAAQA,EAAMsB,kBAAoB,KAEnCtB,EACFA,EAAMsB,kBAEN,GAEAxB,GACA2C,EAAAA,EAAAA,MAAAyB,EAAAA,SAAA,CAAAnE,SAAA,EACE4C,EAAAA,EAAAA,KAAA,SACC7C,KAHO,KAMXC,KAEDC,GACA2C,EAAAA,EAAAA,KAACwB,EAAAA,EAAU,CACTC,KAAK,QACLH,QAAUI,KACRC,EAAAA,EAAAA,GAAgBD,GAChBE,UAAUC,UAAUC,UAAUzE,EAAMsB,kBAAkB,EACtDvB,UAEF4C,EAAAA,EAAAA,KAAC+B,EAAAA,EAAW,CAACC,GAAI,CAAEC,OAAQ,OAAQC,MAAO,YARpC,OAahB,C,kfCrIA,MAAMC,EAAmBC,EAAAA,GAAW,CAClCC,qBAAsBD,EAAAA,GACb,CACLA,EAAAA,KAEGE,UAAU,wBACVC,KAAK,GAAI,8CACTC,IAAI,GAAI,2CACRC,SAAS,sDACZL,EAAAA,KAEGE,UAAU,yBACVC,KAAK,IAAK,gDACVC,IAAI,IAAK,6CACTC,SAAS,wDAEbA,SAAS,0CACZC,eAAgBN,EAAAA,KAEbE,UAAU,sBACVG,SAAS,wCAGRE,EAAgB,CACpB7G,GAAI,GACJsE,OAAQ,oBACRiC,qBAAsB,KACtBK,oBAAgBE,GAGZC,EAAatF,EAAAA,YAAiB,SAClC1B,EAGAI,GAEA,OAAO+D,EAAAA,EAAAA,KAAC8C,EAAAA,EAAK,CAACC,UAAU,KAAK9G,IAAKA,KAASJ,GAC7C,IAEe,SAASmH,EAAwBvH,GAM5C,IAN6C,QAC/CwH,EAAO,WACPC,GAIDzH,GACkB0H,EAAAA,EAAAA,MAAjB,MACMC,GAAcC,EAAAA,EAAAA,MACdhD,GAAqBC,EAAAA,EAAAA,OAErB,OAAEgD,EAAM,UAAEC,IAAcC,EAAAA,EAAAA,GAAYC,EAAAA,GAAa,CACrDC,UAAWA,KACTrD,EAAmB,CACjBO,SAAU,UACVC,QAAS,0BAEXqC,EAAW,IACXE,EAAYO,kBAAkB,CAAC,UAAU,EAE3CC,QAAUC,IACRxD,EAAmB,CACjBO,SAAU,QACVC,QAASgD,aAAiBC,MAAQD,EAAMhD,QAAUkD,KAAKC,UAAUH,IACjE,IAIAI,GAASC,EAAAA,EAAAA,IAAuB,CACpCvB,cAAe,IAAKA,EAAe7G,GAAImH,GACvCkB,oBAAoB,EACpBhC,iBAAkBA,EAClBiC,SAAWC,IACTf,EAAOe,EAAO,IAWlB,OACEvE,EAAAA,EAAAA,MAACwE,EAAAA,EAAM,CACLC,OAAQtB,EACRuB,oBAAqB3B,EACrB4B,aAAW,EACXC,QATsBC,KACxBzB,EAAW,GAAG,EASZ,mBAAiB,qCACjB0B,WAAY,CAAE5C,GAAI,CAAEE,MAAO,UAAY9E,SAAA,EAEvC4C,EAAAA,EAAAA,KAAC6E,EAAAA,EAAW,CAAAzH,UACV4C,EAAAA,EAAAA,KAAA,QAAA5C,SAAM,+BAER0C,EAAAA,EAAAA,MAACgF,EAAAA,EAAa,CAAA1H,SAAA,EACZ4C,EAAAA,EAAAA,KAAA,QAAMoE,SAAUH,EAAOc,aAAcC,QAASf,EAAOgB,YAAY7H,UAC/D0C,EAAAA,EAAAA,MAACoF,EAAAA,EAAG,CAAClD,GAAI,CAAEjC,QAAS,QAAS3C,SAAA,EAC3B0C,EAAAA,EAAAA,MAACoF,EAAAA,EAAG,CAAgBlD,GAAI,CAAEjC,QAAS,eAAgB3C,SAAA,EACjD4C,EAAAA,EAAAA,KAACkF,EAAAA,EAAG,CAAYlD,GAAI,CAAEmD,EAAG,EAAGjD,MAAO,OAAQ9E,UACzC4C,EAAAA,EAAAA,KAACoF,EAAAA,GAAmB,CAClBC,UAAU,uBACVC,MAAM,gCACNrB,OAAQA,KAJH,SAOTjE,EAAAA,EAAAA,KAACkF,EAAAA,EAAG,CAAalD,GAAI,CAAEmD,EAAG,EAAGjD,MAAO,OAAQ9E,UAC1C4C,EAAAA,EAAAA,KAACuF,EAAAA,GAAa,CACZF,UAAU,iBACVC,MAAM,4BACNE,aAAW,EACXvB,OAAQA,KALH,WARF,aAiBTnE,EAAAA,EAAAA,MAACoF,EAAAA,EAAG,CAAelD,GAAI,CAAEjC,QAAS,eAAgB3C,SAAA,EAChD4C,EAAAA,EAAAA,KAACkF,EAAAA,EAAG,CAAYlD,GAAI,CAAEmD,EAAG,EAAGM,WAAY,EAAGvD,MAAO,OAAQ9E,UACxD4C,EAAAA,EAAAA,KAAC0F,EAAAA,EAAM,CACLC,WAAS,EACTC,QAAQ,YACRnE,KAAK,QACLoE,MAAM,UACNC,KAAK,SAAQ1I,SACd,SAPM,SAWT4C,EAAAA,EAAAA,KAACkF,EAAAA,EAAG,CAAalD,GAAI,CAAEmD,EAAG,EAAGM,WAAY,EAAGvD,MAAO,OAAQ9E,UACzD4C,EAAAA,EAAAA,KAAC0F,EAAAA,EAAM,CACLC,WAAS,EACTC,QAAQ,YACRnE,KAAK,QACLoE,MAAM,UACNC,KAAK,SACLxE,QA1DIyE,KAClB7C,EAAW,GAAG,EAyDqB9F,SACtB,YARM,WAZF,iBA2Bb4C,EAAAA,EAAAA,KAACgG,EAAAA,GAAM,CAACC,QAAS1C,SAIzB,C,+EC9GA,MAAM2C,GAA8C,SAAlCC,aAAaC,QAAQ,SAAsB,OAAS,QAChEC,GAAiC,CACrC,CACEvK,GAAI,cACJwK,WAAY,cACZC,QAAUC,IAAG,CAAQC,KAAK,GAAD7H,OAAK4H,EAAIE,eAClCC,SAAS,EACTC,gBAAgB,EAChBtB,MAAO,mBAET,CACExJ,GAAI,kBACJyK,QAAUC,IACR,MAAMK,EAASL,EAAIM,aAAeN,EAAIO,MACtC,IAAIC,EAAO,GACPlB,EAAO,GACPmB,EAAW,GACXC,EAAY,GAOhB,OANIL,IACFG,EAAI,KAAApI,QAAQuI,EAAAA,GAAAA,IAAQN,GAAO,UAAAjI,OAASiI,EAAO/K,IAC3CgK,EAAI,GAAAlH,QAAMwI,EAAAA,GAAAA,IAAQP,GAAO,KACzBI,EAAQ,GAAArI,OAAMiI,EAAOQ,UACrBH,EAAS,GAAAtI,OAAY,OAANiI,QAAM,IAANA,OAAM,EAANA,EAAQS,QAElB,CACLb,MACE3G,EAAAA,EAAAA,MAAA,QAAMxD,MAAO,CAAEyD,QAAS,QAAS3C,SAAA,EAC/B0C,EAAAA,EAAAA,MAAA,QACExD,MAAO,CACL2E,aAAc,WACdC,SAAU,SACVC,UAAW,QACX/D,SAAA,EAEF4C,EAAAA,EAAAA,KAAA,KAAA5C,SAAI0I,KACJ9F,EAAAA,EAAAA,KAAA,KAAGoB,KAAM4F,EAAM3F,OAAO,SAASC,QAASK,GAAAA,EAAgBvE,SACrD6J,KAEHjH,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,KACEoB,KAAM8F,EAAS,OAAAtI,OAAUsI,QAActE,EACvCvB,OAAO,SACPC,QAASK,GAAAA,EAAgBvE,SAExB8J,GAAa,aAGlBlH,EAAAA,EAAAA,KAACwB,EAAAA,EAAU,CACTC,KAAK,QACLH,QAAUI,KACRC,EAAAA,GAAAA,GAAgBD,GAChBE,UAAUC,UAAUC,UAAUmF,EAAW,IAAMC,EAAU,EACzD9J,UAEF4C,EAAAA,EAAAA,KAAC+B,EAAAA,EAAW,CAACC,GAAI,CAAEC,OAAQ,OAAQC,MAAO,eAIhDvG,MAAOmK,EAAO,GAAKmB,EAAW,KAAOC,EACtC,EAEHP,SAAS,EACTC,gBAAgB,EAChBtB,MAAO,2BAET,CACExJ,GAAI,SACJwK,WAAY,SACZC,QAAUC,IACR,MAAMpG,EAAM,GAAAxB,OAAM4H,EAAIpG,QAChBmH,EAAM,MACV,OAAQnH,GACN,IAAK,oBACH,OACEJ,EAAAA,EAAAA,KAACwH,EAAAA,EAAO,CACNlL,MAAO,CACL2F,OAAQ,OACRC,MAAO,OACP2D,MAAqB,SAAdK,GAAuBuB,EAAAA,EAAK,KAAOA,EAAAA,EAAK,QAOvD,IAAK,WACH,OACEzH,EAAAA,EAAAA,KAAC0H,EAAAA,EAAS,CACRpL,MAAO,CACL2F,OAAQ,OACRC,MAAO,OACP2D,MAAqB,SAAdK,GAAuBuB,EAAAA,EAAK,KAAOA,EAAAA,EAAK,QAOvD,IAAK,YACH,OACEzH,EAAAA,EAAAA,KAAC2H,EAAAA,EAAM,CACL3F,GAAI,CACFC,OAAQ,OACRC,MAAO,OACP0F,QAASC,EAAAA,EAAM,KACfC,OAAQ,QACR1K,SACH,MAIL,IAAK,gBACH,OACE4C,EAAAA,EAAAA,KAAC2H,EAAAA,EAAM,CACL3F,GAAI,CACFC,OAAQ,OACRC,MAAO,OACP0F,QAASH,EAAAA,EAAK,KACdK,OAAQ,QACR1K,SACH,MAIL,QACE,OAAOgD,EAEZ,EAzDW,GA2DZ,MAAO,CACLqG,MAAMzG,EAAAA,EAAAA,KAAA,QAAA5C,SAAOmK,IACb5L,MAAOyE,EACR,EAEHuG,SAAS,EACTC,gBAAgB,EAChBtB,MAAO,UAET,CACExJ,GAAI,WACJyK,QAASA,CAACC,EAAKuB,KACb,MAAM7K,EAAcwE,IAClBA,EAAMsG,kBACNrG,EAAAA,GAAAA,GAAgBD,GAChBqG,EAAW,CAACvB,GAAK,EAGnB,GAAO,OAAHA,QAAG,IAAHA,GAAAA,EAAKyB,aAAc,CACrB,MAAMf,EAAS,GAAAtI,OACb4H,EAAI0B,kBACAC,GAAAA,EAAkBC,OAAO,IAAIC,KAAK7B,EAAI0B,oBACtC,IAGN,MAAO,CACLzB,MACEzG,EAAAA,EAAAA,KAAChD,GAAAA,EAAe,CACdC,SAAUuJ,EAAIyB,aACd/K,WAAYA,EACZC,QAAS+J,IAIjB,CACE,MAAO,CAAET,KAAM,GACjB,EAEFE,SAAS,EACTC,gBAAgB,EAChBtB,MAAO,6BAET,CACExJ,GAAI,YACJyK,QAAUC,IACR,MAAMS,EAAWT,EAAIV,KAAI,GAAAlH,OAAM4H,EAAIV,MAAS,GACtCoB,EAAYV,EAAI8B,UAAS,GAAA1J,OAAM4H,EAAI8B,UAAUC,KAAK,OAAU,GAElE,MAAO,CACL9B,MACE3G,EAAAA,EAAAA,MAAA,QAAA1C,SAAA,CACG6J,GACDjH,EAAAA,EAAAA,KAAA,SACCkH,KAGLvL,MAAOsL,EAAW,KAAOC,EAC1B,EAEHP,SAAS,EACTC,gBAAgB,EAChBtB,MAAO,iBAET,CACExJ,GAAI,iBACJyK,QAAUC,IACR,MAAMgC,EAAgBhC,EAAIiC,WAAU,GAAA7J,OAAM4H,EAAIiC,YAAe,GACvDC,EAAgBlC,EAAImC,SAAQ,GAAA/J,OAAM4H,EAAImC,UAAa,GACnDzB,EAAYV,EAAIoC,QAAO,GAAAhK,OAAM4H,EAAIoC,SAAY,GAEnD,MAAO,CACLnC,MACE3G,EAAAA,EAAAA,MAAA,QAAA1C,SAAA,EACIoL,EAAgBA,EAAgB,IAAM,IAAE,GAAA5J,OACrC8J,EAAgB,IAAMA,EAAgB,IAAM,KACjD1I,EAAAA,EAAAA,KAAA,SACCkH,KAGLvL,OACG6M,EAAgBA,EAAgB,WAAa,KAC7CE,EAAgBA,EAAgB,SAAW,IAC5C,KACAxB,EACA,WACH,EAEHP,SAAS,EACTC,gBAAgB,EAChBtB,MAAO,gBAET,CACExJ,GAAI,aACJyK,QAAUC,IACR,MAAMqC,EAASrC,EAAIqC,OACnB,IAAI7B,EAAO,GACPlB,EAAO,GACPmB,EAAW,GACXC,EAAY,GAOhB,OANI2B,IACF7B,EAAI,KAAApI,QAAQuI,EAAAA,GAAAA,IAAQ0B,GAAO,UAAAjK,OAASiK,EAAO/M,IAC3CgK,EAAI,GAAAlH,QAAMwI,EAAAA,GAAAA,IAAQyB,GAAO,KACzB5B,EAAQ,GAAArI,OAAMiK,EAAOxB,UACrBH,EAAS,GAAAtI,OAAMiK,EAAOvB,QAEjB,CACLb,MACE3G,EAAAA,EAAAA,MAAA,QAAA1C,SAAA,EACE4C,EAAAA,EAAAA,KAAA,KAAA5C,SAAI0I,KACJ9F,EAAAA,EAAAA,KAAA,KACEoB,KAAM6F,EAAWD,OAAOpE,EACxBvB,OAAO,SACPC,QAASK,GAAAA,EAAgBvE,SAExB6J,KAEHjH,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,KACEoB,KAAM8F,EAAS,OAAAtI,OAAUsI,QAActE,EACvCvB,OAAO,SACPC,QAASK,GAAAA,EAAgBvE,SAExB8J,GAAa,YAIpBvL,MAAOmK,EAAO,GAAKmB,EAAW,KAAOC,EACtC,EAEHP,SAAS,EACTC,gBAAgB,EAChBtB,MAAO,mBAgBLwD,IAAkBC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAAkBtN,IAAA,IAAC,MAAEwN,GAAOxN,EAAA,MAAM,CACxDyN,gBAAiBD,EAAME,QAAQC,WAAWC,QAC3C,IAEKC,IAAkBP,EAAAA,EAAAA,IAAOQ,EAAAA,EAAPR,EAAkBS,IAAA,IAAC,MAAEP,GAAOO,EAAA,MAAM,CACxDC,SAAU,QACVhE,WAAY,MACZiE,cAAe,MACfC,WAAY,SACZ1I,aAAc,WACdC,SAAU,SACX,IAED,SAAS0I,GAAkB/N,GACzB,MAAM,iBACJgO,EAAgB,MAChBC,EAAK,QACLC,EAAO,YACPC,EAAW,SACXC,EAAQ,cACRC,GACErO,EAMJ,OACEmE,EAAAA,EAAAA,KAAC8I,GAAe,CAAA1L,UACd0C,EAAAA,EAAAA,MAACqK,EAAAA,EAAQ,CAAA/M,SAAA,EACP4C,EAAAA,EAAAA,KAACsJ,GAAe,CAACc,QAAQ,WAAUhN,UACjC4C,EAAAA,EAAAA,KAACqK,EAAAA,EAAQ,CACPC,KAAM,qCACNzE,MAAM,UACN0E,cAAeP,EAAc,GAAKA,EAAcC,EAChDO,QAASP,EAAW,GAAKD,IAAgBC,EACzCQ,SAAUZ,EACVa,WAAY,CACV,aAAc,0CAInBrE,GAAUsE,KAAKC,IACd5K,SAAAA,EAAAA,KAACsJ,GAAe,CAEduB,MAAOD,EAASjE,QAAU,QAAU,SACpCyD,QAASQ,EAAShE,eAAiB,OAAS,SAC5CkE,cAAef,IAAYa,EAAS9O,IAAKgO,EAAc1M,UAEvD0C,EAAAA,EAAAA,MAACiL,EAAAA,EAAc,CACbC,OAAQJ,EAAStE,YAAcyD,IAAYa,EAAStE,WACpD2E,cAAeL,EAAStE,WACxBvD,UAAWgH,IAAYa,EAAStE,WAAawD,EAAQ,MACrDxI,QACEsJ,EAAStE,YA/BpB4E,EAgCiCN,EAAStE,WAhCf5E,IAC1BwI,EAAcxI,EAAOwJ,EAAS,GAgChB,KACQ,EAEb9N,SAAA,CAEAwN,EAAStF,MACTsF,EAAStE,YAAcyD,IAAYa,EAAStE,YAC3CtG,EAAAA,EAAAA,KAACkF,EAAAA,EAAG,CAACiG,UAAU,OAAOnJ,GAAIoJ,EAAAA,EAAehO,SAC5B,SAAV0M,EAAmB,oBAAsB,qBAE1C,SAtBDc,EAAS9O,IArBrBoP,KA8CI,QAIT,CAOA,SAASG,GAAqBxP,GAC5B,MAAM,SAAE+D,EAAQ,eAAE0L,GAAmBzP,GAC9BoH,EAASC,GAAc3F,EAAAA,SAAuB,KAC9CgO,EAAmBC,GAAwBjO,EAAAA,SAAuB,IAClEkO,EAAoBC,GACzBnO,EAAAA,UAAwB,GACpBN,GAAW0O,EAAAA,EAAAA,MACXC,GAAWzI,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,MAEdhD,GAAqBC,EAAAA,EAAAA,OAErB,OAAEgD,EAAM,UAAEC,IAAcC,EAAAA,EAAAA,GAAYqI,EAAAA,GAAa,CACrDnI,UAAWA,KACTrD,EAAmB,CACjBO,SAAU,UACVC,QAAS,YAEXuC,EAAYO,kBAAkB,CAAC,UAAU,EAE3CC,QAAUC,IACRxD,EAAmB,CACjBO,SAAU,QACVC,QAASgD,aAAiBC,MAAQD,EAAMhD,QAAUkD,KAAKC,UAAUH,IACjE,IAUAiI,EAAqBA,KACzBJ,GAAsB,GACtBF,EAAqB,GACrBF,EAAe,CAAC,EAAE,EAEdS,EAAgBA,KACpBL,GAAsB,GACtBJ,EAAe,CAAE5E,YAAa6E,GAAoB,EAiCpD,OACEzL,EAAAA,EAAAA,MAACkM,EAAAA,EAAO,CACNhK,GAAI,CACFd,SAAU,SACV+K,GAAI,CAAEC,GAAI,GACVC,GAAI,CAAEC,GAAI,EAAGF,GAAI,MACbtM,EAAS1E,OAAS,GAAK,CACzB0M,QAAUqB,IACRoD,EAAAA,EAAAA,IACEpD,EAAME,QAAQmD,QAAQC,KACtBtD,EAAME,QAAQqD,OAAOC,oBAG3BrP,SAAA,CAEDwC,EAAS1E,OAAS,GACjB4E,EAAAA,EAAAA,MAAC4M,EAAAA,EAAU,CACT1K,GAAI,CAAE2K,KAAM,YACZ9G,MAAM,UACND,QAAQ,YACRuF,UAAU,MAAK/N,SAAA,CAEdwC,EAAS1E,OAAO,gBAGnB8E,EAAAA,EAAAA,KAAC0M,EAAAA,EAAU,CACT1K,GAAI,CACF2K,KAAM,WACNhD,WAAY,SACZ1I,aAAc,WACdC,SAAU,UAEZ0E,QAAQ,KACR9J,GAAG,aACHqP,UAAU,MAAK/N,SAChB,YAIH4C,EAAAA,EAAAA,KAAC4M,EAAAA,EAAS,CACRtH,MAAM,eACNjI,MAAOkO,GAAqB,GAC5Bd,SAxFsB/I,IACtBmL,OAAOC,SAASD,OAAOnL,EAAML,OAAOhE,UACtCmO,EAAqBqB,OAAOnL,EAAML,OAAOhE,QACzCqO,GAAsB,GACxB,EAqFIqB,QA1EgBrL,IACF,UAAdA,EAAMsL,MAGNzB,EACFQ,IAEAD,IACF,EAmEIrK,KAAK,WAEPzB,EAAAA,EAAAA,KAACiN,EAAAA,EAAO,CAACtR,MAAM,cAAayB,UACxBqO,GAAuBF,GACvBE,IAAuBF,GAOvBvL,EAAAA,EAAAA,KAAA,QAAA5C,UACE4C,EAAAA,EAAAA,KAACwB,EAAAA,EAAU,CAACF,QAASwK,EAAmB1O,UACtC4C,EAAAA,EAAAA,KAACkN,EAAAA,EAAiB,SARtBlN,EAAAA,EAAAA,KAAA,QAAA5C,UACE4C,EAAAA,EAAAA,KAACwB,EAAAA,EAAU,CAAC2L,UAAW5B,EAAmBjK,QAASyK,EAAc3O,UAC/D4C,EAAAA,EAAAA,KAACoN,EAAAA,EAAc,WAWvBtN,EAAAA,EAAAA,MAACoF,EAAAA,EAAG,CAAClD,GAAI,CAAEmD,EAAG,EAAGpF,QAAS,eAAgB3C,SAAA,CACnB,IAApBwC,EAAS1E,QACR4E,EAAAA,EAAAA,MAAAyB,EAAAA,SAAA,CAAAnE,SAAA,EACE4C,EAAAA,EAAAA,KAACiN,EAAAA,EAAO,CAACtR,MAAM,wBAAuByB,UACpC4C,EAAAA,EAAAA,KAAA,QAAA5C,UACE4C,EAAAA,EAAAA,KAACwB,EAAAA,EAAU,CAACF,QAxFG+L,KAC3BnK,EAAWtD,EAAS,GAAG,EAuF+BxC,UACxC4C,EAAAA,EAAAA,KAACsN,EAAAA,EAAU,WAIjBtN,EAAAA,EAAAA,KAACgD,EAAwB,CACvBC,QAASA,EACTC,WAAYA,QAIhBlD,EAAAA,EAAAA,KAACiN,EAAAA,EAAO,CAACtR,MAAM,SAAQyB,UACrB4C,EAAAA,EAAAA,KAAA,QAAA5C,UACE4C,EAAAA,EAAAA,KAACwB,EAAAA,EAAU,CAACF,QAlGFiM,KACpB3B,EAAS,WAAY,CACnB4B,SAAU,OACVC,MAAO,CAAEC,KAAMzQ,GACf0Q,SAAS,GACT,EA6F2CvQ,UACjC4C,EAAAA,EAAAA,KAAC4N,EAAAA,EAAO,WAKhB5N,EAAAA,EAAAA,KAACiN,EAAAA,EAAO,CAACtR,MAAM,OAAMyB,UACnB4C,EAAAA,EAAAA,KAAA,QAAA5C,UACE4C,EAAAA,EAAAA,KAACwB,EAAAA,EAAU,CAAC2L,SAA8B,IAApBvN,EAAS1E,OAAcoG,QAnGnCuM,KAClBjC,EAAS,UAADhN,OAAWgB,EAAS,IAAM,CAChC4N,SAAU,OACVC,MAAO,CAAEC,KAAMzQ,GACf0Q,SAAS,GACT,EA8FwEvQ,UAChE4C,EAAAA,EAAAA,KAAC8N,EAAAA,EAAQ,WAIf9N,EAAAA,EAAAA,KAACiN,EAAAA,EAAO,CAACtR,MAAM,SAAQyB,UACrB4C,EAAAA,EAAAA,KAAA,QAAA5C,UACE4C,EAAAA,EAAAA,KAACwB,EAAAA,EAAU,CACT2L,SAA8B,IAApBvN,EAAS1E,OACnBoG,QArGUyM,KACpBzK,EAAO,GAAD1E,OAAIgB,EAAS,IAAK,EAoGSxC,UAEvB4C,EAAAA,EAAAA,KAACgO,EAAAA,EAAU,cAKnBhO,EAAAA,EAAAA,KAACgG,GAAAA,EAAM,CAACC,QAAS1C,MAGvB,CAEe,SAAS0K,KACtB,MAAOnE,EAAOoE,GAAY3Q,EAAAA,SAAkC,QACrDwM,EAASoE,GAAc5Q,EAAAA,SAC5B,gBAEKqC,EAAUwO,GAAe7Q,EAAAA,SAAkC,KAC3D8Q,EAAMC,GAAW/Q,EAAAA,SAAuB,IACxCgR,EAAaC,GAAkBjR,EAAAA,SAAuB,KACtDkR,EAAanD,GAAkB/N,EAAAA,SAAoC,CAAC,GACrEmR,EAAoBnR,EAAAA,OAAa,MACjCN,GAAW0O,EAAAA,EAAAA,MACXC,GAAWzI,EAAAA,EAAAA,MACX9C,GAAqBC,EAAAA,EAAAA,OACpB,CAAEyH,IAAc4G,EAAAA,EAAAA,OAEjB,UACJpL,EAAS,WACTqL,EACAnI,MAAM,MAAEjJ,EAAK,MAAEqR,GAAU,CAAErR,MAAO,GAAIqR,MAAO,KAC3CC,EAAAA,EAAAA,GAAS,CACXC,SAAU,CAAC,SAAUV,EAAME,EAAaxE,EAASD,EAAO2E,GACxDO,QAASC,EAAAA,GACTC,kBAAkB,EAClBC,OAAO,EACPvL,QAAUC,IACRxD,EAAmB,CACjBO,SAAU,QACVC,QAASgD,aAAiBC,MAAQD,EAAMhD,QAAUkD,KAAKC,UAAUH,IACjE,IAGAuL,EAAO5R,GAAS,GAEtBD,EAAAA,WAAgB,KACd,GAAImR,EAAkBW,QAAS,CACXX,EAAkBW,QAC1BC,SAAS,CACjBC,IAAK,EACLC,KAAM,EACNC,SAAU,UAEd,IACC,CAACL,IAEJ7R,EAAAA,WAAgB,KACd,MAAMmS,EAAwB,GAC9B9P,EAASL,SAASoQ,IACIP,EAAKQ,MAAMpJ,GAAQA,EAAI1K,KAAO6T,KAEhDD,EAAYG,KAAKF,EACnB,IAEFvB,EAAYsB,EAAY,GACvB,CAACN,IAuEJ,OACEtP,EAAAA,EAAAA,MAACoF,EAAAA,EAAG,CAAClD,GAAI,CAAEE,MAAO,OAAQD,OAAQ,QAAS7E,SAAA,EACzC0C,EAAAA,EAAAA,MAACgQ,EAAAA,EAAK,CAAC9N,GAAI,CAAEE,MAAO,OAAQD,OAAQ,OAAQiH,gBAAiB,SAAU9L,SAAA,EACrE4C,EAAAA,EAAAA,KAACqL,GAAoB,CACnBzL,SAAUA,EACV0L,eAAiByE,IACfzE,EAAeyE,GACfzB,EAAQ,EAAE,KAGdtO,EAAAA,EAAAA,KAACgQ,EAAAA,EAAc,CACb/T,IAAKyS,EACL1M,GAAI,CAAEC,OAAQ,sBAAuB7E,UAErC0C,EAAAA,EAAAA,MAACmQ,EAAAA,EAAK,CACJjO,GAAI,CAAEkO,SAAU,KAChB,kBAAgB,aAChBzO,KAAK,QACL0O,cAAY,EAAA/S,SAAA,EAEZ4C,EAAAA,EAAAA,KAAC4J,GAAiB,CAChBI,YAAapK,EAAS1E,OACtB4O,MAAOA,EACPC,QAASA,EACTF,iBA9EkBnI,IAC5B,GAAIA,EAAML,OAAOmJ,QAAjB,CACE,MAAMkF,EAAcN,EAAKzE,KAAK5P,GAAaA,EAAEe,KAC7CsS,EAAYsB,EAEd,MACAtB,EAAY,GAAG,EAyELlE,cA9FckG,CACxB1O,EACAwJ,KAEA,MAAMmF,EAAQtG,IAAYmB,GAAsB,QAAVpB,EACvBC,IAAYmB,GAAsB,SAAVpB,GAErCoE,OAAStL,GACTuL,OAAWvL,KAEXsL,EAASmC,EAAQ,OAAS,OAC1BlC,EAAWjD,GACb,EAmFUjB,SAAUmF,EAAKlU,UAEjB8E,EAAAA,EAAAA,KAACsQ,EAAAA,EAAS,CAAAlT,SACPgS,EAAKzE,KAAI,CAACnE,EAAK+J,KACd,MAAMC,GAhCAlG,EAgC4B,GAAD1L,OAAI4H,EAAI1K,KAhCU,IAA5B8D,EAAS6Q,QAAQnG,IAAlCA,MAiCN,MAAMoG,EAAO,2BAAA9R,OAA8B2R,GAC3C,OACEzQ,EAAAA,EAAAA,MAACqK,EAAAA,EAAQ,CACPwG,OAAK,EACLC,cAAgBlP,IA5EhCkK,EAAS,UAADhN,OA4EqD4H,EA5ErC1K,IAAM,CAC5B0R,SAAU,OACVC,MAAO,CAAEC,KAAMzQ,GACf0Q,SAAS,GAyEuD,EAClDkD,KAAK,WACL,eAAcL,EACdM,UAAW,EAEXlR,SAAU4Q,EACVxO,GAAI,CAAE+O,OAAQ,WAAY3T,SAAA,EAE1B4C,EAAAA,EAAAA,KAACsJ,GAAe,CAACc,QAAQ,WAAUhN,UACjC4C,EAAAA,EAAAA,KAACqK,EAAAA,EAAQ,CACPvO,GAAE,GAAA8C,OAAK8R,GACP7K,MAAM,UACN2E,QAASgG,EACT9F,WAAY,CACV,kBAAmBgG,GAErBpP,QAAUI,GArFXsP,EAACtP,EAAkC4I,KACtD5I,EAAMC,kBACN,MAAMsP,EAAgBrR,EAAS6Q,QAAQnG,GACvC,IAAIoF,EAAiC,IAEd,IAAnBuB,EACFvB,EAAcA,EAAY9Q,OAAOgB,EAAU0K,GAChB,IAAlB2G,EACTvB,EAAcA,EAAY9Q,OAAOgB,EAASsR,MAAM,IACvCD,IAAkBrR,EAAS1E,OAAS,EAC7CwU,EAAcA,EAAY9Q,OAAOgB,EAASsR,MAAM,GAAI,IAC3CD,EAAgB,IACzBvB,EAAcA,EAAY9Q,OACxBgB,EAASsR,MAAM,EAAGD,GAClBrR,EAASsR,MAAMD,EAAgB,KAInC7C,EAAYsB,EAAY,EAmEgBsB,CAAatP,EAAM,GAAD9C,OAAK4H,EAAI1K,SAGlDuK,GAAUsE,KAAKwG,IACd,MAAMC,EAAWD,EAAK5K,QAAQC,EAAKuB,GACnC,OACE/H,EAAAA,EAAAA,KAACsJ,GAAe,CAEd3N,MAAOyV,EAASzV,MAChBkP,MAAOsG,EAAKxK,QAAU,QAAU,SAASvJ,SAExCgU,EAAS3K,MAJL0K,EAAKrV,GAKM,MAxBjB0K,EAAI1K,GA2BA,YAMrBkE,EAAAA,EAAAA,KAACqR,EAAAA,EAAe,CACdC,mBAAoB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,IAC5CnG,UAAU,MACVoG,MAAO1C,EACPN,YAAaA,EACbF,KAAMA,EACNmD,aA3FiBC,CAAC/P,EAAgBgQ,KACxCpD,EAAQoD,EAAQ,EA2FVC,oBAvFNjQ,IAEA8M,EAAeoD,SAASlQ,EAAML,OAAOhE,MAAO,KAC5CiR,EAAQ,EAAE,QAuFRtO,EAAAA,EAAAA,KAACgG,GAAAA,EAAM,CAACC,QAAS1C,GAAaqL,MAGpC,C,kCCpyBO,MAAMzG,EAAoB0J,KAAKC,eAAe,QAAS,CAC5DC,KAAM,UACNC,MAAO,UACPC,IAAK,UACLC,KAAM,UACNC,OAAQ,UACRC,OAAQ,UACRC,QAAQ,G,iBCLH,SAAS1Q,EAAgB3G,GAC9BA,EAAE2G,iBACJ,C,qCCDI2Q,EAAyBC,EAAQ,MAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,KAChDG,EAAcH,EAAQ,KACXC,EAAQ,GAAU,EAAIC,EAAepJ,SAAS,EAAc,EAAIqJ,EAAYC,KAAK,OAAQ,CACtGnW,EAAG,iJACF,MAAmB,EAAIkW,EAAYC,KAAK,OAAQ,CACjDnW,EAAG,4CACF,MAAO,a,qBCXN8V,EAAyBC,EAAQ,MAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,KAChDG,EAAcH,EAAQ,KACXC,EAAQ,GAAU,EAAIC,EAAepJ,UAAuB,EAAIqJ,EAAYC,KAAK,OAAQ,CACtGnW,EAAG,8HACD,c,qBCTA8V,EAAyBC,EAAQ,MAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,KAChDG,EAAcH,EAAQ,KACXC,EAAQ,GAAU,EAAIC,EAAepJ,UAAuB,EAAIqJ,EAAYC,KAAK,OAAQ,CACtGnW,EAAG,6EACD,S,qBCTA8V,EAAyBC,EAAQ,MAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,KAChDG,EAAcH,EAAQ,KACXC,EAAQ,GAAU,EAAIC,EAAepJ,UAAuB,EAAIqJ,EAAYC,KAAK,OAAQ,CACtGnW,EAAG,uIACD,O,mJCRJ,MAAMoW,EAAY,CAAC,YAAa,MAoB1BC,GAAkB9J,EAAAA,EAAAA,IAAO2D,EAAAA,EAAY,CACzCpC,KAAM,iBACNwI,KAAM,OACNC,kBAAmBA,CAAClX,EAAOmX,IAAWA,EAAOC,MAHvBlK,CAIrB,CACDqB,QAAS,YACTuC,KAAM,aAoDR,EAlDiCpP,EAAAA,YAAiB,SAAqB2V,EAASjX,GAC9E,MAAMJ,GAAQsX,EAAAA,EAAAA,GAAc,CAC1BtX,MAAOqX,EACP5I,KAAM,oBAEF,UACF8I,EACAtX,GAAIuX,GACFxX,EACJyX,GAAQC,EAAAA,EAAAA,GAA8B1X,EAAO+W,GACzCY,EAAa3X,EACb4X,EA5BkBD,KACxB,MAAM,QACJC,GACED,EAIJ,OAAOE,EAAAA,EAAAA,GAHO,CACZT,KAAM,CAAC,SAEoBU,EAAAA,EAA4BF,EAAQ,EAqBjDG,CAAkBJ,IAC5B,QACJ5X,EAAUyX,GACR9V,EAAAA,WAAiBsW,EAAAA,GACrB,OAAoB7T,EAAAA,EAAAA,KAAK6S,GAAiBlY,EAAAA,EAAAA,GAAS,CACjDwQ,UAAW,KACXiI,WAAWU,EAAAA,EAAAA,GAAKL,EAAQR,KAAMG,GAC9BI,WAAYA,EACZvX,IAAKA,EACL2J,QAAS,KACT9J,GAAc,MAAVuX,EAAiBA,EAASzX,GAC7B0X,GACL,G","sources":["icons/cat.svg","icons/truck.svg","components/LocationForGrid.tsx","trucks/setWillBeAvailable.tsx","trucks/trucks.tsx","utils/dateTimeFormatters.ts","utils/stopPropagation.ts","../node_modules/@mui/icons-material/AccessTime.js","../node_modules/@mui/icons-material/ContentCopy.js","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/icons-material/Edit.js","../node_modules/@mui/material/DialogTitle/DialogTitle.js"],"sourcesContent":["function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgCat(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    \"data-name\": \"Layer 1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 128 128\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 64,\n    cy: 75,\n    r: 45,\n    fill: \"none\",\n    strokeWidth: 10,\n    style: {\n      stroke: \"currentcolor\"\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 96.94 40.17 C 96.94 23.36 82.19 9.73 64 9.73 C 45.81 9.73 31.06 23.36 31.06 40.17\",\n    style: {\n      paintOrder: \"fill\",\n      strokeWidth: 6,\n      stroke: \"currentcolor\",\n      fill: \"rgba(255, 255, 255, 0)\"\n    }\n  }), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"39.98 19.5 37.64 5.17 50.61 14.17\",\n    style: {\n      stroke: \"currentcolor\",\n      strokeWidth: 4,\n      fill: \"rgba(0, 0, 0, 0)\"\n    }\n  }), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"87.05 19.5 89.39 5.17 76.42 14.17\",\n    style: {\n      stroke: \"currentcolor\",\n      strokeWidth: 4,\n      fill: \"rgba(0, 0, 0, 0)\"\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 29.27 108.3 C 28.05 113.07 26.83 117.84 25.62 122.61\",\n    style: {\n      stroke: \"currentcolor\",\n      paintOrder: \"stroke\",\n      strokeLinecap: \"round\",\n      strokeWidth: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 25.72 122.61 C 38.31 122.83 50.91 123.05 63.5 123.28\",\n    style: {\n      stroke: \"currentcolor\",\n      strokeWidth: 4,\n      strokeLinecap: \"round\"\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 98.96 108.3 C 100.18 113.07 101.4 117.84 102.61 122.61\",\n    style: {\n      strokeLinecap: \"round\",\n      strokeWidth: 4,\n      stroke: \"currentcolor\",\n      paintOrder: \"stroke\"\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 102.5 122.61 C 88.91 122.85 76.32 123.07 64.72 123.28\",\n    style: {\n      strokeLinecap: \"round\",\n      stroke: \"currentcolor\",\n      strokeWidth: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"63 39.5 63 79.5 79.91 93.83\",\n    style: {\n      stroke: \"currentcolor\",\n      strokeWidth: 6,\n      paintOrder: \"fill\",\n      strokeLinecap: \"round\",\n      fill: \"rgba(255, 255, 255, 0)\"\n    }\n  }));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgCat);\nexport default __webpack_public_path__ + \"static/media/cat.b0cbea142ef6c467bbabb420d9425865.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgTruck(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    focusable: \"false\",\n    \"aria-hidden\": \"true\",\n    viewBox: \"0 0 24 24\",\n    \"data-testid\": \"LocalShippingIcon\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m20 8h-3v-4h-14c-1.1 0-2 .9-2 2v11h2c0 1.66 1.34 3 3 3s3-1.34 3-3h6c0 1.66 1.34 3 3 3s3-1.34 3-3h2v-5l-3-4zm-14 10.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm13.5-9 1.96 2.5h-4.46v-2.5h2.5zm-1.5 9c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm-14.7-9 1.53 0 0 1.66-3.03 0 1.51-1.66zm2.46-2.74 1.66-1.84 0 4.57.94 0 0 1.66-.94 0 0 1.93-1.66 0 0-6.33zm6.58 6.48c-.37-.06-.72-.19-1.04-.37-.32-.19-.61-.42-.86-.7-.28-.32-.49-.67-.61-1.05-.12-.39-.18-.87-.18-1.44l0-4.51 1.66 0 0 4.36c0 .31.01.57.05.78.03.21.08.39.16.55.08.15.19.28.32.38.14.1.31.19.52.27l0 1.74zm.91-1.74c.21-.07.37-.16.51-.26.14-.1.25-.23.33-.39.08-.14.14-.31.17-.5.03-.2.05-.47.05-.83l0-4.36 1.65 0 0 4.51c0 .58-.06 1.06-.18 1.44-.12.38-.33.73-.61 1.05-.25.29-.54.52-.87.7-.33.18-.68.3-1.04.37l0-1.74z\",\n    style: {\n      fillRule: \"evenodd\",\n      fill: \"currentcolor\"\n    }\n  }));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgTruck);\nexport default __webpack_public_path__ + \"static/media/truck.cd6a1057a38896c7dca3f9ca88d7879e.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\r\n\r\nimport { Wrapper, Status } from '@googlemaps/react-wrapper';\r\n\r\nimport { debounce } from '@mui/material/utils';\r\n\r\nimport { useSnackbar, useLoader } from '../hooks';\r\nimport { GeoPoint } from '../utils/dataTypes';\r\nimport { toStringLocation } from '../utils/toStringLocation';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport { stopPropagation } from '../utils/stopPropagation';\r\nimport ContentCopy from '@mui/icons-material/ContentCopy';\r\nimport { selectLocation } from '../utils/selectLocation';\r\nimport { getMapSettings } from '../utils/getMapSettings';\r\n\r\nexport default function LocationForGrid({\r\n  location,\r\n  onRefClick,\r\n  addInfo,\r\n  children,\r\n}: {\r\n  readonly location: GeoPoint;\r\n  onRefClick?: (event: React.SyntheticEvent) => void;\r\n  addInfo?: string;\r\n  children?: React.ReactNode;\r\n}) {\r\n  const [value, setValue] = React.useState<google.maps.GeocoderResult | null>(\r\n    null,\r\n  );\r\n  const [items, setItems] = React.useState<google.maps.GeocoderResult[]>([]);\r\n  const [geocoder, setGeocoder] = React.useState<google.maps.Geocoder | null>(\r\n    null,\r\n  );\r\n\r\n  const setSearch = React.useMemo(() => {\r\n    return debounce((geocodeRequest: google.maps.GeocoderRequest): void => {\r\n      (geocoder?.geocode(geocodeRequest) || Promise.reject())\r\n        .then((result) => {\r\n          if (result.results.length < 1 && geocodeRequest.location) {\r\n            const locationFromRequest = new google.maps.LatLng(\r\n              geocodeRequest.location,\r\n            );\r\n            const res: google.maps.GeocoderResult = {\r\n              address_components: [],\r\n              formatted_address: `[${locationFromRequest.lat()}, ${locationFromRequest.lng()}]`,\r\n              geometry: {\r\n                location: locationFromRequest,\r\n                location_type: google.maps.GeocoderLocationType.APPROXIMATE,\r\n                viewport: new google.maps.LatLngBounds(),\r\n              },\r\n              place_id: `[${locationFromRequest.lat()}, ${locationFromRequest.lng()}]`,\r\n              types: [],\r\n            };\r\n            setItems([res]);\r\n          } else {\r\n            result.results.forEach(\r\n              (item) =>\r\n                (item.formatted_address = toStringLocation(\r\n                  item.address_components,\r\n                )),\r\n            );\r\n            setItems(result.results);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          setItems([]);\r\n        });\r\n    }, 400);\r\n  }, [geocoder]);\r\n\r\n  React.useEffect(() => {\r\n    const selected = location && selectLocation(items);\r\n    if (location && selected && selected?.place_id !== value?.place_id) {\r\n      setValue(selected);\r\n    } else if (location) {\r\n      setSearch({\r\n        location: {\r\n          lat: location[0],\r\n          lng: location[1],\r\n        },\r\n      });\r\n    } else if (!location) {\r\n      setItems([]);\r\n      setValue(null);\r\n    }\r\n  }, [geocoder, location, items]);\r\n\r\n  const handleApiLoad = (status: Status): React.ReactElement => {\r\n    const setSnackbarMessage = useSnackbar();\r\n    const [, setLoaderVisibility] = useLoader();\r\n    React.useLayoutEffect(() => {\r\n      if (status === Status.LOADING) {\r\n        setLoaderVisibility(true);\r\n      }\r\n      if (status === Status.FAILURE) {\r\n        setSnackbarMessage({\r\n          severity: 'error',\r\n          message: 'Error loading maps!',\r\n        });\r\n      }\r\n      if (status === Status.SUCCESS) {\r\n        setGeocoder(new window.google.maps.Geocoder());\r\n      }\r\n      return () => {\r\n        if (status === Status.LOADING) {\r\n          setLoaderVisibility(false);\r\n        }\r\n      };\r\n    }, [status]);\r\n    return null as unknown as React.ReactElement;\r\n  };\r\n\r\n  return (\r\n    <span style={{ display: 'flex' }}>\r\n      <Wrapper {...getMapSettings()} render={handleApiLoad} />\r\n      <span\r\n        style={{\r\n          textOverflow: 'ellipsis',\r\n          overflow: 'hidden',\r\n          textAlign: 'left',\r\n        }}\r\n        title={`${value ? value.formatted_address : ''}` + '\\n' + addInfo}\r\n      >\r\n        {onRefClick ? (\r\n          <a href={'#'} target=\"_blank\" onClick={onRefClick}>\r\n            {value ? value.formatted_address : ''}\r\n          </a>\r\n        ) : value ? (\r\n          value.formatted_address\r\n        ) : (\r\n          ''\r\n        )}\r\n        {!addInfo ? null : (\r\n          <>\r\n            <br />\r\n            {addInfo}\r\n          </>\r\n        )}\r\n        {children}\r\n      </span>\r\n      {!value ? null : (\r\n        <IconButton\r\n          size=\"small\"\r\n          onClick={(event) => {\r\n            stopPropagation(event);\r\n            navigator.clipboard.writeText(value.formatted_address);\r\n          }}\r\n        >\r\n          <ContentCopy sx={{ height: '16px', width: '16px' }} />\r\n        </IconButton>\r\n      )}\r\n    </span>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\n\r\nimport { Loader, SearchLocationField, DateTimeField } from '../components';\r\n\r\nimport { TruckUpdate } from '../api';\r\nimport { useSnackbar } from '../hooks';\r\nimport { UpdateTruck, TruckStatus } from '../utils/dataTypes';\r\nimport { TransitionProps } from '@mui/material/transitions';\r\nimport Slide from '@mui/material/Slide';\r\n\r\nconst validationSchema = yup.object({\r\n  availabilityLocation: yup\r\n    .tuple([\r\n      yup\r\n        .number()\r\n        .typeError('Latitude is required')\r\n        .min(-90, 'Latitude must be grater than or equal: -90')\r\n        .max(90, 'Latitude must be less than or equal: 90')\r\n        .required('Location should be in format \"latitude, longitude\"'),\r\n      yup\r\n        .number()\r\n        .typeError('Longitude is required')\r\n        .min(-180, 'Longitude must be grater than or equal: -180')\r\n        .max(180, 'Longitude must be less than or equal: 180')\r\n        .required('Location should be in format \"latitude, longitude\"'),\r\n    ])\r\n    .required('Will be available location is required'),\r\n  availabilityAt: yup\r\n    .date()\r\n    .typeError('Enter correct date')\r\n    .required('Will be available date is required'),\r\n});\r\n\r\nconst initialValues = {\r\n  id: '',\r\n  status: 'Will be available' as TruckStatus,\r\n  availabilityLocation: null,\r\n  availabilityAt: undefined,\r\n};\r\n\r\nconst Transition = React.forwardRef(function Transition(\r\n  props: TransitionProps & {\r\n    children: React.ReactElement<any, any>;\r\n  },\r\n  ref: React.Ref<unknown>,\r\n) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function SetWillBeAvailableDialog({\r\n  truckId,\r\n  setTruckId,\r\n}: {\r\n  truckId: string;\r\n  setTruckId: React.Dispatch<React.SetStateAction<string>>;\r\n}) {\r\n  const navigate = useNavigate();\r\n  const queryClient = useQueryClient();\r\n  const setSnackbarMessage = useSnackbar();\r\n\r\n  const { mutate, isLoading } = useMutation(TruckUpdate, {\r\n    onSuccess: () => {\r\n      setSnackbarMessage({\r\n        severity: 'success',\r\n        message: 'Will be available set',\r\n      });\r\n      setTruckId('');\r\n      queryClient.invalidateQueries(['trucks']);\r\n    },\r\n    onError: (error: Error) => {\r\n      setSnackbarMessage({\r\n        severity: 'error',\r\n        message: error instanceof Error ? error.message : JSON.stringify(error),\r\n      });\r\n    },\r\n  });\r\n\r\n  const formik = useFormik<UpdateTruck>({\r\n    initialValues: { ...initialValues, id: truckId },\r\n    enableReinitialize: true,\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      mutate(values);\r\n    },\r\n  });\r\n\r\n  const handleClose = () => {\r\n    setTruckId('');\r\n  };\r\n  const handleDialogClose = () => {\r\n    setTruckId('');\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={!!truckId}\r\n      TransitionComponent={Transition}\r\n      keepMounted\r\n      onClose={handleDialogClose}\r\n      aria-describedby=\"alert-dialog-set-will-be-available\"\r\n      PaperProps={{ sx: { width: '600px' } }}\r\n    >\r\n      <DialogTitle>\r\n        <span>Set \"Will ba available\"</span>\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <form onSubmit={formik.handleSubmit} onReset={formik.handleReset}>\r\n          <Box sx={{ display: 'grid' }}>\r\n            <Box key=\"controls\" sx={{ display: 'inline-flex' }}>\r\n              <Box key=\"left\" sx={{ p: 1, width: '50%' }}>\r\n                <SearchLocationField\r\n                  fieldName=\"availabilityLocation\"\r\n                  label=\"Will be available at location\"\r\n                  formik={formik}\r\n                />\r\n              </Box>\r\n              <Box key=\"right\" sx={{ p: 1, width: '50%' }}>\r\n                <DateTimeField\r\n                  fieldName=\"availabilityAt\"\r\n                  label=\"Will be available at date\"\r\n                  disablePast\r\n                  formik={formik}\r\n                />\r\n              </Box>\r\n            </Box>\r\n            <Box key=\"buttons\" sx={{ display: 'inline-flex' }}>\r\n              <Box key=\"left\" sx={{ p: 1, paddingTop: 0, width: '50%' }}>\r\n                <Button\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  size=\"small\"\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                >\r\n                  Set\r\n                </Button>\r\n              </Box>\r\n              <Box key=\"right\" sx={{ p: 1, paddingTop: 0, width: '50%' }}>\r\n                <Button\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  size=\"small\"\r\n                  color=\"primary\"\r\n                  type=\"button\"\r\n                  onClick={handleClose}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n        </form>\r\n        <Loader visible={isLoading} />\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\r\n\r\nimport { alpha, styled } from '@mui/material/styles';\r\nimport TextField from '@mui/material/TextField';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport Box from '@mui/material/Box';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableSortLabel from '@mui/material/TableSortLabel';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport FilterListIcon from '@mui/icons-material/FilterList';\r\nimport FilterListOffIcon from '@mui/icons-material/FilterListOff';\r\nimport ContentCopy from '@mui/icons-material/ContentCopy';\r\nimport AccessTime from '@mui/icons-material/AccessTime';\r\nimport { visuallyHidden } from '@mui/utils';\r\nimport { green, grey, orange } from '@mui/material/colors';\r\n\r\nimport SetWillBeAvailableDialog from './setWillBeAvailable';\r\nimport { ReactComponent as CatIcon } from '../icons/cat.svg';\r\nimport { ReactComponent as TruckIcon } from '../icons/truck.svg';\r\n\r\nimport Loader from '../components/Loader';\r\nimport LocationForGrid from '../components/LocationForGrid';\r\nimport { TrucksQuery, TruckDelete } from '../api';\r\nimport { useMap, useSnackbar } from '../hooks';\r\nimport { Order, Truck } from '../utils/dataTypes';\r\nimport { getPath, getType } from '../utils/queryHelpers';\r\nimport { stopPropagation } from '../utils/stopPropagation';\r\nimport { dateTimeFormatter } from '../utils/dateTimeFormatters';\r\n\r\ninterface HeadCell {\r\n  id: string;\r\n  disablePadding: boolean;\r\n  orderField?: keyof Truck;\r\n  getData: (\r\n    row: Truck,\r\n    setMapData: any,\r\n  ) => { data: JSX.Element | string; title?: string };\r\n  label: string;\r\n  numeric: boolean;\r\n}\r\nconst themeMode = localStorage.getItem('theme') === 'dark' ? 'dark' : 'light';\r\nconst headCells: readonly HeadCell[] = [\r\n  {\r\n    id: 'truckNumber',\r\n    orderField: 'truckNumber',\r\n    getData: (row) => ({ data: `${row.truckNumber}` }),\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Truck Number',\r\n  },\r\n  {\r\n    id: 'mainContactInfo',\r\n    getData: (row) => {\r\n      const person = row.coordinator || row.owner;\r\n      let path = '';\r\n      let type = '';\r\n      let firstRow = '';\r\n      let secondRow = '';\r\n      if (person) {\r\n        path = `./${getPath(person)}/view/${person.id}`;\r\n        type = `${getType(person)} `;\r\n        firstRow = `${person.fullName}`;\r\n        secondRow = `${person?.phone}`;\r\n      }\r\n      return {\r\n        data: (\r\n          <span style={{ display: 'flex' }}>\r\n            <span\r\n              style={{\r\n                textOverflow: 'ellipsis',\r\n                overflow: 'hidden',\r\n                textAlign: 'left',\r\n              }}\r\n            >\r\n              <b>{type}</b>\r\n              <a href={path} target=\"_blank\" onClick={stopPropagation}>\r\n                {firstRow}\r\n              </a>\r\n              <br />\r\n              <a\r\n                href={secondRow ? `tel:${secondRow}` : undefined}\r\n                target=\"_blank\"\r\n                onClick={stopPropagation}\r\n              >\r\n                {secondRow || ' '}\r\n              </a>\r\n            </span>\r\n            <IconButton\r\n              size=\"small\"\r\n              onClick={(event) => {\r\n                stopPropagation(event);\r\n                navigator.clipboard.writeText(firstRow + ' ' + secondRow);\r\n              }}\r\n            >\r\n              <ContentCopy sx={{ height: '16px', width: '16px' }} />\r\n            </IconButton>\r\n          </span>\r\n        ),\r\n        title: type + '' + firstRow + '\\n' + secondRow,\r\n      };\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Main Contact info',\r\n  },\r\n  {\r\n    id: 'status',\r\n    orderField: 'status',\r\n    getData: (row) => {\r\n      const status = `${row.status}`;\r\n      const val = (() => {\r\n        switch (status) {\r\n          case 'Will be available':\r\n            return (\r\n              <CatIcon\r\n                style={{\r\n                  height: '24px',\r\n                  width: '24px',\r\n                  color: themeMode === 'dark' ? grey[100] : grey[900],\r\n                }}\r\n              />\r\n              /*<AccessTime\r\n                sx={{ height: '24px', width: '24px', color: grey[900] }}\r\n              />*/\r\n            );\r\n          case 'On route':\r\n            return (\r\n              <TruckIcon\r\n                style={{\r\n                  height: '24px',\r\n                  width: '24px',\r\n                  color: themeMode === 'dark' ? grey[300] : grey[700],\r\n                }}\r\n              />\r\n              /*<LocalShipping\r\n                sx={{ height: '24px', width: '24px', color: orange[500] }}\r\n              />*/\r\n            );\r\n          case 'Available':\r\n            return (\r\n              <Avatar\r\n                sx={{\r\n                  height: '24px',\r\n                  width: '24px',\r\n                  bgcolor: green[500],\r\n                  margin: 'auto',\r\n                }}\r\n              >\r\n                A\r\n              </Avatar>\r\n            );\r\n          case 'Not Available':\r\n            return (\r\n              <Avatar\r\n                sx={{\r\n                  height: '24px',\r\n                  width: '24px',\r\n                  bgcolor: grey[500],\r\n                  margin: 'auto',\r\n                }}\r\n              >\r\n                N\r\n              </Avatar>\r\n            );\r\n          default:\r\n            return status;\r\n        }\r\n      })();\r\n\r\n      return {\r\n        data: <span>{val}</span>,\r\n        title: status,\r\n      };\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Status',\r\n  },\r\n  {\r\n    id: 'location',\r\n    getData: (row, setMapData) => {\r\n      const onRefClick = (event: React.SyntheticEvent) => {\r\n        event.preventDefault();\r\n        stopPropagation(event);\r\n        setMapData([row]);\r\n      };\r\n\r\n      if (row?.lastLocation) {\r\n        const secondRow = `${\r\n          row.locationUpdatedAt\r\n            ? dateTimeFormatter.format(new Date(row.locationUpdatedAt))\r\n            : ''\r\n        }`;\r\n\r\n        return {\r\n          data: (\r\n            <LocationForGrid\r\n              location={row.lastLocation}\r\n              onRefClick={onRefClick}\r\n              addInfo={secondRow}\r\n            />\r\n          ),\r\n        };\r\n      } else {\r\n        return { data: '' };\r\n      }\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Last known location',\r\n  },\r\n  {\r\n    id: 'truckInfo',\r\n    getData: (row) => {\r\n      const firstRow = row.type ? `${row.type}` : '';\r\n      const secondRow = row.equipment ? `${row.equipment.join(', ')}` : '';\r\n\r\n      return {\r\n        data: (\r\n          <span>\r\n            {firstRow}\r\n            <br />\r\n            {secondRow}\r\n          </span>\r\n        ),\r\n        title: firstRow + '\\n' + secondRow,\r\n      };\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Truck info',\r\n  },\r\n  {\r\n    id: 'dimsAndPayload',\r\n    getData: (row) => {\r\n      const firstRowPart1 = row.insideDims ? `${row.insideDims}` : '';\r\n      const firstRowPart2 = row.doorDims ? `${row.doorDims}` : '';\r\n      const secondRow = row.payload ? `${row.payload}` : '';\r\n\r\n      return {\r\n        data: (\r\n          <span>\r\n            {(firstRowPart1 ? firstRowPart1 + ' ' : '') +\r\n              `${firstRowPart2 ? '(' + firstRowPart2 + ')' : ''}`}\r\n            <br />\r\n            {secondRow}\r\n          </span>\r\n        ),\r\n        title:\r\n          (firstRowPart1 ? firstRowPart1 + ' Inside ' : '') +\r\n          (firstRowPart2 ? firstRowPart2 + ' Door ' : '') +\r\n          '\\n' +\r\n          secondRow +\r\n          ' Payload',\r\n      };\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'DIMS/Payload',\r\n  },\r\n  {\r\n    id: 'driverInfo',\r\n    getData: (row) => {\r\n      const driver = row.driver;\r\n      let path = '';\r\n      let type = '';\r\n      let firstRow = '';\r\n      let secondRow = '';\r\n      if (driver) {\r\n        path = `./${getPath(driver)}/view/${driver.id}`;\r\n        type = `${getType(driver)} `;\r\n        firstRow = `${driver.fullName}`;\r\n        secondRow = `${driver.phone}`;\r\n      }\r\n      return {\r\n        data: (\r\n          <span>\r\n            <b>{type}</b>\r\n            <a\r\n              href={firstRow ? path : undefined}\r\n              target=\"_blank\"\r\n              onClick={stopPropagation}\r\n            >\r\n              {firstRow}\r\n            </a>\r\n            <br />\r\n            <a\r\n              href={secondRow ? `tel:${secondRow}` : undefined}\r\n              target=\"_blank\"\r\n              onClick={stopPropagation}\r\n            >\r\n              {secondRow || ' '}\r\n            </a>\r\n          </span>\r\n        ),\r\n        title: type + '' + firstRow + '\\n' + secondRow,\r\n      };\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Driver info',\r\n  },\r\n];\r\n\r\ninterface EnhancedTableProps {\r\n  numSelected: number;\r\n  onRequestSort: (\r\n    event: React.MouseEvent<unknown>,\r\n    property: keyof Truck,\r\n  ) => void;\r\n  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n  order: Order | undefined;\r\n  orderBy: string | undefined;\r\n  rowCount: number;\r\n}\r\n\r\nconst StyledTableHead = styled(TableHead)(({ theme }) => ({\r\n  backgroundColor: theme.palette.background.default,\r\n}));\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n  maxWidth: '100px',\r\n  paddingTop: '6px',\r\n  paddingBottom: '6px',\r\n  whiteSpace: 'nowrap',\r\n  textOverflow: 'ellipsis',\r\n  overflow: 'hidden',\r\n}));\r\n\r\nfunction EnhancedTableHead(props: EnhancedTableProps) {\r\n  const {\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n  const createSortHandler =\r\n    (property: keyof Truck) => (event: React.MouseEvent<unknown>) => {\r\n      onRequestSort(event, property);\r\n    };\r\n\r\n  return (\r\n    <StyledTableHead>\r\n      <TableRow>\r\n        <StyledTableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            name={'enhanced-table-checkbox-select-all'}\r\n            color=\"primary\"\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{\r\n              'aria-label': 'enhanced-table-checkbox-select-all',\r\n            }}\r\n          />\r\n        </StyledTableCell>\r\n        {headCells.map((headCell) => (\r\n          <StyledTableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'center'}\r\n            padding={headCell.disablePadding ? 'none' : 'normal'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={headCell.orderField && orderBy === headCell.orderField}\r\n              hideSortIcon={!headCell.orderField}\r\n              direction={orderBy === headCell.orderField ? order : 'asc'}\r\n              onClick={\r\n                headCell.orderField\r\n                  ? createSortHandler(headCell.orderField)\r\n                  : () => {\r\n                      return;\r\n                    }\r\n              }\r\n            >\r\n              {headCell.label}\r\n              {headCell.orderField && orderBy === headCell.orderField ? (\r\n                <Box component=\"span\" sx={visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </Box>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </StyledTableCell>\r\n        ))}\r\n      </TableRow>\r\n    </StyledTableHead>\r\n  );\r\n}\r\n\r\ninterface EnhancedTableToolbarProps {\r\n  selected: readonly string[];\r\n  setQueryParams: React.Dispatch<React.SetStateAction<Record<string, number>>>;\r\n}\r\n\r\nfunction EnhancedTableToolbar(props: EnhancedTableToolbarProps) {\r\n  const { selected, setQueryParams } = props;\r\n  const [truckId, setTruckId] = React.useState<string>('');\r\n  const [truckNumberSearch, setTruckNumberSearch] = React.useState<number>(0);\r\n  const [truckNumberChanged, setTruckNumberChanged] =\r\n    React.useState<boolean>(false);\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const queryClient = useQueryClient();\r\n\r\n  const setSnackbarMessage = useSnackbar();\r\n\r\n  const { mutate, isLoading } = useMutation(TruckDelete, {\r\n    onSuccess: () => {\r\n      setSnackbarMessage({\r\n        severity: 'success',\r\n        message: 'Deleted',\r\n      });\r\n      queryClient.invalidateQueries(['trucks']);\r\n    },\r\n    onError: (error: Error) => {\r\n      setSnackbarMessage({\r\n        severity: 'error',\r\n        message: error instanceof Error ? error.message : JSON.stringify(error),\r\n      });\r\n    },\r\n  });\r\n\r\n  const truckNumberHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (Number.isFinite(Number(event.target.value))) {\r\n      setTruckNumberSearch(Number(event.target.value));\r\n      setTruckNumberChanged(true);\r\n    }\r\n  };\r\n  const filterClearHandler = () => {\r\n    setTruckNumberChanged(false);\r\n    setTruckNumberSearch(0);\r\n    setQueryParams({});\r\n  };\r\n  const filterHandler = () => {\r\n    setTruckNumberChanged(false);\r\n    setQueryParams({ truckNumber: truckNumberSearch });\r\n  };\r\n  const keyUpHandler = (event: React.KeyboardEvent) => {\r\n    if (event.key !== 'Enter') {\r\n      return;\r\n    }\r\n    if (truckNumberSearch) {\r\n      filterHandler();\r\n    } else {\r\n      filterClearHandler();\r\n    }\r\n  };\r\n  const openWBADialogHandler = () => {\r\n    setTruckId(selected[0]);\r\n  };\r\n  const createHandler = () => {\r\n    navigate('./create', {\r\n      relative: 'path',\r\n      state: { from: location },\r\n      replace: false,\r\n    });\r\n  };\r\n  const editHandler = () => {\r\n    navigate(`./edit/${selected[0]}`, {\r\n      relative: 'path',\r\n      state: { from: location },\r\n      replace: false,\r\n    });\r\n  };\r\n  const deleteHandler = () => {\r\n    mutate(`${selected[0]}`);\r\n  };\r\n\r\n  return (\r\n    <Toolbar\r\n      sx={{\r\n        overflow: 'hidden',\r\n        pl: { sm: 2 },\r\n        pr: { xs: 1, sm: 1 },\r\n        ...(selected.length > 0 && {\r\n          bgcolor: (theme) =>\r\n            alpha(\r\n              theme.palette.primary.main,\r\n              theme.palette.action.activatedOpacity,\r\n            ),\r\n        }),\r\n      }}\r\n    >\r\n      {selected.length > 0 ? (\r\n        <Typography\r\n          sx={{ flex: '1 1 100%' }}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {selected.length} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          sx={{\r\n            flex: '1 1 100%',\r\n            whiteSpace: 'nowrap',\r\n            textOverflow: 'ellipsis',\r\n            overflow: 'hidden',\r\n          }}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          Trucks\r\n        </Typography>\r\n      )}\r\n      <TextField\r\n        label=\"Truck Number\"\r\n        value={truckNumberSearch || ''}\r\n        onChange={truckNumberHandler}\r\n        onKeyUp={keyUpHandler}\r\n        size=\"small\"\r\n      />\r\n      <Tooltip title=\"Filter list\">\r\n        {(truckNumberChanged || !truckNumberSearch) &&\r\n        !(truckNumberChanged && !truckNumberSearch) ? (\r\n          <span>\r\n            <IconButton disabled={!truckNumberSearch} onClick={filterHandler}>\r\n              <FilterListIcon />\r\n            </IconButton>\r\n          </span>\r\n        ) : (\r\n          <span>\r\n            <IconButton onClick={filterClearHandler}>\r\n              <FilterListOffIcon />\r\n            </IconButton>\r\n          </span>\r\n        )}\r\n      </Tooltip>\r\n      <Box sx={{ p: 1, display: 'inline-flex' }}>\r\n        {selected.length === 1 ? (\r\n          <>\r\n            <Tooltip title=\"Set Will be available\">\r\n              <span>\r\n                <IconButton onClick={openWBADialogHandler}>\r\n                  <AccessTime />\r\n                </IconButton>\r\n              </span>\r\n            </Tooltip>\r\n            <SetWillBeAvailableDialog\r\n              truckId={truckId}\r\n              setTruckId={setTruckId}\r\n            />\r\n          </>\r\n        ) : (\r\n          <Tooltip title=\"Create\">\r\n            <span>\r\n              <IconButton onClick={createHandler}>\r\n                <AddIcon />\r\n              </IconButton>\r\n            </span>\r\n          </Tooltip>\r\n        )}\r\n        <Tooltip title=\"Edit\">\r\n          <span>\r\n            <IconButton disabled={selected.length !== 1} onClick={editHandler}>\r\n              <EditIcon />\r\n            </IconButton>\r\n          </span>\r\n        </Tooltip>\r\n        <Tooltip title=\"Delete\">\r\n          <span>\r\n            <IconButton\r\n              disabled={selected.length !== 1}\r\n              onClick={deleteHandler}\r\n            >\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </span>\r\n        </Tooltip>\r\n      </Box>\r\n      <Loader visible={isLoading} />\r\n    </Toolbar>\r\n  );\r\n}\r\n\r\nexport default function EnhancedTable() {\r\n  const [order, setOrder] = React.useState<Order | undefined>('asc');\r\n  const [orderBy, setOrderBy] = React.useState<keyof Truck | undefined>(\r\n    'truckNumber',\r\n  );\r\n  const [selected, setSelected] = React.useState<readonly string[]>([]);\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState<number>(15);\r\n  const [queryParams, setQueryParams] = React.useState<Record<string, any>>({});\r\n  const tableContainerRef = React.useRef(null);\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const setSnackbarMessage = useSnackbar();\r\n  const [, setMapData] = useMap();\r\n\r\n  const {\r\n    isLoading,\r\n    isFetching,\r\n    data: { items, total } = { items: [], total: 0 },\r\n  } = useQuery({\r\n    queryKey: ['trucks', page, rowsPerPage, orderBy, order, queryParams],\r\n    queryFn: TrucksQuery,\r\n    keepPreviousData: true,\r\n    retry: false,\r\n    onError: (error: Error) => {\r\n      setSnackbarMessage({\r\n        severity: 'error',\r\n        message: error instanceof Error ? error.message : JSON.stringify(error),\r\n      });\r\n    },\r\n  });\r\n  const rows = items || [];\r\n\r\n  React.useEffect(() => {\r\n    if (tableContainerRef.current) {\r\n      const container = tableContainerRef.current as HTMLElement;\r\n      container.scrollTo({\r\n        top: 0,\r\n        left: 0,\r\n        behavior: 'smooth',\r\n      });\r\n    }\r\n  }, [rows]);\r\n\r\n  React.useEffect(() => {\r\n    const newSelected: string[] = [];\r\n    selected.forEach((selectedItem) => {\r\n      const selectedRow = rows.find((row) => row.id === selectedItem);\r\n      if (selectedRow) {\r\n        newSelected.push(selectedItem);\r\n      }\r\n    });\r\n    setSelected(newSelected);\r\n  }, [rows]);\r\n\r\n  const handleRequestSort = (\r\n    event: React.MouseEvent<unknown>,\r\n    property: keyof Truck,\r\n  ) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    const isDesc = orderBy === property && order === 'desc';\r\n    if (isDesc) {\r\n      setOrder(undefined);\r\n      setOrderBy(undefined);\r\n    } else {\r\n      setOrder(isAsc ? 'desc' : 'asc');\r\n      setOrderBy(property);\r\n    }\r\n  };\r\n\r\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (event.target.checked) {\r\n      const newSelected = rows.map((n: Truck) => n.id);\r\n      setSelected(newSelected);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (\r\n    event: React.MouseEvent<unknown>,\r\n    item: (typeof rows)[number],\r\n  ) => {\r\n    navigate(`./view/${item.id}`, {\r\n      relative: 'path',\r\n      state: { from: location },\r\n      replace: false,\r\n    });\r\n  };\r\n\r\n  const handleSelect = (event: React.MouseEvent<unknown>, name: string) => {\r\n    event.stopPropagation();\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected: readonly string[] = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event: unknown, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (\r\n    event: React.ChangeEvent<HTMLInputElement>,\r\n  ) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const isSelected = (name: string) => selected.indexOf(name) !== -1;\r\n\r\n  return (\r\n    <Box sx={{ width: '100%', height: '100%' }}>\r\n      <Paper sx={{ width: '100%', height: '100%', backgroundColor: 'unset' }}>\r\n        <EnhancedTableToolbar\r\n          selected={selected}\r\n          setQueryParams={(query) => {\r\n            setQueryParams(query);\r\n            setPage(0);\r\n          }}\r\n        />\r\n        <TableContainer\r\n          ref={tableContainerRef}\r\n          sx={{ height: 'calc(100% - 115px)' }}\r\n        >\r\n          <Table\r\n            sx={{ minWidth: 750 }}\r\n            aria-labelledby=\"tableTitle\"\r\n            size=\"small\"\r\n            stickyHeader\r\n          >\r\n            <EnhancedTableHead\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {rows.map((row, index) => {\r\n                const isItemSelected = isSelected(`${row.id}`);\r\n                const labelId = `enhanced-table-checkbox-${index}`;\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    onDoubleClick={(event) => handleClick(event, row)}\r\n                    role=\"checkbox\"\r\n                    aria-checked={isItemSelected}\r\n                    tabIndex={-1}\r\n                    key={row.id}\r\n                    selected={isItemSelected}\r\n                    sx={{ cursor: 'pointer' }}\r\n                  >\r\n                    <StyledTableCell padding=\"checkbox\">\r\n                      <Checkbox\r\n                        id={`${labelId}`}\r\n                        color=\"primary\"\r\n                        checked={isItemSelected}\r\n                        inputProps={{\r\n                          'aria-labelledby': labelId,\r\n                        }}\r\n                        onClick={(event) => handleSelect(event, `${row.id}`)}\r\n                      />\r\n                    </StyledTableCell>\r\n                    {headCells.map((cell) => {\r\n                      const cellData = cell.getData(row, setMapData);\r\n                      return (\r\n                        <StyledTableCell\r\n                          key={cell.id}\r\n                          title={cellData.title}\r\n                          align={cell.numeric ? 'right' : 'center'}\r\n                        >\r\n                          {cellData.data}\r\n                        </StyledTableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 15, 20, 25, 35, 50]}\r\n          component=\"div\"\r\n          count={total}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <Loader visible={isLoading || isFetching} />\r\n    </Box>\r\n  );\r\n}\r\n","export const dateTimeFormatter = Intl.DateTimeFormat('en-US', {\r\n  year: 'numeric',\r\n  month: 'numeric',\r\n  day: 'numeric',\r\n  hour: 'numeric',\r\n  minute: 'numeric',\r\n  second: 'numeric',\r\n  hour12: true,\r\n});\r\n","import * as React from 'react';\r\n\r\nexport function stopPropagation(e: React.SyntheticEvent) {\r\n  e.stopPropagation();\r\n}\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2M12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z\"\n}, \"1\")], 'AccessTime');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2m0 16H8V7h11z\"\n}), 'ContentCopy');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'Edit');","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"id\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Typography from '../Typography';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogTitleUtilityClass } from './dialogTitleClasses';\nimport DialogContext from '../Dialog/DialogContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getDialogTitleUtilityClass, classes);\n};\nconst DialogTitleRoot = styled(Typography, {\n  name: 'MuiDialogTitle',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  padding: '16px 24px',\n  flex: '0 0 auto'\n});\nconst DialogTitle = /*#__PURE__*/React.forwardRef(function DialogTitle(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogTitle'\n  });\n  const {\n      className,\n      id: idProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  const {\n    titleId = idProp\n  } = React.useContext(DialogContext);\n  return /*#__PURE__*/_jsx(DialogTitleRoot, _extends({\n    component: \"h2\",\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    variant: \"h6\",\n    id: idProp != null ? idProp : titleId\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  id: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogTitle;"],"names":["_extends","Object","assign","bind","n","e","arguments","length","t","r","hasOwnProperty","call","apply","SvgCat","_ref","svgRef","title","titleId","props","id","xmlns","viewBox","ref","cx","cy","fill","strokeWidth","style","stroke","d","paintOrder","points","strokeLinecap","ForwardRef","SvgTruck","focusable","fillRule","LocationForGrid","location","onRefClick","addInfo","children","value","setValue","React","items","setItems","geocoder","setGeocoder","setSearch","debounce","geocodeRequest","geocode","Promise","reject","then","result","results","locationFromRequest","google","maps","LatLng","res","address_components","formatted_address","concat","lat","lng","geometry","location_type","GeocoderLocationType","APPROXIMATE","viewport","LatLngBounds","place_id","types","forEach","item","toStringLocation","catch","err","selected","selectLocation","_jsxs","display","_jsx","Wrapper","getMapSettings","render","status","setSnackbarMessage","useSnackbar","setLoaderVisibility","useLoader","Status","LOADING","FAILURE","severity","message","SUCCESS","window","Geocoder","textOverflow","overflow","textAlign","href","target","onClick","_Fragment","IconButton","size","event","stopPropagation","navigator","clipboard","writeText","ContentCopy","sx","height","width","validationSchema","yup","availabilityLocation","typeError","min","max","required","availabilityAt","initialValues","undefined","Transition","Slide","direction","SetWillBeAvailableDialog","truckId","setTruckId","useNavigate","queryClient","useQueryClient","mutate","isLoading","useMutation","TruckUpdate","onSuccess","invalidateQueries","onError","error","Error","JSON","stringify","formik","useFormik","enableReinitialize","onSubmit","values","Dialog","open","TransitionComponent","keepMounted","onClose","handleDialogClose","PaperProps","DialogTitle","DialogContent","handleSubmit","onReset","handleReset","Box","p","SearchLocationField","fieldName","label","DateTimeField","disablePast","paddingTop","Button","fullWidth","variant","color","type","handleClose","Loader","visible","themeMode","localStorage","getItem","headCells","orderField","getData","row","data","truckNumber","numeric","disablePadding","person","coordinator","owner","path","firstRow","secondRow","getPath","getType","fullName","phone","val","CatIcon","grey","TruckIcon","Avatar","bgcolor","green","margin","setMapData","preventDefault","lastLocation","locationUpdatedAt","dateTimeFormatter","format","Date","equipment","join","firstRowPart1","insideDims","firstRowPart2","doorDims","payload","driver","StyledTableHead","styled","TableHead","theme","backgroundColor","palette","background","default","StyledTableCell","TableCell","_ref2","maxWidth","paddingBottom","whiteSpace","EnhancedTableHead","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","TableRow","padding","Checkbox","name","indeterminate","checked","onChange","inputProps","map","headCell","align","sortDirection","TableSortLabel","active","hideSortIcon","property","component","visuallyHidden","EnhancedTableToolbar","setQueryParams","truckNumberSearch","setTruckNumberSearch","truckNumberChanged","setTruckNumberChanged","useLocation","navigate","TruckDelete","filterClearHandler","filterHandler","Toolbar","pl","sm","pr","xs","alpha","primary","main","action","activatedOpacity","Typography","flex","TextField","Number","isFinite","onKeyUp","key","Tooltip","FilterListOffIcon","disabled","FilterListIcon","openWBADialogHandler","AccessTime","createHandler","relative","state","from","replace","AddIcon","editHandler","EditIcon","deleteHandler","DeleteIcon","EnhancedTable","setOrder","setOrderBy","setSelected","page","setPage","rowsPerPage","setRowsPerPage","queryParams","tableContainerRef","useMap","isFetching","total","useQuery","queryKey","queryFn","TrucksQuery","keepPreviousData","retry","rows","current","scrollTo","top","left","behavior","newSelected","selectedItem","find","push","Paper","query","TableContainer","Table","minWidth","stickyHeader","handleRequestSort","isAsc","TableBody","index","isItemSelected","indexOf","labelId","hover","onDoubleClick","role","tabIndex","cursor","handleSelect","selectedIndex","slice","cell","cellData","TablePagination","rowsPerPageOptions","count","onPageChange","handleChangePage","newPage","onRowsPerPageChange","parseInt","Intl","DateTimeFormat","year","month","day","hour","minute","second","hour12","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","jsx","_excluded","DialogTitleRoot","slot","overridesResolver","styles","root","inProps","useThemeProps","className","idProp","other","_objectWithoutPropertiesLoose","ownerState","classes","composeClasses","getDialogTitleUtilityClass","useUtilityClasses","DialogContext","clsx"],"sourceRoot":""}