{"version":3,"file":"static/js/666.cafb3deb.chunk.js","mappings":"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","sources":["icons/cat.svg","icons/truck.svg","components/LocationForGrid.tsx","trucksNearby/reserveTruckButton.tsx","trucksNearby/trucksNearby.tsx","utils/dataTypes.ts","../node_modules/@tanstack/query-core/src/mutationObserver.ts","../node_modules/@tanstack/react-query/src/useMutation.ts"],"sourcesContent":["var _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgCat(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    \"data-name\": \"Layer 1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 128 128\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 64,\n    cy: 75,\n    r: 45,\n    fill: \"none\",\n    strokeWidth: 10,\n    style: {\n      stroke: \"currentcolor\"\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 96.94 40.17 C 96.94 23.36 82.19 9.73 64 9.73 C 45.81 9.73 31.06 23.36 31.06 40.17\",\n    style: {\n      paintOrder: \"fill\",\n      strokeWidth: 6,\n      stroke: \"currentcolor\",\n      fill: \"rgba(255, 255, 255, 0)\"\n    }\n  }), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"39.98 19.5 37.64 5.17 50.61 14.17\",\n    style: {\n      stroke: \"currentcolor\",\n      strokeWidth: 4,\n      fill: \"rgba(0, 0, 0, 0)\"\n    }\n  }), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"87.05 19.5 89.39 5.17 76.42 14.17\",\n    style: {\n      stroke: \"currentcolor\",\n      strokeWidth: 4,\n      fill: \"rgba(0, 0, 0, 0)\"\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 29.27 108.3 C 28.05 113.07 26.83 117.84 25.62 122.61\",\n    style: {\n      stroke: \"currentcolor\",\n      paintOrder: \"stroke\",\n      strokeLinecap: \"round\",\n      strokeWidth: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 25.72 122.61 C 38.31 122.83 50.91 123.05 63.5 123.28\",\n    style: {\n      stroke: \"currentcolor\",\n      strokeWidth: 4,\n      strokeLinecap: \"round\"\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 98.96 108.3 C 100.18 113.07 101.4 117.84 102.61 122.61\",\n    style: {\n      strokeLinecap: \"round\",\n      strokeWidth: 4,\n      stroke: \"currentcolor\",\n      paintOrder: \"stroke\"\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 102.5 122.61 C 88.91 122.85 76.32 123.07 64.72 123.28\",\n    style: {\n      strokeLinecap: \"round\",\n      stroke: \"currentcolor\",\n      strokeWidth: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"63 39.5 63 79.5 79.91 93.83\",\n    style: {\n      stroke: \"currentcolor\",\n      strokeWidth: 6,\n      paintOrder: \"fill\",\n      strokeLinecap: \"round\",\n      fill: \"rgba(255, 255, 255, 0)\"\n    }\n  }));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCat);\nexport default __webpack_public_path__ + \"static/media/cat.b0cbea142ef6c467bbabb420d9425865.svg\";\nexport { ForwardRef as ReactComponent };","var _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgTruck(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    focusable: \"false\",\n    \"aria-hidden\": \"true\",\n    viewBox: \"0 0 24 24\",\n    \"data-testid\": \"LocalShippingIcon\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m20 8h-3v-4h-14c-1.1 0-2 .9-2 2v11h2c0 1.66 1.34 3 3 3s3-1.34 3-3h6c0 1.66 1.34 3 3 3s3-1.34 3-3h2v-5l-3-4zm-14 10.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm13.5-9 1.96 2.5h-4.46v-2.5h2.5zm-1.5 9c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm-14.7-9 1.53 0 0 1.66-3.03 0 1.51-1.66zm2.46-2.74 1.66-1.84 0 4.57.94 0 0 1.66-.94 0 0 1.93-1.66 0 0-6.33zm6.58 6.48c-.37-.06-.72-.19-1.04-.37-.32-.19-.61-.42-.86-.7-.28-.32-.49-.67-.61-1.05-.12-.39-.18-.87-.18-1.44l0-4.51 1.66 0 0 4.36c0 .31.01.57.05.78.03.21.08.39.16.55.08.15.19.28.32.38.14.1.31.19.52.27l0 1.74zm.91-1.74c.21-.07.37-.16.51-.26.14-.1.25-.23.33-.39.08-.14.14-.31.17-.5.03-.2.05-.47.05-.83l0-4.36 1.65 0 0 4.51c0 .58-.06 1.06-.18 1.44-.12.38-.33.73-.61 1.05-.25.29-.54.52-.87.7-.33.18-.68.3-1.04.37l0-1.74z\",\n    style: {\n      fillRule: \"evenodd\",\n      fill: \"currentcolor\"\n    }\n  }));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgTruck);\nexport default __webpack_public_path__ + \"static/media/truck.cd6a1057a38896c7dca3f9ca88d7879e.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\r\n\r\nimport { Wrapper, Status } from '@googlemaps/react-wrapper';\r\n\r\nimport { debounce } from '@mui/material/utils';\r\n\r\nimport { useSnackbar, useLoader } from '../hooks';\r\nimport { mapsSettings } from '../GoogleMaps/map';\r\nimport { GeoPoint } from '../utils/dataTypes';\r\nimport { toStringLocation } from '../utils/toStringLocation';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport { stopPropagation } from '../utils/stopPropagation';\r\nimport ContentCopy from '@mui/icons-material/ContentCopy';\r\n\r\nexport default function LocationForGrid({\r\n  location,\r\n  onRefClick,\r\n  addInfo,\r\n  children,\r\n}: {\r\n  readonly location: GeoPoint;\r\n  onRefClick?: (event: React.SyntheticEvent) => void;\r\n  addInfo?: string;\r\n  children?: React.ReactNode;\r\n}) {\r\n  const [value, setValue] = React.useState<google.maps.GeocoderResult | null>(\r\n    null,\r\n  );\r\n  const [items, setItems] = React.useState<google.maps.GeocoderResult[]>([]);\r\n  const [geocoder, setGeocoder] = React.useState<google.maps.Geocoder | null>(\r\n    null,\r\n  );\r\n\r\n  const setSearch = React.useMemo(() => {\r\n    return debounce((geocodeRequest: google.maps.GeocoderRequest): void => {\r\n      geocoder\r\n        ?.geocode(geocodeRequest)\r\n        .then((result) => {\r\n          if (result.results.length < 1 && geocodeRequest.location) {\r\n            const locationFromRequest = new google.maps.LatLng(\r\n              geocodeRequest.location,\r\n            );\r\n            const res: google.maps.GeocoderResult = {\r\n              address_components: [],\r\n              formatted_address: `[${locationFromRequest.lat()}, ${locationFromRequest.lng()}]`,\r\n              geometry: {\r\n                location: locationFromRequest,\r\n                location_type: google.maps.GeocoderLocationType.APPROXIMATE,\r\n                viewport: new google.maps.LatLngBounds(),\r\n              },\r\n              place_id: `[${locationFromRequest.lat()}, ${locationFromRequest.lng()}]`,\r\n              types: [],\r\n            };\r\n            setItems([res]);\r\n          } else {\r\n            result.results.forEach(\r\n              (item) =>\r\n                (item.formatted_address = toStringLocation(\r\n                  item.address_components,\r\n                )),\r\n            );\r\n            setItems(result.results);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          setItems([]);\r\n        });\r\n    }, 400);\r\n  }, [geocoder]);\r\n\r\n  React.useEffect(() => {\r\n    const selected =\r\n      location &&\r\n      (items.find((option) => option.types.includes('premise')) ||\r\n        items.find((option) => option.types.includes('street_address')) ||\r\n        items.find((option) => option.types.includes('route')) ||\r\n        items.find((option) => option.types.includes('plus_code')));\r\n    if (location && !selected && !items.length) {\r\n      setSearch({\r\n        location: {\r\n          lat: location[0],\r\n          lng: location[1],\r\n        },\r\n      });\r\n    } else if (location && selected && selected?.place_id !== value?.place_id) {\r\n      setValue(selected);\r\n    } else if (!location) {\r\n      setValue(null);\r\n    }\r\n  }, [geocoder, location, items]);\r\n\r\n  const handleApiLoad = (status: Status): React.ReactElement => {\r\n    const setSnackbarMessage = useSnackbar();\r\n    const [, setLoaderVisibility] = useLoader();\r\n    React.useLayoutEffect(() => {\r\n      if (status === Status.LOADING) {\r\n        setLoaderVisibility(true);\r\n      }\r\n      if (status === Status.FAILURE) {\r\n        setSnackbarMessage({\r\n          severity: 'error',\r\n          message: 'Error loading maps!',\r\n        });\r\n      }\r\n      if (status === Status.SUCCESS) {\r\n        setGeocoder(new window.google.maps.Geocoder());\r\n      }\r\n      return () => {\r\n        if (status === Status.LOADING) {\r\n          setLoaderVisibility(false);\r\n        }\r\n      };\r\n    }, [status]);\r\n    return null as unknown as React.ReactElement;\r\n  };\r\n\r\n  return (\r\n    <span style={{ display: 'flex' }}>\r\n      <Wrapper {...mapsSettings} render={handleApiLoad} />\r\n      <span\r\n        style={{\r\n          textOverflow: 'ellipsis',\r\n          overflow: 'hidden',\r\n          textAlign: 'left',\r\n        }}\r\n        title={`${value ? value.formatted_address : ''}` + '\\n' + addInfo}\r\n      >\r\n        {onRefClick ? (\r\n          <a href={'#'} target=\"_blank\" onClick={onRefClick}>\r\n            {value ? value.formatted_address : ''}\r\n          </a>\r\n        ) : value ? (\r\n          value.formatted_address\r\n        ) : (\r\n          ''\r\n        )}\r\n        {!addInfo ? null : (\r\n          <>\r\n            <br />\r\n            {addInfo}\r\n          </>\r\n        )}\r\n        {children}\r\n      </span>\r\n      {!value ? null : (\r\n        <IconButton\r\n          size=\"small\"\r\n          onClick={(event) => {\r\n            stopPropagation(event);\r\n            navigator.clipboard.writeText(value.formatted_address);\r\n          }}\r\n        >\r\n          <ContentCopy sx={{ height: '16px', width: '16px' }} />\r\n        </IconButton>\r\n      )}\r\n    </span>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\r\nimport { addMinutes } from 'date-fns';\r\n\r\nimport { TruckUpdate } from '../api';\r\nimport { Truck } from '../utils/dataTypes';\r\n\r\nconst reservationTime = 15; // 15 minutes\r\n\r\nconst calcReserveWillLast = (reservedTill: Date | '' | undefined) => {\r\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n  // @ts-ignore\r\n  let reservedWillLast = (reservedTill - new Date()) / (1000 * 60);\r\n  reservedWillLast = reservedWillLast > 0 ? Math.ceil(reservedWillLast) : 0;\r\n  return reservedWillLast;\r\n};\r\n\r\nexport default function ReserveTruckButton({\r\n  truck,\r\n  index,\r\n}: {\r\n  truck: Truck;\r\n  index: number;\r\n}) {\r\n  const [remainReserved, setRemainReserved] = React.useState<number>(0);\r\n  const { reservedAt, reservedBy } = truck;\r\n  const reservedTill =\r\n    reservedAt && addMinutes(new Date(reservedAt), reservationTime);\r\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n  // @ts-ignore\r\n  const isReserved = new Date() < reservedTill;\r\n\r\n  React.useEffect(() => {\r\n    if (isReserved) {\r\n      setRemainReserved(calcReserveWillLast(reservedTill));\r\n      const interval = setInterval(() => {\r\n        setRemainReserved(calcReserveWillLast(reservedTill));\r\n      }, 1000 * 2);\r\n      return () => {\r\n        clearInterval(interval);\r\n        setRemainReserved(0);\r\n      };\r\n    }\r\n  }, [isReserved, reservedTill]);\r\n\r\n  const queryClient = useQueryClient();\r\n  const { mutate, isLoading } = useMutation(TruckUpdate, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries({\r\n        queryKey: ['trucks'],\r\n        refetchType: 'active',\r\n      });\r\n      return;\r\n    },\r\n    onError: (error: Error) => {\r\n      return;\r\n    },\r\n  });\r\n\r\n  const reserveButtonClickHandler = (event: React.SyntheticEvent) => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    mutate({ id: truck.id, reservedAt: isReserved ? null : new Date() });\r\n  };\r\n\r\n  const labelId = `enhanced-table-checkbox-${index}`;\r\n  const title = `${\r\n    isReserved && reservedBy\r\n      ? 'Reserved by:\\n' +\r\n        reservedBy.fullName +\r\n        '\\nTime left: ' +\r\n        remainReserved +\r\n        'min'\r\n      : ''\r\n  }`;\r\n  return (\r\n    <Button\r\n      id={`${labelId}`}\r\n      title={title}\r\n      sx={{ m: 1, height: '35px', lineHeight: 'normal', fontSize: 'x-small' }}\r\n      fullWidth\r\n      variant=\"contained\"\r\n      size=\"small\"\r\n      color=\"primary\"\r\n      onClickCapture={reserveButtonClickHandler}\r\n    >\r\n      {isReserved ? (\r\n        <span>\r\n          Unreserve\r\n          <br />({remainReserved}min)\r\n        </span>\r\n      ) : (\r\n        'Reserve'\r\n      )}\r\n    </Button>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\r\n\r\nimport { alpha, styled } from '@mui/material/styles';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport TextField from '@mui/material/TextField';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Box from '@mui/material/Box';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableSortLabel from '@mui/material/TableSortLabel';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\nimport Grid from '@mui/material/Grid';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport { renderTimeViewClock } from '@mui/x-date-pickers/timeViewRenderers';\r\nimport { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker';\r\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport Select from '@mui/material/Select';\r\nimport FormHelperText from '@mui/material/FormHelperText';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FilterListIcon from '@mui/icons-material/FilterList';\r\nimport FilterListOffIcon from '@mui/icons-material/FilterListOff';\r\nimport ContentCopy from '@mui/icons-material/ContentCopy';\r\nimport AccessTime from '@mui/icons-material/AccessTime';\r\nimport LocalShipping from '@mui/icons-material/LocalShipping';\r\nimport { visuallyHidden } from '@mui/utils';\r\nimport { debounce } from '@mui/material/utils';\r\nimport { grey, green, orange } from '@mui/material/colors';\r\n\r\nimport ReserveTruckButton from './reserveTruckButton';\r\nimport { ReactComponent as CatIcon } from '../icons/cat.svg';\r\nimport { ReactComponent as TruckIcon } from '../icons/truck.svg';\r\n\r\nimport Loader from '../components/Loader';\r\nimport LocationForGrid from '../components/LocationForGrid';\r\nimport { LocationsQuery, TrucksQuery, TruckDelete } from '../api';\r\nimport { useMap, useSnackbar } from '../hooks';\r\nimport {\r\n  Order,\r\n  Truck,\r\n  Location,\r\n  Result,\r\n  TruckStatuses,\r\n  TruckStatus,\r\n} from '../utils/dataTypes';\r\nimport { getPath, getType, modifyedQueryFn } from '../utils/queryHelpers';\r\nimport { stopPropagation } from '../utils/stopPropagation';\r\n\r\ninterface HeadCell {\r\n  id: string;\r\n  disablePadding: boolean;\r\n  orderField?: keyof Truck;\r\n  getData: (\r\n    row: Truck,\r\n    setMapData: any,\r\n  ) => { data: JSX.Element | string; title?: string };\r\n  label: string;\r\n  numeric: boolean;\r\n}\r\nconst themeMode = localStorage.getItem('theme') === 'dark' ? 'dark' : 'light';\r\nconst headCells: readonly HeadCell[] = [\r\n  {\r\n    id: 'truckNumber',\r\n    orderField: 'truckNumber',\r\n    getData: (row) => ({ data: `${row.truckNumber}` }),\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Truck Number',\r\n  },\r\n  {\r\n    id: 'mainContactInfo',\r\n    getData: (row) => {\r\n      const person = row.coordinator || row.owner;\r\n      let path = '';\r\n      let type = '';\r\n      let firstRow = '';\r\n      let secondRow = '';\r\n      if (person) {\r\n        path = `./${getPath(person)}/view/${person.id}`;\r\n        type = `${getType(person)} `;\r\n        firstRow = `${person.fullName}`;\r\n        secondRow = `${person?.phone}`;\r\n      }\r\n      return {\r\n        data: (\r\n          <span style={{ display: 'flex' }}>\r\n            <span\r\n              style={{\r\n                textOverflow: 'ellipsis',\r\n                overflow: 'hidden',\r\n                textAlign: 'left',\r\n              }}\r\n            >\r\n              <b>{type}</b>\r\n              <a href={path} target=\"_blank\" onClick={stopPropagation}>\r\n                {firstRow}\r\n              </a>\r\n              <br />\r\n              <a\r\n                href={secondRow ? `tel:${secondRow}` : undefined}\r\n                target=\"_blank\"\r\n                onClick={stopPropagation}\r\n              >\r\n                {secondRow || ' '}\r\n              </a>\r\n            </span>\r\n            <IconButton\r\n              size=\"small\"\r\n              onClick={(event) => {\r\n                stopPropagation(event);\r\n                navigator.clipboard.writeText(firstRow + ' ' + secondRow);\r\n              }}\r\n            >\r\n              <ContentCopy sx={{ height: '16px', width: '16px' }} />\r\n            </IconButton>\r\n          </span>\r\n        ),\r\n        title: type + '' + firstRow + '\\n' + secondRow,\r\n      };\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Main Contact info',\r\n  },\r\n  {\r\n    id: 'truckInfo',\r\n    getData: (row) => {\r\n      const firstRow = row.type ? `${row.type}` : '';\r\n      const secondRow = row.equipment ? `${row.equipment.join(', ')}` : '';\r\n\r\n      return {\r\n        data: (\r\n          <span>\r\n            {firstRow}\r\n            <br />\r\n            {secondRow}\r\n          </span>\r\n        ),\r\n        title: firstRow + '\\n' + secondRow,\r\n      };\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Truck info',\r\n  },\r\n  {\r\n    id: 'dimsAndPayload',\r\n    getData: (row) => {\r\n      const firstRowPart1 = row.insideDims ? `${row.insideDims}` : '';\r\n      const firstRowPart2 = row.doorDims ? `${row.doorDims}` : '';\r\n      const secondRow = row.payload ? `${row.payload}` : '';\r\n\r\n      return {\r\n        data: (\r\n          <span>\r\n            {(firstRowPart1 ? firstRowPart1 + ' ' : '') +\r\n              `${firstRowPart2 ? '(' + firstRowPart2 + ')' : ''}`}\r\n            <br />\r\n            {secondRow}\r\n          </span>\r\n        ),\r\n        title:\r\n          (firstRowPart1 ? firstRowPart1 + ' Inside ' : '') +\r\n          (firstRowPart2 ? firstRowPart2 + ' Door ' : '') +\r\n          '\\n' +\r\n          secondRow +\r\n          ' Payload',\r\n      };\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'DIMS/Payload',\r\n  },\r\n  {\r\n    id: 'status',\r\n    orderField: 'status',\r\n    getData: (row) => {\r\n      const status = `${row.status}`;\r\n      const val = (() => {\r\n        switch (status) {\r\n          case 'Will be available':\r\n            return (\r\n              <CatIcon\r\n                style={{\r\n                  height: '24px',\r\n                  width: '24px',\r\n                  color: themeMode === 'dark' ? grey[100] : grey[900],\r\n                }}\r\n              />\r\n              /*<AccessTime\r\n                sx={{ height: '24px', width: '24px', color: grey[900] }}\r\n              />*/\r\n            );\r\n          case 'On route':\r\n            return (\r\n              <TruckIcon\r\n                style={{\r\n                  height: '24px',\r\n                  width: '24px',\r\n                  color: themeMode === 'dark' ? grey[300] : grey[700],\r\n                }}\r\n              />\r\n              /*<LocalShipping\r\n                sx={{ height: '24px', width: '24px', color: orange[500] }}\r\n              />*/\r\n            );\r\n          case 'Available':\r\n            return (\r\n              <Avatar\r\n                sx={{\r\n                  height: '24px',\r\n                  width: '24px',\r\n                  bgcolor: green[500],\r\n                  margin: 'auto',\r\n                }}\r\n              >\r\n                A\r\n              </Avatar>\r\n            );\r\n          case 'Not Available':\r\n            return (\r\n              <Avatar\r\n                sx={{\r\n                  height: '24px',\r\n                  width: '24px',\r\n                  bgcolor: grey[500],\r\n                  margin: 'auto',\r\n                }}\r\n              >\r\n                N\r\n              </Avatar>\r\n            );\r\n          default:\r\n            return status;\r\n        }\r\n      })();\r\n\r\n      return {\r\n        data: <span>{val}</span>,\r\n        title: status,\r\n      };\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Status',\r\n  },\r\n  {\r\n    id: 'willBeAtLocation',\r\n    getData: (row) => {\r\n      if (row?.availabilityLocation) {\r\n        const secondRow = `${\r\n          row.availabilityAt\r\n            ? new Date(row.availabilityAt).toLocaleString()\r\n            : ''\r\n        }`;\r\n\r\n        return {\r\n          data: (\r\n            <LocationForGrid\r\n              location={row.availabilityLocation}\r\n              addInfo={secondRow}\r\n            />\r\n          ),\r\n        };\r\n      } else {\r\n        return { data: '' };\r\n      }\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Will be at location',\r\n  },\r\n  {\r\n    id: 'roadsDistance',\r\n    getData: (row) => ({\r\n      data: `${row.milesByRoads ? row.milesByRoads.toFixed(2) : ''}`,\r\n    }),\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Road distance',\r\n  },\r\n  {\r\n    id: 'location',\r\n    getData: (row, setMapData) => {\r\n      const onRefClick = (event: React.SyntheticEvent) => {\r\n        event.preventDefault();\r\n        stopPropagation(event);\r\n        setMapData([row]);\r\n      };\r\n\r\n      if (row?.lastLocation) {\r\n        const secondRow = `${\r\n          row.locationUpdatedAt\r\n            ? new Date(row.locationUpdatedAt).toLocaleString()\r\n            : ''\r\n        }`;\r\n\r\n        return {\r\n          data: (\r\n            <LocationForGrid\r\n              location={row.lastLocation}\r\n              onRefClick={onRefClick}\r\n              addInfo={secondRow}\r\n            />\r\n          ),\r\n        };\r\n      } else {\r\n        return { data: '' };\r\n      }\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Last known location',\r\n  },\r\n  /*{\r\n    id: 'calcDistance',\r\n    getData: (row) => ({\r\n      data: `${row.milesHaversine ? row.milesHaversine.toFixed(2) : ''}`,\r\n    }),\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Origin away',\r\n  },*/\r\n];\r\n\r\ninterface EnhancedTableProps {\r\n  numSelected: number;\r\n  onRequestSort: (\r\n    event: React.MouseEvent<unknown>,\r\n    property: keyof Truck,\r\n  ) => void;\r\n  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n  order: Order | undefined;\r\n  orderBy: string | undefined;\r\n  rowCount: number;\r\n}\r\n\r\nconst StyledTableHead = styled(TableHead)(({ theme }) => ({\r\n  backgroundColor: theme.palette.background.default,\r\n}));\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n  maxWidth: '100px',\r\n  paddingTop: '6px',\r\n  paddingBottom: '6px',\r\n  whiteSpace: 'nowrap',\r\n  textOverflow: 'ellipsis',\r\n  overflow: 'hidden',\r\n}));\r\n\r\nfunction EnhancedTableHead(props: EnhancedTableProps) {\r\n  const {\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n  const createSortHandler =\r\n    (property: keyof Truck) => (event: React.MouseEvent<unknown>) => {\r\n      onRequestSort(event, property);\r\n    };\r\n\r\n  return (\r\n    <StyledTableHead>\r\n      <TableRow>\r\n        <StyledTableCell align=\"center\" padding=\"checkbox\">\r\n          Actions\r\n        </StyledTableCell>\r\n        {headCells.map((headCell) => (\r\n          <StyledTableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'center'}\r\n            padding={headCell.disablePadding ? 'none' : 'normal'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={headCell.orderField && orderBy === headCell.orderField}\r\n              hideSortIcon={!headCell.orderField}\r\n              direction={orderBy === headCell.orderField ? order : 'asc'}\r\n              onClick={\r\n                headCell.orderField\r\n                  ? createSortHandler(headCell.orderField)\r\n                  : () => {\r\n                      return;\r\n                    }\r\n              }\r\n            >\r\n              {headCell.label}\r\n              {headCell.orderField && orderBy === headCell.orderField ? (\r\n                <Box component=\"span\" sx={visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </Box>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </StyledTableCell>\r\n        ))}\r\n      </TableRow>\r\n    </StyledTableHead>\r\n  );\r\n}\r\n\r\ninterface EnhancedTableToolbarProps {\r\n  selected: readonly string[];\r\n  setQueryParams: React.Dispatch<\r\n    React.SetStateAction<Record<string, number | string | string[] | Date>>\r\n  >;\r\n}\r\n\r\nfunction EnhancedTableToolbar(props: EnhancedTableToolbarProps) {\r\n  const { selected, setQueryParams } = props;\r\n  // Location field state\r\n  const [locationValue, setLocationValue] = React.useState<Location | null>(\r\n    null,\r\n  );\r\n  const [inputValue, setInputValue] = React.useState('');\r\n  const [locationsQueryParams, setLocationsQueryParams] = React.useState<{\r\n    search?: any;\r\n  }>({});\r\n  const [options, setOptions] = React.useState<readonly Location[]>([]);\r\n  const [availableFrom, setAvailableFrom] = React.useState<Date | null>(null);\r\n  const [availableTo, setAvailableTo] = React.useState<Date | null>(null);\r\n  const [isFromDateError, setFromDateError] = React.useState<boolean>(false);\r\n  const [isToDateError, setToDateError] = React.useState<boolean>(false);\r\n  const [statusOpen, setStatusOpen] = React.useState<boolean>(false);\r\n  const [statusValue, setStatusValue] = React.useState<TruckStatus[]>([\r\n    'Available',\r\n  ]);\r\n  const [distanceValue, setDistanceValue] = React.useState<number>(200);\r\n  const [searchDataChanged, setSearchDataChanged] =\r\n    React.useState<boolean>(false);\r\n\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const queryClient = useQueryClient();\r\n\r\n  const setSnackbarMessage = useSnackbar();\r\n\r\n  const { mutate, isLoading } = useMutation(TruckDelete, {\r\n    onSuccess: () => {\r\n      setSnackbarMessage({\r\n        severity: 'success',\r\n        message: 'Deleted',\r\n      });\r\n      queryClient.invalidateQueries(['trucks']);\r\n    },\r\n    onError: (error: Error) => {\r\n      setSnackbarMessage({\r\n        severity: 'error',\r\n        message: error instanceof Error ? error.message : JSON.stringify(error),\r\n      });\r\n    },\r\n  });\r\n\r\n  const setSearch = React.useMemo(() => {\r\n    return debounce((search: string): void => {\r\n      setLocationsQueryParams({ search });\r\n    }, 400);\r\n  }, []);\r\n  const { data: { items } = { items: [], total: 0 } } = useQuery<\r\n    Result<Location>,\r\n    Error,\r\n    Result<Location>,\r\n    any // ToDo fix type\r\n  >({\r\n    queryKey: ['locations', 0, 15, 'name', 'asc', locationsQueryParams],\r\n    queryFn: modifyedQueryFn(LocationsQuery, true),\r\n    keepPreviousData: true,\r\n    retry: false,\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (locationValue) {\r\n      const notSelectedItems = items.filter(\r\n        (item) => item.id !== locationValue.id,\r\n      );\r\n      setOptions([locationValue, ...notSelectedItems]);\r\n    } else {\r\n      if (inputValue === '') {\r\n        setOptions([]);\r\n      } else {\r\n        setOptions([...items]);\r\n      }\r\n    }\r\n  }, [locationValue, items]);\r\n\r\n  const handleLocationChange = (event: any, newValue: Location | null) => {\r\n    setLocationValue(newValue);\r\n    if (newValue?.location) {\r\n      setQueryParams((prev) => ({\r\n        ...prev,\r\n        lastLocation: newValue.location.join(','),\r\n        distance: distanceValue,\r\n      }));\r\n      setSearchDataChanged(false);\r\n    } else if (!newValue) {\r\n      setInputValue('');\r\n      setQueryParams((prev) => {\r\n        const {\r\n          lastLocation: _lastLocation,\r\n          distance: _distance,\r\n          ...rest\r\n        } = prev;\r\n        return rest;\r\n      });\r\n      setSearchDataChanged(false);\r\n    }\r\n    // setSearchDataChanged(true);\r\n  };\r\n  const handleLocationInputChange = (event: any, newInputValue: string) => {\r\n    setInputValue(newInputValue);\r\n    setSearch(newInputValue);\r\n  };\r\n  const handleFromDateInputChange = (value: Date | null) => {\r\n    setAvailableFrom(value);\r\n    setSearchDataChanged(true);\r\n  };\r\n  const handleToDateInputChange = (value: Date | null) => {\r\n    setAvailableTo(value);\r\n    setSearchDataChanged(true);\r\n  };\r\n  const handleFromDateOnError = (error: any /*, value: any*/) => {\r\n    if (error) {\r\n      setFromDateError(true);\r\n    } else {\r\n      setFromDateError(false);\r\n    }\r\n  };\r\n  const handleToDateOnError = (error: any /*, value: any*/) => {\r\n    if (error) {\r\n      setToDateError(true);\r\n    } else {\r\n      setToDateError(false);\r\n    }\r\n  };\r\n  const handleDateChange = () => {\r\n    /*let from = availableFrom;\r\n    let to = availableTo;\r\n    if (!from && !to) {\r\n      from = new Date(Date.now() + 1000 * 60);\r\n    }\r\n    if (!to && from) {\r\n      to = new Date(from.getTime() + dateLag);\r\n    }\r\n    if (!from && to) {\r\n      from = new Date(to.getTime() - dateLag);\r\n    }\r\n    if (from !== availableFrom) {\r\n      setAvailableFrom(from);\r\n    }\r\n    if (to !== availableTo) {\r\n      setAvailableTo(to);\r\n    }*/\r\n    if (!isFromDateError && !isToDateError) {\r\n      setQueryParams((prev) => {\r\n        const res = { ...prev };\r\n        /*if (from) {\r\n          res.availableAfter = from;\r\n        }\r\n        if (to) {\r\n          res.availableBefore = to;\r\n        }*/\r\n        if (availableFrom) {\r\n          res.availableAfter = availableFrom;\r\n        }\r\n        if (availableTo) {\r\n          res.availableBefore = availableTo;\r\n        }\r\n        return res;\r\n      });\r\n      setSearchDataChanged(false);\r\n    }\r\n  };\r\n  const handleStatusInputChange = (\r\n    event: React.ChangeEvent<HTMLInputElement>,\r\n  ) => {\r\n    setStatusValue(event.target.value as unknown as TruckStatus[]);\r\n    setSearchDataChanged(true);\r\n  };\r\n  const handleStatusKeyUp = (event: React.KeyboardEvent) => {\r\n    if (event.key !== 'Enter') {\r\n      return;\r\n    }\r\n    stopPropagation(event);\r\n    handleStatusClose();\r\n  };\r\n  const handleStatusKeyDown = (event: React.KeyboardEvent) => {\r\n    if (event.key !== 'Enter') {\r\n      return;\r\n    }\r\n    stopPropagation(event);\r\n  };\r\n  const handleStatusOpen = () => {\r\n    setStatusOpen(true);\r\n  };\r\n  const handleStatusClose = () => {\r\n    setStatusOpen(false);\r\n    handleStatusChange();\r\n  };\r\n  const handleStatusChange = () => {\r\n    if (statusValue.length && statusValue.length !== TruckStatuses.length) {\r\n      setQueryParams((prev) => ({ ...prev, status: statusValue }));\r\n      setSearchDataChanged(false);\r\n    } else {\r\n      setQueryParams((prev) => {\r\n        const { status: _, ...rest } = prev;\r\n        return { ...rest };\r\n      });\r\n      setSearchDataChanged(false);\r\n    }\r\n  };\r\n  const handleDistanceInputChange = (\r\n    event: React.ChangeEvent<HTMLInputElement>,\r\n  ) => {\r\n    if (Number.isInteger(Number(event.target.value))) {\r\n      setDistanceValue(Number(event.target.value));\r\n      if (locationValue?.location) {\r\n        setQueryParams((prev) => ({\r\n          ...prev,\r\n          distance: Number(event.target.value),\r\n        }));\r\n        setSearchDataChanged(false);\r\n      }\r\n      // setSearchDataChanged(true);\r\n    }\r\n  };\r\n  const handleClearFilter = () => {\r\n    setLocationValue(null);\r\n    setInputValue('');\r\n    setAvailableFrom(null);\r\n    setAvailableTo(null);\r\n    setStatusValue([...TruckStatuses]);\r\n    setDistanceValue(200);\r\n    setQueryParams({});\r\n    setSearchDataChanged(false);\r\n  };\r\n  const handleApplyFilter = () => {\r\n    const queryParams: Record<string, any> = {};\r\n    if (locationValue?.location) {\r\n      queryParams.lastLocation = locationValue.location.join(',');\r\n      queryParams.distance = distanceValue;\r\n    }\r\n    if (\r\n      statusValue.length !== 0 &&\r\n      statusValue.length !== TruckStatuses.length\r\n    ) {\r\n      queryParams.status = statusValue;\r\n    }\r\n\r\n    /*let from = availableFrom;\r\n    let to = availableTo;\r\n    if (!from && !to) {\r\n      from = new Date(Date.now() + 1000 * 60);\r\n    }\r\n    if (!to && from) {\r\n      to = new Date(from.getTime() + dateLag);\r\n    }\r\n    if (!from && to) {\r\n      from = new Date(to.getTime() - dateLag);\r\n    }\r\n    if (from !== availableFrom) {\r\n      setAvailableFrom(from);\r\n    }\r\n    if (to !== availableTo) {\r\n      setAvailableTo(to);\r\n    }\r\n    queryParams.availableAfter = from;\r\n    queryParams.availableBefore = to;*/\r\n    queryParams.availableAfter = availableFrom;\r\n    queryParams.availableBefore = availableTo;\r\n\r\n    setQueryParams(queryParams);\r\n    setSearchDataChanged(false);\r\n  };\r\n  // const createHandler = () => {\r\n  //   navigate('./create', {\r\n  //     relative: 'path',\r\n  //     state: { from: location },\r\n  //     replace: false,\r\n  //   });\r\n  // };\r\n  // const editHandler = () => {\r\n  //   navigate(`./edit/${selected[0]}`, {\r\n  //     relative: 'path',\r\n  //     state: { from: location },\r\n  //     replace: false,\r\n  //   });\r\n  // };\r\n  // const deleteHandler = () => {\r\n  //   mutate(`${selected[0]}`);\r\n  // };\r\n  return (\r\n    <Toolbar\r\n      sx={{\r\n        overflow: 'hidden',\r\n        pl: { sm: 2 },\r\n        pr: { xs: 1, sm: 1 },\r\n        ...(selected.length > 0 && {\r\n          bgcolor: (theme) =>\r\n            alpha(\r\n              theme.palette.primary.main,\r\n              theme.palette.action.activatedOpacity,\r\n            ),\r\n        }),\r\n      }}\r\n    >\r\n      {selected.length > 0 ? (\r\n        <Typography\r\n          sx={{ flex: '1 1 100%' }}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {selected.length} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          sx={{\r\n            flex: '1 1 100%',\r\n            whiteSpace: 'nowrap',\r\n            textOverflow: 'ellipsis',\r\n            overflow: 'hidden',\r\n          }}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          Trucks Nearby\r\n        </Typography>\r\n      )}\r\n      <Box\r\n        component=\"div\"\r\n        sx={{\r\n          '& .MuiTextField-root': { m: 1, width: '350px' },\r\n        }}\r\n      >\r\n        <Autocomplete\r\n          getOptionLabel={(option) =>\r\n            typeof option === 'string'\r\n              ? option\r\n              : `${option.name}, ${option.zipCode}, ${option.stateName}`\r\n          }\r\n          filterOptions={(x) => x}\r\n          options={options}\r\n          autoComplete\r\n          includeInputInList\r\n          filterSelectedOptions={false}\r\n          value={locationValue}\r\n          noOptionsText=\"No locations\"\r\n          onChange={handleLocationChange}\r\n          onInputChange={handleLocationInputChange}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label=\"Enter city, state or zip\"\r\n              size=\"small\"\r\n              fullWidth\r\n            />\r\n          )}\r\n          renderOption={(props, option) => (\r\n            <li {...props}>\r\n              <Grid container alignItems=\"center\">\r\n                <Grid item sx={{ display: 'flex', width: 44 }}>\r\n                  <LocationOnIcon sx={{ color: 'text.secondary' }} />\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  sx={{ width: 'calc(100% - 44px)', wordWrap: 'break-word' }}\r\n                >\r\n                  <Box component=\"span\" sx={{ fontWeight: 'regular' }}>\r\n                    {`${option.name}, ${option.stateCode}`}\r\n                  </Box>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    {`${option.zipCode}, ${option.stateName}`}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </li>\r\n          )}\r\n        />\r\n      </Box>\r\n      <Box\r\n        component=\"div\"\r\n        sx={{\r\n          '& .MuiTextField-root': { m: 1, width: '200px' },\r\n        }}\r\n      >\r\n        <DateTimePicker\r\n          label=\"Select available from\"\r\n          ampm={false}\r\n          disablePast={true}\r\n          maxDateTime={availableTo ? availableTo : undefined}\r\n          disableIgnoringDatePartForTimeValidation={true}\r\n          viewRenderers={{\r\n            hours: renderTimeViewClock,\r\n            minutes: renderTimeViewClock,\r\n            seconds: renderTimeViewClock,\r\n          }}\r\n          slotProps={{\r\n            textField: {\r\n              fullWidth: true,\r\n              size: 'small',\r\n              id: 'availableFrom',\r\n              name: 'Select available from',\r\n              onBlur: handleDateChange,\r\n            },\r\n          }}\r\n          value={availableFrom}\r\n          onChange={handleFromDateInputChange}\r\n          onClose={handleDateChange}\r\n          onError={handleFromDateOnError}\r\n        />\r\n      </Box>\r\n      <Box\r\n        component=\"div\"\r\n        sx={{\r\n          '& .MuiTextField-root': { m: 1, width: '200px' },\r\n        }}\r\n      >\r\n        <DateTimePicker\r\n          label=\"Select available to\"\r\n          ampm={false}\r\n          disablePast={true}\r\n          minDateTime={availableFrom ? availableFrom : undefined}\r\n          disableIgnoringDatePartForTimeValidation={true}\r\n          viewRenderers={{\r\n            hours: renderTimeViewClock,\r\n            minutes: renderTimeViewClock,\r\n            seconds: renderTimeViewClock,\r\n          }}\r\n          slotProps={{\r\n            textField: {\r\n              fullWidth: true,\r\n              size: 'small',\r\n              id: 'availableTo',\r\n              name: 'Select available to',\r\n              onBlur: handleDateChange,\r\n            },\r\n          }}\r\n          value={availableTo}\r\n          onChange={handleToDateInputChange}\r\n          onClose={handleDateChange}\r\n          onError={handleToDateOnError}\r\n        />\r\n      </Box>\r\n      <Box\r\n        component=\"div\"\r\n        sx={{\r\n          '& .MuiTextField-root': { m: 1, width: '140px' },\r\n        }}\r\n      >\r\n        <TextField\r\n          select\r\n          SelectProps={{\r\n            multiple: true,\r\n            open: statusOpen,\r\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n            //@ts-ignore\r\n            renderValue: (selected: TruckStatus[]) => selected.join(', '),\r\n            onOpen: handleStatusOpen,\r\n            onClose: handleStatusClose,\r\n          }}\r\n          label=\"Select Status\"\r\n          value={statusValue}\r\n          onChange={handleStatusInputChange}\r\n          onKeyUpCapture={handleStatusKeyUp}\r\n          onKeyDownCapture={handleStatusKeyDown}\r\n          onBlur={handleStatusChange}\r\n          size=\"small\"\r\n          fullWidth\r\n          title={statusValue.join(', ')}\r\n        >\r\n          {TruckStatuses.map((status) => (\r\n            <MenuItem key={status} value={status}>\r\n              <Checkbox\r\n                checked={statusValue.indexOf(status as TruckStatus) > -1}\r\n                id={status}\r\n              />\r\n              <ListItemText primary={status} />\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n      </Box>\r\n      <Box\r\n        component=\"div\"\r\n        sx={{\r\n          '& .MuiTextField-root': { m: 1, width: '140px' },\r\n        }}\r\n      >\r\n        <TextField\r\n          select\r\n          label=\"Select Distance\"\r\n          value={distanceValue}\r\n          onChange={handleDistanceInputChange}\r\n          size=\"small\"\r\n          fullWidth\r\n        >\r\n          {Array.from(\r\n            { length: (1000 - 50) / 50 + 1 },\r\n            (_, index) => 50 + index * 50,\r\n          ).map((option) => (\r\n            <MenuItem key={option} value={option}>\r\n              {option}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n      </Box>\r\n      <Tooltip title=\"Filter list\">\r\n        {searchDataChanged ||\r\n        !(\r\n          locationValue ||\r\n          availableFrom ||\r\n          availableTo ||\r\n          (statusValue.length !== 0 &&\r\n            statusValue.length !== TruckStatuses.length)\r\n        ) ? (\r\n          <span>\r\n            <IconButton\r\n              disabled={\r\n                ((!locationValue || !distanceValue) &&\r\n                  !(\r\n                    availableFrom ||\r\n                    availableTo ||\r\n                    (statusValue.length !== 0 &&\r\n                      statusValue.length !== TruckStatuses.length)\r\n                  )) ||\r\n                isFromDateError ||\r\n                isToDateError\r\n              }\r\n              onClick={handleApplyFilter}\r\n            >\r\n              <FilterListIcon />\r\n            </IconButton>\r\n          </span>\r\n        ) : (\r\n          <span>\r\n            <IconButton onClick={handleClearFilter}>\r\n              <FilterListOffIcon />\r\n            </IconButton>\r\n          </span>\r\n        )}\r\n      </Tooltip>\r\n      <Loader visible={isLoading} />\r\n    </Toolbar>\r\n  );\r\n}\r\n\r\nexport default function EnhancedTable() {\r\n  const [order, setOrder] = React.useState<Order | undefined>(undefined);\r\n  const [orderBy, setOrderBy] = React.useState<keyof Truck | undefined>(\r\n    undefined,\r\n  );\r\n  const [selected, setSelected] = React.useState<readonly string[]>([]);\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState<number>(15);\r\n  const [queryParams, setQueryParams] = React.useState<Record<string, any>>({\r\n    status: ['Available'],\r\n  });\r\n  const tableContainerRef = React.useRef(null);\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const setSnackbarMessage = useSnackbar();\r\n  const [, setMapData] = useMap();\r\n\r\n  const {\r\n    isLoading,\r\n    isFetching,\r\n    data: { items, total } = { items: [], total: 0 },\r\n  } = useQuery({\r\n    queryKey: ['trucks', page, rowsPerPage, orderBy, order, queryParams],\r\n    queryFn: TrucksQuery,\r\n    keepPreviousData: true,\r\n    retry: false,\r\n    onError: (error: Error) => {\r\n      setSnackbarMessage({\r\n        severity: 'error',\r\n        message: error instanceof Error ? error.message : JSON.stringify(error),\r\n      });\r\n    },\r\n  });\r\n  const rows = items || [];\r\n\r\n  React.useEffect(() => {\r\n    if (tableContainerRef.current) {\r\n      const container = tableContainerRef.current as HTMLElement;\r\n      container.scrollTo({\r\n        top: 0,\r\n        left: 0,\r\n        behavior: 'smooth',\r\n      });\r\n    }\r\n  }, [rows]);\r\n\r\n  React.useEffect(() => {\r\n    const newSelected: string[] = [];\r\n    selected.forEach((selectedItem) => {\r\n      const selectedRow = rows.find((row) => row.id === selectedItem);\r\n      if (selectedRow) {\r\n        newSelected.push(selectedItem);\r\n      }\r\n    });\r\n    setSelected(newSelected);\r\n  }, [rows]);\r\n\r\n  const handleRequestSort = (\r\n    event: React.MouseEvent<unknown>,\r\n    property: keyof Truck,\r\n  ) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    const isDesc = orderBy === property && order === 'desc';\r\n    if (isDesc) {\r\n      setOrder(undefined);\r\n      setOrderBy(undefined);\r\n    } else {\r\n      setOrder(isAsc ? 'desc' : 'asc');\r\n      setOrderBy(property);\r\n    }\r\n  };\r\n\r\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (event.target.checked) {\r\n      const newSelected = rows.map((n: Truck) => n.id);\r\n      setSelected(newSelected);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (\r\n    event: React.MouseEvent<unknown>,\r\n    item: (typeof rows)[number],\r\n  ) => {\r\n    navigate(`./view/${item.id}`, {\r\n      relative: 'path',\r\n      state: { from: location },\r\n      replace: false,\r\n    });\r\n  };\r\n\r\n  const handleSelect = (event: React.MouseEvent<unknown>, name: string) => {\r\n    event.stopPropagation();\r\n    // const selectedIndex = selected.indexOf(name);\r\n    // let newSelected: readonly string[] = [];\r\n    //\r\n    // if (selectedIndex === -1) {\r\n    //     newSelected = newSelected.concat(selected, name);\r\n    // } else if (selectedIndex === 0) {\r\n    //     newSelected = newSelected.concat(selected.slice(1));\r\n    // } else if (selectedIndex === selected.length - 1) {\r\n    //     newSelected = newSelected.concat(selected.slice(0, -1));\r\n    // } else if (selectedIndex > 0) {\r\n    //     newSelected = newSelected.concat(\r\n    //         selected.slice(0, selectedIndex),\r\n    //         selected.slice(selectedIndex + 1),\r\n    //     );\r\n    // }\r\n    //\r\n    // setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event: unknown, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (\r\n    event: React.ChangeEvent<HTMLInputElement>,\r\n  ) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const isSelected = (name: string) => selected.indexOf(name) !== -1;\r\n\r\n  return (\r\n    <Box sx={{ width: '100%', height: '100%' }}>\r\n      <Paper sx={{ width: '100%', height: '100%', backgroundColor: 'unset' }}>\r\n        <EnhancedTableToolbar\r\n          selected={selected}\r\n          setQueryParams={(query) => {\r\n            setQueryParams(query);\r\n            setPage(0);\r\n          }}\r\n        />\r\n        <TableContainer\r\n          ref={tableContainerRef}\r\n          sx={{ height: 'calc(100% - 115px)' }}\r\n        >\r\n          <Table\r\n            sx={{ minWidth: 750 }}\r\n            aria-labelledby=\"tableTitle\"\r\n            size=\"small\"\r\n            stickyHeader\r\n          >\r\n            <EnhancedTableHead\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {rows.map((row, index) => {\r\n                const isItemSelected = isSelected(`${row.id}`);\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    onDoubleClick={(event) => handleClick(event, row)}\r\n                    role=\"checkbox\"\r\n                    aria-checked={isItemSelected}\r\n                    tabIndex={-1}\r\n                    key={row.id}\r\n                    selected={isItemSelected}\r\n                    sx={{ cursor: 'pointer' }}\r\n                  >\r\n                    <StyledTableCell padding=\"checkbox\">\r\n                      <ReserveTruckButton truck={row} index={index} />\r\n                    </StyledTableCell>\r\n                    {headCells.map((cell) => {\r\n                      const cellData = cell.getData(row, setMapData);\r\n                      return (\r\n                        <StyledTableCell\r\n                          key={cell.id}\r\n                          title={cellData.title}\r\n                          align={cell.numeric ? 'right' : 'center'}\r\n                        >\r\n                          {cellData.data}\r\n                        </StyledTableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 15, 20, 25, 35, 50]}\r\n          component=\"div\"\r\n          count={total}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <Loader visible={isLoading || isFetching} />\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { AlertColor } from '@mui/material/Alert/Alert';\r\n\r\nexport const LangPriorities = ['EN', 'UA', 'ES', 'RU'] as const;\r\n\r\nexport const PersonTypes = [\r\n  'Owner',\r\n  'OwnerDriver',\r\n  'Coordinator',\r\n  'CoordinatorDriver',\r\n  'Driver',\r\n] as const;\r\n\r\nexport const UserRoles = ['Admin', 'Super Admin'] as const;\r\n\r\nexport const CustomerTypes = [\r\n  'BROKER DOMESTIC',\r\n  'BROKER INTERNATIONAL',\r\n  'FREIGHT FORWARDER DOMESTIC',\r\n  'FREIGHT FORWARDER INTERNATIONAL',\r\n  'SHIPPER/CONSIGNEE DOMESTIC',\r\n  'SHIPPER/CONSIGNEE INTERNATIONAL',\r\n  'OTHER',\r\n] as const;\r\n\r\nexport const TruckTypes = [\r\n  'Cargo van',\r\n  'Reefer van',\r\n  'Box truck',\r\n  'Box truck Reefer',\r\n  'Straight truck',\r\n  'Hotshot',\r\n  'Tented box',\r\n] as const;\r\n\r\nexport const TruckStatuses = [\r\n  'Available',\r\n  'Not Available',\r\n  'Will be available',\r\n  'On route',\r\n] as const;\r\n\r\nexport const TruckCrossborders = ['Yes', 'No'] as const;\r\n\r\nexport const TruckCertificates = [\r\n  'Hazmat',\r\n  'Tsa',\r\n  'TWIC',\r\n  'Tanker Endorsement',\r\n] as const;\r\n\r\nexport const TruckEquipments = [\r\n  'Dock height risers',\r\n  'Air ride',\r\n  'Lift gate',\r\n  'Keep from freezing',\r\n  'ICC bar',\r\n  'Vertical E-track',\r\n  'Horizontal E-track',\r\n  'Pallet jack',\r\n  'PPE',\r\n  'Ramps',\r\n  'Straps',\r\n  'Loads bars',\r\n  'Blankets',\r\n  'Pads',\r\n  'Fire extinguisher',\r\n  'Metal hooks',\r\n  'Reefer',\r\n  'Heater',\r\n] as const;\r\n\r\nexport type Order = 'asc' | 'desc';\r\nexport type QueryKey<T> = readonly [\r\n  key: string,\r\n  page: number,\r\n  rowsPerPage: number,\r\n  orderBy?: string,\r\n  order?: Order,\r\n  queryParams?: T,\r\n];\r\n// export type BaseQuery = {\r\n//   readonly queryKey: QueryKey;\r\n// };\r\nexport type Query<T> = {\r\n  readonly queryKey: QueryKey<T>;\r\n};\r\nexport type QuerySingleKey = readonly [key: string, recordId: string];\r\nexport type QuerySingle = {\r\n  readonly queryKey: QuerySingleKey;\r\n};\r\nexport type Result<T> = {\r\n  items: T[];\r\n  limit: number;\r\n  offset: number;\r\n  total: number;\r\n};\r\nexport type QueryFn = (query: Query<{ search: any }>) => Promise<Result<any>>;\r\n\r\nexport type UserDataType = {\r\n  username: string;\r\n  password: string;\r\n} & Partial<User>;\r\nexport interface AuthContextType {\r\n  user: UserDataType | null;\r\n  signin: (\r\n    username: string,\r\n    password: string,\r\n    callback: (user: UserDataType | null) => void,\r\n  ) => void;\r\n  signout: (callback: VoidFunction) => void;\r\n}\r\nexport type SnackbarMessage = {\r\n  message: string;\r\n  severity: AlertColor;\r\n  handleClose?: (event?: React.SyntheticEvent | Event, reason?: string) => void;\r\n};\r\nexport type PersonType = (typeof PersonTypes)[number];\r\nexport type LangPriority = (typeof LangPriorities)[number];\r\nexport type UserRole = (typeof UserRoles)[number];\r\nexport type CustomerType = (typeof CustomerTypes)[number];\r\nexport type TruckType = (typeof TruckTypes)[number];\r\nexport type TruckStatus = (typeof TruckStatuses)[number];\r\nexport type TruckCrossborder = (typeof TruckCrossborders)[number];\r\nexport type TruckCertificate = (typeof TruckCertificates)[number];\r\nexport type TruckEquipment = (typeof TruckEquipments)[number];\r\n\r\nexport type GeoPoint = [number, number];\r\n\r\nexport interface Person {\r\n  id: string;\r\n  fullName: string;\r\n  type: PersonType;\r\n  phone?: string;\r\n}\r\n\r\nexport interface Owner extends Person {\r\n  type: PersonType;\r\n  phone: string;\r\n  phone2?: string;\r\n  email: string;\r\n  address: string;\r\n  ownTrucks?: Truck[];\r\n  coordinators?: Coordinator[];\r\n  drivers?: Driver[];\r\n}\r\n\r\nexport interface CreateOwner {\r\n  fullName?: string;\r\n  birthDate?: Date;\r\n  citizenship?: string;\r\n  languagePriority?: LangPriority;\r\n  hiredBy?: string;\r\n  hireDate?: Date;\r\n  snn?: string;\r\n  company?: string;\r\n  insurancePolicy?: string;\r\n  insurancePolicyExp?: Date;\r\n  address?: string;\r\n  phone?: string;\r\n  phone2?: string;\r\n  email?: string;\r\n  emergencyContactName?: string;\r\n  emergencyContactRel?: string;\r\n  emergencyContactPhone?: string;\r\n  appLogin?: string;\r\n  appPass?: string;\r\n  notes?: string;\r\n}\r\n\r\nexport interface UpdateOwner extends Partial<CreateOwner> {\r\n  id: string;\r\n}\r\n\r\nexport interface CreateOwnerDriver {\r\n  fullName?: string;\r\n  birthDate?: Date;\r\n  citizenship?: string;\r\n  languagePriority?: LangPriority;\r\n  driverLicenceNumber?: string;\r\n  driverLicenceState?: string;\r\n  driverLicenceExp?: Date;\r\n  idDocId?: string;\r\n  idDocType?: string;\r\n  idDocExp?: Date;\r\n  hiredBy?: string;\r\n  hireDate?: Date;\r\n  snn?: string;\r\n  company?: string;\r\n  insurancePolicy?: string;\r\n  insurancePolicyExp?: Date;\r\n  address?: string;\r\n  phone?: string;\r\n  phone2?: string;\r\n  email?: string;\r\n  emergencyContactName?: string;\r\n  emergencyContactRel?: string;\r\n  emergencyContactPhone?: string;\r\n  appLogin?: string;\r\n  appPass?: string;\r\n  notes?: string;\r\n}\r\n\r\nexport interface UpdateOwnerDriver extends Partial<CreateOwnerDriver> {\r\n  id: string;\r\n}\r\n\r\nexport interface Coordinator extends Person {\r\n  type: PersonType;\r\n  phone: string;\r\n  phone2?: string;\r\n  email: string;\r\n  address: string;\r\n  coordinateTrucks?: Truck[];\r\n  owner: Owner;\r\n}\r\n\r\nexport interface CreateCoordinator {\r\n  fullName?: string;\r\n  birthDate?: Date;\r\n  citizenship?: string;\r\n  languagePriority?: LangPriority;\r\n  hiredBy?: string;\r\n  hireDate?: Date;\r\n  snn?: string;\r\n  company?: string;\r\n  insurancePolicy?: string;\r\n  insurancePolicyExp?: Date;\r\n  address?: string;\r\n  phone?: string;\r\n  phone2?: string;\r\n  email?: string;\r\n  emergencyContactName?: string;\r\n  emergencyContactRel?: string;\r\n  emergencyContactPhone?: string;\r\n  owner?: Owner | null;\r\n  notes?: string;\r\n}\r\n\r\nexport interface UpdateCoordinator extends Partial<CreateCoordinator> {\r\n  id: string;\r\n}\r\n\r\nexport interface CreateCoordinatorDriver {\r\n  fullName?: string;\r\n  birthDate?: Date;\r\n  citizenship?: string;\r\n  languagePriority?: LangPriority;\r\n  driverLicenceNumber?: string;\r\n  driverLicenceState?: string;\r\n  driverLicenceExp?: Date;\r\n  idDocId?: string;\r\n  idDocType?: string;\r\n  idDocExp?: Date;\r\n  hiredBy?: string;\r\n  hireDate?: Date;\r\n  snn?: string;\r\n  company?: string;\r\n  insurancePolicy?: string;\r\n  insurancePolicyExp?: Date;\r\n  address?: string;\r\n  phone?: string;\r\n  phone2?: string;\r\n  email?: string;\r\n  emergencyContactName?: string;\r\n  emergencyContactRel?: string;\r\n  emergencyContactPhone?: string;\r\n  appLogin?: string;\r\n  appPass?: string;\r\n  owner?: Owner | null;\r\n  notes?: string;\r\n}\r\n\r\nexport interface UpdateCoordinatorDriver\r\n  extends Partial<CreateCoordinatorDriver> {\r\n  id: string;\r\n}\r\n\r\nexport interface Driver extends Person {\r\n  type: PersonType;\r\n  phone: string;\r\n  phone2?: string;\r\n  email?: string;\r\n  address?: string;\r\n  driveTrucks?: Truck[];\r\n  owner: Owner;\r\n}\r\n\r\nexport interface CreateDriver {\r\n  fullName?: string;\r\n  birthDate?: Date;\r\n  citizenship?: string;\r\n  languagePriority?: LangPriority;\r\n  driverLicenceNumber?: string;\r\n  driverLicenceState?: string;\r\n  driverLicenceExp?: Date;\r\n  idDocId?: string;\r\n  idDocType?: string;\r\n  idDocExp?: Date;\r\n  hiredBy?: string;\r\n  hireDate?: Date;\r\n  address?: string;\r\n  phone?: string;\r\n  phone2?: string;\r\n  email?: string;\r\n  emergencyContactName?: string;\r\n  emergencyContactRel?: string;\r\n  emergencyContactPhone?: string;\r\n  appLogin?: string;\r\n  appPass?: string;\r\n  owner?: Owner | null;\r\n  notes?: string;\r\n}\r\n\r\nexport interface UpdateDriver extends Partial<CreateDriver> {\r\n  id: string;\r\n}\r\n\r\nexport interface Truck {\r\n  id: string;\r\n  truckNumber: number;\r\n  status: TruckStatus;\r\n  lastLocation?: GeoPoint;\r\n  lastCity?: Location;\r\n  locationUpdatedAt?: string;\r\n  availabilityLocation?: GeoPoint;\r\n  availabilityCity?: Location;\r\n  availabilityAt?: string;\r\n  milesHaversine?: number;\r\n  milesByRoads?: number;\r\n  crossborder: TruckCrossborder;\r\n  certificate: TruckCertificate;\r\n  type: TruckType;\r\n  equipment?: TruckEquipment[];\r\n  payload?: number;\r\n  grossWeight: string;\r\n  make: string;\r\n  model: string;\r\n  year: number;\r\n  color: string;\r\n  vinCode: string;\r\n  licencePlate: string;\r\n  insideDims: string;\r\n  doorDims?: string;\r\n  owner?: Owner;\r\n  coordinator?: Coordinator;\r\n  driver?: Driver;\r\n  reservedAt?: string; //Date;\r\n  reservedBy?: User;\r\n}\r\n\r\nexport interface TruckForMap {\r\n  id: string;\r\n  truckNumber: number;\r\n  status: TruckStatus;\r\n  lastLocation?: GeoPoint;\r\n}\r\n\r\nexport interface CreateTruck {\r\n  truckNumber?: number;\r\n  status?: TruckStatus;\r\n  crossborder?: TruckCrossborder;\r\n  certificate?: TruckCertificate;\r\n  type?: TruckType;\r\n  equipment?: TruckEquipment[];\r\n  payload?: number;\r\n  grossWeight?: string;\r\n  make?: string;\r\n  model?: string;\r\n  year?: number;\r\n  color?: string;\r\n  vinCode?: string;\r\n  licencePlate?: string;\r\n  insideDims?: string;\r\n  doorDims?: string;\r\n  owner?: Owner | null;\r\n  coordinator?: Coordinator | null;\r\n  driver?: Driver | null;\r\n}\r\n\r\nexport interface UpdateTruck extends Partial<CreateTruck> {\r\n  id: string;\r\n  reservedAt?: Date | null;\r\n  status?: TruckStatus;\r\n  availabilityLocation?: GeoPoint | null;\r\n  availabilityAt?: Date;\r\n}\r\n\r\nexport interface Load {\r\n  id: string;\r\n  loadNumber: number;\r\n  pick?: google.maps.GeocoderResult;\r\n  pickLocation?: Location;\r\n  pickDate?: Date;\r\n  deliver?: google.maps.GeocoderResult;\r\n  deliverLocation?: Location;\r\n  deliverDate?: Date;\r\n  milesByRoads?: number;\r\n  milesHaversine?: number;\r\n  weight: string;\r\n  truckType: TruckType[];\r\n  rate?: number;\r\n  bookedByUser?: User;\r\n  bookedByCompany?: string;\r\n  dispatchers?: User[];\r\n  checkInAs?: string;\r\n  truck?: Truck;\r\n}\r\n\r\nexport interface CreateLoad {\r\n  pick?: google.maps.GeocoderResult | null;\r\n  pickDate?: Date;\r\n  deliver?: google.maps.GeocoderResult | null;\r\n  deliverDate?: Date;\r\n  weight?: string;\r\n  truckType?: TruckType[];\r\n  rate?: number;\r\n  bookedByUser?: User | null;\r\n  bookedByCompany?: string;\r\n  dispatchers?: User[];\r\n  checkInAs?: string;\r\n  truck?: Truck | null;\r\n}\r\n\r\nexport interface UpdateLoad extends Partial<CreateLoad> {\r\n  id: string;\r\n}\r\n\r\nexport interface Customer {\r\n  id: string;\r\n  name: string;\r\n  type: CustomerType;\r\n  address: string;\r\n  address2?: string;\r\n  city: string;\r\n  state: string;\r\n  zipCode: string;\r\n  phone: string;\r\n  fax?: string;\r\n  email: string;\r\n  website?: string;\r\n}\r\n\r\nexport interface CreateCustomer {\r\n  name?: string;\r\n  type?: CustomerType;\r\n  address?: string;\r\n  address2?: string;\r\n  city?: string;\r\n  state?: string;\r\n  zipCode?: string;\r\n  phone?: string;\r\n  fax?: string;\r\n  email?: string;\r\n  website?: string;\r\n}\r\n\r\nexport interface UpdateCustomer extends Partial<CreateCustomer> {\r\n  id: string;\r\n}\r\nexport interface Facility {\r\n  id: string;\r\n  readonly name: string;\r\n  readonly address: string;\r\n  readonly address2?: string;\r\n  readonly facilityLocation: GeoPoint;\r\n}\r\n\r\nexport interface CreateFacility {\r\n  readonly name?: string;\r\n  readonly address?: string;\r\n  readonly address2?: string;\r\n  readonly facilityLocation?: GeoPoint;\r\n}\r\n\r\nexport interface UpdateFacility extends Partial<CreateFacility> {\r\n  id: string;\r\n}\r\n\r\nexport interface Location {\r\n  id: string;\r\n  zipCode: string;\r\n  name: string;\r\n  stateCode: string;\r\n  stateName: string;\r\n  location: GeoPoint;\r\n}\r\n\r\nexport type CreateLocation = Omit<Location, 'id'>;\r\n\r\nexport interface UpdateLocation extends Partial<CreateLocation> {\r\n  id: string;\r\n}\r\n\r\nexport interface User {\r\n  id: string;\r\n  fullName: string;\r\n  phone?: string;\r\n  userRole: UserRole;\r\n  jobTitle: string;\r\n  email: string;\r\n}\r\n\r\nexport interface CreateUser extends Omit<User, 'id'> {\r\n  password?: string;\r\n}\r\n\r\nexport interface UpdateUser extends Partial<CreateUser> {\r\n  id: string;\r\n}\r\n\r\nexport interface File {\r\n  id: string;\r\n  filename: string;\r\n  contentType: string;\r\n  contentLength: number;\r\n  comment?: string;\r\n}\r\n","import { getDefaultState } from './mutation'\nimport { notifyManager } from './notifyManager'\nimport { Subscribable } from './subscribable'\nimport { shallowEqualObjects } from './utils'\nimport type { QueryClient } from './queryClient'\nimport type {\n  MutateOptions,\n  MutationObserverBaseResult,\n  MutationObserverOptions,\n  MutationObserverResult,\n} from './types'\nimport type { Action, Mutation } from './mutation'\n\n// TYPES\n\ntype MutationObserverListener<TData, TError, TVariables, TContext> = (\n  result: MutationObserverResult<TData, TError, TVariables, TContext>,\n) => void\n\ninterface NotifyOptions {\n  listeners?: boolean\n  onError?: boolean\n  onSuccess?: boolean\n}\n\n// CLASS\n\nexport class MutationObserver<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n> extends Subscribable<\n  MutationObserverListener<TData, TError, TVariables, TContext>\n> {\n  options!: MutationObserverOptions<TData, TError, TVariables, TContext>\n\n  private client: QueryClient\n  private currentResult!: MutationObserverResult<\n    TData,\n    TError,\n    TVariables,\n    TContext\n  >\n  private currentMutation?: Mutation<TData, TError, TVariables, TContext>\n  private mutateOptions?: MutateOptions<TData, TError, TVariables, TContext>\n\n  constructor(\n    client: QueryClient,\n    options: MutationObserverOptions<TData, TError, TVariables, TContext>,\n  ) {\n    super()\n\n    this.client = client\n    this.setOptions(options)\n    this.bindMethods()\n    this.updateResult()\n  }\n\n  protected bindMethods(): void {\n    this.mutate = this.mutate.bind(this)\n    this.reset = this.reset.bind(this)\n  }\n\n  setOptions(\n    options?: MutationObserverOptions<TData, TError, TVariables, TContext>,\n  ) {\n    const prevOptions = this.options\n    this.options = this.client.defaultMutationOptions(options)\n    if (!shallowEqualObjects(prevOptions, this.options)) {\n      this.client.getMutationCache().notify({\n        type: 'observerOptionsUpdated',\n        mutation: this.currentMutation,\n        observer: this,\n      })\n    }\n    this.currentMutation?.setOptions(this.options)\n  }\n\n  protected onUnsubscribe(): void {\n    if (!this.hasListeners()) {\n      this.currentMutation?.removeObserver(this)\n    }\n  }\n\n  onMutationUpdate(action: Action<TData, TError, TVariables, TContext>): void {\n    this.updateResult()\n\n    // Determine which callbacks to trigger\n    const notifyOptions: NotifyOptions = {\n      listeners: true,\n    }\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = true\n    } else if (action.type === 'error') {\n      notifyOptions.onError = true\n    }\n\n    this.notify(notifyOptions)\n  }\n\n  getCurrentResult(): MutationObserverResult<\n    TData,\n    TError,\n    TVariables,\n    TContext\n  > {\n    return this.currentResult\n  }\n\n  reset(): void {\n    this.currentMutation = undefined\n    this.updateResult()\n    this.notify({ listeners: true })\n  }\n\n  mutate(\n    variables?: TVariables,\n    options?: MutateOptions<TData, TError, TVariables, TContext>,\n  ): Promise<TData> {\n    this.mutateOptions = options\n\n    if (this.currentMutation) {\n      this.currentMutation.removeObserver(this)\n    }\n\n    this.currentMutation = this.client.getMutationCache().build(this.client, {\n      ...this.options,\n      variables:\n        typeof variables !== 'undefined' ? variables : this.options.variables,\n    })\n\n    this.currentMutation.addObserver(this)\n\n    return this.currentMutation.execute()\n  }\n\n  private updateResult(): void {\n    const state = this.currentMutation\n      ? this.currentMutation.state\n      : getDefaultState<TData, TError, TVariables, TContext>()\n\n    const result: MutationObserverBaseResult<\n      TData,\n      TError,\n      TVariables,\n      TContext\n    > = {\n      ...state,\n      isLoading: state.status === 'loading',\n      isSuccess: state.status === 'success',\n      isError: state.status === 'error',\n      isIdle: state.status === 'idle',\n      mutate: this.mutate,\n      reset: this.reset,\n    }\n\n    this.currentResult = result as MutationObserverResult<\n      TData,\n      TError,\n      TVariables,\n      TContext\n    >\n  }\n\n  private notify(options: NotifyOptions) {\n    notifyManager.batch(() => {\n      // First trigger the mutate callbacks\n      if (this.mutateOptions && this.hasListeners()) {\n        if (options.onSuccess) {\n          this.mutateOptions.onSuccess?.(\n            this.currentResult.data!,\n            this.currentResult.variables!,\n            this.currentResult.context!,\n          )\n          this.mutateOptions.onSettled?.(\n            this.currentResult.data!,\n            null,\n            this.currentResult.variables!,\n            this.currentResult.context,\n          )\n        } else if (options.onError) {\n          this.mutateOptions.onError?.(\n            this.currentResult.error!,\n            this.currentResult.variables!,\n            this.currentResult.context,\n          )\n          this.mutateOptions.onSettled?.(\n            undefined,\n            this.currentResult.error,\n            this.currentResult.variables!,\n            this.currentResult.context,\n          )\n        }\n      }\n\n      // Then trigger the listeners\n      if (options.listeners) {\n        this.listeners.forEach(({ listener }) => {\n          listener(this.currentResult)\n        })\n      }\n    })\n  }\n}\n","'use client'\nimport * as React from 'react'\nimport {\n  MutationObserver,\n  notifyManager,\n  parseMutationArgs,\n} from '@tanstack/query-core'\nimport { useSyncExternalStore } from './useSyncExternalStore'\n\nimport { useQueryClient } from './QueryClientProvider'\nimport { shouldThrowError } from './utils'\nimport type { MutationFunction, MutationKey } from '@tanstack/query-core'\nimport type {\n  UseMutateFunction,\n  UseMutationOptions,\n  UseMutationResult,\n} from './types'\n\n// HOOK\n\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  options: UseMutationOptions<TData, TError, TVariables, TContext>,\n): UseMutationResult<TData, TError, TVariables, TContext>\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  mutationFn: MutationFunction<TData, TVariables>,\n  options?: Omit<\n    UseMutationOptions<TData, TError, TVariables, TContext>,\n    'mutationFn'\n  >,\n): UseMutationResult<TData, TError, TVariables, TContext>\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  mutationKey: MutationKey,\n  options?: Omit<\n    UseMutationOptions<TData, TError, TVariables, TContext>,\n    'mutationKey'\n  >,\n): UseMutationResult<TData, TError, TVariables, TContext>\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  mutationKey: MutationKey,\n  mutationFn?: MutationFunction<TData, TVariables>,\n  options?: Omit<\n    UseMutationOptions<TData, TError, TVariables, TContext>,\n    'mutationKey' | 'mutationFn'\n  >,\n): UseMutationResult<TData, TError, TVariables, TContext>\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  arg1:\n    | MutationKey\n    | MutationFunction<TData, TVariables>\n    | UseMutationOptions<TData, TError, TVariables, TContext>,\n  arg2?:\n    | MutationFunction<TData, TVariables>\n    | UseMutationOptions<TData, TError, TVariables, TContext>,\n  arg3?: UseMutationOptions<TData, TError, TVariables, TContext>,\n): UseMutationResult<TData, TError, TVariables, TContext> {\n  const options = parseMutationArgs(arg1, arg2, arg3)\n  const queryClient = useQueryClient({ context: options.context })\n\n  const [observer] = React.useState(\n    () =>\n      new MutationObserver<TData, TError, TVariables, TContext>(\n        queryClient,\n        options,\n      ),\n  )\n\n  React.useEffect(() => {\n    observer.setOptions(options)\n  }, [observer, options])\n\n  const result = useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) =>\n        observer.subscribe(notifyManager.batchCalls(onStoreChange)),\n      [observer],\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult(),\n  )\n\n  const mutate = React.useCallback<\n    UseMutateFunction<TData, TError, TVariables, TContext>\n  >(\n    (variables, mutateOptions) => {\n      observer.mutate(variables, mutateOptions).catch(noop)\n    },\n    [observer],\n  )\n\n  if (\n    result.error &&\n    shouldThrowError(observer.options.useErrorBoundary, [result.error])\n  ) {\n    throw result.error\n  }\n\n  return { ...result, mutate, mutateAsync: result.mutate }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nfunction noop() {}\n"],"names":["_excluded","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgCat","_ref","svgRef","title","titleId","props","id","xmlns","viewBox","ref","cx","cy","r","fill","strokeWidth","style","stroke","d","paintOrder","points","strokeLinecap","ForwardRef","SvgTruck","focusable","fillRule","LocationForGrid","location","onRefClick","addInfo","children","_React$useState","React","_React$useState2","_slicedToArray","value","setValue","_React$useState3","_React$useState4","items","setItems","_React$useState5","_React$useState6","geocoder","setGeocoder","setSearch","debounce","geocodeRequest","geocode","then","result","results","locationFromRequest","google","maps","LatLng","res","address_components","formatted_address","concat","lat","lng","geometry","location_type","GeocoderLocationType","APPROXIMATE","viewport","LatLngBounds","place_id","types","forEach","item","toStringLocation","catch","err","selected","find","option","includes","_jsxs","display","_jsx","Wrapper","_objectSpread","mapsSettings","render","status","setSnackbarMessage","useSnackbar","_useLoader","useLoader","setLoaderVisibility","Status","LOADING","FAILURE","severity","message","SUCCESS","window","Geocoder","textOverflow","overflow","textAlign","href","onClick","_Fragment","IconButton","size","event","stopPropagation","navigator","clipboard","writeText","ContentCopy","sx","height","width","reservationTime","calcReserveWillLast","reservedTill","reservedWillLast","Date","Math","ceil","ReserveTruckButton","truck","index","remainReserved","setRemainReserved","reservedAt","reservedBy","addMinutes","isReserved","interval","setInterval","clearInterval","queryClient","useQueryClient","_useMutation","useMutation","TruckUpdate","onSuccess","invalidateQueries","queryKey","refetchType","onError","error","mutate","labelId","isLoading","fullName","Button","m","lineHeight","fontSize","fullWidth","variant","color","onClickCapture","preventDefault","themeMode","localStorage","getItem","headCells","orderField","getData","row","data","truckNumber","numeric","disablePadding","label","person","coordinator","owner","path","type","firstRow","secondRow","getPath","getType","phone","undefined","equipment","join","firstRowPart1","insideDims","firstRowPart2","doorDims","payload","val","CatIcon","grey","TruckIcon","Avatar","bgcolor","green","margin","availabilityLocation","availabilityAt","toLocaleString","milesByRoads","toFixed","setMapData","lastLocation","locationUpdatedAt","StyledTableHead","styled","TableHead","backgroundColor","theme","palette","background","default","StyledTableCell","TableCell","_ref2","maxWidth","paddingTop","paddingBottom","whiteSpace","EnhancedTableHead","onSelectAllClick","order","orderBy","onRequestSort","numSelected","rowCount","TableRow","align","padding","map","headCell","sortDirection","TableSortLabel","active","hideSortIcon","direction","property","Box","component","visuallyHidden","EnhancedTableToolbar","setQueryParams","locationValue","setLocationValue","inputValue","setInputValue","locationsQueryParams","setLocationsQueryParams","_React$useState7","_React$useState8","options","setOptions","_React$useState9","_React$useState10","availableFrom","setAvailableFrom","_React$useState11","_React$useState12","availableTo","setAvailableTo","_React$useState13","_React$useState14","isFromDateError","setFromDateError","_React$useState15","_React$useState16","isToDateError","setToDateError","_React$useState17","_React$useState18","statusOpen","setStatusOpen","_React$useState19","_React$useState20","statusValue","setStatusValue","_React$useState21","_React$useState22","distanceValue","setDistanceValue","_React$useState23","_React$useState24","searchDataChanged","setSearchDataChanged","useLocation","useNavigate","TruckDelete","Error","JSON","stringify","search","_useQuery$data","useQuery","queryFn","modifyedQueryFn","LocationsQuery","keepPreviousData","retry","total","notSelectedItems","filter","_toConsumableArray","handleDateChange","prev","availableAfter","availableBefore","handleStatusClose","handleStatusChange","TruckStatuses","rest","_excluded2","Toolbar","pl","sm","pr","xs","alpha","primary","main","action","activatedOpacity","Typography","flex","Autocomplete","getOptionLabel","name","zipCode","stateName","filterOptions","x","autoComplete","includeInputInList","filterSelectedOptions","noOptionsText","onChange","newValue","distance","onInputChange","newInputValue","renderInput","params","TextField","renderOption","Grid","container","alignItems","LocationOnIcon","wordWrap","fontWeight","stateCode","DateTimePicker","ampm","disablePast","maxDateTime","disableIgnoringDatePartForTimeValidation","viewRenderers","hours","renderTimeViewClock","minutes","seconds","slotProps","textField","onBlur","onClose","minDateTime","select","SelectProps","multiple","open","renderValue","onOpen","onKeyUpCapture","onKeyDownCapture","MenuItem","Checkbox","checked","ListItemText","Number","isInteger","Array","from","_","Tooltip","disabled","queryParams","FilterListIcon","FilterListOffIcon","Loader","visible","EnhancedTable","_React$useState25","_React$useState26","setOrder","_React$useState27","_React$useState28","setOrderBy","_React$useState29","_React$useState30","setSelected","_React$useState31","_React$useState32","page","setPage","_React$useState33","_React$useState34","rowsPerPage","setRowsPerPage","_React$useState35","_React$useState36","tableContainerRef","navigate","_useMap","useMap","_useQuery2","TrucksQuery","isFetching","_useQuery2$data","_useQuery2$data2","rows","current","scrollTo","top","left","behavior","newSelected","selectedItem","push","Paper","query","TableContainer","Table","minWidth","stickyHeader","n","isAsc","TableBody","isItemSelected","hover","onDoubleClick","relative","state","replace","role","tabIndex","cursor","cell","cellData","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","LangPriorities","UserRoles","CustomerTypes","TruckTypes","TruckCrossborders","TruckCertificates","TruckEquipments","MutationObserver","_Subscribable","_inherits","_super","_createSuper","client","_this","_classCallCheck","bindMethods","updateResult","_createClass","reset","_this$currentMutation","prevOptions","defaultMutationOptions","shallowEqualObjects","getMutationCache","notify","mutation","currentMutation","observer","_this$currentMutation2","hasListeners","removeObserver","notifyOptions","listeners","currentResult","variables","mutateOptions","build","addObserver","execute","getDefaultState","isSuccess","isError","isIdle","_this2","notifyManager","batch","_this$mutateOptions$o","_this$mutateOptions","_this$mutateOptions$o2","_this$mutateOptions2","context","onSettled","_this$mutateOptions$o3","_this$mutateOptions3","_this$mutateOptions$o4","_this$mutateOptions4","listener","Subscribable","arg1","arg2","arg3","useSyncExternalStore","onStoreChange","subscribe","batchCalls","getCurrentResult","shouldThrowError","useErrorBoundary","noop"],"sourceRoot":""}