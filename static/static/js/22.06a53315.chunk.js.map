{"version":3,"file":"static/js/22.06a53315.chunk.js","mappings":"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","sources":["trucks/trucks.tsx","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/icons-material/Edit.js"],"sourcesContent":["import * as React from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\r\n\r\nimport { alpha, styled } from '@mui/material/styles';\r\nimport TextField from '@mui/material/TextField';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport Box from '@mui/material/Box';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableSortLabel from '@mui/material/TableSortLabel';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport FilterListIcon from '@mui/icons-material/FilterList';\r\nimport FilterListOffIcon from '@mui/icons-material/FilterListOff';\r\nimport { visuallyHidden } from '@mui/utils';\r\n\r\nimport Loader from '../components/Loader';\r\n\r\nimport { TrucksQuery, TruckDelete } from '../api';\r\nimport { useSnackbar } from '../hooks';\r\nimport { Order, Truck } from '../utils/dataTypes';\r\nimport { getPath, getType } from '../utils/queryHelpers';\r\n\r\ninterface HeadCell {\r\n  id: string;\r\n  disablePadding: boolean;\r\n  orderField?: keyof Truck;\r\n  getData: (row: Truck) => { data: JSX.Element | string; title?: string };\r\n  label: string;\r\n  numeric: boolean;\r\n}\r\n\r\nconst headCells: readonly HeadCell[] = [\r\n  {\r\n    id: 'truckNumber',\r\n    orderField: 'truckNumber',\r\n    getData: (row) => ({ data: `${row.truckNumber}` }),\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Truck Number',\r\n  },\r\n  {\r\n    id: 'mainContactInfo',\r\n    getData: (row) => {\r\n      const person = row.coordinator || row.owner;\r\n      let path = '';\r\n      let type = '';\r\n      let firstRow = '';\r\n      let secondRow = '';\r\n      if (person) {\r\n        path = `./${getPath(person)}/view/${person.id}`;\r\n        type = `${getType(person)} `;\r\n        firstRow = `${person.fullName}`;\r\n        secondRow = `${person?.phone}`;\r\n      }\r\n      return {\r\n        data: (\r\n          <span>\r\n            <b>{type}</b>\r\n            <a href={path} target=\"_blank\" onClick={stopPropagation}>\r\n              {firstRow}\r\n            </a>\r\n            <br />\r\n            <a\r\n              href={secondRow ? `tel:${secondRow}` : undefined}\r\n              target=\"_blank\"\r\n              onClick={stopPropagation}\r\n            >\r\n              {secondRow || ' '}\r\n            </a>\r\n          </span>\r\n        ),\r\n        title: type + '' + firstRow + '\\n' + secondRow,\r\n      };\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Main Contact info',\r\n  },\r\n  {\r\n    id: 'status',\r\n    orderField: 'status',\r\n    getData: (row) => ({ data: `${row.status}` }),\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Status',\r\n  },\r\n  {\r\n    id: 'location',\r\n    getData: (row) => {\r\n      if (row?.lastCity) {\r\n        const path = `./locations/view/${row.lastCity.id}`;\r\n        const firstRow = `${row.lastCity.name}, ${row.lastCity.stateCode}, ${row.lastCity.zipCode},`;\r\n        const secondRow = `${\r\n          row.locationUpdatedAt\r\n            ? new Date(row.locationUpdatedAt).toLocaleString()\r\n            : ''\r\n        }`;\r\n\r\n        return {\r\n          data: (\r\n            <span>\r\n              <a href={path} target=\"_blank\" onClick={stopPropagation}>\r\n                {firstRow}\r\n              </a>\r\n              <br />\r\n              {secondRow}\r\n            </span>\r\n          ),\r\n          title: firstRow + '\\n' + secondRow,\r\n        };\r\n      } else {\r\n        return { data: '' };\r\n      }\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Last known location',\r\n  },\r\n  {\r\n    id: 'truckInfo',\r\n    getData: (row) => {\r\n      const firstRow = row.type ? `${row.type}` : '';\r\n      const secondRow = row.equipment ? `${row.equipment.join(', ')}` : '';\r\n\r\n      return {\r\n        data: (\r\n          <span>\r\n            {firstRow}\r\n            <br />\r\n            {secondRow}\r\n          </span>\r\n        ),\r\n        title: firstRow + '\\n' + secondRow,\r\n      };\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Truck info',\r\n  },\r\n  {\r\n    id: 'dimsPayload',\r\n    getData: (row) => {\r\n      const firstRow = row.doorDims ? `${row.doorDims}` : '';\r\n      const secondRow = row.payload ? `${row.payload}` : '';\r\n\r\n      return {\r\n        data: (\r\n          <span>\r\n            {firstRow}\r\n            <br />\r\n            {secondRow}\r\n          </span>\r\n        ),\r\n        title: firstRow + '\\n' + secondRow,\r\n      };\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'DIMS/Payload',\r\n  },\r\n  {\r\n    id: 'driverInfo',\r\n    getData: (row) => {\r\n      const driver = row.driver;\r\n      let path = '';\r\n      let type = '';\r\n      let firstRow = '';\r\n      let secondRow = '';\r\n      if (driver) {\r\n        path = `./${getPath(driver)}/view/${driver.id}`;\r\n        type = `${getType(driver)} `;\r\n        firstRow = `${driver.fullName}`;\r\n        secondRow = `${driver.phone}`;\r\n      }\r\n      return {\r\n        data: (\r\n          <span>\r\n            <b>{type}</b>\r\n            <a\r\n              href={firstRow ? path : undefined}\r\n              target=\"_blank\"\r\n              onClick={stopPropagation}\r\n            >\r\n              {firstRow}\r\n            </a>\r\n            <br />\r\n            <a\r\n              href={secondRow ? `tel:${secondRow}` : undefined}\r\n              target=\"_blank\"\r\n              onClick={stopPropagation}\r\n            >\r\n              {secondRow || ' '}\r\n            </a>\r\n          </span>\r\n        ),\r\n        title: type + '' + firstRow + '\\n' + secondRow,\r\n      };\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Driver info',\r\n  },\r\n];\r\n\r\ninterface EnhancedTableProps {\r\n  numSelected: number;\r\n  onRequestSort: (\r\n    event: React.MouseEvent<unknown>,\r\n    property: keyof Truck,\r\n  ) => void;\r\n  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n  order: Order | undefined;\r\n  orderBy: string | undefined;\r\n  rowCount: number;\r\n}\r\n\r\nconst StyledTableHead = styled(TableHead)(({ theme }) => ({\r\n  backgroundColor: theme.palette.background.default,\r\n}));\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n  maxWidth: '100px',\r\n  paddingTop: '6px',\r\n  paddingBottom: '6px',\r\n  whiteSpace: 'nowrap',\r\n  textOverflow: 'ellipsis',\r\n  overflow: 'hidden',\r\n}));\r\n\r\nfunction stopPropagation(e: React.SyntheticEvent) {\r\n  e.stopPropagation();\r\n}\r\n\r\nfunction EnhancedTableHead(props: EnhancedTableProps) {\r\n  const {\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n  const createSortHandler =\r\n    (property: keyof Truck) => (event: React.MouseEvent<unknown>) => {\r\n      onRequestSort(event, property);\r\n    };\r\n\r\n  return (\r\n    <StyledTableHead>\r\n      <TableRow>\r\n        <StyledTableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            name={'enhanced-table-checkbox-select-all'}\r\n            color=\"primary\"\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{\r\n              'aria-label': 'enhanced-table-checkbox-select-all',\r\n            }}\r\n          />\r\n        </StyledTableCell>\r\n        {headCells.map((headCell) => (\r\n          <StyledTableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'center'}\r\n            padding={headCell.disablePadding ? 'none' : 'normal'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={headCell.orderField && orderBy === headCell.orderField}\r\n              hideSortIcon={!headCell.orderField}\r\n              direction={orderBy === headCell.orderField ? order : 'asc'}\r\n              onClick={\r\n                headCell.orderField\r\n                  ? createSortHandler(headCell.orderField)\r\n                  : () => {\r\n                      return;\r\n                    }\r\n              }\r\n            >\r\n              {headCell.label}\r\n              {headCell.orderField && orderBy === headCell.orderField ? (\r\n                <Box component=\"span\" sx={visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </Box>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </StyledTableCell>\r\n        ))}\r\n      </TableRow>\r\n    </StyledTableHead>\r\n  );\r\n}\r\n\r\ninterface EnhancedTableToolbarProps {\r\n  selected: readonly string[];\r\n  setQueryParams: React.Dispatch<React.SetStateAction<Record<string, number>>>;\r\n}\r\n\r\nfunction EnhancedTableToolbar(props: EnhancedTableToolbarProps) {\r\n  const { selected, setQueryParams } = props;\r\n  const [truckNumberSearch, setTruckNumberSearch] = React.useState<number>(0);\r\n  const [truckNumberChanged, setTruckNumberChanged] =\r\n    React.useState<boolean>(false);\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const queryClient = useQueryClient();\r\n\r\n  const setSnackbarMessage = useSnackbar();\r\n\r\n  const { mutate, isLoading } = useMutation(TruckDelete, {\r\n    onSuccess: () => {\r\n      setSnackbarMessage({\r\n        severity: 'success',\r\n        message: 'Deleted',\r\n      });\r\n      queryClient.invalidateQueries(['trucks']);\r\n    },\r\n    onError: (error: Error) => {\r\n      setSnackbarMessage({\r\n        severity: 'error',\r\n        message: error instanceof Error ? error.message : JSON.stringify(error),\r\n      });\r\n    },\r\n  });\r\n\r\n  const truckNumberHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (Number.isFinite(Number(event.target.value))) {\r\n      setTruckNumberSearch(Number(event.target.value));\r\n      setTruckNumberChanged(true);\r\n    }\r\n  };\r\n  const truckClearHandler = () => {\r\n    setTruckNumberChanged(false);\r\n    setTruckNumberSearch(0);\r\n    setQueryParams({});\r\n  };\r\n  const filterHandler = () => {\r\n    setTruckNumberChanged(false);\r\n    setQueryParams({ truckNumber: truckNumberSearch });\r\n  };\r\n  const createHandler = () => {\r\n    navigate('./create', {\r\n      relative: 'path',\r\n      state: { from: location },\r\n      replace: false,\r\n    });\r\n  };\r\n  const editHandler = () => {\r\n    navigate(`./edit/${selected[0]}`, {\r\n      relative: 'path',\r\n      state: { from: location },\r\n      replace: false,\r\n    });\r\n  };\r\n  const deleteHandler = () => {\r\n    mutate(`${selected[0]}`);\r\n  };\r\n\r\n  return (\r\n    <Toolbar\r\n      sx={{\r\n        pl: { sm: 2 },\r\n        pr: { xs: 1, sm: 1 },\r\n        ...(selected.length > 0 && {\r\n          bgcolor: (theme) =>\r\n            alpha(\r\n              theme.palette.primary.main,\r\n              theme.palette.action.activatedOpacity,\r\n            ),\r\n        }),\r\n      }}\r\n    >\r\n      {selected.length > 0 ? (\r\n        <Typography\r\n          sx={{ flex: '1 1 100%' }}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {selected.length} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          sx={{\r\n            flex: '1 1 100%',\r\n            whiteSpace: 'nowrap',\r\n            textOverflow: 'ellipsis',\r\n            overflow: 'hidden',\r\n          }}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          Trucks\r\n        </Typography>\r\n      )}\r\n      <TextField\r\n        label=\"Truck Number\"\r\n        value={truckNumberSearch || ''}\r\n        onChange={truckNumberHandler}\r\n        size=\"small\"\r\n      />\r\n      <Tooltip title=\"Filter list\">\r\n        {(truckNumberChanged || !truckNumberSearch) &&\r\n        !(truckNumberChanged && !truckNumberSearch) ? (\r\n          <span>\r\n            <IconButton disabled={!truckNumberSearch} onClick={filterHandler}>\r\n              <FilterListIcon />\r\n            </IconButton>\r\n          </span>\r\n        ) : (\r\n          <span>\r\n            <IconButton onClick={truckClearHandler}>\r\n              <FilterListOffIcon />\r\n            </IconButton>\r\n          </span>\r\n        )}\r\n      </Tooltip>\r\n      <Box sx={{ p: 1, display: 'inline-flex' }}>\r\n        <Tooltip title=\"Create\">\r\n          <span>\r\n            <IconButton onClick={createHandler}>\r\n              <AddIcon />\r\n            </IconButton>\r\n          </span>\r\n        </Tooltip>\r\n        <Tooltip title=\"Edit\">\r\n          <span>\r\n            <IconButton disabled={selected.length !== 1} onClick={editHandler}>\r\n              <EditIcon />\r\n            </IconButton>\r\n          </span>\r\n        </Tooltip>\r\n        <Tooltip title=\"Delete\">\r\n          <span>\r\n            <IconButton\r\n              disabled={selected.length !== 1}\r\n              onClick={deleteHandler}\r\n            >\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </span>\r\n        </Tooltip>\r\n      </Box>\r\n      <Loader visible={isLoading} />\r\n    </Toolbar>\r\n  );\r\n}\r\n\r\nexport default function EnhancedTable() {\r\n  const [order, setOrder] = React.useState<Order | undefined>('asc');\r\n  const [orderBy, setOrderBy] = React.useState<keyof Truck | undefined>(\r\n    'truckNumber',\r\n  );\r\n  const [selected, setSelected] = React.useState<readonly string[]>([]);\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState<number>(15);\r\n  const [queryParams, setQueryParams] = React.useState<Record<string, any>>({});\r\n  const tableContainerRef = React.useRef(null);\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const setSnackbarMessage = useSnackbar();\r\n\r\n  const {\r\n    isLoading,\r\n    isFetching,\r\n    data: { items, total } = { items: [], total: 0 },\r\n  } = useQuery({\r\n    queryKey: ['trucks', page, rowsPerPage, orderBy, order, queryParams],\r\n    queryFn: TrucksQuery,\r\n    keepPreviousData: true,\r\n    onError: (error: Error) => {\r\n      setSnackbarMessage({\r\n        severity: 'error',\r\n        message: error instanceof Error ? error.message : JSON.stringify(error),\r\n      });\r\n    },\r\n  });\r\n  const rows = items || [];\r\n\r\n  React.useEffect(() => {\r\n    if (tableContainerRef.current) {\r\n      const container = tableContainerRef.current as HTMLElement;\r\n      container.scrollTo({\r\n        top: 0,\r\n        left: 0,\r\n        behavior: 'smooth',\r\n      });\r\n    }\r\n  }, [rows]);\r\n\r\n  React.useEffect(() => {\r\n    const newSelected: string[] = [];\r\n    selected.forEach((selectedItem) => {\r\n      const selectedRow = rows.find((row) => row.id === selectedItem);\r\n      if (selectedRow) {\r\n        newSelected.push(selectedItem);\r\n      }\r\n    });\r\n    setSelected(newSelected);\r\n  }, [rows]);\r\n\r\n  const handleRequestSort = (\r\n    event: React.MouseEvent<unknown>,\r\n    property: keyof Truck,\r\n  ) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    const isDesc = orderBy === property && order === 'desc';\r\n    if (isDesc) {\r\n      setOrder(undefined);\r\n      setOrderBy(undefined);\r\n    } else {\r\n      setOrder(isAsc ? 'desc' : 'asc');\r\n      setOrderBy(property);\r\n    }\r\n  };\r\n\r\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (event.target.checked) {\r\n      const newSelected = rows.map((n: Truck) => n.id);\r\n      setSelected(newSelected);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (\r\n    event: React.MouseEvent<unknown>,\r\n    item: (typeof rows)[number],\r\n  ) => {\r\n    navigate(`./view/${item.id}`, {\r\n      relative: 'path',\r\n      state: { from: location },\r\n      replace: false,\r\n    });\r\n  };\r\n\r\n  const handleSelect = (event: React.MouseEvent<unknown>, name: string) => {\r\n    event.stopPropagation();\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected: readonly string[] = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event: unknown, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (\r\n    event: React.ChangeEvent<HTMLInputElement>,\r\n  ) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const isSelected = (name: string) => selected.indexOf(name) !== -1;\r\n\r\n  return (\r\n    <Box sx={{ width: '100%', height: '100%' }}>\r\n      <Paper sx={{ width: '100%', height: '100%', backgroundColor: 'unset' }}>\r\n        <EnhancedTableToolbar\r\n          selected={selected}\r\n          setQueryParams={(query) => {\r\n            setQueryParams(query);\r\n            setPage(0);\r\n          }}\r\n        />\r\n        <TableContainer\r\n          ref={tableContainerRef}\r\n          sx={{ height: 'calc(100% - 115px)' }}\r\n        >\r\n          <Table\r\n            sx={{ minWidth: 750 }}\r\n            aria-labelledby=\"tableTitle\"\r\n            size=\"small\"\r\n            stickyHeader\r\n          >\r\n            <EnhancedTableHead\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {rows.map((row, index) => {\r\n                const isItemSelected = isSelected(`${row.id}`);\r\n                const labelId = `enhanced-table-checkbox-${index}`;\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    onClick={(event) => handleClick(event, row)}\r\n                    role=\"checkbox\"\r\n                    aria-checked={isItemSelected}\r\n                    tabIndex={-1}\r\n                    key={row.id}\r\n                    selected={isItemSelected}\r\n                    sx={{ cursor: 'pointer' }}\r\n                  >\r\n                    <StyledTableCell padding=\"checkbox\">\r\n                      <Checkbox\r\n                        id={`${labelId}`}\r\n                        color=\"primary\"\r\n                        checked={isItemSelected}\r\n                        inputProps={{\r\n                          'aria-labelledby': labelId,\r\n                        }}\r\n                        onClick={(event) => handleSelect(event, `${row.id}`)}\r\n                      />\r\n                    </StyledTableCell>\r\n                    {headCells.map((cell) => {\r\n                      const cellData = cell.getData(row);\r\n                      return (\r\n                        <StyledTableCell\r\n                          key={cell.id}\r\n                          title={cellData.title}\r\n                          align={cell.numeric ? 'right' : 'center'}\r\n                        >\r\n                          {cellData.data}\r\n                        </StyledTableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 15, 20, 25, 35, 50]}\r\n          component=\"div\"\r\n          count={total}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <Loader visible={isLoading || isFetching} />\r\n    </Box>\r\n  );\r\n}\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\nexports.default = _default;"],"names":["headCells","id","orderField","getData","row","data","concat","truckNumber","numeric","disablePadding","label","person","coordinator","owner","path","type","firstRow","secondRow","getPath","getType","fullName","phone","_jsxs","children","_jsx","href","target","onClick","stopPropagation","undefined","title","status","lastCity","name","stateCode","zipCode","locationUpdatedAt","Date","toLocaleString","equipment","join","doorDims","payload","driver","StyledTableHead","styled","TableHead","_ref","backgroundColor","theme","palette","background","default","StyledTableCell","TableCell","_ref2","maxWidth","paddingTop","paddingBottom","whiteSpace","textOverflow","overflow","e","EnhancedTableHead","props","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","TableRow","padding","Checkbox","color","indeterminate","checked","onChange","inputProps","map","headCell","align","sortDirection","TableSortLabel","active","hideSortIcon","direction","property","event","Box","component","sx","visuallyHidden","EnhancedTableToolbar","selected","setQueryParams","_React$useState","React","_React$useState2","_slicedToArray","truckNumberSearch","setTruckNumberSearch","_React$useState3","_React$useState4","truckNumberChanged","setTruckNumberChanged","location","useLocation","navigate","useNavigate","queryClient","useQueryClient","setSnackbarMessage","useSnackbar","_useMutation","useMutation","TruckDelete","onSuccess","severity","message","invalidateQueries","onError","error","Error","JSON","stringify","mutate","isLoading","Toolbar","_objectSpread","pl","sm","pr","xs","length","bgcolor","alpha","primary","main","action","activatedOpacity","Typography","flex","variant","TextField","value","Number","isFinite","size","Tooltip","IconButton","FilterListOffIcon","disabled","FilterListIcon","p","display","relative","state","from","replace","AddIcon","EditIcon","DeleteIcon","Loader","visible","EnhancedTable","_React$useState5","_React$useState6","setOrder","_React$useState7","_React$useState8","setOrderBy","_React$useState9","_React$useState10","setSelected","_React$useState11","_React$useState12","page","setPage","_React$useState13","_React$useState14","rowsPerPage","setRowsPerPage","_React$useState15","_React$useState16","queryParams","tableContainerRef","_useQuery","useQuery","queryKey","queryFn","TrucksQuery","keepPreviousData","isFetching","_useQuery$data","_useQuery$data2","items","total","rows","current","scrollTo","top","left","behavior","newSelected","forEach","selectedItem","find","push","width","height","Paper","query","TableContainer","ref","Table","minWidth","stickyHeader","n","isAsc","TableBody","index","isItemSelected","indexOf","labelId","hover","role","tabIndex","cursor","selectedIndex","slice","handleSelect","cell","cellData","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","jsx","d"],"sourceRoot":""}