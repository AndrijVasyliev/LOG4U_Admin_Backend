{"version":3,"file":"static/js/751.8b0b7523.chunk.js","mappings":"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","sources":["ownersDrivers/editOwnerDriver.tsx","utils/dataTypes.ts"],"sourcesContent":["import React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\n\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Divider from '@mui/material/Divider';\n\nimport { DateField, Loader, SelectField, TextField } from '../components';\n\nimport { OwnerDriverUpdate, OwnerDriverQuery } from '../api';\nimport { useSnackbar } from '../hooks';\nimport {\n  UpdateOwnerDriver,\n  LangPriorities,\n  LangPriority,\n} from '../utils/dataTypes';\nimport { cleanObject } from '../utils/queryHelpers';\n\nconst validationSchema = yup.object({\n  fullName: yup.string().required('Full Name is required'),\n  birthDate: yup\n    .date()\n    .typeError('Enter correct date')\n    .required('Birth Date is required'),\n  birthPlace: yup.string().required('Birth Place is required'),\n  citizenship: yup.string().required('Citizenship is required'),\n  languagePriority: yup\n    .string()\n    .oneOf(LangPriorities)\n    .required('Language Priorities is required'),\n  driverLicenceType: yup.string().required('Driver Licence Type is required'),\n  driverLicenceNumber: yup\n    .string()\n    .required('Driver Licence Number is required'),\n  driverLicenceState: yup.string().required('Driver Licence State is required'),\n  driverLicenceClass: yup.string().required('Driver Licence Class is required'),\n  driverLicenceExp: yup\n    .date()\n    .typeError('Enter correct date')\n    .required('Driver Licence Exp is required'),\n  idDocId: yup.string(),\n  idDocType: yup.string(),\n  idDocExp: yup.date().typeError('Enter correct date'),\n  hiredBy: yup.string().required('Hired By is required'),\n  hireDate: yup\n    .date()\n    .typeError('Enter correct date')\n    .required('Hire Date is required'),\n  snn: yup.string().required('Snn is required'),\n  company: yup.string(),\n  insurancePolicy: yup.string().required('Insurance Policy is required'),\n  insurancePolicyEFF: yup.string().required('Insurance Policy EFF is required'),\n  insurancePolicyExp: yup\n    .date()\n    .typeError('Enter correct date')\n    .required('Insurance Policy Exp is required'),\n  address: yup.string().required('Address is required'),\n  phone: yup.string().required('Phone is required'),\n  phone2: yup.string(),\n  email: yup\n    .string()\n    .email('Enter a valid email')\n    .required('Email is required'),\n  emergencyContactName: yup.string(),\n  emergencyContactRel: yup.string(),\n  emergencyContactPhone: yup.string(),\n  appLogin: yup.string(),\n  appPass: yup.string(),\n  notes: yup.string(),\n});\n\nconst initialValues = {\n  id: '',\n  fullName: undefined,\n  birthDate: undefined,\n  birthPlace: undefined,\n  citizenship: undefined,\n  languagePriority: 'EN' as LangPriority,\n  driverLicenceType: undefined,\n  driverLicenceNumber: undefined,\n  driverLicenceState: undefined,\n  driverLicenceClass: undefined,\n  driverLicenceExp: undefined,\n  idDocId: undefined,\n  idDocType: undefined,\n  idDocExp: undefined,\n  hiredBy: undefined,\n  hireDate: undefined,\n  snn: undefined,\n  company: undefined,\n  insurancePolicy: undefined,\n  insurancePolicyEFF: undefined,\n  insurancePolicyExp: undefined,\n  address: undefined,\n  phone: undefined,\n  phone2: undefined,\n  email: undefined,\n  emergencyContactName: undefined,\n  emergencyContactRel: undefined,\n  emergencyContactPhone: undefined,\n  appLogin: undefined,\n  appPass: undefined,\n  notes: undefined,\n};\n\nexport default function EditOwnerDriverForm() {\n  const { pathname } = useLocation();\n  const navigate = useNavigate();\n  const queryClient = useQueryClient();\n  const setSnackbarMessage = useSnackbar();\n\n  const {\n    isLoading: loading,\n    isFetching: fetching,\n    data,\n  } = useQuery({\n    queryKey: ['ownerDriver', pathname.split('/')[3]],\n    queryFn: OwnerDriverQuery,\n    keepPreviousData: true,\n    onError: (error: Error) => {\n      setSnackbarMessage({\n        severity: 'error',\n        message: error instanceof Error ? error.message : JSON.stringify(error),\n      });\n    },\n  });\n\n  const { mutate, isLoading } = useMutation(OwnerDriverUpdate, {\n    onSuccess: () => {\n      setSnackbarMessage({\n        severity: 'success',\n        message: 'Saved',\n      });\n      queryClient.invalidateQueries(['owners', 'drivers']);\n      navigate(-1);\n    },\n    onError: (error: Error) => {\n      setSnackbarMessage({\n        severity: 'error',\n        message: error instanceof Error ? error.message : JSON.stringify(error),\n      });\n    },\n  });\n\n  const formik = useFormik<UpdateOwnerDriver>({\n    initialValues: {\n      ...initialValues,\n      ...cleanObject(data, Object.keys(initialValues)),\n    },\n    enableReinitialize: true,\n    validationSchema: validationSchema,\n    onSubmit: (values) => {\n      mutate(values as unknown as UpdateOwnerDriver);\n    },\n  });\n\n  const handleClose = () => {\n    navigate(-1);\n  };\n\n  return (\n    <Box sx={{ height: '100%' }}>\n      <form\n        onSubmit={formik.handleSubmit}\n        onReset={formik.handleReset}\n        style={{ height: '100%' }}\n      >\n        <Box sx={{ p: 3, display: 'grid', height: '100%' }}>\n          <Divider />\n          <Box\n            key=\"controls\"\n            sx={{\n              height: '100%',\n              overflowX: 'hidden',\n              overflowY: 'scroll',\n            }}\n          >\n            <Box key=\"topControls\" sx={{ p: 1, paddingBottom: 0 }}>\n              <TextField\n                fieldName=\"fullName\"\n                label=\"Full Name\"\n                formik={formik}\n              />\n            </Box>\n            <Box\n              key=\"centerControls\"\n              sx={{ display: 'inline-flex', width: '100%' }}\n            >\n              <Box\n                key=\"left\"\n                sx={{ p: 1, paddingTop: 0, paddingBottom: 0, width: '50%' }}\n              >\n                <DateField\n                  fieldName=\"birthDate\"\n                  label=\"Birth Date\"\n                  formik={formik}\n                />\n                <SelectField\n                  fieldName=\"languagePriority\"\n                  label=\"Language Priority\"\n                  items={LangPriorities}\n                  formik={formik}\n                />\n                <TextField\n                  fieldName=\"driverLicenceType\"\n                  label=\"Driver Licence Type\"\n                  formik={formik}\n                />\n                <TextField\n                  fieldName=\"driverLicenceState\"\n                  label=\"Driver Licence State\"\n                  formik={formik}\n                />\n                <DateField\n                  fieldName=\"driverLicenceExp\"\n                  label=\"Driver Licence Exp\"\n                  formik={formik}\n                />\n                <TextField\n                  fieldName=\"idDocType\"\n                  label=\"Id Doc Type\"\n                  formik={formik}\n                />\n                <TextField\n                  fieldName=\"hiredBy\"\n                  label=\"Hired By\"\n                  formik={formik}\n                />\n                <TextField\n                  fieldName=\"company\"\n                  label=\"Company\"\n                  formik={formik}\n                />\n                <TextField\n                  fieldName=\"insurancePolicyEFF\"\n                  label=\"Insurance Policy EFF\"\n                  formik={formik}\n                />\n                <TextField\n                  fieldName=\"address\"\n                  label=\"Address\"\n                  formik={formik}\n                />\n                <TextField fieldName=\"email\" label=\"Email\" formik={formik} />\n                <TextField\n                  fieldName=\"emergencyContactName\"\n                  label=\"Emergency Contact Name\"\n                  formik={formik}\n                />\n                <TextField\n                  fieldName=\"emergencyContactPhone\"\n                  label=\"Emergency Contact Phone\"\n                  formik={formik}\n                />\n                <TextField\n                  fieldName=\"appLogin\"\n                  label=\"Mobile App Login\"\n                  formik={formik}\n                />\n              </Box>\n              <Box\n                key=\"right\"\n                sx={{ p: 1, paddingTop: 0, paddingBottom: 0, width: '50%' }}\n              >\n                <TextField\n                  fieldName=\"birthPlace\"\n                  label=\"Birth Place\"\n                  formik={formik}\n                />\n                <TextField\n                  fieldName=\"citizenship\"\n                  label=\"Citizenship\"\n                  formik={formik}\n                />\n                <TextField\n                  fieldName=\"driverLicenceNumber\"\n                  label=\"Driver Licence Number\"\n                  formik={formik}\n                />\n                <TextField\n                  fieldName=\"driverLicenceClass\"\n                  label=\"Driver Licence Class\"\n                  formik={formik}\n                />\n                <TextField\n                  fieldName=\"idDocId\"\n                  label=\"Id Doc Id\"\n                  formik={formik}\n                />\n                <DateField\n                  fieldName=\"idDocExp\"\n                  label=\"Id Doc Exp\"\n                  formik={formik}\n                />\n                <TextField fieldName=\"snn\" label=\"Snn\" formik={formik} />\n                <DateField\n                  fieldName=\"hireDate\"\n                  label=\"Hire Date\"\n                  formik={formik}\n                />\n                <TextField\n                  fieldName=\"insurancePolicy\"\n                  label=\"Insurance Policy\"\n                  formik={formik}\n                />\n                <DateField\n                  fieldName=\"insurancePolicyExp\"\n                  label=\"Insurance Policy Exp\"\n                  formik={formik}\n                />\n                <TextField fieldName=\"phone\" label=\"Phone\" formik={formik} />\n                <TextField fieldName=\"phone2\" label=\"Phone2\" formik={formik} />\n                <TextField\n                  fieldName=\"emergencyContactRel\"\n                  label=\"Emergency Contact Rel\"\n                  formik={formik}\n                />\n                <TextField\n                  fieldName=\"appPass\"\n                  label=\"Mobile App Pass\"\n                  formik={formik}\n                />\n              </Box>\n            </Box>\n            <Box\n              key=\"bottomControls\"\n              sx={{ p: 1, paddingBottom: 0, paddingTop: 0 }}\n            >\n              <TextField\n                fieldName=\"notes\"\n                label=\"Notes\"\n                multiline\n                formik={formik}\n              />\n            </Box>\n          </Box>\n          <Divider />\n          <Box key=\"buttons\" sx={{ paddingTop: 3, display: 'inline-flex' }}>\n            <Box key=\"left\" sx={{ p: 1, paddingTop: 0, width: '50%' }}>\n              <Button\n                fullWidth\n                variant=\"contained\"\n                size=\"small\"\n                color=\"primary\"\n                type=\"submit\"\n                disabled={!formik.dirty}\n              >\n                Save\n              </Button>\n            </Box>\n            <Box key=\"right\" sx={{ p: 1, paddingTop: 0, width: '50%' }}>\n              <Button\n                fullWidth\n                variant=\"contained\"\n                size=\"small\"\n                color=\"primary\"\n                type=\"button\"\n                onClick={handleClose}\n              >\n                Cancel\n              </Button>\n            </Box>\n          </Box>\n        </Box>\n      </form>\n      <Loader visible={isLoading || loading || fetching} />\n    </Box>\n  );\n}\n","import React from 'react';\nimport { AlertColor } from '@mui/material/Alert/Alert';\n\nexport const LangPriorities = ['EN', 'UA', 'ES', 'RU'] as const;\n\nexport const PersonTypes = [\n  'Owner',\n  'OwnerDriver',\n  'Coordinator',\n  'CoordinatorDriver',\n  'Driver',\n] as const;\n\nexport const UserRoles = ['Admin', 'Super Admin'] as const;\n\nexport const TruckTypes = [\n  'Cargo van',\n  'Reefer van',\n  'Box truck',\n  'Box truck Reefer',\n  'Straight truck',\n  'Hotshot',\n  'Tented box',\n] as const;\n\nexport const TruckStatuses = ['Available', 'Not Available'] as const;\n\nexport const TruckCrossborders = ['Yes', 'No'] as const;\n\nexport const TruckCertificates = [\n  'Hazmat',\n  'Tsa',\n  'TWIC',\n  'Tanker Endorsement',\n] as const;\n\nexport const TruckEquipments = [\n  'Dock height risers',\n  'Air ride',\n  'Lift gate',\n  'Keep from freezing',\n  'ICC bar',\n  'Vertical E-track',\n  'Horizontal E-track',\n  'Pallet jack',\n  'PPE',\n  'Ramps',\n  'Straps',\n  'Loads bars',\n  'Blankets',\n  'Pads',\n  'Fire extinguisher',\n] as const;\n\nexport type Order = 'asc' | 'desc';\nexport type QueryKey<T> = readonly [\n  key: string,\n  page: number,\n  rowsPerPage: number,\n  orderBy?: string,\n  order?: Order,\n  queryParams?: T,\n];\n// export type BaseQuery = {\n//   readonly queryKey: QueryKey;\n// };\nexport type Query<T> = {\n  readonly queryKey: QueryKey<T>;\n};\nexport type QuerySingleKey = readonly [key: string, recordId: string];\nexport type QuerySingle = {\n  readonly queryKey: QuerySingleKey;\n};\nexport type Result<T> = {\n  items: T[];\n  limit: number;\n  offset: number;\n  total: number;\n};\nexport type QueryFn = (query: Query<{ search: any }>) => Promise<Result<any>>;\nexport interface AuthContextType {\n  user: any;\n  signin: (\n    username: string,\n    password: string,\n    callback: (res: boolean) => void,\n  ) => void;\n  signout: (callback: VoidFunction) => void;\n}\nexport type SnackbarMessage = {\n  message: string;\n  severity: AlertColor;\n  handleClose?: (event?: React.SyntheticEvent | Event, reason?: string) => void;\n};\nexport type PersonType = (typeof PersonTypes)[number];\nexport type LangPriority = (typeof LangPriorities)[number];\nexport type UserRole = (typeof UserRoles)[number];\nexport type TruckType = (typeof TruckTypes)[number];\nexport type TruckStatus = (typeof TruckStatuses)[number];\nexport type TruckCrossborder = (typeof TruckCrossborders)[number];\nexport type TruckCertificate = (typeof TruckCertificates)[number];\nexport type TruckEquipment = (typeof TruckEquipments)[number];\n\nexport interface Person {\n  id: string;\n  fullName: string;\n  type: PersonType;\n  phone?: string;\n}\n\nexport interface Owner extends Person {\n  type: PersonType;\n  phone: string;\n  phone2?: string;\n  email: string;\n  address: string;\n  ownTrucks?: Truck[];\n  coordinators?: Coordinator[];\n  drivers?: Driver[];\n}\n\nexport interface CreateOwner {\n  fullName?: string;\n  birthDate?: Date;\n  birthPlace?: string;\n  citizenship?: string;\n  languagePriority?: LangPriority;\n  hiredBy?: string;\n  hireDate?: Date;\n  snn?: string;\n  company?: string;\n  insurancePolicy?: string;\n  insurancePolicyEFF?: string;\n  insurancePolicyExp?: Date;\n  address?: string;\n  phone?: string;\n  phone2?: string;\n  email?: string;\n  emergencyContactName?: string;\n  emergencyContactRel?: string;\n  emergencyContactPhone?: string;\n  notes?: string;\n}\n\nexport interface UpdateOwner extends Partial<CreateOwner> {\n  id: string;\n}\n\nexport interface CreateOwnerDriver {\n  fullName?: string;\n  birthDate?: Date;\n  birthPlace?: string;\n  citizenship?: string;\n  languagePriority?: LangPriority;\n  driverLicenceType?: string;\n  driverLicenceNumber?: string;\n  driverLicenceState?: string;\n  driverLicenceClass?: string;\n  driverLicenceExp?: Date;\n  idDocId?: string;\n  idDocType?: string;\n  idDocExp?: Date;\n  hiredBy?: string;\n  hireDate?: Date;\n  snn?: string;\n  company?: string;\n  insurancePolicy?: string;\n  insurancePolicyEFF?: string;\n  insurancePolicyExp?: Date;\n  address?: string;\n  phone?: string;\n  phone2?: string;\n  email?: string;\n  emergencyContactName?: string;\n  emergencyContactRel?: string;\n  emergencyContactPhone?: string;\n  appLogin?: string;\n  appPass?: string;\n  notes?: string;\n}\n\nexport interface UpdateOwnerDriver extends Partial<CreateOwnerDriver> {\n  id: string;\n}\n\nexport interface Coordinator extends Person {\n  type: PersonType;\n  phone: string;\n  phone2?: string;\n  email: string;\n  address: string;\n  coordinateTrucks?: Truck[];\n  owner: Owner;\n}\n\nexport interface CreateCoordinator {\n  fullName?: string;\n  birthDate?: Date;\n  birthPlace?: string;\n  citizenship?: string;\n  languagePriority?: LangPriority;\n  hiredBy?: string;\n  hireDate?: Date;\n  snn?: string;\n  company?: string;\n  insurancePolicy?: string;\n  insurancePolicyEFF?: string;\n  insurancePolicyExp?: Date;\n  address?: string;\n  phone?: string;\n  phone2?: string;\n  email?: string;\n  emergencyContactName?: string;\n  emergencyContactRel?: string;\n  emergencyContactPhone?: string;\n  owner?: Owner;\n  notes?: string;\n}\n\nexport interface UpdateCoordinator extends Partial<CreateCoordinator> {\n  id: string;\n}\n\nexport interface CreateCoordinatorDriver {\n  fullName?: string;\n  birthDate?: Date;\n  birthPlace?: string;\n  citizenship?: string;\n  languagePriority?: LangPriority;\n  driverLicenceType?: string;\n  driverLicenceNumber?: string;\n  driverLicenceState?: string;\n  driverLicenceClass?: string;\n  driverLicenceExp?: Date;\n  idDocId?: string;\n  idDocType?: string;\n  idDocExp?: Date;\n  hiredBy?: string;\n  hireDate?: Date;\n  snn?: string;\n  company?: string;\n  insurancePolicy?: string;\n  insurancePolicyEFF?: string;\n  insurancePolicyExp?: Date;\n  address?: string;\n  phone?: string;\n  phone2?: string;\n  email?: string;\n  emergencyContactName?: string;\n  emergencyContactRel?: string;\n  emergencyContactPhone?: string;\n  appLogin?: string;\n  appPass?: string;\n  notes?: string;\n}\n\nexport interface UpdateCoordinatorDriver\n  extends Partial<CreateCoordinatorDriver> {\n  id: string;\n}\n\nexport interface Driver extends Person {\n  type: PersonType;\n  phone: string;\n  phone2?: string;\n  email?: string;\n  address?: string;\n  driveTrucks?: Truck[];\n  owner: Owner;\n}\n\nexport interface CreateDriver {\n  fullName?: string;\n  birthDate?: Date;\n  birthPlace?: string;\n  citizenship?: string;\n  languagePriority?: LangPriority;\n  driverLicenceType?: string;\n  driverLicenceNumber?: string;\n  driverLicenceState?: string;\n  driverLicenceClass?: string;\n  driverLicenceExp?: Date;\n  idDocId?: string;\n  idDocType?: string;\n  idDocExp?: Date;\n  hiredBy?: string;\n  hireDate?: Date;\n  address?: string;\n  phone?: string;\n  phone2?: string;\n  email?: string;\n  emergencyContactName?: string;\n  emergencyContactRel?: string;\n  emergencyContactPhone?: string;\n  appLogin?: string;\n  appPass?: string;\n  owner?: Owner;\n  notes?: string;\n}\n\nexport interface UpdateDriver extends Partial<CreateDriver> {\n  id: string;\n}\n\nexport interface Truck {\n  id: string;\n  truckNumber: number;\n  status: TruckStatus;\n  lastLocation?: [number, number];\n  lastCity?: Location;\n  locationUpdatedAt?: string;\n  milesHaversine?: number;\n  milesByRoads?: number;\n  crossborder: TruckCrossborder;\n  certificate: TruckCertificate;\n  type: TruckType;\n  equipment?: TruckEquipment[];\n  payload?: number;\n  grossWeight: string;\n  make: string;\n  model: string;\n  year: number;\n  color: string;\n  vinCode: string;\n  licencePlate: string;\n  licenceState: string;\n  plateExpires: Date;\n  insideDims: string;\n  doorDims?: string;\n  owner?: Owner;\n  coordinator?: Coordinator;\n  driver?: Driver;\n}\n\nexport interface CreateTruck {\n  truckNumber?: number;\n  status?: TruckStatus;\n  crossborder?: TruckCrossborder;\n  certificate?: TruckCertificate;\n  type?: TruckType;\n  equipment?: TruckEquipment[];\n  payload?: number;\n  grossWeight?: string;\n  make?: string;\n  model?: string;\n  year?: number;\n  color?: string;\n  vinCode?: string;\n  licencePlate?: string;\n  licenceState?: string;\n  plateExpires?: Date;\n  insideDims?: string;\n  doorDims?: string;\n  owner?: Owner;\n  coordinator?: Coordinator;\n  driver?: Driver;\n}\n\nexport interface UpdateTruck extends Partial<CreateTruck> {\n  id: string;\n}\n\nexport interface Load {\n  id: string;\n  loadNumber: number;\n  pick?: Location;\n  pickDate?: Date;\n  deliver?: Location;\n  deliverDate?: Date;\n  milesByRoads?: number;\n  milesHaversine?: number;\n  weight: string;\n  truckType: TruckType[];\n  rate?: number;\n  bookedByUser?: User;\n  bookedByCompany?: string;\n  dispatchers?: User[];\n  checkInAs?: string;\n  truck?: Truck;\n}\n\nexport interface CreateLoad {\n  pick?: Location;\n  pickDate?: Date;\n  deliver?: Location;\n  deliverDate?: Date;\n  weight?: string;\n  truckType?: TruckType[];\n  rate?: number;\n  bookedByUser?: User;\n  bookedByCompany?: string;\n  dispatchers?: User[];\n  checkInAs?: string;\n  truck?: Truck;\n}\n\nexport interface UpdateLoad extends Partial<CreateLoad> {\n  id: string;\n}\n\nexport interface Location {\n  id: string;\n  zipCode: string;\n  name: string;\n  stateCode: string;\n  stateName: string;\n  location: [number, number];\n}\n\nexport type CreateLocation = Omit<Location, 'id'>;\n\nexport interface UpdateLocation extends Partial<CreateLocation> {\n  id: string;\n}\n\nexport interface User {\n  id: string;\n  fullName: string;\n  phone?: string;\n  userRole: UserRole;\n  jobTitle: string;\n  email: string;\n}\n\nexport interface CreateUser extends Omit<User, 'id'> {\n  password?: string;\n}\n\nexport interface UpdateUser extends Partial<CreateUser> {\n  id: string;\n}\n"],"names":["validationSchema","yup","fullName","required","birthDate","typeError","birthPlace","citizenship","languagePriority","oneOf","LangPriorities","driverLicenceType","driverLicenceNumber","driverLicenceState","driverLicenceClass","driverLicenceExp","idDocId","idDocType","idDocExp","hiredBy","hireDate","snn","company","insurancePolicy","insurancePolicyEFF","insurancePolicyExp","address","phone","phone2","email","emergencyContactName","emergencyContactRel","emergencyContactPhone","appLogin","appPass","notes","initialValues","id","undefined","EditOwnerDriverForm","pathname","useLocation","navigate","useNavigate","queryClient","useQueryClient","setSnackbarMessage","useSnackbar","_useQuery","useQuery","queryKey","split","queryFn","OwnerDriverQuery","keepPreviousData","onError","error","severity","message","Error","JSON","stringify","loading","isLoading","fetching","isFetching","data","_useMutation","useMutation","OwnerDriverUpdate","onSuccess","invalidateQueries","mutate","formik","useFormik","_objectSpread","cleanObject","Object","keys","enableReinitialize","onSubmit","values","_jsxs","Box","sx","height","children","_jsx","handleSubmit","onReset","handleReset","style","p","display","Divider","overflowX","overflowY","paddingBottom","TextField","fieldName","label","width","paddingTop","DateField","SelectField","items","multiline","Button","fullWidth","variant","size","color","type","disabled","dirty","onClick","Loader","visible","UserRoles","TruckTypes","TruckStatuses","TruckCrossborders","TruckCertificates","TruckEquipments"],"sourceRoot":""}