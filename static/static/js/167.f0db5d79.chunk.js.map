{"version":3,"file":"static/js/167.f0db5d79.chunk.js","mappings":"iLAAIA,EAAY,CAAC,QAAS,WAC1B,SAASC,IAAiS,OAApRA,EAAWC,OAAOC,OAASD,OAAOC,OAAOC,OAAS,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcP,OAAOS,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,GAAU,CAAE,OAAOL,CAAQ,EAAUJ,EAASa,MAAMC,KAAMR,UAAY,CAClV,SAASS,EAAyBP,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,CAAC,EAAG,IAAkEC,EAAKJ,EAAnED,EACzF,SAAuCI,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,CAAC,EAAG,IAA2DC,EAAKJ,EAA5DD,EAAS,CAAC,EAAOa,EAAahB,OAAOiB,KAAKV,GAAqB,IAAKH,EAAI,EAAGA,EAAIY,EAAWV,OAAQF,IAAOI,EAAMQ,EAAWZ,GAAQW,EAASG,QAAQV,IAAQ,IAAaL,EAAOK,GAAOD,EAAOC,IAAQ,OAAOL,CAAQ,CADhNgB,CAA8BZ,EAAQQ,GAAuB,GAAIf,OAAOoB,sBAAuB,CAAE,IAAIC,EAAmBrB,OAAOoB,sBAAsBb,GAAS,IAAKH,EAAI,EAAGA,EAAIiB,EAAiBf,OAAQF,IAAOI,EAAMa,EAAiBjB,GAAQW,EAASG,QAAQV,IAAQ,GAAkBR,OAAOS,UAAUa,qBAAqBX,KAAKJ,EAAQC,KAAgBL,EAAOK,GAAOD,EAAOC,GAAQ,CAAE,OAAOL,CAAQ,CAG3e,SAASoB,EAAOC,EAAMC,GACpB,IAAIC,EAAQF,EAAKE,MACfC,EAAUH,EAAKG,QACfC,EAAQd,EAAyBU,EAAM1B,GACzC,OAAoB,gBAAoB,MAAOC,EAAS,CACtD8B,GAAI,UACJ,YAAa,UACbC,MAAO,6BACPC,QAAS,cACTC,IAAKP,EACL,kBAAmBE,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3DG,GAAIF,GACHD,GAAS,KAAmB,gBAAoB,SAAU,CAC3DO,GAAI,GACJC,GAAI,GACJC,EAAG,GACHC,KAAM,OACNC,YAAa,GACbC,MAAO,CACLC,OAAQ,kBAEK,gBAAoB,OAAQ,CAC3CC,EAAG,sFACHF,MAAO,CACLG,WAAY,OACZJ,YAAa,EACbE,OAAQ,eACRH,KAAM,4BAEO,gBAAoB,WAAY,CAC/CM,OAAQ,oCACRJ,MAAO,CACLC,OAAQ,eACRF,YAAa,EACbD,KAAM,sBAEO,gBAAoB,WAAY,CAC/CM,OAAQ,oCACRJ,MAAO,CACLC,OAAQ,eACRF,YAAa,EACbD,KAAM,sBAEO,gBAAoB,OAAQ,CAC3CI,EAAG,yDACHF,MAAO,CACLC,OAAQ,eACRE,WAAY,SACZE,cAAe,QACfN,YAAa,KAEA,gBAAoB,OAAQ,CAC3CG,EAAG,yDACHF,MAAO,CACLC,OAAQ,eACRF,YAAa,EACbM,cAAe,WAEF,gBAAoB,OAAQ,CAC3CH,EAAG,2DACHF,MAAO,CACLK,cAAe,QACfN,YAAa,EACbE,OAAQ,eACRE,WAAY,YAEC,gBAAoB,OAAQ,CAC3CD,EAAG,0DACHF,MAAO,CACLK,cAAe,QACfJ,OAAQ,eACRF,YAAa,KAEA,gBAAoB,WAAY,CAC/CK,OAAQ,8BACRJ,MAAO,CACLC,OAAQ,eACRF,YAAa,EACbI,WAAY,OACZE,cAAe,QACfP,KAAM,4BAGZ,CACA,IAAIQ,EAA0B,aAAiBrB,GAChC,G,qEC3FXzB,EAAY,CAAC,QAAS,WAC1B,SAASC,IAAiS,OAApRA,EAAWC,OAAOC,OAASD,OAAOC,OAAOC,OAAS,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcP,OAAOS,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,GAAU,CAAE,OAAOL,CAAQ,EAAUJ,EAASa,MAAMC,KAAMR,UAAY,CAClV,SAASS,EAAyBP,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,CAAC,EAAG,IAAkEC,EAAKJ,EAAnED,EACzF,SAAuCI,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,CAAC,EAAG,IAA2DC,EAAKJ,EAA5DD,EAAS,CAAC,EAAOa,EAAahB,OAAOiB,KAAKV,GAAqB,IAAKH,EAAI,EAAGA,EAAIY,EAAWV,OAAQF,IAAOI,EAAMQ,EAAWZ,GAAQW,EAASG,QAAQV,IAAQ,IAAaL,EAAOK,GAAOD,EAAOC,IAAQ,OAAOL,CAAQ,CADhNgB,CAA8BZ,EAAQQ,GAAuB,GAAIf,OAAOoB,sBAAuB,CAAE,IAAIC,EAAmBrB,OAAOoB,sBAAsBb,GAAS,IAAKH,EAAI,EAAGA,EAAIiB,EAAiBf,OAAQF,IAAOI,EAAMa,EAAiBjB,GAAQW,EAASG,QAAQV,IAAQ,GAAkBR,OAAOS,UAAUa,qBAAqBX,KAAKJ,EAAQC,KAAgBL,EAAOK,GAAOD,EAAOC,GAAQ,CAAE,OAAOL,CAAQ,CAG3e,SAAS0C,EAASrB,EAAMC,GACtB,IAAIC,EAAQF,EAAKE,MACfC,EAAUH,EAAKG,QACfC,EAAQd,EAAyBU,EAAM1B,GACzC,OAAoB,gBAAoB,MAAOC,EAAS,CACtD+C,UAAW,QACX,cAAe,OACff,QAAS,YACT,cAAe,oBACfD,MAAO,6BACPE,IAAKP,EACL,kBAAmBE,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3DG,GAAIF,GACHD,GAAS,KAAmB,gBAAoB,OAAQ,CACzDc,EAAG,wzBACHF,MAAO,CACLS,SAAU,UACVX,KAAM,kBAGZ,CACA,IAAIQ,EAA0B,aAAiBC,GAChC,G,gLCdA,SAASG,EAAexB,GAUnC,IATFyB,EAAQzB,EAARyB,SACAC,EAAU1B,EAAV0B,WACAC,EAAO3B,EAAP2B,QACAC,EAAQ5B,EAAR4B,SAOAC,EAA0BC,EAAAA,SACxB,MACDC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAFMI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAGtBI,EAA0BL,EAAAA,SAA6C,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAnEE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,EAAgCT,EAAAA,SAC9B,MACDU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAFME,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAItBG,EAAYb,EAAAA,SAAc,WAC9B,OAAOc,EAAAA,EAAAA,IAAS,SAACC,GACP,OAARJ,QAAQ,IAARA,GAAAA,EACIK,QAAQD,GACTE,MAAK,SAACC,GACL,GAAIA,EAAOC,QAAQnE,OAAS,GAAK+D,EAAepB,SAAU,CACxD,IAAMyB,EAAsB,IAAIC,OAAOC,KAAKC,OAC1CR,EAAepB,UAEX6B,EAAkC,CACtCC,mBAAoB,GACpBC,kBAAkB,IAADC,OAAMP,EAAoBQ,MAAK,MAAAD,OAAKP,EAAoBS,MAAK,KAC9EC,SAAU,CACRnC,SAAUyB,EACVW,cAAeV,OAAOC,KAAKU,qBAAqBC,YAChDC,SAAU,IAAIb,OAAOC,KAAKa,cAE5BC,SAAS,IAADT,OAAMP,EAAoBQ,MAAK,MAAAD,OAAKP,EAAoBS,MAAK,KACrEQ,MAAO,IAET7B,EAAS,CAACgB,GACZ,MACEN,EAAOC,QAAQmB,SACb,SAACC,GAAI,OACFA,EAAKb,mBAAoBc,EAAAA,EAAAA,GACxBD,EAAKd,mBACN,IAELjB,EAASU,EAAOC,QAEpB,IACCsB,OAAM,SAACC,GACNlC,EAAS,GACX,GACJ,GAAG,IACL,GAAG,CAACG,IAEJX,EAAAA,WAAgB,WACd,IAAM2C,EACJhD,IACCY,EAAMqC,MAAK,SAACC,GAAM,OAAKA,EAAOR,MAAMS,SAAS,UAAU,KACtDvC,EAAMqC,MAAK,SAACC,GAAM,OAAKA,EAAOR,MAAMS,SAAS,iBAAiB,KAC9DvC,EAAMqC,MAAK,SAACC,GAAM,OAAKA,EAAOR,MAAMS,SAAS,QAAQ,KACrDvC,EAAMqC,MAAK,SAACC,GAAM,OAAKA,EAAOR,MAAMS,SAAS,YAAY,MACzDnD,GAAagD,GAAapC,EAAMvD,OAOzB2C,GAAYgD,IAAoB,OAARA,QAAQ,IAARA,OAAQ,EAARA,EAAUP,aAAkB,OAALjC,QAAK,IAALA,OAAK,EAALA,EAAOiC,UAC/DhC,EAASuC,GACChD,GACVS,EAAS,MATTS,EAAU,CACRlB,SAAU,CACRiC,IAAKjC,EAAS,GACdkC,IAAKlC,EAAS,KAQtB,GAAG,CAACgB,EAAUhB,EAAUY,IA2BxB,OACEwC,EAAAA,EAAAA,MAAA,QAAM/D,MAAO,CAAEgE,QAAS,QAASlD,SAAA,EAC/BmD,EAAAA,EAAAA,KAACC,EAAAA,SAAOC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKC,EAAAA,cAAY,IAAEC,OA3BT,SAACC,GACrB,IAAMC,GAAqBC,EAAAA,EAAAA,MAC3BC,GAAgCC,EAAAA,EAAAA,MAAvBC,GAAkCzD,EAAAA,EAAAA,GAAAuD,EAAA,GAAf,GAoB5B,OAnBAzD,EAAAA,iBAAsB,WAapB,OAZIsD,IAAWM,EAAAA,OAAOC,SACpBF,GAAoB,GAElBL,IAAWM,EAAAA,OAAOE,SACpBP,EAAmB,CACjBQ,SAAU,QACVC,QAAS,wBAGTV,IAAWM,EAAAA,OAAOK,SACpBrD,EAAY,IAAIsD,OAAO7C,OAAOC,KAAK6C,UAE9B,WACDb,IAAWM,EAAAA,OAAOC,SACpBF,GAAoB,EAExB,CACF,GAAG,CAACL,IACG,IACT,MAKIP,EAAAA,EAAAA,MAAA,QACE/D,MAAO,CACLoF,aAAc,WACdC,SAAU,SACVC,UAAW,QAEblG,MAAO,GAAAuD,OAAGxB,EAAQA,EAAMuB,kBAAoB,IAAO,KAAO7B,EAAQC,SAAA,CAEjEF,GACCqD,EAAAA,EAAAA,KAAA,KAAGsB,KAAM,IAAK1H,OAAO,SAAS2H,QAAS5E,EAAWE,SAC/CK,EAAQA,EAAMuB,kBAAoB,KAEnCvB,EACFA,EAAMuB,kBAEN,GAEA7B,GACAkD,EAAAA,EAAAA,MAAA0B,EAAAA,SAAA,CAAA3E,SAAA,EACEmD,EAAAA,EAAAA,KAAA,SACCpD,KAHO,KAMXC,KAEDK,GACA8C,EAAAA,EAAAA,KAACyB,EAAAA,EAAU,CACTC,KAAK,QACLH,QAAS,SAACI,IACRC,EAAAA,EAAAA,GAAgBD,GAChBE,UAAUC,UAAUC,UAAU7E,EAAMuB,kBACtC,EAAE5B,UAEFmD,EAAAA,EAAAA,KAACgC,EAAAA,EAAW,CAACC,GAAI,CAAEC,OAAQ,OAAQC,MAAO,YARpC,OAahB,C,qhBCzIMC,EAAmBC,EAAAA,GAAW,CAClCC,qBAAsBD,EAAAA,GACb,CACLA,EAAAA,KAEGE,UAAU,wBACVC,KAAK,GAAI,8CACTC,IAAI,GAAI,2CACRC,SAAS,sDACZL,EAAAA,KAEGE,UAAU,yBACVC,KAAK,IAAK,gDACVC,IAAI,IAAK,6CACTC,SAAS,wDAEbA,SAAS,0CACZC,eAAgBN,EAAAA,KAEbE,UAAU,sBACVG,SAAS,wCAGRE,EAAgB,CACpBtH,GAAI,GACJ+E,OAAQ,oBACRiC,qBAAsB,KACtBK,oBAAgBE,GAGZC,EAAa/F,EAAAA,YAAiB,SAClC1B,EAGAI,GAEA,OAAOuE,EAAAA,EAAAA,KAAC+C,EAAAA,GAAK7C,EAAAA,EAAAA,GAAA,CAAC8C,UAAU,KAAKvH,IAAKA,GAASJ,GAC7C,IAEe,SAAS4H,EAAwBhI,GAM5C,IALFiI,EAAOjI,EAAPiI,QACAC,EAAUlI,EAAVkI,WAMMC,IADWC,EAAAA,EAAAA,OACGC,EAAAA,EAAAA,OACdhD,GAAqBC,EAAAA,EAAAA,MAE3BgD,GAA8BC,EAAAA,EAAAA,GAAYC,EAAAA,GAAa,CACrDC,UAAW,WACTpD,EAAmB,CACjBQ,SAAU,UACVC,QAAS,0BAEXoC,EAAW,IACXC,EAAYO,kBAAkB,CAAC,UACjC,EACAC,QAAS,SAACC,GACRvD,EAAmB,CACjBQ,SAAU,QACVC,QAAS8C,aAAiBC,MAAQD,EAAM9C,QAAUgD,KAAKC,UAAUH,IAErE,IAdMI,EAAMV,EAANU,OAAQC,EAASX,EAATW,UAiBVC,GAASC,EAAAA,EAAAA,IAAuB,CACpCxB,eAAa1C,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAO0C,GAAa,IAAEtH,GAAI4H,IACvCmB,oBAAoB,EACpBjC,iBAAkBA,EAClBkC,SAAU,SAACC,GACTN,EAAOM,EACT,IAUF,OACEzE,EAAAA,EAAAA,MAAC0E,EAAAA,EAAM,CACLC,OAAQvB,EACRwB,oBAAqB5B,EACrB6B,aAAW,EACXC,QATsB,WACxBzB,EAAW,GACb,EAQI,mBAAiB,qCACjB0B,WAAY,CAAE5C,GAAI,CAAEE,MAAO,UAAYtF,SAAA,EAEvCmD,EAAAA,EAAAA,KAAC8E,EAAAA,EAAW,CAAAjI,UACVmD,EAAAA,EAAAA,KAAA,QAAAnD,SAAM,+BAERiD,EAAAA,EAAAA,MAACiF,EAAAA,EAAa,CAAAlI,SAAA,EACZmD,EAAAA,EAAAA,KAAA,QAAMsE,SAAUH,EAAOa,aAAcC,QAASd,EAAOe,YAAYrI,UAC/DiD,EAAAA,EAAAA,MAACqF,EAAAA,EAAG,CAAClD,GAAI,CAAElC,QAAS,QAASlD,SAAA,EAC3BiD,EAAAA,EAAAA,MAACqF,EAAAA,EAAG,CAAgBlD,GAAI,CAAElC,QAAS,eAAgBlD,SAAA,EACjDmD,EAAAA,EAAAA,KAACmF,EAAAA,EAAG,CAAYlD,GAAI,CAAEmD,EAAG,EAAGjD,MAAO,OAAQtF,UACzCmD,EAAAA,EAAAA,KAACqF,EAAAA,GAAmB,CAClBC,UAAU,uBACVC,MAAM,gCACNpB,OAAQA,KAJH,SAOTnE,EAAAA,EAAAA,KAACmF,EAAAA,EAAG,CAAalD,GAAI,CAAEmD,EAAG,EAAGjD,MAAO,OAAQtF,UAC1CmD,EAAAA,EAAAA,KAACwF,EAAAA,GAAa,CACZF,UAAU,iBACVC,MAAM,4BACNE,aAAW,EACXtB,OAAQA,KALH,WARF,aAiBTrE,EAAAA,EAAAA,MAACqF,EAAAA,EAAG,CAAelD,GAAI,CAAElC,QAAS,eAAgBlD,SAAA,EAChDmD,EAAAA,EAAAA,KAACmF,EAAAA,EAAG,CAAYlD,GAAI,CAAEmD,EAAG,EAAGM,WAAY,EAAGvD,MAAO,OAAQtF,UACxDmD,EAAAA,EAAAA,KAAC2F,EAAAA,EAAM,CACLC,WAAS,EACTC,QAAQ,YACRnE,KAAK,QACLoE,MAAM,UACNC,KAAK,SAAQlJ,SACd,SAPM,SAWTmD,EAAAA,EAAAA,KAACmF,EAAAA,EAAG,CAAalD,GAAI,CAAEmD,EAAG,EAAGM,WAAY,EAAGvD,MAAO,OAAQtF,UACzDmD,EAAAA,EAAAA,KAAC2F,EAAAA,EAAM,CACLC,WAAS,EACTC,QAAQ,YACRnE,KAAK,QACLoE,MAAM,UACNC,KAAK,SACLxE,QA1DI,WAClB4B,EAAW,GACb,EAwDqCtG,SACtB,YARM,WAZF,iBA2BbmD,EAAAA,EAAAA,KAACgG,EAAAA,GAAM,CAACC,QAAS/B,SAIzB,C,sEC/GMgC,GAA8C,SAAlCC,aAAaC,QAAQ,SAAsB,OAAS,QAChEC,GAAiC,CACrC,CACE/K,GAAI,cACJgL,WAAY,cACZC,QAAS,SAACC,GAAG,MAAM,CAAEC,KAAK,GAAD/H,OAAK8H,EAAIE,aAAe,EACjDC,SAAS,EACTC,gBAAgB,EAChBrB,MAAO,mBAET,CACEjK,GAAI,kBACJiL,QAAS,SAACC,GACR,IAAMK,EAASL,EAAIM,aAAeN,EAAIO,MAClCC,EAAO,GACPjB,EAAO,GACPkB,EAAW,GACXC,EAAY,GAOhB,OANIL,IACFG,EAAI,KAAAtI,QAAQyI,EAAAA,GAAAA,IAAQN,GAAO,UAAAnI,OAASmI,EAAOvL,IAC3CyK,EAAI,GAAArH,QAAM0I,EAAAA,GAAAA,IAAQP,GAAO,KACzBI,EAAQ,GAAAvI,OAAMmI,EAAOQ,UACrBH,EAAS,GAAAxI,OAAY,OAANmI,QAAM,IAANA,OAAM,EAANA,EAAQS,QAElB,CACLb,MACE3G,EAAAA,EAAAA,MAAA,QAAM/D,MAAO,CAAEgE,QAAS,QAASlD,SAAA,EAC/BiD,EAAAA,EAAAA,MAAA,QACE/D,MAAO,CACLoF,aAAc,WACdC,SAAU,SACVC,UAAW,QACXxE,SAAA,EAEFmD,EAAAA,EAAAA,KAAA,KAAAnD,SAAIkJ,KACJ/F,EAAAA,EAAAA,KAAA,KAAGsB,KAAM0F,EAAMpN,OAAO,SAAS2H,QAASK,GAAAA,EAAgB/E,SACrDoK,KAEHjH,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,KACEsB,KAAM4F,EAAS,OAAAxI,OAAUwI,QAAcrE,EACvCjJ,OAAO,SACP2H,QAASK,GAAAA,EAAgB/E,SAExBqK,GAAa,aAGlBlH,EAAAA,EAAAA,KAACyB,EAAAA,EAAU,CACTC,KAAK,QACLH,QAAS,SAACI,IACRC,EAAAA,GAAAA,GAAgBD,GAChBE,UAAUC,UAAUC,UAAUkF,EAAW,IAAMC,EACjD,EAAErK,UAEFmD,EAAAA,EAAAA,KAACgC,EAAAA,EAAW,CAACC,GAAI,CAAEC,OAAQ,OAAQC,MAAO,eAIhDhH,MAAO4K,EAAO,GAAKkB,EAAW,KAAOC,EAEzC,EACAP,SAAS,EACTC,gBAAgB,EAChBrB,MAAO,2BAET,CACEjK,GAAI,SACJgL,WAAY,SACZC,QAAS,SAACC,GACR,IAAMnG,EAAM,GAAA3B,OAAM8H,EAAInG,QAChBkH,EAAO,WACX,OAAQlH,GACN,IAAK,oBACH,OACEL,EAAAA,EAAAA,KAACwH,GAAAA,EAAO,CACNzL,MAAO,CACLmG,OAAQ,OACRC,MAAO,OACP2D,MAAqB,SAAdI,GAAuBuB,EAAAA,EAAK,KAAOA,EAAAA,EAAK,QAOvD,IAAK,WACH,OACEzH,EAAAA,EAAAA,KAAC0H,GAAAA,EAAS,CACR3L,MAAO,CACLmG,OAAQ,OACRC,MAAO,OACP2D,MAAqB,SAAdI,GAAuBuB,EAAAA,EAAK,KAAOA,EAAAA,EAAK,QAOvD,IAAK,YACH,OACEzH,EAAAA,EAAAA,KAAC2H,EAAAA,EAAM,CACL1F,GAAI,CACFC,OAAQ,OACRC,MAAO,OACPyF,QAASC,EAAAA,EAAM,KACfC,OAAQ,QACRjL,SACH,MAIL,IAAK,gBACH,OACEmD,EAAAA,EAAAA,KAAC2H,EAAAA,EAAM,CACL1F,GAAI,CACFC,OAAQ,OACRC,MAAO,OACPyF,QAASH,EAAAA,EAAK,KACdK,OAAQ,QACRjL,SACH,MAIL,QACE,OAAOwD,EAEb,CAzDa,GA2Db,MAAO,CACLoG,MAAMzG,EAAAA,EAAAA,KAAA,QAAAnD,SAAO0K,IACbpM,MAAOkF,EAEX,EACAsG,SAAS,EACTC,gBAAgB,EAChBrB,MAAO,UAET,CACEjK,GAAI,WACJiL,QAAS,SAACC,EAAKuB,GAOb,GAAO,OAAHvB,QAAG,IAAHA,GAAAA,EAAKwB,aAAc,CACrB,IAAMd,EAAS,GAAAxI,OACb8H,EAAIyB,kBACA,IAAIC,KAAK1B,EAAIyB,mBAAmBE,iBAChC,IAGN,MAAO,CACL1B,MACEzG,EAAAA,EAAAA,KAACvD,GAAAA,EAAe,CACdC,SAAU8J,EAAIwB,aACdrL,WAjBW,SAACgF,GAClBA,EAAMyG,kBACNxG,EAAAA,GAAAA,GAAgBD,GAChBoG,EAAW,CAACvB,GACd,EAcQ5J,QAASsK,IAIjB,CACE,MAAO,CAAET,KAAM,GAEnB,EACAE,SAAS,EACTC,gBAAgB,EAChBrB,MAAO,6BAET,CACEjK,GAAI,YACJiL,QAAS,SAACC,GACR,IAAMS,EAAWT,EAAIT,KAAI,GAAArH,OAAM8H,EAAIT,MAAS,GACtCmB,EAAYV,EAAI6B,UAAS,GAAA3J,OAAM8H,EAAI6B,UAAUC,KAAK,OAAU,GAElE,MAAO,CACL7B,MACE3G,EAAAA,EAAAA,MAAA,QAAAjD,SAAA,CACGoK,GACDjH,EAAAA,EAAAA,KAAA,SACCkH,KAGL/L,MAAO8L,EAAW,KAAOC,EAE7B,EACAP,SAAS,EACTC,gBAAgB,EAChBrB,MAAO,iBAET,CACEjK,GAAI,iBACJiL,QAAS,SAACC,GACR,IAAM+B,EAAgB/B,EAAIgC,WAAU,GAAA9J,OAAM8H,EAAIgC,YAAe,GACvDC,EAAgBjC,EAAIkC,SAAQ,GAAAhK,OAAM8H,EAAIkC,UAAa,GACnDxB,EAAYV,EAAImC,QAAO,GAAAjK,OAAM8H,EAAImC,SAAY,GAEnD,MAAO,CACLlC,MACE3G,EAAAA,EAAAA,MAAA,QAAAjD,SAAA,EACI0L,EAAgBA,EAAgB,IAAM,IAAE,GAAA7J,OACrC+J,EAAgB,IAAMA,EAAgB,IAAM,KACjDzI,EAAAA,EAAAA,KAAA,SACCkH,KAGL/L,OACGoN,EAAgBA,EAAgB,WAAa,KAC7CE,EAAgBA,EAAgB,SAAW,IAC5C,KACAvB,EACA,WAEN,EACAP,SAAS,EACTC,gBAAgB,EAChBrB,MAAO,gBAET,CACEjK,GAAI,aACJiL,QAAS,SAACC,GACR,IAAMoC,EAASpC,EAAIoC,OACf5B,EAAO,GACPjB,EAAO,GACPkB,EAAW,GACXC,EAAY,GAOhB,OANI0B,IACF5B,EAAI,KAAAtI,QAAQyI,EAAAA,GAAAA,IAAQyB,GAAO,UAAAlK,OAASkK,EAAOtN,IAC3CyK,EAAI,GAAArH,QAAM0I,EAAAA,GAAAA,IAAQwB,GAAO,KACzB3B,EAAQ,GAAAvI,OAAMkK,EAAOvB,UACrBH,EAAS,GAAAxI,OAAMkK,EAAOtB,QAEjB,CACLb,MACE3G,EAAAA,EAAAA,MAAA,QAAAjD,SAAA,EACEmD,EAAAA,EAAAA,KAAA,KAAAnD,SAAIkJ,KACJ/F,EAAAA,EAAAA,KAAA,KACEsB,KAAM2F,EAAWD,OAAOnE,EACxBjJ,OAAO,SACP2H,QAASK,GAAAA,EAAgB/E,SAExBoK,KAEHjH,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,KACEsB,KAAM4F,EAAS,OAAAxI,OAAUwI,QAAcrE,EACvCjJ,OAAO,SACP2H,QAASK,GAAAA,EAAgB/E,SAExBqK,GAAa,YAIpB/L,MAAO4K,EAAO,GAAKkB,EAAW,KAAOC,EAEzC,EACAP,SAAS,EACTC,gBAAgB,EAChBrB,MAAO,mBAgBLsD,IAAkBC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAAkB,SAAA7N,GAAQ,MAAQ,CACxD+N,gBADgD/N,EAALgO,MACpBC,QAAQC,WAAWC,QAC3C,IAEKC,IAAkBP,EAAAA,EAAAA,IAAOQ,EAAAA,EAAPR,EAAkB,SAAAS,GAAQA,EAALN,MAAK,MAAQ,CACxDO,SAAU,QACV9D,WAAY,MACZ+D,cAAe,MACfC,WAAY,SACZvI,aAAc,WACdC,SAAU,SACX,IAED,SAASuI,GAAkBtO,GACzB,IACEuO,EAMEvO,EANFuO,iBACAC,EAKExO,EALFwO,MACAC,EAIEzO,EAJFyO,QACAC,EAGE1O,EAHF0O,YACAC,EAEE3O,EAFF2O,SACAC,EACE5O,EADF4O,cAOF,OACEjK,EAAAA,EAAAA,KAAC6I,GAAe,CAAAhM,UACdiD,EAAAA,EAAAA,MAACoK,EAAAA,EAAQ,CAAArN,SAAA,EACPmD,EAAAA,EAAAA,KAACqJ,GAAe,CAACc,QAAQ,WAAUtN,UACjCmD,EAAAA,EAAAA,KAACoK,EAAAA,EAAQ,CACPC,KAAM,qCACNvE,MAAM,UACNwE,cAAeP,EAAc,GAAKA,EAAcC,EAChDO,QAASP,EAAW,GAAKD,IAAgBC,EACzCQ,SAAUZ,EACVa,WAAY,CACV,aAAc,0CAInBpE,GAAUqE,KAAI,SAACC,GAAQ,OACtB3K,EAAAA,EAAAA,KAACqJ,GAAe,CAEduB,MAAOD,EAAShE,QAAU,QAAU,SACpCwD,QAASQ,EAAS/D,eAAiB,OAAS,SAC5CiE,cAAef,IAAYa,EAASrP,IAAKuO,EAAchN,UAEvDiD,EAAAA,EAAAA,MAACgL,EAAAA,EAAc,CACbC,OAAQJ,EAASrE,YAAcwD,IAAYa,EAASrE,WACpD0E,cAAeL,EAASrE,WACxBtD,UAAW8G,IAAYa,EAASrE,WAAauD,EAAQ,MACrDtI,QACEoJ,EAASrE,YA/BpB2E,EAgCiCN,EAASrE,WAhChB,SAAC3E,GAC1BsI,EAActI,EAAOsJ,EACvB,GA+BgB,WAEA,EACLpO,SAAA,CAEA8N,EAASpF,MACToF,EAASrE,YAAcwD,IAAYa,EAASrE,YAC3CtG,EAAAA,EAAAA,KAACmF,EAAAA,EAAG,CAAC+F,UAAU,OAAOjJ,GAAIkJ,EAAAA,EAAetO,SAC5B,SAAVgN,EAAmB,oBAAsB,qBAE1C,SAtBDc,EAASrP,IArBtB,IAAC2P,CA6CuB,QAK5B,CAOA,SAASG,GAAqB/P,GAC5B,IAAQqE,EAA6BrE,EAA7BqE,SAAU2L,EAAmBhQ,EAAnBgQ,eAClBvO,EAA8BC,EAAAA,SAAuB,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjDoG,EAAOlG,EAAA,GAAEmG,EAAUnG,EAAA,GAC1BI,EAAkDL,EAAAA,SAAuB,GAAEM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAApEkO,EAAiBjO,EAAA,GAAEkO,EAAoBlO,EAAA,GAC9CG,EACET,EAAAA,UAAwB,GAAMU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GADzBgO,EAAkB/N,EAAA,GAAEgO,EAAqBhO,EAAA,GAE1Cf,GAAWgP,EAAAA,EAAAA,MACXC,GAAWtI,EAAAA,EAAAA,MACXD,GAAcE,EAAAA,EAAAA,MAEdhD,GAAqBC,EAAAA,EAAAA,MAE3BgD,GAA8BC,EAAAA,EAAAA,GAAYoI,EAAAA,GAAa,CACrDlI,UAAW,WACTpD,EAAmB,CACjBQ,SAAU,UACVC,QAAS,YAEXqC,EAAYO,kBAAkB,CAAC,UACjC,EACAC,QAAS,SAACC,GACRvD,EAAmB,CACjBQ,SAAU,QACVC,QAAS8C,aAAiBC,MAAQD,EAAM9C,QAAUgD,KAAKC,UAAUH,IAErE,IAbMI,EAAMV,EAANU,OAAQC,EAASX,EAATW,UAsBV2H,EAAqB,WACzBJ,GAAsB,GACtBF,EAAqB,GACrBF,EAAe,CAAC,EAClB,EACMS,EAAgB,WACpBL,GAAsB,GACtBJ,EAAe,CAAE3E,YAAa4E,GAChC,EAgCA,OACExL,EAAAA,EAAAA,MAACiM,EAAAA,EAAO,CACN9J,IAAE/B,EAAAA,EAAAA,GAAA,CACAkB,SAAU,SACV4K,GAAI,CAAEC,GAAI,GACVC,GAAI,CAAEC,GAAI,EAAGF,GAAI,IACbvM,EAAS3F,OAAS,GAAK,CACzB6N,QAAS,SAACqB,GAAK,OACbmD,EAAAA,EAAAA,IACEnD,EAAMC,QAAQmD,QAAQC,KACtBrD,EAAMC,QAAQqD,OAAOC,iBACtB,IAEL3P,SAAA,CAED6C,EAAS3F,OAAS,GACjB+F,EAAAA,EAAAA,MAAC2M,EAAAA,EAAU,CACTxK,GAAI,CAAEyK,KAAM,YACZ5G,MAAM,UACND,QAAQ,YACRqF,UAAU,MAAKrO,SAAA,CAEd6C,EAAS3F,OAAO,gBAGnBiG,EAAAA,EAAAA,KAACyM,EAAAA,EAAU,CACTxK,GAAI,CACFyK,KAAM,WACNhD,WAAY,SACZvI,aAAc,WACdC,SAAU,UAEZyE,QAAQ,KACRvK,GAAG,aACH4P,UAAU,MAAKrO,SAChB,YAIHmD,EAAAA,EAAAA,KAAC2M,EAAAA,EAAS,CACRpH,MAAM,eACNrI,MAAOoO,GAAqB,GAC5Bd,SAxFqB,SAAC7I,GACtBiL,OAAOC,SAASD,OAAOjL,EAAM/H,OAAOsD,UACtCqO,EAAqBqB,OAAOjL,EAAM/H,OAAOsD,QACzCuO,GAAsB,GAE1B,EAoFMqB,QA1Ee,SAACnL,GACF,UAAdA,EAAM1H,MAGNqR,EACFQ,IAEAD,IAEJ,EAkEMnK,KAAK,WAEP1B,EAAAA,EAAAA,KAAC+M,EAAAA,EAAO,CAAC5R,MAAM,cAAa0B,UACxB2O,GAAuBF,GACvBE,IAAuBF,GAOvBtL,EAAAA,EAAAA,KAAA,QAAAnD,UACEmD,EAAAA,EAAAA,KAACyB,EAAAA,EAAU,CAACF,QAASsK,EAAmBhP,UACtCmD,EAAAA,EAAAA,KAACgN,EAAAA,EAAiB,SARtBhN,EAAAA,EAAAA,KAAA,QAAAnD,UACEmD,EAAAA,EAAAA,KAACyB,EAAAA,EAAU,CAACwL,UAAW3B,EAAmB/J,QAASuK,EAAcjP,UAC/DmD,EAAAA,EAAAA,KAACkN,EAAAA,EAAc,WAWvBpN,EAAAA,EAAAA,MAACqF,EAAAA,EAAG,CAAClD,GAAI,CAAEmD,EAAG,EAAGrF,QAAS,eAAgBlD,SAAA,CACnB,IAApB6C,EAAS3F,QACR+F,EAAAA,EAAAA,MAAA0B,EAAAA,SAAA,CAAA3E,SAAA,EACEmD,EAAAA,EAAAA,KAAC+M,EAAAA,EAAO,CAAC5R,MAAM,wBAAuB0B,UACpCmD,EAAAA,EAAAA,KAAA,QAAAnD,UACEmD,EAAAA,EAAAA,KAACyB,EAAAA,EAAU,CAACF,QAxFG,WAC3B4B,EAAWzD,EAAS,GACtB,EAsFwD7C,UACxCmD,EAAAA,EAAAA,KAACmN,EAAAA,EAAU,WAIjBnN,EAAAA,EAAAA,KAACiD,EAAwB,CACvBC,QAASA,EACTC,WAAYA,QAIhBnD,EAAAA,EAAAA,KAAC+M,EAAAA,EAAO,CAAC5R,MAAM,SAAQ0B,UACrBmD,EAAAA,EAAAA,KAAA,QAAAnD,UACEmD,EAAAA,EAAAA,KAACyB,EAAAA,EAAU,CAACF,QAlGF,WACpBoK,EAAS,WAAY,CACnByB,SAAU,OACVC,MAAO,CAAEC,KAAM5Q,GACf6Q,SAAS,GAEb,EA4F+C1Q,UACjCmD,EAAAA,EAAAA,KAACwN,EAAAA,EAAO,WAKhBxN,EAAAA,EAAAA,KAAC+M,EAAAA,EAAO,CAAC5R,MAAM,OAAM0B,UACnBmD,EAAAA,EAAAA,KAAA,QAAAnD,UACEmD,EAAAA,EAAAA,KAACyB,EAAAA,EAAU,CAACwL,SAA8B,IAApBvN,EAAS3F,OAAcwH,QAnGnC,WAClBoK,EAAS,UAADjN,OAAWgB,EAAS,IAAM,CAChC0N,SAAU,OACVC,MAAO,CAAEC,KAAM5Q,GACf6Q,SAAS,GAEb,EA6F4E1Q,UAChEmD,EAAAA,EAAAA,KAACyN,EAAAA,EAAQ,WAIfzN,EAAAA,EAAAA,KAAC+M,EAAAA,EAAO,CAAC5R,MAAM,SAAQ0B,UACrBmD,EAAAA,EAAAA,KAAA,QAAAnD,UACEmD,EAAAA,EAAAA,KAACyB,EAAAA,EAAU,CACTwL,SAA8B,IAApBvN,EAAS3F,OACnBwH,QArGU,WACpB0C,EAAO,GAADvF,OAAIgB,EAAS,IACrB,EAmGmC7C,UAEvBmD,EAAAA,EAAAA,KAAC0N,EAAAA,EAAU,cAKnB1N,EAAAA,EAAAA,KAACgG,GAAAA,EAAM,CAACC,QAAS/B,MAGvB,CAEe,SAASyJ,KACtB,IAAAC,EAA0B7Q,EAAAA,SAAkC,OAAM8Q,GAAA5Q,EAAAA,EAAAA,GAAA2Q,EAAA,GAA3D/D,EAAKgE,EAAA,GAAEC,EAAQD,EAAA,GACtBE,EAA8BhR,EAAAA,SAC5B,eACDiR,GAAA/Q,EAAAA,EAAAA,GAAA8Q,EAAA,GAFMjE,EAAOkE,EAAA,GAAEC,EAAUD,EAAA,GAG1BE,EAAgCnR,EAAAA,SAAkC,IAAGoR,GAAAlR,EAAAA,EAAAA,GAAAiR,EAAA,GAA9DxO,EAAQyO,EAAA,GAAEC,EAAWD,EAAA,GAC5BE,EAAwBtR,EAAAA,SAAuB,GAAEuR,GAAArR,EAAAA,EAAAA,GAAAoR,EAAA,GAA1CE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,EAAsC1R,EAAAA,SAAuB,IAAG2R,GAAAzR,EAAAA,EAAAA,GAAAwR,EAAA,GAAzDE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,EAAsC9R,EAAAA,SAAoC,CAAC,GAAE+R,GAAA7R,EAAAA,EAAAA,GAAA4R,EAAA,GAAtEE,EAAWD,EAAA,GAAEzD,EAAcyD,EAAA,GAC5BE,EAAoBjS,EAAAA,OAAa,MACjCL,GAAWgP,EAAAA,EAAAA,MACXC,GAAWtI,EAAAA,EAAAA,MACX/C,GAAqBC,EAAAA,EAAAA,MAC3B0O,GAAuBC,EAAAA,EAAAA,MAAdnH,GAAsB9K,EAAAA,EAAAA,GAAAgS,EAAA,GAAZ,GAEnBE,GAIIC,EAAAA,EAAAA,GAAS,CACXC,SAAU,CAAC,SAAUd,EAAMI,EAAa7E,EAASD,EAAOkF,GACxDO,QAASC,EAAAA,GACTC,kBAAkB,EAClBC,OAAO,EACP7L,QAAS,SAACC,GACRvD,EAAmB,CACjBQ,SAAU,QACVC,QAAS8C,aAAiBC,MAAQD,EAAM9C,QAAUgD,KAAKC,UAAUH,IAErE,IAbAK,EAASiL,EAATjL,UACAwL,EAAUP,EAAVO,WAAUC,EAAAR,EACV1I,KAAImJ,OAAA,IAAAD,EAAqB,CAAErS,MAAO,GAAIuS,MAAO,GAAGF,EAAxCrS,EAAKsS,EAALtS,MAAOuS,EAAKD,EAALC,MAaXC,EAAOxS,GAAS,GAEtBP,EAAAA,WAAgB,WACViS,EAAkBe,SACFf,EAAkBe,QAC1BC,SAAS,CACjBC,IAAK,EACLC,KAAM,EACNC,SAAU,UAGhB,GAAG,CAACL,IAEJ/S,EAAAA,WAAgB,WACd,IAAMqT,EAAwB,GAC9B1Q,EAASL,SAAQ,SAACgR,GACIP,EAAKnQ,MAAK,SAAC6G,GAAG,OAAKA,EAAIlL,KAAO+U,CAAY,KAE5DD,EAAYE,KAAKD,EAErB,IACAjC,EAAYgC,EACd,GAAG,CAACN,IAuEJ,OACEhQ,EAAAA,EAAAA,MAACqF,EAAAA,EAAG,CAAClD,GAAI,CAAEE,MAAO,OAAQD,OAAQ,QAASrF,SAAA,EACzCiD,EAAAA,EAAAA,MAACyQ,EAAAA,EAAK,CAACtO,GAAI,CAAEE,MAAO,OAAQD,OAAQ,OAAQ8G,gBAAiB,SAAUnM,SAAA,EACrEmD,EAAAA,EAAAA,KAACoL,GAAoB,CACnB1L,SAAUA,EACV2L,eAAgB,SAACmF,GACfnF,EAAemF,GACfhC,EAAQ,EACV,KAEFxO,EAAAA,EAAAA,KAACyQ,EAAAA,EAAc,CACbhV,IAAKuT,EACL/M,GAAI,CAAEC,OAAQ,sBAAuBrF,UAErCiD,EAAAA,EAAAA,MAAC4Q,EAAAA,EAAK,CACJzO,GAAI,CAAE0O,SAAU,KAChB,kBAAgB,aAChBjP,KAAK,QACLkP,cAAY,EAAA/T,SAAA,EAEZmD,EAAAA,EAAAA,KAAC2J,GAAiB,CAChBI,YAAarK,EAAS3F,OACtB8P,MAAOA,EACPC,QAASA,EACTF,iBA9EiB,SAACjI,GAC5B,GAAIA,EAAM/H,OAAO2Q,QAAjB,CACE,IAAM6F,EAAcN,EAAKpF,KAAI,SAACmG,GAAQ,OAAKA,EAAEvV,EAAE,IAC/C8S,EAAYgC,EAEd,MACAhC,EAAY,GACd,EAwEYnE,cA9Fc,SACxBtI,EACAsJ,GAEA,IAAM6F,EAAQhH,IAAYmB,GAAsB,QAAVpB,EACvBC,IAAYmB,GAAsB,SAAVpB,GAErCiE,OAASjL,GACToL,OAAWpL,KAEXiL,EAASgD,EAAQ,OAAS,OAC1B7C,EAAWhD,GAEf,EAkFYjB,SAAU8F,EAAK/V,UAEjBiG,EAAAA,EAAAA,KAAC+Q,EAAAA,EAAS,CAAAlU,SACPiT,EAAKpF,KAAI,SAAClE,EAAKwK,GACd,IAhCM3G,EAgCA4G,GAhCA5G,EAgC4B,GAAD3L,OAAI8H,EAAIlL,KAhCU,IAA5BoE,EAAS/E,QAAQ0P,IAiClC6G,EAAO,2BAAAxS,OAA8BsS,GAC3C,OACElR,EAAAA,EAAAA,MAACoK,EAAAA,EAAQ,CACPiH,OAAK,EACLC,cAAe,SAACzP,GA5EhCgK,EAAS,UAADjN,OA4EqD8H,EA5ErClL,IAAM,CAC5B8R,SAAU,OACVC,MAAO,CAAEC,KAAM5Q,GACf6Q,SAAS,GAyEsD,EACjD8D,KAAK,WACL,eAAcJ,EACdK,UAAW,EAEX5R,SAAUuR,EACVhP,GAAI,CAAEsP,OAAQ,WAAY1U,SAAA,EAE1BmD,EAAAA,EAAAA,KAACqJ,GAAe,CAACc,QAAQ,WAAUtN,UACjCmD,EAAAA,EAAAA,KAACoK,EAAAA,EAAQ,CACP9O,GAAE,GAAAoD,OAAKwS,GACPpL,MAAM,UACNyE,QAAS0G,EACTxG,WAAY,CACV,kBAAmByG,GAErB3P,QAAS,SAACI,GAAK,OArFhB,SAACA,EAAkC0I,GACtD1I,EAAMC,kBACN,IAAM4P,EAAgB9R,EAAS/E,QAAQ0P,GACnC+F,EAAiC,IAEd,IAAnBoB,EACFpB,EAAcA,EAAY1R,OAAOgB,EAAU2K,GAChB,IAAlBmH,EACTpB,EAAcA,EAAY1R,OAAOgB,EAAS+R,MAAM,IACvCD,IAAkB9R,EAAS3F,OAAS,EAC7CqW,EAAcA,EAAY1R,OAAOgB,EAAS+R,MAAM,GAAI,IAC3CD,EAAgB,IACzBpB,EAAcA,EAAY1R,OACxBgB,EAAS+R,MAAM,EAAGD,GAClB9R,EAAS+R,MAAMD,EAAgB,KAInCpD,EAAYgC,EACd,CAkE0CsB,CAAa/P,EAAM,GAADjD,OAAK8H,EAAIlL,IAAK,MAGvD+K,GAAUqE,KAAI,SAACiH,GACd,IAAMC,EAAWD,EAAKpL,QAAQC,EAAKuB,GACnC,OACE/H,EAAAA,EAAAA,KAACqJ,GAAe,CAEdlO,MAAOyW,EAASzW,MAChByP,MAAO+G,EAAKhL,QAAU,QAAU,SAAS9J,SAExC+U,EAASnL,MAJLkL,EAAKrW,GAOhB,MA1BKkL,EAAIlL,GA6Bf,YAIN0E,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdC,mBAAoB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,IAC5C5G,UAAU,MACV6G,MAAOlC,EACPlB,YAAaA,EACbJ,KAAMA,EACNyD,aA3FiB,SAACrQ,EAAgBsQ,GACxCzD,EAAQyD,EACV,EA0FQC,oBAxFwB,SAC9BvQ,GAEAiN,EAAeuD,SAASxQ,EAAM/H,OAAOsD,MAAO,KAC5CsR,EAAQ,EACV,QAsFIxO,EAAAA,EAAAA,KAACgG,GAAAA,EAAM,CAACC,QAAS/B,GAAawL,MAGpC,C,2BChyBI0C,EAAyBC,EAAQ,MAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,OAChDG,EAAcH,EAAQ,KACtBI,GAAW,EAAIF,EAAenJ,SAAS,EAAc,EAAIoJ,EAAYE,KAAK,OAAQ,CACpFzW,EAAG,mJACF,MAAmB,EAAIuW,EAAYE,KAAK,OAAQ,CACjDzW,EAAG,4CACF,MAAO,cACVqW,EAAQ,EAAUG,C,2BCZdL,EAAyBC,EAAQ,MAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,OAChDG,EAAcH,EAAQ,KACtBI,GAAW,EAAIF,EAAenJ,UAAuB,EAAIoJ,EAAYE,KAAK,OAAQ,CACpFzW,EAAG,wCACD,OACJqW,EAAQ,EAAUG,C,2BCVdL,EAAyBC,EAAQ,MAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,OAChDG,EAAcH,EAAQ,KACtBI,GAAW,EAAIF,EAAenJ,UAAuB,EAAIoJ,EAAYE,KAAK,OAAQ,CACpFzW,EAAG,kFACD,UACJqW,EAAQ,EAAUG,C,2BCVdL,EAAyBC,EAAQ,MAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,OAChDG,EAAcH,EAAQ,KACtBI,GAAW,EAAIF,EAAenJ,UAAuB,EAAIoJ,EAAYE,KAAK,OAAQ,CACpFzW,EAAG,yJACD,QACJqW,EAAQ,EAAUG,C","sources":["icons/cat.svg","icons/truck.svg","components/LocationForGrid.tsx","trucks/setWillBeAvailable.tsx","trucks/trucks.tsx","../node_modules/@mui/icons-material/AccessTime.js","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/icons-material/Edit.js"],"sourcesContent":["var _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgCat(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    \"data-name\": \"Layer 1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 128 128\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 64,\n    cy: 75,\n    r: 45,\n    fill: \"none\",\n    strokeWidth: 10,\n    style: {\n      stroke: \"currentcolor\"\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 96.94 40.17 C 96.94 23.36 82.19 9.73 64 9.73 C 45.81 9.73 31.06 23.36 31.06 40.17\",\n    style: {\n      paintOrder: \"fill\",\n      strokeWidth: 6,\n      stroke: \"currentcolor\",\n      fill: \"rgba(255, 255, 255, 0)\"\n    }\n  }), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"39.98 19.5 37.64 5.17 50.61 14.17\",\n    style: {\n      stroke: \"currentcolor\",\n      strokeWidth: 4,\n      fill: \"rgba(0, 0, 0, 0)\"\n    }\n  }), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"87.05 19.5 89.39 5.17 76.42 14.17\",\n    style: {\n      stroke: \"currentcolor\",\n      strokeWidth: 4,\n      fill: \"rgba(0, 0, 0, 0)\"\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 29.27 108.3 C 28.05 113.07 26.83 117.84 25.62 122.61\",\n    style: {\n      stroke: \"currentcolor\",\n      paintOrder: \"stroke\",\n      strokeLinecap: \"round\",\n      strokeWidth: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 25.72 122.61 C 38.31 122.83 50.91 123.05 63.5 123.28\",\n    style: {\n      stroke: \"currentcolor\",\n      strokeWidth: 4,\n      strokeLinecap: \"round\"\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 98.96 108.3 C 100.18 113.07 101.4 117.84 102.61 122.61\",\n    style: {\n      strokeLinecap: \"round\",\n      strokeWidth: 4,\n      stroke: \"currentcolor\",\n      paintOrder: \"stroke\"\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 102.5 122.61 C 88.91 122.85 76.32 123.07 64.72 123.28\",\n    style: {\n      strokeLinecap: \"round\",\n      stroke: \"currentcolor\",\n      strokeWidth: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"63 39.5 63 79.5 79.91 93.83\",\n    style: {\n      stroke: \"currentcolor\",\n      strokeWidth: 6,\n      paintOrder: \"fill\",\n      strokeLinecap: \"round\",\n      fill: \"rgba(255, 255, 255, 0)\"\n    }\n  }));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCat);\nexport default __webpack_public_path__ + \"static/media/cat.b0cbea142ef6c467bbabb420d9425865.svg\";\nexport { ForwardRef as ReactComponent };","var _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgTruck(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    focusable: \"false\",\n    \"aria-hidden\": \"true\",\n    viewBox: \"0 0 24 24\",\n    \"data-testid\": \"LocalShippingIcon\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m20 8h-3v-4h-14c-1.1 0-2 .9-2 2v11h2c0 1.66 1.34 3 3 3s3-1.34 3-3h6c0 1.66 1.34 3 3 3s3-1.34 3-3h2v-5l-3-4zm-14 10.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm13.5-9 1.96 2.5h-4.46v-2.5h2.5zm-1.5 9c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm-14.7-9 1.53 0 0 1.66-3.03 0 1.51-1.66zm2.46-2.74 1.66-1.84 0 4.57.94 0 0 1.66-.94 0 0 1.93-1.66 0 0-6.33zm6.58 6.48c-.37-.06-.72-.19-1.04-.37-.32-.19-.61-.42-.86-.7-.28-.32-.49-.67-.61-1.05-.12-.39-.18-.87-.18-1.44l0-4.51 1.66 0 0 4.36c0 .31.01.57.05.78.03.21.08.39.16.55.08.15.19.28.32.38.14.1.31.19.52.27l0 1.74zm.91-1.74c.21-.07.37-.16.51-.26.14-.1.25-.23.33-.39.08-.14.14-.31.17-.5.03-.2.05-.47.05-.83l0-4.36 1.65 0 0 4.51c0 .58-.06 1.06-.18 1.44-.12.38-.33.73-.61 1.05-.25.29-.54.52-.87.7-.33.18-.68.3-1.04.37l0-1.74z\",\n    style: {\n      fillRule: \"evenodd\",\n      fill: \"currentcolor\"\n    }\n  }));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgTruck);\nexport default __webpack_public_path__ + \"static/media/truck.cd6a1057a38896c7dca3f9ca88d7879e.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\r\n\r\nimport { Wrapper, Status } from '@googlemaps/react-wrapper';\r\n\r\nimport { debounce } from '@mui/material/utils';\r\n\r\nimport { useSnackbar, useLoader } from '../hooks';\r\nimport { mapsSettings } from '../GoogleMaps/map';\r\nimport { GeoPoint } from '../utils/dataTypes';\r\nimport { toStringLocation } from '../utils/toStringLocation';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport { stopPropagation } from '../utils/stopPropagation';\r\nimport ContentCopy from '@mui/icons-material/ContentCopy';\r\n\r\nexport default function LocationForGrid({\r\n  location,\r\n  onRefClick,\r\n  addInfo,\r\n  children,\r\n}: {\r\n  readonly location: GeoPoint;\r\n  onRefClick?: (event: React.SyntheticEvent) => void;\r\n  addInfo?: string;\r\n  children?: React.ReactNode;\r\n}) {\r\n  const [value, setValue] = React.useState<google.maps.GeocoderResult | null>(\r\n    null,\r\n  );\r\n  const [items, setItems] = React.useState<google.maps.GeocoderResult[]>([]);\r\n  const [geocoder, setGeocoder] = React.useState<google.maps.Geocoder | null>(\r\n    null,\r\n  );\r\n\r\n  const setSearch = React.useMemo(() => {\r\n    return debounce((geocodeRequest: google.maps.GeocoderRequest): void => {\r\n      geocoder\r\n        ?.geocode(geocodeRequest)\r\n        .then((result) => {\r\n          if (result.results.length < 1 && geocodeRequest.location) {\r\n            const locationFromRequest = new google.maps.LatLng(\r\n              geocodeRequest.location,\r\n            );\r\n            const res: google.maps.GeocoderResult = {\r\n              address_components: [],\r\n              formatted_address: `[${locationFromRequest.lat()}, ${locationFromRequest.lng()}]`,\r\n              geometry: {\r\n                location: locationFromRequest,\r\n                location_type: google.maps.GeocoderLocationType.APPROXIMATE,\r\n                viewport: new google.maps.LatLngBounds(),\r\n              },\r\n              place_id: `[${locationFromRequest.lat()}, ${locationFromRequest.lng()}]`,\r\n              types: [],\r\n            };\r\n            setItems([res]);\r\n          } else {\r\n            result.results.forEach(\r\n              (item) =>\r\n                (item.formatted_address = toStringLocation(\r\n                  item.address_components,\r\n                )),\r\n            );\r\n            setItems(result.results);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          setItems([]);\r\n        });\r\n    }, 400);\r\n  }, [geocoder]);\r\n\r\n  React.useEffect(() => {\r\n    const selected =\r\n      location &&\r\n      (items.find((option) => option.types.includes('premise')) ||\r\n        items.find((option) => option.types.includes('street_address')) ||\r\n        items.find((option) => option.types.includes('route')) ||\r\n        items.find((option) => option.types.includes('plus_code')));\r\n    if (location && !selected && !items.length) {\r\n      setSearch({\r\n        location: {\r\n          lat: location[0],\r\n          lng: location[1],\r\n        },\r\n      });\r\n    } else if (location && selected && selected?.place_id !== value?.place_id) {\r\n      setValue(selected);\r\n    } else if (!location) {\r\n      setValue(null);\r\n    }\r\n  }, [geocoder, location, items]);\r\n\r\n  const handleApiLoad = (status: Status): React.ReactElement => {\r\n    const setSnackbarMessage = useSnackbar();\r\n    const [, setLoaderVisibility] = useLoader();\r\n    React.useLayoutEffect(() => {\r\n      if (status === Status.LOADING) {\r\n        setLoaderVisibility(true);\r\n      }\r\n      if (status === Status.FAILURE) {\r\n        setSnackbarMessage({\r\n          severity: 'error',\r\n          message: 'Error loading maps!',\r\n        });\r\n      }\r\n      if (status === Status.SUCCESS) {\r\n        setGeocoder(new window.google.maps.Geocoder());\r\n      }\r\n      return () => {\r\n        if (status === Status.LOADING) {\r\n          setLoaderVisibility(false);\r\n        }\r\n      };\r\n    }, [status]);\r\n    return null as unknown as React.ReactElement;\r\n  };\r\n\r\n  return (\r\n    <span style={{ display: 'flex' }}>\r\n      <Wrapper {...mapsSettings} render={handleApiLoad} />\r\n      <span\r\n        style={{\r\n          textOverflow: 'ellipsis',\r\n          overflow: 'hidden',\r\n          textAlign: 'left',\r\n        }}\r\n        title={`${value ? value.formatted_address : ''}` + '\\n' + addInfo}\r\n      >\r\n        {onRefClick ? (\r\n          <a href={'#'} target=\"_blank\" onClick={onRefClick}>\r\n            {value ? value.formatted_address : ''}\r\n          </a>\r\n        ) : value ? (\r\n          value.formatted_address\r\n        ) : (\r\n          ''\r\n        )}\r\n        {!addInfo ? null : (\r\n          <>\r\n            <br />\r\n            {addInfo}\r\n          </>\r\n        )}\r\n        {children}\r\n      </span>\r\n      {!value ? null : (\r\n        <IconButton\r\n          size=\"small\"\r\n          onClick={(event) => {\r\n            stopPropagation(event);\r\n            navigator.clipboard.writeText(value.formatted_address);\r\n          }}\r\n        >\r\n          <ContentCopy sx={{ height: '16px', width: '16px' }} />\r\n        </IconButton>\r\n      )}\r\n    </span>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\n\r\nimport { Loader, SearchLocationField, DateTimeField } from '../components';\r\n\r\nimport { TruckUpdate } from '../api';\r\nimport { useSnackbar } from '../hooks';\r\nimport { UpdateTruck, TruckStatus } from '../utils/dataTypes';\r\nimport { TransitionProps } from '@mui/material/transitions';\r\nimport Slide from '@mui/material/Slide';\r\n\r\nconst validationSchema = yup.object({\r\n  availabilityLocation: yup\r\n    .tuple([\r\n      yup\r\n        .number()\r\n        .typeError('Latitude is required')\r\n        .min(-90, 'Latitude must be grater than or equal: -90')\r\n        .max(90, 'Latitude must be less than or equal: 90')\r\n        .required('Location should be in format \"latitude, longitude\"'),\r\n      yup\r\n        .number()\r\n        .typeError('Longitude is required')\r\n        .min(-180, 'Longitude must be grater than or equal: -180')\r\n        .max(180, 'Longitude must be less than or equal: 180')\r\n        .required('Location should be in format \"latitude, longitude\"'),\r\n    ])\r\n    .required('Will be available location is required'),\r\n  availabilityAt: yup\r\n    .date()\r\n    .typeError('Enter correct date')\r\n    .required('Will be available date is required'),\r\n});\r\n\r\nconst initialValues = {\r\n  id: '',\r\n  status: 'Will be available' as TruckStatus,\r\n  availabilityLocation: null,\r\n  availabilityAt: undefined,\r\n};\r\n\r\nconst Transition = React.forwardRef(function Transition(\r\n  props: TransitionProps & {\r\n    children: React.ReactElement<any, any>;\r\n  },\r\n  ref: React.Ref<unknown>,\r\n) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function SetWillBeAvailableDialog({\r\n  truckId,\r\n  setTruckId,\r\n}: {\r\n  truckId: string;\r\n  setTruckId: React.Dispatch<React.SetStateAction<string>>;\r\n}) {\r\n  const navigate = useNavigate();\r\n  const queryClient = useQueryClient();\r\n  const setSnackbarMessage = useSnackbar();\r\n\r\n  const { mutate, isLoading } = useMutation(TruckUpdate, {\r\n    onSuccess: () => {\r\n      setSnackbarMessage({\r\n        severity: 'success',\r\n        message: 'Will be available set',\r\n      });\r\n      setTruckId('');\r\n      queryClient.invalidateQueries(['trucks']);\r\n    },\r\n    onError: (error: Error) => {\r\n      setSnackbarMessage({\r\n        severity: 'error',\r\n        message: error instanceof Error ? error.message : JSON.stringify(error),\r\n      });\r\n    },\r\n  });\r\n\r\n  const formik = useFormik<UpdateTruck>({\r\n    initialValues: { ...initialValues, id: truckId },\r\n    enableReinitialize: true,\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      mutate(values);\r\n    },\r\n  });\r\n\r\n  const handleClose = () => {\r\n    setTruckId('');\r\n  };\r\n  const handleDialogClose = () => {\r\n    setTruckId('');\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={!!truckId}\r\n      TransitionComponent={Transition}\r\n      keepMounted\r\n      onClose={handleDialogClose}\r\n      aria-describedby=\"alert-dialog-set-will-be-available\"\r\n      PaperProps={{ sx: { width: '600px' } }}\r\n    >\r\n      <DialogTitle>\r\n        <span>Set \"Will ba available\"</span>\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <form onSubmit={formik.handleSubmit} onReset={formik.handleReset}>\r\n          <Box sx={{ display: 'grid' }}>\r\n            <Box key=\"controls\" sx={{ display: 'inline-flex' }}>\r\n              <Box key=\"left\" sx={{ p: 1, width: '50%' }}>\r\n                <SearchLocationField\r\n                  fieldName=\"availabilityLocation\"\r\n                  label=\"Will be available at location\"\r\n                  formik={formik}\r\n                />\r\n              </Box>\r\n              <Box key=\"right\" sx={{ p: 1, width: '50%' }}>\r\n                <DateTimeField\r\n                  fieldName=\"availabilityAt\"\r\n                  label=\"Will be available at date\"\r\n                  disablePast\r\n                  formik={formik}\r\n                />\r\n              </Box>\r\n            </Box>\r\n            <Box key=\"buttons\" sx={{ display: 'inline-flex' }}>\r\n              <Box key=\"left\" sx={{ p: 1, paddingTop: 0, width: '50%' }}>\r\n                <Button\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  size=\"small\"\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                >\r\n                  Set\r\n                </Button>\r\n              </Box>\r\n              <Box key=\"right\" sx={{ p: 1, paddingTop: 0, width: '50%' }}>\r\n                <Button\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  size=\"small\"\r\n                  color=\"primary\"\r\n                  type=\"button\"\r\n                  onClick={handleClose}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n        </form>\r\n        <Loader visible={isLoading} />\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\r\n\r\nimport { alpha, styled } from '@mui/material/styles';\r\nimport TextField from '@mui/material/TextField';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport Box from '@mui/material/Box';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableSortLabel from '@mui/material/TableSortLabel';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport FilterListIcon from '@mui/icons-material/FilterList';\r\nimport FilterListOffIcon from '@mui/icons-material/FilterListOff';\r\nimport ContentCopy from '@mui/icons-material/ContentCopy';\r\nimport AccessTime from '@mui/icons-material/AccessTime';\r\nimport { visuallyHidden } from '@mui/utils';\r\nimport { green, grey, orange } from '@mui/material/colors';\r\n\r\nimport SetWillBeAvailableDialog from './setWillBeAvailable';\r\nimport { ReactComponent as CatIcon } from '../icons/cat.svg';\r\nimport { ReactComponent as TruckIcon } from '../icons/truck.svg';\r\n\r\nimport Loader from '../components/Loader';\r\nimport LocationForGrid from '../components/LocationForGrid';\r\nimport { TrucksQuery, TruckDelete } from '../api';\r\nimport { useMap, useSnackbar } from '../hooks';\r\nimport { Order, Truck } from '../utils/dataTypes';\r\nimport { getPath, getType } from '../utils/queryHelpers';\r\nimport { stopPropagation } from '../utils/stopPropagation';\r\n\r\ninterface HeadCell {\r\n  id: string;\r\n  disablePadding: boolean;\r\n  orderField?: keyof Truck;\r\n  getData: (\r\n    row: Truck,\r\n    setMapData: any,\r\n  ) => { data: JSX.Element | string; title?: string };\r\n  label: string;\r\n  numeric: boolean;\r\n}\r\nconst themeMode = localStorage.getItem('theme') === 'dark' ? 'dark' : 'light';\r\nconst headCells: readonly HeadCell[] = [\r\n  {\r\n    id: 'truckNumber',\r\n    orderField: 'truckNumber',\r\n    getData: (row) => ({ data: `${row.truckNumber}` }),\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Truck Number',\r\n  },\r\n  {\r\n    id: 'mainContactInfo',\r\n    getData: (row) => {\r\n      const person = row.coordinator || row.owner;\r\n      let path = '';\r\n      let type = '';\r\n      let firstRow = '';\r\n      let secondRow = '';\r\n      if (person) {\r\n        path = `./${getPath(person)}/view/${person.id}`;\r\n        type = `${getType(person)} `;\r\n        firstRow = `${person.fullName}`;\r\n        secondRow = `${person?.phone}`;\r\n      }\r\n      return {\r\n        data: (\r\n          <span style={{ display: 'flex' }}>\r\n            <span\r\n              style={{\r\n                textOverflow: 'ellipsis',\r\n                overflow: 'hidden',\r\n                textAlign: 'left',\r\n              }}\r\n            >\r\n              <b>{type}</b>\r\n              <a href={path} target=\"_blank\" onClick={stopPropagation}>\r\n                {firstRow}\r\n              </a>\r\n              <br />\r\n              <a\r\n                href={secondRow ? `tel:${secondRow}` : undefined}\r\n                target=\"_blank\"\r\n                onClick={stopPropagation}\r\n              >\r\n                {secondRow || ' '}\r\n              </a>\r\n            </span>\r\n            <IconButton\r\n              size=\"small\"\r\n              onClick={(event) => {\r\n                stopPropagation(event);\r\n                navigator.clipboard.writeText(firstRow + ' ' + secondRow);\r\n              }}\r\n            >\r\n              <ContentCopy sx={{ height: '16px', width: '16px' }} />\r\n            </IconButton>\r\n          </span>\r\n        ),\r\n        title: type + '' + firstRow + '\\n' + secondRow,\r\n      };\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Main Contact info',\r\n  },\r\n  {\r\n    id: 'status',\r\n    orderField: 'status',\r\n    getData: (row) => {\r\n      const status = `${row.status}`;\r\n      const val = (() => {\r\n        switch (status) {\r\n          case 'Will be available':\r\n            return (\r\n              <CatIcon\r\n                style={{\r\n                  height: '24px',\r\n                  width: '24px',\r\n                  color: themeMode === 'dark' ? grey[100] : grey[900],\r\n                }}\r\n              />\r\n              /*<AccessTime\r\n                sx={{ height: '24px', width: '24px', color: grey[900] }}\r\n              />*/\r\n            );\r\n          case 'On route':\r\n            return (\r\n              <TruckIcon\r\n                style={{\r\n                  height: '24px',\r\n                  width: '24px',\r\n                  color: themeMode === 'dark' ? grey[300] : grey[700],\r\n                }}\r\n              />\r\n              /*<LocalShipping\r\n                sx={{ height: '24px', width: '24px', color: orange[500] }}\r\n              />*/\r\n            );\r\n          case 'Available':\r\n            return (\r\n              <Avatar\r\n                sx={{\r\n                  height: '24px',\r\n                  width: '24px',\r\n                  bgcolor: green[500],\r\n                  margin: 'auto',\r\n                }}\r\n              >\r\n                A\r\n              </Avatar>\r\n            );\r\n          case 'Not Available':\r\n            return (\r\n              <Avatar\r\n                sx={{\r\n                  height: '24px',\r\n                  width: '24px',\r\n                  bgcolor: grey[500],\r\n                  margin: 'auto',\r\n                }}\r\n              >\r\n                N\r\n              </Avatar>\r\n            );\r\n          default:\r\n            return status;\r\n        }\r\n      })();\r\n\r\n      return {\r\n        data: <span>{val}</span>,\r\n        title: status,\r\n      };\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Status',\r\n  },\r\n  {\r\n    id: 'location',\r\n    getData: (row, setMapData) => {\r\n      const onRefClick = (event: React.SyntheticEvent) => {\r\n        event.preventDefault();\r\n        stopPropagation(event);\r\n        setMapData([row]);\r\n      };\r\n\r\n      if (row?.lastLocation) {\r\n        const secondRow = `${\r\n          row.locationUpdatedAt\r\n            ? new Date(row.locationUpdatedAt).toLocaleString()\r\n            : ''\r\n        }`;\r\n\r\n        return {\r\n          data: (\r\n            <LocationForGrid\r\n              location={row.lastLocation}\r\n              onRefClick={onRefClick}\r\n              addInfo={secondRow}\r\n            />\r\n          ),\r\n        };\r\n      } else {\r\n        return { data: '' };\r\n      }\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Last known location',\r\n  },\r\n  {\r\n    id: 'truckInfo',\r\n    getData: (row) => {\r\n      const firstRow = row.type ? `${row.type}` : '';\r\n      const secondRow = row.equipment ? `${row.equipment.join(', ')}` : '';\r\n\r\n      return {\r\n        data: (\r\n          <span>\r\n            {firstRow}\r\n            <br />\r\n            {secondRow}\r\n          </span>\r\n        ),\r\n        title: firstRow + '\\n' + secondRow,\r\n      };\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Truck info',\r\n  },\r\n  {\r\n    id: 'dimsAndPayload',\r\n    getData: (row) => {\r\n      const firstRowPart1 = row.insideDims ? `${row.insideDims}` : '';\r\n      const firstRowPart2 = row.doorDims ? `${row.doorDims}` : '';\r\n      const secondRow = row.payload ? `${row.payload}` : '';\r\n\r\n      return {\r\n        data: (\r\n          <span>\r\n            {(firstRowPart1 ? firstRowPart1 + ' ' : '') +\r\n              `${firstRowPart2 ? '(' + firstRowPart2 + ')' : ''}`}\r\n            <br />\r\n            {secondRow}\r\n          </span>\r\n        ),\r\n        title:\r\n          (firstRowPart1 ? firstRowPart1 + ' Inside ' : '') +\r\n          (firstRowPart2 ? firstRowPart2 + ' Door ' : '') +\r\n          '\\n' +\r\n          secondRow +\r\n          ' Payload',\r\n      };\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'DIMS/Payload',\r\n  },\r\n  {\r\n    id: 'driverInfo',\r\n    getData: (row) => {\r\n      const driver = row.driver;\r\n      let path = '';\r\n      let type = '';\r\n      let firstRow = '';\r\n      let secondRow = '';\r\n      if (driver) {\r\n        path = `./${getPath(driver)}/view/${driver.id}`;\r\n        type = `${getType(driver)} `;\r\n        firstRow = `${driver.fullName}`;\r\n        secondRow = `${driver.phone}`;\r\n      }\r\n      return {\r\n        data: (\r\n          <span>\r\n            <b>{type}</b>\r\n            <a\r\n              href={firstRow ? path : undefined}\r\n              target=\"_blank\"\r\n              onClick={stopPropagation}\r\n            >\r\n              {firstRow}\r\n            </a>\r\n            <br />\r\n            <a\r\n              href={secondRow ? `tel:${secondRow}` : undefined}\r\n              target=\"_blank\"\r\n              onClick={stopPropagation}\r\n            >\r\n              {secondRow || ' '}\r\n            </a>\r\n          </span>\r\n        ),\r\n        title: type + '' + firstRow + '\\n' + secondRow,\r\n      };\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Driver info',\r\n  },\r\n];\r\n\r\ninterface EnhancedTableProps {\r\n  numSelected: number;\r\n  onRequestSort: (\r\n    event: React.MouseEvent<unknown>,\r\n    property: keyof Truck,\r\n  ) => void;\r\n  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n  order: Order | undefined;\r\n  orderBy: string | undefined;\r\n  rowCount: number;\r\n}\r\n\r\nconst StyledTableHead = styled(TableHead)(({ theme }) => ({\r\n  backgroundColor: theme.palette.background.default,\r\n}));\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n  maxWidth: '100px',\r\n  paddingTop: '6px',\r\n  paddingBottom: '6px',\r\n  whiteSpace: 'nowrap',\r\n  textOverflow: 'ellipsis',\r\n  overflow: 'hidden',\r\n}));\r\n\r\nfunction EnhancedTableHead(props: EnhancedTableProps) {\r\n  const {\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n  const createSortHandler =\r\n    (property: keyof Truck) => (event: React.MouseEvent<unknown>) => {\r\n      onRequestSort(event, property);\r\n    };\r\n\r\n  return (\r\n    <StyledTableHead>\r\n      <TableRow>\r\n        <StyledTableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            name={'enhanced-table-checkbox-select-all'}\r\n            color=\"primary\"\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{\r\n              'aria-label': 'enhanced-table-checkbox-select-all',\r\n            }}\r\n          />\r\n        </StyledTableCell>\r\n        {headCells.map((headCell) => (\r\n          <StyledTableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'center'}\r\n            padding={headCell.disablePadding ? 'none' : 'normal'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={headCell.orderField && orderBy === headCell.orderField}\r\n              hideSortIcon={!headCell.orderField}\r\n              direction={orderBy === headCell.orderField ? order : 'asc'}\r\n              onClick={\r\n                headCell.orderField\r\n                  ? createSortHandler(headCell.orderField)\r\n                  : () => {\r\n                      return;\r\n                    }\r\n              }\r\n            >\r\n              {headCell.label}\r\n              {headCell.orderField && orderBy === headCell.orderField ? (\r\n                <Box component=\"span\" sx={visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </Box>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </StyledTableCell>\r\n        ))}\r\n      </TableRow>\r\n    </StyledTableHead>\r\n  );\r\n}\r\n\r\ninterface EnhancedTableToolbarProps {\r\n  selected: readonly string[];\r\n  setQueryParams: React.Dispatch<React.SetStateAction<Record<string, number>>>;\r\n}\r\n\r\nfunction EnhancedTableToolbar(props: EnhancedTableToolbarProps) {\r\n  const { selected, setQueryParams } = props;\r\n  const [truckId, setTruckId] = React.useState<string>('');\r\n  const [truckNumberSearch, setTruckNumberSearch] = React.useState<number>(0);\r\n  const [truckNumberChanged, setTruckNumberChanged] =\r\n    React.useState<boolean>(false);\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const queryClient = useQueryClient();\r\n\r\n  const setSnackbarMessage = useSnackbar();\r\n\r\n  const { mutate, isLoading } = useMutation(TruckDelete, {\r\n    onSuccess: () => {\r\n      setSnackbarMessage({\r\n        severity: 'success',\r\n        message: 'Deleted',\r\n      });\r\n      queryClient.invalidateQueries(['trucks']);\r\n    },\r\n    onError: (error: Error) => {\r\n      setSnackbarMessage({\r\n        severity: 'error',\r\n        message: error instanceof Error ? error.message : JSON.stringify(error),\r\n      });\r\n    },\r\n  });\r\n\r\n  const truckNumberHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (Number.isFinite(Number(event.target.value))) {\r\n      setTruckNumberSearch(Number(event.target.value));\r\n      setTruckNumberChanged(true);\r\n    }\r\n  };\r\n  const filterClearHandler = () => {\r\n    setTruckNumberChanged(false);\r\n    setTruckNumberSearch(0);\r\n    setQueryParams({});\r\n  };\r\n  const filterHandler = () => {\r\n    setTruckNumberChanged(false);\r\n    setQueryParams({ truckNumber: truckNumberSearch });\r\n  };\r\n  const keyUpHandler = (event: React.KeyboardEvent) => {\r\n    if (event.key !== 'Enter') {\r\n      return;\r\n    }\r\n    if (truckNumberSearch) {\r\n      filterHandler();\r\n    } else {\r\n      filterClearHandler();\r\n    }\r\n  };\r\n  const openWBADialogHandler = () => {\r\n    setTruckId(selected[0]);\r\n  };\r\n  const createHandler = () => {\r\n    navigate('./create', {\r\n      relative: 'path',\r\n      state: { from: location },\r\n      replace: false,\r\n    });\r\n  };\r\n  const editHandler = () => {\r\n    navigate(`./edit/${selected[0]}`, {\r\n      relative: 'path',\r\n      state: { from: location },\r\n      replace: false,\r\n    });\r\n  };\r\n  const deleteHandler = () => {\r\n    mutate(`${selected[0]}`);\r\n  };\r\n\r\n  return (\r\n    <Toolbar\r\n      sx={{\r\n        overflow: 'hidden',\r\n        pl: { sm: 2 },\r\n        pr: { xs: 1, sm: 1 },\r\n        ...(selected.length > 0 && {\r\n          bgcolor: (theme) =>\r\n            alpha(\r\n              theme.palette.primary.main,\r\n              theme.palette.action.activatedOpacity,\r\n            ),\r\n        }),\r\n      }}\r\n    >\r\n      {selected.length > 0 ? (\r\n        <Typography\r\n          sx={{ flex: '1 1 100%' }}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {selected.length} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          sx={{\r\n            flex: '1 1 100%',\r\n            whiteSpace: 'nowrap',\r\n            textOverflow: 'ellipsis',\r\n            overflow: 'hidden',\r\n          }}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          Trucks\r\n        </Typography>\r\n      )}\r\n      <TextField\r\n        label=\"Truck Number\"\r\n        value={truckNumberSearch || ''}\r\n        onChange={truckNumberHandler}\r\n        onKeyUp={keyUpHandler}\r\n        size=\"small\"\r\n      />\r\n      <Tooltip title=\"Filter list\">\r\n        {(truckNumberChanged || !truckNumberSearch) &&\r\n        !(truckNumberChanged && !truckNumberSearch) ? (\r\n          <span>\r\n            <IconButton disabled={!truckNumberSearch} onClick={filterHandler}>\r\n              <FilterListIcon />\r\n            </IconButton>\r\n          </span>\r\n        ) : (\r\n          <span>\r\n            <IconButton onClick={filterClearHandler}>\r\n              <FilterListOffIcon />\r\n            </IconButton>\r\n          </span>\r\n        )}\r\n      </Tooltip>\r\n      <Box sx={{ p: 1, display: 'inline-flex' }}>\r\n        {selected.length === 1 ? (\r\n          <>\r\n            <Tooltip title=\"Set Will be available\">\r\n              <span>\r\n                <IconButton onClick={openWBADialogHandler}>\r\n                  <AccessTime />\r\n                </IconButton>\r\n              </span>\r\n            </Tooltip>\r\n            <SetWillBeAvailableDialog\r\n              truckId={truckId}\r\n              setTruckId={setTruckId}\r\n            />\r\n          </>\r\n        ) : (\r\n          <Tooltip title=\"Create\">\r\n            <span>\r\n              <IconButton onClick={createHandler}>\r\n                <AddIcon />\r\n              </IconButton>\r\n            </span>\r\n          </Tooltip>\r\n        )}\r\n        <Tooltip title=\"Edit\">\r\n          <span>\r\n            <IconButton disabled={selected.length !== 1} onClick={editHandler}>\r\n              <EditIcon />\r\n            </IconButton>\r\n          </span>\r\n        </Tooltip>\r\n        <Tooltip title=\"Delete\">\r\n          <span>\r\n            <IconButton\r\n              disabled={selected.length !== 1}\r\n              onClick={deleteHandler}\r\n            >\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </span>\r\n        </Tooltip>\r\n      </Box>\r\n      <Loader visible={isLoading} />\r\n    </Toolbar>\r\n  );\r\n}\r\n\r\nexport default function EnhancedTable() {\r\n  const [order, setOrder] = React.useState<Order | undefined>('asc');\r\n  const [orderBy, setOrderBy] = React.useState<keyof Truck | undefined>(\r\n    'truckNumber',\r\n  );\r\n  const [selected, setSelected] = React.useState<readonly string[]>([]);\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState<number>(15);\r\n  const [queryParams, setQueryParams] = React.useState<Record<string, any>>({});\r\n  const tableContainerRef = React.useRef(null);\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const setSnackbarMessage = useSnackbar();\r\n  const [, setMapData] = useMap();\r\n\r\n  const {\r\n    isLoading,\r\n    isFetching,\r\n    data: { items, total } = { items: [], total: 0 },\r\n  } = useQuery({\r\n    queryKey: ['trucks', page, rowsPerPage, orderBy, order, queryParams],\r\n    queryFn: TrucksQuery,\r\n    keepPreviousData: true,\r\n    retry: false,\r\n    onError: (error: Error) => {\r\n      setSnackbarMessage({\r\n        severity: 'error',\r\n        message: error instanceof Error ? error.message : JSON.stringify(error),\r\n      });\r\n    },\r\n  });\r\n  const rows = items || [];\r\n\r\n  React.useEffect(() => {\r\n    if (tableContainerRef.current) {\r\n      const container = tableContainerRef.current as HTMLElement;\r\n      container.scrollTo({\r\n        top: 0,\r\n        left: 0,\r\n        behavior: 'smooth',\r\n      });\r\n    }\r\n  }, [rows]);\r\n\r\n  React.useEffect(() => {\r\n    const newSelected: string[] = [];\r\n    selected.forEach((selectedItem) => {\r\n      const selectedRow = rows.find((row) => row.id === selectedItem);\r\n      if (selectedRow) {\r\n        newSelected.push(selectedItem);\r\n      }\r\n    });\r\n    setSelected(newSelected);\r\n  }, [rows]);\r\n\r\n  const handleRequestSort = (\r\n    event: React.MouseEvent<unknown>,\r\n    property: keyof Truck,\r\n  ) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    const isDesc = orderBy === property && order === 'desc';\r\n    if (isDesc) {\r\n      setOrder(undefined);\r\n      setOrderBy(undefined);\r\n    } else {\r\n      setOrder(isAsc ? 'desc' : 'asc');\r\n      setOrderBy(property);\r\n    }\r\n  };\r\n\r\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (event.target.checked) {\r\n      const newSelected = rows.map((n: Truck) => n.id);\r\n      setSelected(newSelected);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (\r\n    event: React.MouseEvent<unknown>,\r\n    item: (typeof rows)[number],\r\n  ) => {\r\n    navigate(`./view/${item.id}`, {\r\n      relative: 'path',\r\n      state: { from: location },\r\n      replace: false,\r\n    });\r\n  };\r\n\r\n  const handleSelect = (event: React.MouseEvent<unknown>, name: string) => {\r\n    event.stopPropagation();\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected: readonly string[] = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event: unknown, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (\r\n    event: React.ChangeEvent<HTMLInputElement>,\r\n  ) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const isSelected = (name: string) => selected.indexOf(name) !== -1;\r\n\r\n  return (\r\n    <Box sx={{ width: '100%', height: '100%' }}>\r\n      <Paper sx={{ width: '100%', height: '100%', backgroundColor: 'unset' }}>\r\n        <EnhancedTableToolbar\r\n          selected={selected}\r\n          setQueryParams={(query) => {\r\n            setQueryParams(query);\r\n            setPage(0);\r\n          }}\r\n        />\r\n        <TableContainer\r\n          ref={tableContainerRef}\r\n          sx={{ height: 'calc(100% - 115px)' }}\r\n        >\r\n          <Table\r\n            sx={{ minWidth: 750 }}\r\n            aria-labelledby=\"tableTitle\"\r\n            size=\"small\"\r\n            stickyHeader\r\n          >\r\n            <EnhancedTableHead\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {rows.map((row, index) => {\r\n                const isItemSelected = isSelected(`${row.id}`);\r\n                const labelId = `enhanced-table-checkbox-${index}`;\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    onDoubleClick={(event) => handleClick(event, row)}\r\n                    role=\"checkbox\"\r\n                    aria-checked={isItemSelected}\r\n                    tabIndex={-1}\r\n                    key={row.id}\r\n                    selected={isItemSelected}\r\n                    sx={{ cursor: 'pointer' }}\r\n                  >\r\n                    <StyledTableCell padding=\"checkbox\">\r\n                      <Checkbox\r\n                        id={`${labelId}`}\r\n                        color=\"primary\"\r\n                        checked={isItemSelected}\r\n                        inputProps={{\r\n                          'aria-labelledby': labelId,\r\n                        }}\r\n                        onClick={(event) => handleSelect(event, `${row.id}`)}\r\n                      />\r\n                    </StyledTableCell>\r\n                    {headCells.map((cell) => {\r\n                      const cellData = cell.getData(row, setMapData);\r\n                      return (\r\n                        <StyledTableCell\r\n                          key={cell.id}\r\n                          title={cellData.title}\r\n                          align={cell.numeric ? 'right' : 'center'}\r\n                        >\r\n                          {cellData.data}\r\n                        </StyledTableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 15, 20, 25, 35, 50]}\r\n          component=\"div\"\r\n          count={total}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <Loader visible={isLoading || isFetching} />\r\n    </Box>\r\n  );\r\n}\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z\"\n}, \"1\")], 'AccessTime');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\nexports.default = _default;"],"names":["_excluded","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgCat","_ref","svgRef","title","titleId","props","id","xmlns","viewBox","ref","cx","cy","r","fill","strokeWidth","style","stroke","d","paintOrder","points","strokeLinecap","ForwardRef","SvgTruck","focusable","fillRule","LocationForGrid","location","onRefClick","addInfo","children","_React$useState","React","_React$useState2","_slicedToArray","value","setValue","_React$useState3","_React$useState4","items","setItems","_React$useState5","_React$useState6","geocoder","setGeocoder","setSearch","debounce","geocodeRequest","geocode","then","result","results","locationFromRequest","google","maps","LatLng","res","address_components","formatted_address","concat","lat","lng","geometry","location_type","GeocoderLocationType","APPROXIMATE","viewport","LatLngBounds","place_id","types","forEach","item","toStringLocation","catch","err","selected","find","option","includes","_jsxs","display","_jsx","Wrapper","_objectSpread","mapsSettings","render","status","setSnackbarMessage","useSnackbar","_useLoader","useLoader","setLoaderVisibility","Status","LOADING","FAILURE","severity","message","SUCCESS","window","Geocoder","textOverflow","overflow","textAlign","href","onClick","_Fragment","IconButton","size","event","stopPropagation","navigator","clipboard","writeText","ContentCopy","sx","height","width","validationSchema","yup","availabilityLocation","typeError","min","max","required","availabilityAt","initialValues","undefined","Transition","Slide","direction","SetWillBeAvailableDialog","truckId","setTruckId","queryClient","useNavigate","useQueryClient","_useMutation","useMutation","TruckUpdate","onSuccess","invalidateQueries","onError","error","Error","JSON","stringify","mutate","isLoading","formik","useFormik","enableReinitialize","onSubmit","values","Dialog","open","TransitionComponent","keepMounted","onClose","PaperProps","DialogTitle","DialogContent","handleSubmit","onReset","handleReset","Box","p","SearchLocationField","fieldName","label","DateTimeField","disablePast","paddingTop","Button","fullWidth","variant","color","type","Loader","visible","themeMode","localStorage","getItem","headCells","orderField","getData","row","data","truckNumber","numeric","disablePadding","person","coordinator","owner","path","firstRow","secondRow","getPath","getType","fullName","phone","val","CatIcon","grey","TruckIcon","Avatar","bgcolor","green","margin","setMapData","lastLocation","locationUpdatedAt","Date","toLocaleString","preventDefault","equipment","join","firstRowPart1","insideDims","firstRowPart2","doorDims","payload","driver","StyledTableHead","styled","TableHead","backgroundColor","theme","palette","background","default","StyledTableCell","TableCell","_ref2","maxWidth","paddingBottom","whiteSpace","EnhancedTableHead","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","TableRow","padding","Checkbox","name","indeterminate","checked","onChange","inputProps","map","headCell","align","sortDirection","TableSortLabel","active","hideSortIcon","property","component","visuallyHidden","EnhancedTableToolbar","setQueryParams","truckNumberSearch","setTruckNumberSearch","truckNumberChanged","setTruckNumberChanged","useLocation","navigate","TruckDelete","filterClearHandler","filterHandler","Toolbar","pl","sm","pr","xs","alpha","primary","main","action","activatedOpacity","Typography","flex","TextField","Number","isFinite","onKeyUp","Tooltip","FilterListOffIcon","disabled","FilterListIcon","AccessTime","relative","state","from","replace","AddIcon","EditIcon","DeleteIcon","EnhancedTable","_React$useState7","_React$useState8","setOrder","_React$useState9","_React$useState10","setOrderBy","_React$useState11","_React$useState12","setSelected","_React$useState13","_React$useState14","page","setPage","_React$useState15","_React$useState16","rowsPerPage","setRowsPerPage","_React$useState17","_React$useState18","queryParams","tableContainerRef","_useMap","useMap","_useQuery","useQuery","queryKey","queryFn","TrucksQuery","keepPreviousData","retry","isFetching","_useQuery$data","_useQuery$data2","total","rows","current","scrollTo","top","left","behavior","newSelected","selectedItem","push","Paper","query","TableContainer","Table","minWidth","stickyHeader","n","isAsc","TableBody","index","isItemSelected","labelId","hover","onDoubleClick","role","tabIndex","cursor","selectedIndex","slice","handleSelect","cell","cellData","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","jsx"],"sourceRoot":""}