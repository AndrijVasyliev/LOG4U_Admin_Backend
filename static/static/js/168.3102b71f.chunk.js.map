{"version":3,"file":"static/js/168.3102b71f.chunk.js","mappings":"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","sources":["api/api.ts","loads/loads.tsx"],"sourcesContent":["import { authProvider } from '../utils/auth';\n\nconst { origin } = new URL(window.location.href);\n\nexport type Order = 'asc' | 'desc';\n\nexport const authFetch: (input: string | URL) => Promise<Response> = (\n  input,\n) => {\n  const init = { headers: new Headers() };\n  init.headers.set(\n    'Authorization',\n    'Basic ' +\n      btoa(authProvider.user?.username + ':' + authProvider.user?.password),\n  );\n  return fetch(input, init);\n};\n\nexport const TrucksQuery = (\n  page: number,\n  rowsPerPage: number,\n  orderBy?: string,\n  order?: Order,\n  queryParams?: {\n    truckNumber?: number;\n    lastLocation?: string;\n    distance?: string;\n  },\n) => {\n  const url = new URL('/truck', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  if (queryParams?.lastLocation && queryParams?.distance) {\n    url.searchParams.append('lastLocation', `${queryParams.lastLocation}`);\n    url.searchParams.append('distance', `${queryParams.distance}`);\n  }\n  return authFetch(url).then((res) => res.json());\n};\n\nexport const LocationsQuery = (\n  page: number,\n  rowsPerPage: number,\n  orderBy?: string,\n  order?: Order,\n  queryParams?: { search?: string; name?: string },\n) => {\n  const url = new URL('/location', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.search) {\n    url.searchParams.append('search', `${queryParams.search}`);\n  }\n  if (queryParams?.name) {\n    url.searchParams.append('name', `${queryParams.name}`);\n  }\n  return authFetch(url).then((res) => res.json());\n};\n\nexport const LoadsQuery = (\n  page: number,\n  rowsPerPage: number,\n  orderBy?: string,\n  order?: Order,\n  queryParams?: { loadNumber?: number; truckNumber?: number },\n) => {\n  const url = new URL('/load', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.loadNumber) {\n    url.searchParams.append('loadNumber', `${queryParams.loadNumber}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  return authFetch(url).then((res) => res.json());\n};\n\nexport const OwnersQuery = (\n  page: number,\n  rowsPerPage: number,\n  orderBy?: string,\n  order?: Order,\n  queryParams?: { fullName?: number; truckNumber?: number },\n) => {\n  const url = new URL('/owner', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.fullName) {\n    url.searchParams.append('fullName', `${queryParams.fullName}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  return authFetch(url).then((res) => res.json());\n};\n\nexport const DriversQuery = (\n  page: number,\n  rowsPerPage: number,\n  orderBy?: string,\n  order?: Order,\n  queryParams?: { fullName?: number; truckNumber?: number },\n) => {\n  const url = new URL('/driver', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.fullName) {\n    url.searchParams.append('fullName', `${queryParams.fullName}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  return authFetch(url).then((res) => res.json());\n};\n\nexport const CoordinatorsQuery = (\n  page: number,\n  rowsPerPage: number,\n  orderBy?: string,\n  order?: Order,\n  queryParams?: { fullName?: number; truckNumber?: number },\n) => {\n  const url = new URL('/coordinator', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.fullName) {\n    url.searchParams.append('fullName', `${queryParams.fullName}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  return authFetch(url).then((res) => res.json());\n};\n\nexport const UsersQuery = (\n  page: number,\n  rowsPerPage: number,\n  orderBy?: string,\n  order?: Order,\n  queryParams?: { fullName?: number },\n) => {\n  const url = new URL('/user', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.fullName) {\n    url.searchParams.append('fullName', `${queryParams.fullName}`);\n  }\n  return authFetch(url).then((res) => res.json());\n};\n","import * as React from 'react';\nimport { useQuery } from '@tanstack/react-query';\n\nimport { alpha, styled } from '@mui/material/styles';\nimport TextField from '@mui/material/TextField';\nimport Tooltip from '@mui/material/Tooltip';\nimport TableCell from '@mui/material/TableCell';\nimport Box from '@mui/material/Box';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport TableSortLabel from '@mui/material/TableSortLabel';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport FilterListIcon from '@mui/icons-material/FilterList';\nimport FilterListOffIcon from '@mui/icons-material/FilterListOff';\nimport { visuallyHidden } from '@mui/utils';\n\nimport Loader from '../components/Loader';\n\nimport { LoadsQuery } from '../api';\nimport { Order, Load } from '../utils/dataTypes';\n\ninterface HeadCell {\n  id: string;\n  disablePadding: boolean;\n  orderField?: keyof Load;\n  getData: (row: Load) => { data: JSX.Element | string; title?: string };\n  label: string;\n  numeric: boolean;\n}\n\nconst headCells: readonly HeadCell[] = [\n  {\n    id: 'loadNumber',\n    orderField: 'loadNumber',\n    getData: (row) => ({ data: `${row.loadNumber}` }),\n    numeric: true,\n    disablePadding: false,\n    label: 'Load Number',\n  },\n  {\n    id: 'pickLocation',\n    getData: (row) => {\n      if (row?.pick) {\n        const path = `./locations/${row.pick.id}`;\n        const firstRow = `${row.pick.name}, ${row.pick.stateCode}, ${row.pick.zipCode},`;\n        const secondRow = `${\n          row.pickDate ? new Date(row.pickDate).toLocaleString() : ''\n        }`;\n\n        return {\n          data: (\n            <span>\n              <a href={path} target=\"_blank\" onClick={stopPropagation}>\n                {firstRow}\n              </a>\n              <br />\n              {secondRow}\n            </span>\n          ),\n          title: firstRow + '\\n' + secondRow,\n        };\n      } else {\n        return { data: '' };\n      }\n    },\n    numeric: false,\n    disablePadding: true,\n    label: 'First pick up EDT',\n  },\n  {\n    id: 'deliverLocation',\n    getData: (row) => {\n      if (row?.deliver) {\n        const path = `./locations/${row.deliver.id}`;\n        const firstRow = `${row.deliver.name}, ${row.deliver.stateCode}, ${row.deliver.zipCode},`;\n        const secondRow = `${\n          row.deliverDate ? new Date(row.deliverDate).toLocaleString() : ''\n        }`;\n\n        return {\n          data: (\n            <span>\n              <a href={path} target=\"_blank\" onClick={stopPropagation}>\n                {firstRow}\n              </a>\n              <br />\n              {secondRow}\n            </span>\n          ),\n          title: firstRow + '\\n' + secondRow,\n        };\n      } else {\n        return { data: '' };\n      }\n    },\n    numeric: false,\n    disablePadding: true,\n    label: 'Last delivery EDT',\n  },\n  {\n    id: 'miles',\n    getData: (row) => {\n      if (row?.milesHaversine) {\n        const firstRow = `${\n          row.milesByRoads ? row.milesByRoads.toFixed(2) : ''\n        }`;\n        const secondRow = `${row.milesHaversine.toFixed(2)}`;\n\n        return {\n          data: (\n            <span>\n              <b>{firstRow}</b>\n              <br />\n              {secondRow}\n            </span>\n          ),\n          title: firstRow + ' - By roads' + '\\n' + secondRow + ' - Distance',\n        };\n      } else {\n        return { data: '' };\n      }\n    },\n    numeric: true,\n    disablePadding: false,\n    label: 'Miles',\n  },\n  {\n    id: 'truckType',\n    getData: (row) => {\n      const firstRow = `${row.truckType.join(', ')}`;\n\n      return {\n        data: <span>{firstRow}</span>,\n        title: firstRow,\n      };\n    },\n    numeric: false,\n    disablePadding: true,\n    label: 'Required truck info',\n  },\n  {\n    id: 'truck',\n    getData: (row) => {\n      if (row?.truck) {\n        const path = `./trucks/${row.truck.id}`;\n        const firstRow = `${row.truck.truckNumber}`;\n\n        return {\n          data: (\n            <span>\n              <a href={path} target=\"_blank\" onClick={stopPropagation}>\n                {firstRow}\n              </a>\n            </span>\n          ),\n          title: firstRow,\n        };\n      } else {\n        return { data: '' };\n      }\n    },\n    numeric: true,\n    disablePadding: false,\n    label: 'Truck',\n  },\n];\n\ninterface EnhancedTableProps {\n  numSelected: number;\n  onRequestSort: (\n    event: React.MouseEvent<unknown>,\n    property: keyof Load,\n  ) => void;\n  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  order: Order | undefined;\n  orderBy: string | undefined;\n  rowCount: number;\n}\n\nconst StyledTableHead = styled(TableHead)(({ theme }) => ({\n  backgroundColor: theme.palette.background.default,\n}));\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  maxWidth: '100px',\n  whiteSpace: 'nowrap',\n  textOverflow: 'ellipsis',\n  overflow: 'hidden',\n}));\n\nfunction stopPropagation(e: React.SyntheticEvent) {\n  e.stopPropagation();\n}\n\nfunction EnhancedTableHead(props: EnhancedTableProps) {\n  const {\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n  } = props;\n  const createSortHandler =\n    (property: keyof Load) => (event: React.MouseEvent<unknown>) => {\n      onRequestSort(event, property);\n    };\n\n  return (\n    <StyledTableHead>\n      <TableRow>\n        <StyledTableCell align=\"center\" padding=\"checkbox\">\n          Actions\n        </StyledTableCell>\n        {headCells.map((headCell) => (\n          <StyledTableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'center'}\n            padding={headCell.disablePadding ? 'none' : 'normal'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={headCell.orderField && orderBy === headCell.orderField}\n              hideSortIcon={!headCell.orderField}\n              direction={orderBy === headCell.orderField ? order : 'asc'}\n              onClick={\n                headCell.orderField\n                  ? createSortHandler(headCell.orderField)\n                  : () => {\n                      return;\n                    }\n              }\n            >\n              {headCell.label}\n              {headCell.orderField && orderBy === headCell.orderField ? (\n                <Box component=\"span\" sx={visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </StyledTableCell>\n        ))}\n      </TableRow>\n    </StyledTableHead>\n  );\n}\n\ninterface EnhancedTableToolbarProps {\n  numSelected: number;\n  setQueryParams: React.Dispatch<React.SetStateAction<Record<string, number>>>;\n}\n\nfunction EnhancedTableToolbar(props: EnhancedTableToolbarProps) {\n  const { numSelected, setQueryParams } = props;\n  const [loadNumberSearch, setLoadNumberSearch] = React.useState<number>(0);\n  const [truckNumberSearch, setTruckNumberSearch] = React.useState<number>(0);\n  const [searchChanged, setSearchChanged] = React.useState<boolean>(false);\n\n  const loadNumberHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (Number.isFinite(Number(event.target.value))) {\n      setLoadNumberSearch(Number(event.target.value));\n      setSearchChanged(true);\n    }\n  };\n  const truckNumberHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (Number.isFinite(Number(event.target.value))) {\n      setTruckNumberSearch(Number(event.target.value));\n      setSearchChanged(true);\n    }\n  };\n  const loadClearHandler = () => {\n    setSearchChanged(false);\n    setLoadNumberSearch(0);\n    setTruckNumberSearch(0);\n    setQueryParams({});\n  };\n  const filterHandler = () => {\n    setSearchChanged(false);\n    const queryParams: Record<string, number> = {};\n    if (loadNumberSearch) {\n      queryParams.loadNumber = loadNumberSearch;\n    }\n    if (truckNumberSearch) {\n      queryParams.truckNumber = truckNumberSearch;\n    }\n    setQueryParams(queryParams);\n  };\n\n  return (\n    <Toolbar\n      sx={{\n        pl: { sm: 2 },\n        pr: { xs: 1, sm: 1 },\n        ...(numSelected > 0 && {\n          bgcolor: (theme) =>\n            alpha(\n              theme.palette.primary.main,\n              theme.palette.action.activatedOpacity,\n            ),\n        }),\n      }}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          sx={{ flex: '1 1 100%' }}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography\n          sx={{\n            flex: '1 1 100%',\n            whiteSpace: 'nowrap',\n            textOverflow: 'ellipsis',\n            overflow: 'hidden',\n          }}\n          variant=\"h6\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          Loads\n        </Typography>\n      )}\n      <Box\n        component=\"div\"\n        sx={{\n          '& .MuiTextField-root': { m: 1, width: '140px' },\n        }}\n      >\n        <TextField\n          label=\"Load Number\"\n          id=\"loadNumber\"\n          value={loadNumberSearch || ''}\n          onChange={loadNumberHandler}\n          size=\"small\"\n        />\n      </Box>\n      <Box\n        component=\"div\"\n        sx={{\n          '& .MuiTextField-root': { m: 1, width: '140px' },\n        }}\n      >\n        <TextField\n          label=\"Truck Number\"\n          id=\"truckNumber\"\n          value={truckNumberSearch || ''}\n          onChange={truckNumberHandler}\n          size=\"small\"\n        />\n      </Box>\n      {numSelected === 1 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton>\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          {(searchChanged || (!loadNumberSearch && !truckNumberSearch)) &&\n          (!(searchChanged && !loadNumberSearch) ||\n            !(searchChanged && !truckNumberSearch)) ? (\n            <span>\n              <IconButton\n                disabled={!loadNumberSearch && !truckNumberSearch}\n                onClick={filterHandler}\n              >\n                <FilterListIcon />\n              </IconButton>\n            </span>\n          ) : (\n            <IconButton onClick={loadClearHandler}>\n              <FilterListOffIcon />\n            </IconButton>\n          )}\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n}\n\nexport default function EnhancedTable() {\n  const [order, setOrder] = React.useState<Order | undefined>('asc');\n  const [orderBy, setOrderBy] = React.useState<keyof Load | undefined>(\n    'loadNumber',\n  );\n  const [selected, setSelected] = React.useState<readonly string[]>([]);\n  const [page, setPage] = React.useState<number>(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState<number>(15);\n  const [queryParams, setQueryParams] = React.useState<Record<string, any>>({});\n  const tableContainerRef = React.useRef(null);\n\n  const {\n    isLoading,\n    isFetching,\n    data: { items, total } = { items: [], total: 0 },\n  } = useQuery({\n    queryKey: ['loads', page, rowsPerPage, orderBy, order, queryParams],\n    queryFn: () => LoadsQuery(page, rowsPerPage, orderBy, order, queryParams),\n    keepPreviousData: true,\n  });\n  const rows: Load[] = items || [];\n\n  React.useEffect(() => {\n    if (tableContainerRef.current) {\n      const container = tableContainerRef.current as HTMLElement;\n      container.scrollTo({\n        top: 0,\n        left: 0,\n        behavior: 'smooth',\n      });\n    }\n  }, [rows]);\n\n  const handleRequestSort = (\n    event: React.MouseEvent<unknown>,\n    property: keyof Load,\n  ) => {\n    const isAsc = orderBy === property && order === 'asc';\n    const isDesc = orderBy === property && order === 'desc';\n    if (isDesc) {\n      setOrder(undefined);\n      setOrderBy(undefined);\n    } else {\n      setOrder(isAsc ? 'desc' : 'asc');\n      setOrderBy(property);\n    }\n  };\n\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.checked) {\n      const newSelected = rows.map((n: Load) => n.id);\n      setSelected(newSelected);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event: React.MouseEvent<unknown>, name: string) => {\n    // const selectedIndex = selected.indexOf(name);\n    // let newSelected: readonly string[] = [];\n    //\n    // if (selectedIndex === -1) {\n    //     newSelected = newSelected.concat(selected, name);\n    // } else if (selectedIndex === 0) {\n    //     newSelected = newSelected.concat(selected.slice(1));\n    // } else if (selectedIndex === selected.length - 1) {\n    //     newSelected = newSelected.concat(selected.slice(0, -1));\n    // } else if (selectedIndex > 0) {\n    //     newSelected = newSelected.concat(\n    //         selected.slice(0, selectedIndex),\n    //         selected.slice(selectedIndex + 1),\n    //     );\n    // }\n    //\n    // setSelected(newSelected);\n  };\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = (name: string) => selected.indexOf(name) !== -1;\n\n  return (\n    <Box sx={{ width: '100%', height: '100%' }}>\n      <Paper sx={{ width: '100%', height: '100%', backgroundColor: 'unset' }}>\n        <EnhancedTableToolbar\n          numSelected={selected.length}\n          setQueryParams={(query) => {\n            setQueryParams(query);\n            setPage(0);\n          }}\n        />\n        <TableContainer\n          ref={tableContainerRef}\n          sx={{ height: 'calc(100% - 115px)' }}\n        >\n          <Table\n            sx={{ minWidth: 750 }}\n            aria-labelledby=\"tableTitle\"\n            size=\"small\"\n            stickyHeader\n          >\n            <EnhancedTableHead\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {rows.map((row, index) => {\n                const isItemSelected = isSelected(`${row.id}`);\n                const labelId = `enhanced-table-checkbox-${index}`;\n                return (\n                  <TableRow\n                    hover\n                    onClick={(event) => handleClick(event, `${row.id}`)}\n                    role=\"checkbox\"\n                    aria-checked={isItemSelected}\n                    tabIndex={-1}\n                    key={row.id}\n                    selected={isItemSelected}\n                    sx={{ cursor: 'pointer' }}\n                  >\n                    <StyledTableCell padding=\"checkbox\">\n                      <Button\n                        id={`${labelId}`}\n                        sx={{ m: 1 }}\n                        fullWidth\n                        variant=\"contained\"\n                        size=\"small\"\n                        color=\"primary\"\n                        disabled={!!row.truck}\n                        onClick={() => {\n                          return;\n                        }}\n                      >\n                        Attach\n                      </Button>\n                    </StyledTableCell>\n                    {headCells.map((cell) => {\n                      const cellData = cell.getData(row);\n                      return (\n                        <StyledTableCell\n                          key={cell.id}\n                          title={cellData.title}\n                          align={cell.numeric ? 'right' : 'center'}\n                        >\n                          {cellData.data}\n                        </StyledTableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 15, 20, 25, 35, 50]}\n          component=\"div\"\n          count={total}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <Loader visible={isLoading || isFetching} />\n    </Box>\n  );\n}\n"],"names":["origin","URL","window","location","href","authFetch","input","_authProvider$user","_authProvider$user2","init","headers","Headers","set","btoa","authProvider","user","username","password","fetch","TrucksQuery","page","rowsPerPage","orderBy","order","queryParams","url","searchParams","append","concat","truckNumber","lastLocation","distance","then","res","json","LocationsQuery","search","name","LoadsQuery","loadNumber","OwnersQuery","fullName","DriversQuery","CoordinatorsQuery","UsersQuery","headCells","id","orderField","getData","row","data","numeric","disablePadding","label","pick","path","firstRow","stateCode","zipCode","secondRow","pickDate","Date","toLocaleString","_jsxs","children","_jsx","target","onClick","stopPropagation","title","deliver","deliverDate","milesHaversine","milesByRoads","toFixed","truckType","join","truck","StyledTableHead","styled","TableHead","_ref","backgroundColor","theme","palette","background","default","StyledTableCell","TableCell","_ref2","maxWidth","whiteSpace","textOverflow","overflow","e","EnhancedTableHead","props","onSelectAllClick","onRequestSort","numSelected","rowCount","TableRow","align","padding","map","headCell","sortDirection","TableSortLabel","active","hideSortIcon","direction","property","event","Box","component","sx","visuallyHidden","EnhancedTableToolbar","setQueryParams","_React$useState","React","_React$useState2","_slicedToArray","loadNumberSearch","setLoadNumberSearch","_React$useState3","_React$useState4","truckNumberSearch","setTruckNumberSearch","_React$useState5","_React$useState6","searchChanged","setSearchChanged","Toolbar","_objectSpread","pl","sm","pr","xs","bgcolor","alpha","primary","main","action","activatedOpacity","Typography","flex","color","variant","m","width","TextField","value","onChange","Number","isFinite","size","Tooltip","IconButton","DeleteIcon","FilterListOffIcon","disabled","FilterListIcon","EnhancedTable","_React$useState7","_React$useState8","setOrder","_React$useState9","_React$useState10","setOrderBy","_React$useState11","_React$useState12","selected","setSelected","_React$useState13","_React$useState14","setPage","_React$useState15","_React$useState16","setRowsPerPage","_React$useState17","_React$useState18","tableContainerRef","_useQuery","useQuery","queryKey","queryFn","keepPreviousData","isLoading","isFetching","_useQuery$data","_useQuery$data2","items","total","rows","current","scrollTo","top","left","behavior","height","Paper","length","query","TableContainer","ref","Table","minWidth","stickyHeader","checked","newSelected","n","isAsc","undefined","TableBody","index","isItemSelected","indexOf","labelId","hover","role","tabIndex","cursor","Button","fullWidth","cell","cellData","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","Loader","visible"],"sourceRoot":""}