{"version":3,"file":"static/js/371.722f6926.chunk.js","mappings":"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","sources":["trucks/editTruck.tsx","utils/dataTypes.ts"],"sourcesContent":["import React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\n\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Person4Icon from '@mui/icons-material/Person4';\nimport ContactPhoneIcon from '@mui/icons-material/ContactPhone';\nimport BadgeIcon from '@mui/icons-material/Badge';\nimport Divider from '@mui/material/Divider';\n\nimport {\n  DateField,\n  Loader,\n  SearchField,\n  SelectField,\n  SelectMultiField,\n  TextField,\n} from '../components';\n\nimport {\n  TruckUpdate,\n  TruckQuery,\n  OwnersQuery,\n  CoordinatorsQuery,\n  DriversQuery,\n} from '../api';\nimport { useSnackbar } from '../hooks';\nimport {\n  Owner,\n  Coordinator,\n  Driver,\n  UpdateTruck,\n  TruckCertificates,\n  TruckCrossborders,\n  TruckEquipments,\n  TruckStatuses,\n  TruckTypes,\n  TruckStatus,\n  TruckCrossborder,\n  TruckCertificate,\n  TruckType,\n} from '../utils/dataTypes';\nimport { getType, cleanObject } from '../utils/queryHelpers';\n\nconst validationSchema = yup.object({\n  truckNumber: yup\n    .number()\n    .integer()\n    .typeError('Truck Number must be a integer number')\n    .required('Truck Number is required'),\n  status: yup.string().oneOf(TruckStatuses).required('Status is required'),\n  crossborder: yup\n    .string()\n    .oneOf(TruckCrossborders)\n    .required('Crossborder is required'),\n  certificate: yup\n    .string()\n    .oneOf(TruckCertificates)\n    .required('Certificate is required'),\n  type: yup.string().oneOf(TruckTypes).required('Type is required'),\n  equipment: yup\n    .array(yup.string().oneOf(TruckEquipments))\n    .min(0)\n    .required('Equipment is required'),\n  payload: yup\n    .number()\n    .integer()\n    .typeError('Payload must be a integer number')\n    .required('Payload is required'),\n  grossWeight: yup.string().required('Gross Weight is required'),\n  make: yup.string().required('Make is required'),\n  model: yup.string().required('Model is required'),\n  year: yup\n    .number()\n    .integer()\n    .typeError('Year must be a integer number')\n    .required('Year is required'),\n  color: yup.string().required('Color is required'),\n  vinCode: yup.string().required('Vin Code is required'),\n  licencePlate: yup.string().required('Licence Plate is required'),\n  licenceState: yup.string().required('Licence State is required'),\n  plateExpires: yup\n    .date()\n    .typeError('Enter correct date')\n    .required('Plate Expires is required'),\n  insideDims: yup.string().required('Inside Dims is required'),\n  doorDims: yup.string().required('Door Dims is required'),\n  owner: yup.object().required('Owner is required'),\n  coordinator: yup.object().typeError('Enter correct coordinator').nullable(),\n  driver: yup.object().typeError('Enter correct driver').nullable(),\n});\n\nconst initialValues = {\n  id: '',\n  truckNumber: undefined,\n  status: 'Available' as TruckStatus,\n  crossborder: 'Yes' as TruckCrossborder,\n  certificate: 'Hazmat' as TruckCertificate,\n  type: 'Cargo van' as TruckType,\n  equipment: [],\n  payload: undefined,\n  grossWeight: undefined,\n  make: undefined,\n  model: undefined,\n  year: undefined,\n  color: undefined,\n  vinCode: undefined,\n  licencePlate: undefined,\n  licenceState: undefined,\n  plateExpires: undefined,\n  insideDims: undefined,\n  doorDims: undefined,\n  owner: undefined,\n  coordinator: undefined,\n  driver: undefined,\n};\n\nexport default function EditTruckForm() {\n  const [driverAddQueryParams, setDriverAddQueryParams] = React.useState<\n    Record<string, string>\n  >({});\n  const [coordinatorAddQueryParams, setCoordinatorAddQueryParams] =\n    React.useState<Record<string, string>>({});\n  const { pathname } = useLocation();\n  const navigate = useNavigate();\n  const queryClient = useQueryClient();\n  const setSnackbarMessage = useSnackbar();\n\n  const {\n    isLoading: loading,\n    isFetching: fetching,\n    data,\n  } = useQuery({\n    queryKey: ['truck', pathname.split('/')[3]],\n    queryFn: TruckQuery,\n    keepPreviousData: true,\n    onError: (error: Error) => {\n      setSnackbarMessage({\n        severity: 'error',\n        message: error instanceof Error ? error.message : JSON.stringify(error),\n      });\n    },\n  });\n\n  const { mutate, isLoading } = useMutation(TruckUpdate, {\n    onSuccess: () => {\n      setSnackbarMessage({\n        severity: 'success',\n        message: 'Saved',\n      });\n      queryClient.invalidateQueries(['trucks']);\n      navigate(-1);\n    },\n    onError: (error: Error) => {\n      setSnackbarMessage({\n        severity: 'error',\n        message: error instanceof Error ? error.message : JSON.stringify(error),\n      });\n    },\n  });\n\n  const formik = useFormik<UpdateTruck>({\n    initialValues: {\n      ...initialValues,\n      ...cleanObject(data, Object.keys(initialValues)),\n    },\n    enableReinitialize: true,\n    validationSchema: validationSchema,\n    onSubmit: (values) => {\n      mutate(values as unknown as UpdateTruck);\n    },\n  });\n\n  React.useEffect(() => {\n    if (formik.values.owner) {\n      setDriverAddQueryParams({ owner: formik.values.owner.id });\n      setCoordinatorAddQueryParams({ owner: formik.values.owner.id });\n    } else {\n      formik.setFieldValue('driver', null, true);\n      formik.setFieldValue('coordinator', null, true);\n      setDriverAddQueryParams((prev) => (Object.keys(prev).length ? {} : prev));\n      setCoordinatorAddQueryParams((prev) =>\n        Object.keys(prev).length ? {} : prev,\n      );\n    }\n  }, [formik.values.owner]);\n\n  React.useEffect(() => {\n    if (\n      formik.values.coordinator &&\n      formik.values.coordinator.owner &&\n      formik.values.coordinator.id !==\n        (formik.values.owner && formik.values.owner.id)\n    ) {\n      formik.setFieldValue('owner', formik.values.coordinator.owner, true);\n    }\n  }, [formik.values.coordinator]);\n\n  React.useEffect(() => {\n    if (\n      formik.values.driver &&\n      formik.values.driver.owner &&\n      formik.values.driver.id !==\n        (formik.values.owner && formik.values.owner.id)\n    ) {\n      formik.setFieldValue('owner', formik.values.driver.owner, true);\n    }\n  }, [formik.values.driver]);\n\n  const handleClose = () => {\n    navigate(-1);\n  };\n\n  return (\n    <Box sx={{ height: '100%' }}>\n      <form\n        onSubmit={formik.handleSubmit}\n        onReset={formik.handleReset}\n        style={{ height: '100%' }}\n      >\n        <Box sx={{ p: 3, display: 'grid', height: '100%' }}>\n          <Divider />\n          <Box\n            key=\"controls\"\n            sx={{\n              height: '100%',\n              overflowX: 'hidden',\n              overflowY: 'scroll',\n            }}\n          >\n            <Box\n              key=\"centerControls\"\n              sx={{ display: 'inline-flex', width: '100%' }}\n            >\n              <Box key=\"left\" sx={{ p: 1, paddingBottom: 0, width: '50%' }}>\n                <TextField\n                  fieldName=\"truckNumber\"\n                  label=\"Truck Number\"\n                  number\n                  formik={formik}\n                />\n                <SelectField\n                  fieldName=\"crossborder\"\n                  label=\"Cross Border\"\n                  items={TruckCrossborders}\n                  formik={formik}\n                />\n                <SelectField\n                  fieldName=\"type\"\n                  label=\"Type\"\n                  items={TruckTypes}\n                  formik={formik}\n                />\n                <TextField\n                  fieldName=\"payload\"\n                  label=\"Payload\"\n                  number\n                  formik={formik}\n                />\n                <TextField fieldName=\"make\" label=\"Make\" formik={formik} />\n                <TextField\n                  fieldName=\"year\"\n                  label=\"Year\"\n                  number\n                  formik={formik}\n                />\n                <TextField\n                  fieldName=\"vinCode\"\n                  label=\"Vin Code\"\n                  formik={formik}\n                />\n                <TextField\n                  fieldName=\"licenceState\"\n                  label=\"Licence State\"\n                  formik={formik}\n                />\n                <TextField\n                  fieldName=\"insideDims\"\n                  label=\"Inside Dims (length x width x height)\"\n                  formik={formik}\n                />\n              </Box>\n              <Box key=\"right\" sx={{ p: 1, paddingBottom: 0, width: '50%' }}>\n                <SelectField\n                  fieldName=\"status\"\n                  label=\"Status\"\n                  items={TruckStatuses}\n                  formik={formik}\n                />\n                <SelectField\n                  fieldName=\"certificate\"\n                  label=\"Certificate\"\n                  items={TruckCertificates}\n                  formik={formik}\n                />\n                <SelectMultiField\n                  fieldName=\"equipment\"\n                  label=\"Equipment\"\n                  items={TruckEquipments}\n                  formik={formik}\n                />\n                <TextField\n                  fieldName=\"grossWeight\"\n                  label=\"Gross Weight\"\n                  formik={formik}\n                />\n                <TextField fieldName=\"model\" label=\"Model\" formik={formik} />\n                <TextField fieldName=\"color\" label=\"Color\" formik={formik} />\n                <TextField\n                  fieldName=\"licencePlate\"\n                  label=\"Licence Plate\"\n                  formik={formik}\n                />\n                <DateField\n                  fieldName=\"plateExpires\"\n                  label=\"Plate Expires\"\n                  formik={formik}\n                />\n                <TextField\n                  fieldName=\"doorDims\"\n                  label=\"Door Dims (width x height)\"\n                  formik={formik}\n                />\n              </Box>\n            </Box>\n            <Box\n              key=\"bottomControls\"\n              sx={{ p: 1, paddingBottom: 0, paddingTop: 0 }}\n            >\n              <SearchField<Owner>\n                fieldName=\"owner\"\n                label=\"Owner\"\n                getSelectedLabel={(selectedItem) =>\n                  `${selectedItem.fullName}, ${getType(selectedItem)}, ${\n                    selectedItem.phone\n                  }`\n                }\n                getItemLabel={(item) => `${item.fullName}`}\n                getItemSecondLabel={(item) => `${getType(item)}, ${item.phone}`}\n                ListIcon={Person4Icon}\n                queryFn={OwnersQuery}\n                startEmpty={false}\n                orderby=\"fullName\"\n                order=\"asc\"\n                formik={formik}\n              />\n              <SearchField<Coordinator>\n                fieldName=\"coordinator\"\n                label=\"Coordinator\"\n                getSelectedLabel={(selectedItem) =>\n                  `${selectedItem.fullName}, ${getType(selectedItem)}, ${\n                    selectedItem.phone\n                  }`\n                }\n                getItemLabel={(item) => `${item.fullName}`}\n                getItemSecondLabel={(item) => `${getType(item)}, ${item.phone}`}\n                ListIcon={ContactPhoneIcon}\n                queryFn={CoordinatorsQuery}\n                startEmpty={false}\n                orderby=\"fullName\"\n                order=\"asc\"\n                additionalQueryParams={coordinatorAddQueryParams}\n                formik={formik}\n              />\n              <SearchField<Driver>\n                fieldName=\"driver\"\n                label=\"Driver\"\n                getSelectedLabel={(selectedItem) =>\n                  `${selectedItem.fullName}, ${getType(selectedItem)}, ${\n                    selectedItem.phone\n                  }`\n                }\n                getItemLabel={(item) =>\n                  `${item.fullName}${\n                    item.driveTrucks && item.driveTrucks[0]\n                      ? ', On Truck: ' + item.driveTrucks[0].truckNumber\n                      : ''\n                  }`\n                }\n                getItemSecondLabel={(item) => `${getType(item)}, ${item.phone}`}\n                getOptionDisabled={(item) =>\n                  !!item.driveTrucks?.length &&\n                  !(item.driveTrucks[0].id === formik.values.id)\n                }\n                ListIcon={BadgeIcon}\n                queryFn={DriversQuery}\n                startEmpty={false}\n                orderby=\"fullName\"\n                order=\"asc\"\n                additionalQueryParams={driverAddQueryParams}\n                formik={formik}\n              />\n            </Box>\n          </Box>\n          <Divider />\n          <Box key=\"buttons\" sx={{ paddingTop: 3, display: 'inline-flex' }}>\n            <Box key=\"left\" sx={{ p: 1, paddingTop: 0, width: '50%' }}>\n              <Button\n                fullWidth\n                variant=\"contained\"\n                size=\"small\"\n                color=\"primary\"\n                type=\"submit\"\n                disabled={!formik.dirty}\n              >\n                Save\n              </Button>\n            </Box>\n            <Box key=\"right\" sx={{ p: 1, paddingTop: 0, width: '50%' }}>\n              <Button\n                fullWidth\n                variant=\"contained\"\n                size=\"small\"\n                color=\"primary\"\n                type=\"button\"\n                onClick={handleClose}\n              >\n                Cancel\n              </Button>\n            </Box>\n          </Box>\n        </Box>\n      </form>\n      <Loader visible={isLoading || loading || fetching} />\n    </Box>\n  );\n}\n","import React from 'react';\nimport { AlertColor } from '@mui/material/Alert/Alert';\n\nexport const LangPriorities = ['EN', 'UA', 'ES', 'RU'] as const;\n\nexport const PersonTypes = [\n  'Owner',\n  'OwnerDriver',\n  'Coordinator',\n  'CoordinatorDriver',\n  'Driver',\n] as const;\n\nexport const UserRoles = ['Admin', 'Super Admin'] as const;\n\nexport const TruckTypes = [\n  'Cargo van',\n  'Reefer van',\n  'Box truck',\n  'Box truck Reefer',\n  'Straight truck',\n  'Hotshot',\n  'Tented box',\n] as const;\n\nexport const TruckStatuses = ['Available', 'Not Available'] as const;\n\nexport const TruckCrossborders = ['Yes', 'No'] as const;\n\nexport const TruckCertificates = [\n  'Hazmat',\n  'Tsa',\n  'TWIC',\n  'Tanker Endorsement',\n] as const;\n\nexport const TruckEquipments = [\n  'Dock height risers',\n  'Air ride',\n  'Lift gate',\n  'Keep from freezing',\n  'ICC bar',\n  'Vertical E-track',\n  'Horizontal E-track',\n  'Pallet jack',\n  'PPE',\n  'Ramps',\n  'Straps',\n  'Loads bars',\n  'Blankets',\n  'Pads',\n  'Fire extinguisher',\n] as const;\n\nexport type Order = 'asc' | 'desc';\nexport type QueryKey<T> = readonly [\n  key: string,\n  page: number,\n  rowsPerPage: number,\n  orderBy?: string,\n  order?: Order,\n  queryParams?: T,\n];\n// export type BaseQuery = {\n//   readonly queryKey: QueryKey;\n// };\nexport type Query<T> = {\n  readonly queryKey: QueryKey<T>;\n};\nexport type QuerySingleKey = readonly [key: string, recordId: string];\nexport type QuerySingle = {\n  readonly queryKey: QuerySingleKey;\n};\nexport type Result<T> = {\n  items: T[];\n  limit: number;\n  offset: number;\n  total: number;\n};\nexport type QueryFn = (query: Query<{ search: any }>) => Promise<Result<any>>;\nexport interface AuthContextType {\n  user: any;\n  signin: (\n    username: string,\n    password: string,\n    callback: (res: boolean) => void,\n  ) => void;\n  signout: (callback: VoidFunction) => void;\n}\nexport type SnackbarMessage = {\n  message: string;\n  severity: AlertColor;\n  handleClose?: (event?: React.SyntheticEvent | Event, reason?: string) => void;\n};\nexport type PersonType = (typeof PersonTypes)[number];\nexport type LangPriority = (typeof LangPriorities)[number];\nexport type UserRole = (typeof UserRoles)[number];\nexport type TruckType = (typeof TruckTypes)[number];\nexport type TruckStatus = (typeof TruckStatuses)[number];\nexport type TruckCrossborder = (typeof TruckCrossborders)[number];\nexport type TruckCertificate = (typeof TruckCertificates)[number];\nexport type TruckEquipment = (typeof TruckEquipments)[number];\n\nexport interface Person {\n  id: string;\n  fullName: string;\n  type: PersonType;\n  phone?: string;\n}\n\nexport interface Owner extends Person {\n  type: PersonType;\n  phone: string;\n  phone2?: string;\n  email: string;\n  address: string;\n  ownTrucks?: Truck[];\n  coordinators?: Coordinator[];\n  drivers?: Driver[];\n}\n\nexport interface CreateOwner {\n  fullName?: string;\n  birthDate?: Date;\n  birthPlace?: string;\n  citizenship?: string;\n  languagePriority?: LangPriority;\n  hiredBy?: string;\n  hireDate?: Date;\n  snn?: string;\n  company?: string;\n  insurancePolicy?: string;\n  insurancePolicyEFF?: string;\n  insurancePolicyExp?: Date;\n  address?: string;\n  phone?: string;\n  phone2?: string;\n  email?: string;\n  emergencyContactName?: string;\n  emergencyContactRel?: string;\n  emergencyContactPhone?: string;\n  notes?: string;\n}\n\nexport interface UpdateOwner extends Partial<CreateOwner> {\n  id: string;\n}\n\nexport interface CreateOwnerDriver {\n  fullName?: string;\n  birthDate?: Date;\n  birthPlace?: string;\n  citizenship?: string;\n  languagePriority?: LangPriority;\n  driverLicenceType?: string;\n  driverLicenceNumber?: string;\n  driverLicenceState?: string;\n  driverLicenceClass?: string;\n  driverLicenceExp?: Date;\n  idDocId?: string;\n  idDocType?: string;\n  idDocExp?: Date;\n  hiredBy?: string;\n  hireDate?: Date;\n  snn?: string;\n  company?: string;\n  insurancePolicy?: string;\n  insurancePolicyEFF?: string;\n  insurancePolicyExp?: Date;\n  address?: string;\n  phone?: string;\n  phone2?: string;\n  email?: string;\n  emergencyContactName?: string;\n  emergencyContactRel?: string;\n  emergencyContactPhone?: string;\n  appLogin?: string;\n  appPass?: string;\n  notes?: string;\n}\n\nexport interface UpdateOwnerDriver extends Partial<CreateOwnerDriver> {\n  id: string;\n}\n\nexport interface Coordinator extends Person {\n  type: PersonType;\n  phone: string;\n  phone2?: string;\n  email: string;\n  address: string;\n  coordinateTrucks?: Truck[];\n  owner: Owner;\n}\n\nexport interface CreateCoordinator {\n  fullName?: string;\n  birthDate?: Date;\n  birthPlace?: string;\n  citizenship?: string;\n  languagePriority?: LangPriority;\n  hiredBy?: string;\n  hireDate?: Date;\n  snn?: string;\n  company?: string;\n  insurancePolicy?: string;\n  insurancePolicyEFF?: string;\n  insurancePolicyExp?: Date;\n  address?: string;\n  phone?: string;\n  phone2?: string;\n  email?: string;\n  emergencyContactName?: string;\n  emergencyContactRel?: string;\n  emergencyContactPhone?: string;\n  owner?: Owner;\n  notes?: string;\n}\n\nexport interface UpdateCoordinator extends Partial<CreateCoordinator> {\n  id: string;\n}\n\nexport interface CreateCoordinatorDriver {\n  fullName?: string;\n  birthDate?: Date;\n  birthPlace?: string;\n  citizenship?: string;\n  languagePriority?: LangPriority;\n  driverLicenceType?: string;\n  driverLicenceNumber?: string;\n  driverLicenceState?: string;\n  driverLicenceClass?: string;\n  driverLicenceExp?: Date;\n  idDocId?: string;\n  idDocType?: string;\n  idDocExp?: Date;\n  hiredBy?: string;\n  hireDate?: Date;\n  snn?: string;\n  company?: string;\n  insurancePolicy?: string;\n  insurancePolicyEFF?: string;\n  insurancePolicyExp?: Date;\n  address?: string;\n  phone?: string;\n  phone2?: string;\n  email?: string;\n  emergencyContactName?: string;\n  emergencyContactRel?: string;\n  emergencyContactPhone?: string;\n  appLogin?: string;\n  appPass?: string;\n  notes?: string;\n}\n\nexport interface UpdateCoordinatorDriver\n  extends Partial<CreateCoordinatorDriver> {\n  id: string;\n}\n\nexport interface Driver extends Person {\n  type: PersonType;\n  phone: string;\n  phone2?: string;\n  email?: string;\n  address?: string;\n  driveTrucks?: Truck[];\n  owner: Owner;\n}\n\nexport interface CreateDriver {\n  fullName?: string;\n  birthDate?: Date;\n  birthPlace?: string;\n  citizenship?: string;\n  languagePriority?: LangPriority;\n  driverLicenceType?: string;\n  driverLicenceNumber?: string;\n  driverLicenceState?: string;\n  driverLicenceClass?: string;\n  driverLicenceExp?: Date;\n  idDocId?: string;\n  idDocType?: string;\n  idDocExp?: Date;\n  hiredBy?: string;\n  hireDate?: Date;\n  address?: string;\n  phone?: string;\n  phone2?: string;\n  email?: string;\n  emergencyContactName?: string;\n  emergencyContactRel?: string;\n  emergencyContactPhone?: string;\n  appLogin?: string;\n  appPass?: string;\n  owner?: Owner;\n  notes?: string;\n}\n\nexport interface UpdateDriver extends Partial<CreateDriver> {\n  id: string;\n}\n\nexport interface Truck {\n  id: string;\n  truckNumber: number;\n  status: TruckStatus;\n  lastLocation?: [number, number];\n  lastCity?: Location;\n  locationUpdatedAt?: string;\n  milesHaversine?: number;\n  milesByRoads?: number;\n  crossborder: TruckCrossborder;\n  certificate: TruckCertificate;\n  type: TruckType;\n  equipment?: TruckEquipment[];\n  payload?: number;\n  grossWeight: string;\n  make: string;\n  model: string;\n  year: number;\n  color: string;\n  vinCode: string;\n  licencePlate: string;\n  licenceState: string;\n  plateExpires: Date;\n  insideDims: string;\n  doorDims?: string;\n  owner?: Owner;\n  coordinator?: Coordinator;\n  driver?: Driver;\n}\n\nexport interface CreateTruck {\n  truckNumber?: number;\n  status?: TruckStatus;\n  crossborder?: TruckCrossborder;\n  certificate?: TruckCertificate;\n  type?: TruckType;\n  equipment?: TruckEquipment[];\n  payload?: number;\n  grossWeight?: string;\n  make?: string;\n  model?: string;\n  year?: number;\n  color?: string;\n  vinCode?: string;\n  licencePlate?: string;\n  licenceState?: string;\n  plateExpires?: Date;\n  insideDims?: string;\n  doorDims?: string;\n  owner?: Owner;\n  coordinator?: Coordinator;\n  driver?: Driver;\n}\n\nexport interface UpdateTruck extends Partial<CreateTruck> {\n  id: string;\n}\n\nexport interface Load {\n  id: string;\n  loadNumber: number;\n  pick?: Location;\n  pickDate?: Date;\n  deliver?: Location;\n  deliverDate?: Date;\n  milesByRoads?: number;\n  milesHaversine?: number;\n  weight: string;\n  truckType: TruckType[];\n  rate?: number;\n  bookedByUser?: User;\n  bookedByCompany?: string;\n  dispatchers?: User[];\n  checkInAs?: string;\n  truck?: Truck;\n}\n\nexport interface CreateLoad {\n  pick?: Location;\n  pickDate?: Date;\n  deliver?: Location;\n  deliverDate?: Date;\n  weight?: string;\n  truckType?: TruckType[];\n  rate?: number;\n  bookedByUser?: User | null;\n  bookedByCompany?: string;\n  dispatchers?: User[];\n  checkInAs?: string;\n  truck?: Truck | null;\n}\n\nexport interface UpdateLoad extends Partial<CreateLoad> {\n  id: string;\n}\n\nexport interface Location {\n  id: string;\n  zipCode: string;\n  name: string;\n  stateCode: string;\n  stateName: string;\n  location: [number, number];\n}\n\nexport type CreateLocation = Omit<Location, 'id'>;\n\nexport interface UpdateLocation extends Partial<CreateLocation> {\n  id: string;\n}\n\nexport interface User {\n  id: string;\n  fullName: string;\n  phone?: string;\n  userRole: UserRole;\n  jobTitle: string;\n  email: string;\n}\n\nexport interface CreateUser extends Omit<User, 'id'> {\n  password?: string;\n}\n\nexport interface UpdateUser extends Partial<CreateUser> {\n  id: string;\n}\n"],"names":["validationSchema","yup","truckNumber","integer","typeError","required","status","oneOf","TruckStatuses","crossborder","TruckCrossborders","certificate","TruckCertificates","type","TruckTypes","equipment","TruckEquipments","min","payload","grossWeight","make","model","year","color","vinCode","licencePlate","licenceState","plateExpires","insideDims","doorDims","owner","coordinator","nullable","driver","initialValues","id","undefined","EditTruckForm","_React$useState","React","_React$useState2","_slicedToArray","driverAddQueryParams","setDriverAddQueryParams","_React$useState3","_React$useState4","coordinatorAddQueryParams","setCoordinatorAddQueryParams","pathname","useLocation","navigate","useNavigate","queryClient","useQueryClient","setSnackbarMessage","useSnackbar","_useQuery","useQuery","queryKey","split","queryFn","TruckQuery","keepPreviousData","onError","error","severity","message","Error","JSON","stringify","loading","isLoading","fetching","isFetching","data","_useMutation","useMutation","TruckUpdate","onSuccess","invalidateQueries","mutate","formik","useFormik","_objectSpread","cleanObject","Object","keys","enableReinitialize","onSubmit","values","setFieldValue","prev","length","_jsxs","Box","sx","height","children","_jsx","handleSubmit","onReset","handleReset","style","p","display","Divider","overflowX","overflowY","width","paddingBottom","TextField","fieldName","label","number","SelectField","items","SelectMultiField","DateField","paddingTop","SearchField","getSelectedLabel","selectedItem","concat","fullName","getType","phone","getItemLabel","item","getItemSecondLabel","ListIcon","Person4Icon","OwnersQuery","startEmpty","orderby","order","ContactPhoneIcon","CoordinatorsQuery","additionalQueryParams","driveTrucks","getOptionDisabled","_item$driveTrucks","BadgeIcon","DriversQuery","Button","fullWidth","variant","size","disabled","dirty","onClick","Loader","visible","LangPriorities","UserRoles"],"sourceRoot":""}