{"version":3,"file":"static/js/4041.959348b4.chunk.js","mappings":"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","sources":["icons/cat.svg","icons/truck.svg","components/LocationForGrid.tsx","../node_modules/@mui/icons-material/esm/AccessTime.js","../node_modules/@mui/icons-material/esm/EditLocationAlt.js","trucks/setWillBeAvailable.tsx","trucks/setLastLocation.tsx","trucks/trucks.tsx","utils/dateTimeFormatters.ts","../node_modules/@mui/icons-material/esm/ContentCopy.js","../node_modules/@mui/icons-material/esm/Delete.js","../node_modules/@mui/icons-material/esm/Edit.js","../node_modules/@mui/material/DialogTitle/DialogTitle.js"],"sourcesContent":["const _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } return t; }\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nconst SvgCat = (_ref, ref) => {\n  let {\n      title,\n      titleId\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    \"data-name\": \"Layer 1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 128 128\",\n    ref: ref,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 64,\n    cy: 75,\n    r: 45,\n    fill: \"none\",\n    strokeWidth: 10,\n    style: {\n      stroke: \"currentcolor\"\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 96.94 40.17 C 96.94 23.36 82.19 9.73 64 9.73 C 45.81 9.73 31.06 23.36 31.06 40.17\",\n    style: {\n      paintOrder: \"fill\",\n      strokeWidth: 6,\n      stroke: \"currentcolor\",\n      fill: \"rgba(255, 255, 255, 0)\"\n    }\n  }), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"39.98 19.5 37.64 5.17 50.61 14.17\",\n    style: {\n      stroke: \"currentcolor\",\n      strokeWidth: 4,\n      fill: \"rgba(0, 0, 0, 0)\"\n    }\n  }), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"87.05 19.5 89.39 5.17 76.42 14.17\",\n    style: {\n      stroke: \"currentcolor\",\n      strokeWidth: 4,\n      fill: \"rgba(0, 0, 0, 0)\"\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 29.27 108.3 C 28.05 113.07 26.83 117.84 25.62 122.61\",\n    style: {\n      stroke: \"currentcolor\",\n      paintOrder: \"stroke\",\n      strokeLinecap: \"round\",\n      strokeWidth: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 25.72 122.61 C 38.31 122.83 50.91 123.05 63.5 123.28\",\n    style: {\n      stroke: \"currentcolor\",\n      strokeWidth: 4,\n      strokeLinecap: \"round\"\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 98.96 108.3 C 100.18 113.07 101.4 117.84 102.61 122.61\",\n    style: {\n      strokeLinecap: \"round\",\n      strokeWidth: 4,\n      stroke: \"currentcolor\",\n      paintOrder: \"stroke\"\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 102.5 122.61 C 88.91 122.85 76.32 123.07 64.72 123.28\",\n    style: {\n      strokeLinecap: \"round\",\n      stroke: \"currentcolor\",\n      strokeWidth: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"63 39.5 63 79.5 79.91 93.83\",\n    style: {\n      stroke: \"currentcolor\",\n      strokeWidth: 6,\n      paintOrder: \"fill\",\n      strokeLinecap: \"round\",\n      fill: \"rgba(255, 255, 255, 0)\"\n    }\n  }));\n};\nconst ForwardRef = /*#__PURE__*/forwardRef(SvgCat);\nexport { ForwardRef as ReactComponent };\nexport default __webpack_public_path__ + \"static/media/cat.b0cbea142ef6c467bbabb420d9425865.svg\";","const _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } return t; }\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nconst SvgTruck = (_ref, ref) => {\n  let {\n      title,\n      titleId\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    focusable: \"false\",\n    \"aria-hidden\": \"true\",\n    viewBox: \"0 0 24 24\",\n    \"data-testid\": \"LocalShippingIcon\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: ref,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m20 8h-3v-4h-14c-1.1 0-2 .9-2 2v11h2c0 1.66 1.34 3 3 3s3-1.34 3-3h6c0 1.66 1.34 3 3 3s3-1.34 3-3h2v-5l-3-4zm-14 10.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm13.5-9 1.96 2.5h-4.46v-2.5h2.5zm-1.5 9c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm-14.7-9 1.53 0 0 1.66-3.03 0 1.51-1.66zm2.46-2.74 1.66-1.84 0 4.57.94 0 0 1.66-.94 0 0 1.93-1.66 0 0-6.33zm6.58 6.48c-.37-.06-.72-.19-1.04-.37-.32-.19-.61-.42-.86-.7-.28-.32-.49-.67-.61-1.05-.12-.39-.18-.87-.18-1.44l0-4.51 1.66 0 0 4.36c0 .31.01.57.05.78.03.21.08.39.16.55.08.15.19.28.32.38.14.1.31.19.52.27l0 1.74zm.91-1.74c.21-.07.37-.16.51-.26.14-.1.25-.23.33-.39.08-.14.14-.31.17-.5.03-.2.05-.47.05-.83l0-4.36 1.65 0 0 4.51c0 .58-.06 1.06-.18 1.44-.12.38-.33.73-.61 1.05-.25.29-.54.52-.87.7-.33.18-.68.3-1.04.37l0-1.74z\",\n    style: {\n      fillRule: \"evenodd\",\n      fill: \"currentcolor\"\n    }\n  }));\n};\nconst ForwardRef = /*#__PURE__*/forwardRef(SvgTruck);\nexport { ForwardRef as ReactComponent };\nexport default __webpack_public_path__ + \"static/media/truck.cd6a1057a38896c7dca3f9ca88d7879e.svg\";","import React from 'react';\r\n\r\nimport { Wrapper, Status } from '@googlemaps/react-wrapper';\r\n\r\nimport { debounce } from '@mui/material/utils';\r\n\r\nimport { useSnackbar, useLoader } from '../hooks';\r\nimport { GeoPoint } from '../utils/dataTypes';\r\nimport { toStringLocation } from '../utils/toStringLocation';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport { stopPropagation } from '../utils/stopPropagation';\r\nimport ContentCopy from '@mui/icons-material/ContentCopy';\r\nimport { selectLocation } from '../utils/selectLocation';\r\nimport { getMapSettings } from '../utils/getMapSettings';\r\n\r\nexport default function LocationForGrid({\r\n  location,\r\n  onRefClick,\r\n  addInfo,\r\n  children,\r\n}: {\r\n  readonly location: GeoPoint;\r\n  onRefClick?: (event: React.SyntheticEvent) => void;\r\n  addInfo?: string;\r\n  children?: React.ReactNode;\r\n}) {\r\n  const [value, setValue] = React.useState<google.maps.GeocoderResult | null>(\r\n    null,\r\n  );\r\n  const [items, setItems] = React.useState<google.maps.GeocoderResult[]>([]);\r\n  const [geocoder, setGeocoder] = React.useState<google.maps.Geocoder | null>(\r\n    null,\r\n  );\r\n\r\n  const setSearch = React.useMemo(() => {\r\n    return debounce((geocodeRequest: google.maps.GeocoderRequest): void => {\r\n      (geocoder?.geocode(geocodeRequest) || Promise.reject())\r\n        .then((result) => {\r\n          if (result.results.length < 1 && geocodeRequest.location) {\r\n            const locationFromRequest = new google.maps.LatLng(\r\n              geocodeRequest.location,\r\n            );\r\n            const res: google.maps.GeocoderResult = {\r\n              address_components: [],\r\n              formatted_address: `[${locationFromRequest.lat()}, ${locationFromRequest.lng()}]`,\r\n              geometry: {\r\n                location: locationFromRequest,\r\n                location_type: google.maps.GeocoderLocationType.APPROXIMATE,\r\n                viewport: new google.maps.LatLngBounds(),\r\n              },\r\n              place_id: `[${locationFromRequest.lat()}, ${locationFromRequest.lng()}]`,\r\n              types: [],\r\n            };\r\n            setItems([res]);\r\n          } else {\r\n            result.results.forEach(\r\n              (item) =>\r\n                (item.formatted_address = toStringLocation(\r\n                  item.address_components,\r\n                )),\r\n            );\r\n            setItems(result.results);\r\n          }\r\n        })\r\n        .catch((/*err*/) => {\r\n          setItems([]);\r\n        });\r\n    }, 400);\r\n  }, [geocoder]);\r\n\r\n  React.useEffect(() => {\r\n    const selected = location && selectLocation(items);\r\n    if (location && selected && selected?.place_id !== value?.place_id) {\r\n      setValue(selected);\r\n    }\r\n  }, [location, items]);\r\n\r\n  React.useEffect(() => {\r\n    if (location) {\r\n      setSearch({\r\n        location: {\r\n          lat: location[0],\r\n          lng: location[1],\r\n        },\r\n      });\r\n    } else {\r\n      setItems([]);\r\n      setValue(null);\r\n    }\r\n  }, [geocoder, location.join(',')]);\r\n\r\n  const handleApiLoad = (status: Status): React.ReactElement => {\r\n    const setSnackbarMessage = useSnackbar();\r\n    const [, setLoaderVisibility] = useLoader();\r\n    React.useLayoutEffect(() => {\r\n      if (status === Status.LOADING) {\r\n        setLoaderVisibility(true);\r\n      }\r\n      if (status === Status.FAILURE) {\r\n        setSnackbarMessage({\r\n          severity: 'error',\r\n          message: 'Error loading maps!',\r\n        });\r\n      }\r\n      if (status === Status.SUCCESS) {\r\n        setGeocoder(new window.google.maps.Geocoder());\r\n      }\r\n      return () => {\r\n        if (status === Status.LOADING) {\r\n          setLoaderVisibility(false);\r\n        }\r\n      };\r\n    }, [status]);\r\n    return null as unknown as React.ReactElement;\r\n  };\r\n\r\n  return (\r\n    <span style={{ display: 'flex' }}>\r\n      <Wrapper {...getMapSettings()} render={handleApiLoad} />\r\n      <span\r\n        style={{\r\n          textOverflow: 'ellipsis',\r\n          overflow: 'hidden',\r\n          textAlign: 'left',\r\n        }}\r\n        title={`${value ? value.formatted_address : ''}` + '\\n' + addInfo}\r\n      >\r\n        {onRefClick ? (\r\n          <a href={'#'} target=\"_blank\" onClick={onRefClick}>\r\n            {value ? value.formatted_address : ''}\r\n          </a>\r\n        ) : value ? (\r\n          value.formatted_address\r\n        ) : (\r\n          ''\r\n        )}\r\n        {!addInfo ? null : (\r\n          <>\r\n            <br />\r\n            {addInfo}\r\n          </>\r\n        )}\r\n        {children}\r\n      </span>\r\n      {!value ? null : (\r\n        <IconButton\r\n          size=\"small\"\r\n          onClick={(event) => {\r\n            stopPropagation(event);\r\n            navigator.clipboard.writeText(value.formatted_address);\r\n          }}\r\n        >\r\n          <ContentCopy sx={{ height: '16px', width: '16px' }} />\r\n        </IconButton>\r\n      )}\r\n    </span>\r\n  );\r\n}\r\n","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon([/*#__PURE__*/_jsx(\"path\", {\n  d: \"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2M12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8\"\n}, \"0\"), /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z\"\n}, \"1\")], 'AccessTime');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon([/*#__PURE__*/_jsx(\"path\", {\n  d: \"M13.95 13H9V8.05l5.61-5.61C13.78 2.16 12.9 2 12 2c-4.2 0-8 3.22-8 8.2 0 3.32 2.67 7.25 8 11.8 5.33-4.55 8-8.48 8-11.8 0-1.01-.16-1.94-.45-2.8z\"\n}, \"0\"), /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 11h2.12l6.16-6.16-2.12-2.12L11 8.88zm9.71-9L20 1.29c-.2-.19-.45-.29-.71-.29-.13 0-.48.07-.71.29l-.72.72 2.12 2.12.72-.72c.4-.39.4-1.02.01-1.41\"\n}, \"1\")], 'EditLocationAlt');","import React from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\n\r\nimport { Loader, SearchLocationField, DateTimeField } from '../components';\r\n\r\nimport { TruckUpdate } from '../api';\r\nimport { useSnackbar } from '../hooks';\r\nimport { UpdateTruck, TruckStatus } from '../utils/dataTypes';\r\nimport { TransitionProps } from '@mui/material/transitions';\r\nimport Slide from '@mui/material/Slide';\r\n\r\nconst validationSchema = yup.object({\r\n  availabilityLocation: yup\r\n    .tuple([\r\n      yup\r\n        .number()\r\n        .typeError('Latitude is required')\r\n        .min(-90, 'Latitude must be grater than or equal: -90')\r\n        .max(90, 'Latitude must be less than or equal: 90')\r\n        .required('Location should be in format \"latitude, longitude\"'),\r\n      yup\r\n        .number()\r\n        .typeError('Longitude is required')\r\n        .min(-180, 'Longitude must be grater than or equal: -180')\r\n        .max(180, 'Longitude must be less than or equal: 180')\r\n        .required('Location should be in format \"latitude, longitude\"'),\r\n    ])\r\n    .required('Will be available location is required'),\r\n  availabilityAtLocal: yup\r\n    .date()\r\n    .typeError('Enter correct date')\r\n    .required('Will be available date is required'),\r\n});\r\n\r\nconst initialValues = {\r\n  id: '',\r\n  status: 'Will be available' as TruckStatus,\r\n  availabilityLocation: null,\r\n  availabilityAtLocal: undefined,\r\n};\r\n\r\nconst Transition = React.forwardRef(function Transition(\r\n  props: TransitionProps & {\r\n    children: React.ReactElement<any, any>;\r\n  },\r\n  ref: React.Ref<unknown>,\r\n) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function SetWillBeAvailableDialog({\r\n  truckId,\r\n  setTruckId,\r\n}: {\r\n  truckId: string;\r\n  setTruckId: React.Dispatch<React.SetStateAction<string>>;\r\n}) {\r\n  // const navigate = useNavigate();\r\n  const queryClient = useQueryClient();\r\n  const setSnackbarMessage = useSnackbar();\r\n\r\n  const { mutate, isLoading } = useMutation(TruckUpdate, {\r\n    onSuccess: () => {\r\n      setSnackbarMessage({\r\n        severity: 'success',\r\n        message: 'Will be available set',\r\n      });\r\n      setTruckId('');\r\n      queryClient.invalidateQueries(['trucks']);\r\n    },\r\n    onError: (error: Error) => {\r\n      setSnackbarMessage({\r\n        severity: 'error',\r\n        message: error instanceof Error ? error.message : JSON.stringify(error),\r\n      });\r\n    },\r\n  });\r\n\r\n  const formik = useFormik<UpdateTruck>({\r\n    initialValues: { ...initialValues, id: truckId },\r\n    enableReinitialize: true,\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      mutate(values);\r\n    },\r\n  });\r\n\r\n  const handleClose = () => {\r\n    setTruckId('');\r\n  };\r\n  const handleDialogClose = () => {\r\n    setTruckId('');\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={!!truckId}\r\n      TransitionComponent={Transition}\r\n      keepMounted\r\n      onClose={handleDialogClose}\r\n      aria-describedby=\"alert-dialog-set-will-be-available\"\r\n      PaperProps={{ sx: { width: '600px' } }}\r\n    >\r\n      <DialogTitle>\r\n        <span>Set \"Will ba available\"</span>\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <form onSubmit={formik.handleSubmit} onReset={formik.handleReset}>\r\n          <Box sx={{ display: 'grid' }}>\r\n            <Box key=\"controls\" sx={{ display: 'inline-flex' }}>\r\n              <Box key=\"left\" sx={{ p: 1, width: '50%' }}>\r\n                <SearchLocationField\r\n                  fieldName=\"availabilityLocation\"\r\n                  label=\"Will be available at location\"\r\n                  formik={formik}\r\n                />\r\n              </Box>\r\n              <Box key=\"right\" sx={{ p: 1, width: '50%' }}>\r\n                <DateTimeField\r\n                  fieldName=\"availabilityAtLocal\"\r\n                  label=\"Will be available at date\"\r\n                  minDateTime={new Date(Date.now() - 24 * 60 * 60 * 1000)}\r\n                  formik={formik}\r\n                />\r\n              </Box>\r\n            </Box>\r\n            <Box key=\"buttons\" sx={{ display: 'inline-flex' }}>\r\n              <Box key=\"left\" sx={{ p: 1, paddingTop: 0, width: '50%' }}>\r\n                <Button\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  size=\"small\"\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                >\r\n                  Set\r\n                </Button>\r\n              </Box>\r\n              <Box key=\"right\" sx={{ p: 1, paddingTop: 0, width: '50%' }}>\r\n                <Button\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  size=\"small\"\r\n                  color=\"primary\"\r\n                  type=\"button\"\r\n                  onClick={handleClose}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n        </form>\r\n        <Loader visible={isLoading} />\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\n\r\nimport { Loader, SearchLocationField } from '../components';\r\n\r\nimport { TruckUpdate } from '../api';\r\nimport { useSnackbar } from '../hooks';\r\nimport { UpdateTruck } from '../utils/dataTypes';\r\nimport { TransitionProps } from '@mui/material/transitions';\r\nimport Slide from '@mui/material/Slide';\r\n\r\nconst validationSchema = yup.object({\r\n  lastLocation: yup\r\n    .tuple([\r\n      yup\r\n        .number()\r\n        .typeError('Latitude is required')\r\n        .min(-90, 'Latitude must be grater than or equal: -90')\r\n        .max(90, 'Latitude must be less than or equal: 90')\r\n        .required('Location should be in format \"latitude, longitude\"'),\r\n      yup\r\n        .number()\r\n        .typeError('Longitude is required')\r\n        .min(-180, 'Longitude must be grater than or equal: -180')\r\n        .max(180, 'Longitude must be less than or equal: 180')\r\n        .required('Location should be in format \"latitude, longitude\"'),\r\n    ])\r\n    .required('Will be available location is required'),\r\n});\r\n\r\nconst initialValues = {\r\n  id: '',\r\n  lastLocation: null,\r\n};\r\n\r\nconst Transition = React.forwardRef(function Transition(\r\n  props: TransitionProps & {\r\n    children: React.ReactElement<any, any>;\r\n  },\r\n  ref: React.Ref<unknown>,\r\n) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function SetLastLocationDialog({\r\n  truckId,\r\n  setTruckId,\r\n}: {\r\n  truckId: string;\r\n  setTruckId: React.Dispatch<React.SetStateAction<string>>;\r\n}) {\r\n  // const navigate = useNavigate();\r\n  const queryClient = useQueryClient();\r\n  const setSnackbarMessage = useSnackbar();\r\n\r\n  const { mutate, isLoading } = useMutation(TruckUpdate, {\r\n    onSuccess: () => {\r\n      setSnackbarMessage({\r\n        severity: 'success',\r\n        message: 'Last Location set',\r\n      });\r\n      setTruckId('');\r\n      queryClient.invalidateQueries(['trucks']);\r\n    },\r\n    onError: (error: Error) => {\r\n      setSnackbarMessage({\r\n        severity: 'error',\r\n        message: error instanceof Error ? error.message : JSON.stringify(error),\r\n      });\r\n    },\r\n  });\r\n\r\n  const formik = useFormik<UpdateTruck>({\r\n    initialValues: { ...initialValues, id: truckId },\r\n    enableReinitialize: true,\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      mutate(values);\r\n    },\r\n  });\r\n\r\n  const handleClose = () => {\r\n    setTruckId('');\r\n  };\r\n  const handleDialogClose = () => {\r\n    setTruckId('');\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={!!truckId}\r\n      TransitionComponent={Transition}\r\n      keepMounted\r\n      onClose={handleDialogClose}\r\n      aria-describedby=\"alert-dialog-set-will-be-available\"\r\n      PaperProps={{ sx: { width: '600px' } }}\r\n    >\r\n      <DialogTitle>\r\n        <span>Set Last Location</span>\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <form onSubmit={formik.handleSubmit} onReset={formik.handleReset}>\r\n          <Box sx={{ display: 'grid' }}>\r\n            <Box key=\"controls\" sx={{ display: 'inline-flex' }}>\r\n              <Box key=\"left\" sx={{ p: 1, width: '100%' }}>\r\n                <SearchLocationField\r\n                  fieldName=\"lastLocation\"\r\n                  label=\"Will be available at location\"\r\n                  formik={formik}\r\n                />\r\n              </Box>\r\n            </Box>\r\n            <Box key=\"buttons\" sx={{ display: 'inline-flex' }}>\r\n              <Box key=\"left\" sx={{ p: 1, paddingTop: 0, width: '50%' }}>\r\n                <Button\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  size=\"small\"\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                >\r\n                  Set\r\n                </Button>\r\n              </Box>\r\n              <Box key=\"right\" sx={{ p: 1, paddingTop: 0, width: '50%' }}>\r\n                <Button\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  size=\"small\"\r\n                  color=\"primary\"\r\n                  type=\"button\"\r\n                  onClick={handleClose}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n        </form>\r\n        <Loader visible={isLoading} />\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\r\n\r\nimport { alpha, styled, useTheme } from '@mui/material/styles';\r\nimport TextField from '@mui/material/TextField';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport Box from '@mui/material/Box';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableSortLabel from '@mui/material/TableSortLabel';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport FilterListIcon from '@mui/icons-material/FilterList';\r\nimport FilterListOffIcon from '@mui/icons-material/FilterListOff';\r\nimport ContentCopy from '@mui/icons-material/ContentCopy';\r\nimport AccessTime from '@mui/icons-material/AccessTime';\r\nimport EditLocationAltIcon from '@mui/icons-material/EditLocationAlt';\r\nimport { visuallyHidden } from '@mui/utils';\r\nimport { green, grey } from '@mui/material/colors';\r\n\r\nimport SetWillBeAvailableDialog from './setWillBeAvailable';\r\nimport SetLastLocationDialog from './setLastLocation';\r\nimport { ReactComponent as CatIcon } from '../icons/cat.svg';\r\nimport { ReactComponent as TruckIcon } from '../icons/truck.svg';\r\n\r\nimport Loader from '../components/Loader';\r\nimport LocationForGrid from '../components/LocationForGrid';\r\nimport { TrucksQuery, TruckDelete } from '../api';\r\nimport { useMap, useSnackbar } from '../hooks';\r\nimport { Order, Truck } from '../utils/dataTypes';\r\nimport { getPath, getType } from '../utils/queryHelpers';\r\nimport { stopPropagation } from '../utils/stopPropagation';\r\nimport { dateTimeFormatter } from '../utils/dateTimeFormatters';\r\nimport { fromISOCorrected } from '../utils/dateTimeConverters';\r\n\r\ninterface HeadCell {\r\n  id: string;\r\n  disablePadding: boolean;\r\n  orderField?: keyof Truck;\r\n  getData: (\r\n    row: Truck,\r\n    setMapData: any,\r\n  ) => { data: JSX.Element | string; title?: string };\r\n  label: string;\r\n  numeric: boolean;\r\n}\r\n\r\nconst headCells: readonly HeadCell[] = [\r\n  {\r\n    id: 'truckNumber',\r\n    orderField: 'truckNumber',\r\n    getData: (row) => ({ data: `${row.truckNumber}` }),\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Truck Number',\r\n  },\r\n  {\r\n    id: 'mainContactInfo',\r\n    getData: (row) => {\r\n      const person = row.coordinator || row.owner;\r\n      let path = '';\r\n      let type = '';\r\n      let firstRow = '';\r\n      let secondRow = '';\r\n      if (person) {\r\n        path = `./${getPath(person)}/view/${person.id}`;\r\n        type = `${getType(person)} `;\r\n        firstRow = `${person.fullName}`;\r\n        secondRow = `${person?.phone}`;\r\n      }\r\n      return {\r\n        data: (\r\n          <span style={{ display: 'flex' }}>\r\n            <span\r\n              style={{\r\n                textOverflow: 'ellipsis',\r\n                overflow: 'hidden',\r\n                textAlign: 'left',\r\n              }}\r\n            >\r\n              <b>{type}</b>\r\n              <a href={path} target=\"_blank\" onClick={stopPropagation}>\r\n                {firstRow}\r\n              </a>\r\n              <br />\r\n              <a\r\n                href={secondRow ? `tel:${secondRow}` : undefined}\r\n                target=\"_blank\"\r\n                onClick={stopPropagation}\r\n              >\r\n                {secondRow || ' '}\r\n              </a>\r\n            </span>\r\n            <IconButton\r\n              size=\"small\"\r\n              onClick={(event) => {\r\n                stopPropagation(event);\r\n                navigator.clipboard.writeText(firstRow + ' ' + secondRow);\r\n              }}\r\n            >\r\n              <ContentCopy sx={{ height: '16px', width: '16px' }} />\r\n            </IconButton>\r\n          </span>\r\n        ),\r\n        title: type + '' + firstRow + '\\n' + secondRow,\r\n      };\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Main Contact info',\r\n  },\r\n  {\r\n    id: 'status',\r\n    orderField: 'status',\r\n    getData: (row) => {\r\n      const theme = useTheme();\r\n      const status = `${row.status}`;\r\n      const val = (() => {\r\n        switch (status) {\r\n          case 'Will be available':\r\n            return (\r\n              <CatIcon\r\n                style={{\r\n                  height: '24px',\r\n                  width: '24px',\r\n                  color: theme.palette.cat.main,\r\n                }}\r\n              />\r\n              /*<AccessTime\r\n                sx={{ height: '24px', width: '24px', color: grey[900] }}\r\n              />*/\r\n            );\r\n          case 'On route':\r\n            return (\r\n              <TruckIcon\r\n                style={{\r\n                  height: '24px',\r\n                  width: '24px',\r\n                  color: theme.palette.truck.main,\r\n                }}\r\n              />\r\n              /*<LocalShipping\r\n                sx={{ height: '24px', width: '24px', color: orange[500] }}\r\n              />*/\r\n            );\r\n          case 'Available':\r\n            return (\r\n              <Avatar\r\n                sx={{\r\n                  height: '24px',\r\n                  width: '24px',\r\n                  bgcolor: green[500],\r\n                  margin: 'auto',\r\n                }}\r\n              >\r\n                A\r\n              </Avatar>\r\n            );\r\n          case 'Not Available':\r\n            return (\r\n              <Avatar\r\n                sx={{\r\n                  height: '24px',\r\n                  width: '24px',\r\n                  bgcolor: grey[500],\r\n                  margin: 'auto',\r\n                }}\r\n              >\r\n                N\r\n              </Avatar>\r\n            );\r\n          default:\r\n            return status;\r\n        }\r\n      })();\r\n\r\n      return {\r\n        data: <span>{val}</span>,\r\n        title: status,\r\n      };\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Status',\r\n  },\r\n  {\r\n    id: 'location',\r\n    getData: (row, setMapData) => {\r\n      const onRefClick = (event: React.SyntheticEvent) => {\r\n        event.preventDefault();\r\n        stopPropagation(event);\r\n        setMapData([row]);\r\n      };\r\n\r\n      if (row?.lastLocation) {\r\n        const secondRow = `${\r\n          row.locationUpdatedAt\r\n            ? dateTimeFormatter.format(new Date(row.locationUpdatedAt))\r\n            : ''\r\n        }${row.locationUpdatedBy ? ' Set by ' + row.locationUpdatedBy : ''}`;\r\n\r\n        return {\r\n          data: (\r\n            <LocationForGrid\r\n              location={row.lastLocation}\r\n              onRefClick={onRefClick}\r\n              addInfo={secondRow}\r\n            />\r\n          ),\r\n        };\r\n      } else {\r\n        return { data: '' };\r\n      }\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Last known location',\r\n  },\r\n  {\r\n    id: 'willBeAtLocation',\r\n    getData: (row) => {\r\n      if (row?.availabilityLocation) {\r\n        const secondRow = `${\r\n          row.availabilityAtLocal\r\n            ? dateTimeFormatter.format(\r\n                fromISOCorrected(row.availabilityAtLocal),\r\n              )\r\n            : ''\r\n        }`;\r\n\r\n        return {\r\n          data: (\r\n            <LocationForGrid\r\n              location={row.availabilityLocation}\r\n              addInfo={secondRow}\r\n            />\r\n          ),\r\n        };\r\n      } else {\r\n        return { data: '' };\r\n      }\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Will be at location',\r\n  },\r\n  {\r\n    id: 'truckInfo',\r\n    getData: (row) => {\r\n      const firstRow = row.type ? `${row.type}` : '';\r\n      const secondRow = row.equipment ? `${row.equipment.join(', ')}` : '';\r\n\r\n      return {\r\n        data: (\r\n          <span>\r\n            {firstRow}\r\n            <br />\r\n            {secondRow}\r\n          </span>\r\n        ),\r\n        title: firstRow + '\\n' + secondRow,\r\n      };\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Truck info',\r\n  },\r\n  {\r\n    id: 'dimsAndPayload',\r\n    getData: (row) => {\r\n      const firstRowPart1 = row.insideDims ? `${row.insideDims}` : '';\r\n      const firstRowPart2 = row.doorDims ? `${row.doorDims}` : '';\r\n      const secondRow = row.payload ? `${row.payload}` : '';\r\n\r\n      return {\r\n        data: (\r\n          <span>\r\n            {(firstRowPart1 ? firstRowPart1 + ' ' : '') +\r\n              `${firstRowPart2 ? '(' + firstRowPart2 + ')' : ''}`}\r\n            <br />\r\n            {secondRow}\r\n          </span>\r\n        ),\r\n        title:\r\n          (firstRowPart1 ? firstRowPart1 + ' Inside ' : '') +\r\n          (firstRowPart2 ? firstRowPart2 + ' Door ' : '') +\r\n          '\\n' +\r\n          secondRow +\r\n          ' Payload',\r\n      };\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'DIMS/Payload',\r\n  },\r\n  {\r\n    id: 'driverInfo',\r\n    getData: (row) => {\r\n      const driver = row.driver;\r\n      let path = '';\r\n      let type = '';\r\n      let firstRow = '';\r\n      let secondRow = '';\r\n      if (driver) {\r\n        path = `./${getPath(driver)}/view/${driver.id}`;\r\n        type = `${getType(driver)} `;\r\n        firstRow = `${driver.fullName}`;\r\n        secondRow = `${driver.phone}`;\r\n      }\r\n      return {\r\n        data: (\r\n          <span>\r\n            <b>{type}</b>\r\n            <a\r\n              href={firstRow ? path : undefined}\r\n              target=\"_blank\"\r\n              onClick={stopPropagation}\r\n            >\r\n              {firstRow}\r\n            </a>\r\n            <br />\r\n            <a\r\n              href={secondRow ? `tel:${secondRow}` : undefined}\r\n              target=\"_blank\"\r\n              onClick={stopPropagation}\r\n            >\r\n              {secondRow || ' '}\r\n            </a>\r\n          </span>\r\n        ),\r\n        title: type + '' + firstRow + '\\n' + secondRow,\r\n      };\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Driver info',\r\n  },\r\n];\r\n\r\ninterface EnhancedTableProps {\r\n  numSelected: number;\r\n  onRequestSort: (\r\n    event: React.MouseEvent<unknown>,\r\n    property: keyof Truck,\r\n  ) => void;\r\n  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n  order: Order | undefined;\r\n  orderBy: string | undefined;\r\n  rowCount: number;\r\n}\r\n\r\nconst StyledTableHead = styled(TableHead)(({ theme }) => ({\r\n  backgroundColor: theme.palette.background.default,\r\n}));\r\n\r\nconst StyledTableCell = styled(TableCell)((/*{ theme }*/) => ({\r\n  maxWidth: '100px',\r\n  paddingTop: '6px',\r\n  paddingBottom: '6px',\r\n  whiteSpace: 'nowrap',\r\n  textOverflow: 'ellipsis',\r\n  overflow: 'hidden',\r\n}));\r\n\r\nfunction EnhancedTableHead(props: EnhancedTableProps) {\r\n  const {\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n  const createSortHandler =\r\n    (property: keyof Truck) => (event: React.MouseEvent<unknown>) => {\r\n      onRequestSort(event, property);\r\n    };\r\n\r\n  return (\r\n    <StyledTableHead>\r\n      <TableRow>\r\n        <StyledTableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            name={'enhanced-table-checkbox-select-all'}\r\n            color=\"primary\"\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{\r\n              'aria-label': 'enhanced-table-checkbox-select-all',\r\n            }}\r\n          />\r\n        </StyledTableCell>\r\n        {headCells.map((headCell) => (\r\n          <StyledTableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'center'}\r\n            padding={headCell.disablePadding ? 'none' : 'normal'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={headCell.orderField && orderBy === headCell.orderField}\r\n              hideSortIcon={!headCell.orderField}\r\n              direction={orderBy === headCell.orderField ? order : 'asc'}\r\n              onClick={\r\n                headCell.orderField\r\n                  ? createSortHandler(headCell.orderField)\r\n                  : () => {\r\n                      return;\r\n                    }\r\n              }\r\n            >\r\n              {headCell.label}\r\n              {headCell.orderField && orderBy === headCell.orderField ? (\r\n                <Box component=\"span\" sx={visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </Box>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </StyledTableCell>\r\n        ))}\r\n      </TableRow>\r\n    </StyledTableHead>\r\n  );\r\n}\r\n\r\ninterface EnhancedTableToolbarProps {\r\n  selected: readonly string[];\r\n  setQueryParams: React.Dispatch<React.SetStateAction<Record<string, number>>>;\r\n}\r\n\r\nfunction EnhancedTableToolbar(props: EnhancedTableToolbarProps) {\r\n  const { selected, setQueryParams } = props;\r\n  const [truckWAId, setTruckWAId] = React.useState<string>('');\r\n  const [truckLLId, setTruckLLId] = React.useState<string>('');\r\n  const [truckNumberSearch, setTruckNumberSearch] = React.useState<number>(0);\r\n  const [truckNumberChanged, setTruckNumberChanged] =\r\n    React.useState<boolean>(false);\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const queryClient = useQueryClient();\r\n\r\n  const setSnackbarMessage = useSnackbar();\r\n\r\n  const { mutate, isLoading } = useMutation(TruckDelete, {\r\n    onSuccess: () => {\r\n      setSnackbarMessage({\r\n        severity: 'success',\r\n        message: 'Deleted',\r\n      });\r\n      queryClient.invalidateQueries(['trucks']);\r\n    },\r\n    onError: (error: Error) => {\r\n      setSnackbarMessage({\r\n        severity: 'error',\r\n        message: error instanceof Error ? error.message : JSON.stringify(error),\r\n      });\r\n    },\r\n  });\r\n\r\n  const truckNumberHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (Number.isFinite(Number(event.target.value))) {\r\n      setTruckNumberSearch(Number(event.target.value));\r\n      setTruckNumberChanged(true);\r\n    }\r\n  };\r\n  const filterClearHandler = () => {\r\n    setTruckNumberChanged(false);\r\n    setTruckNumberSearch(0);\r\n    setQueryParams({});\r\n  };\r\n  const filterHandler = () => {\r\n    setTruckNumberChanged(false);\r\n    setQueryParams({ truckNumber: truckNumberSearch });\r\n  };\r\n  const keyUpHandler = (event: React.KeyboardEvent) => {\r\n    if (event.key !== 'Enter') {\r\n      return;\r\n    }\r\n    if (truckNumberSearch) {\r\n      filterHandler();\r\n    } else {\r\n      filterClearHandler();\r\n    }\r\n  };\r\n  const openWBADialogHandler = () => {\r\n    setTruckWAId(selected[0]);\r\n  };\r\n  const openSLLDialogHandler = () => {\r\n    setTruckLLId(selected[0]);\r\n  };\r\n  const createHandler = () => {\r\n    navigate('./create', {\r\n      relative: 'path',\r\n      state: { from: location },\r\n      replace: false,\r\n    });\r\n  };\r\n  const editHandler = () => {\r\n    navigate(`./edit/${selected[0]}`, {\r\n      relative: 'path',\r\n      state: { from: location },\r\n      replace: false,\r\n    });\r\n  };\r\n  const deleteHandler = () => {\r\n    mutate(`${selected[0]}`);\r\n  };\r\n\r\n  return (\r\n    <Toolbar\r\n      sx={{\r\n        overflow: 'hidden',\r\n        pl: { sm: 2 },\r\n        pr: { xs: 1, sm: 1 },\r\n        ...(selected.length > 0 && {\r\n          bgcolor: (theme) =>\r\n            alpha(\r\n              theme.palette.primary.main,\r\n              theme.palette.action.activatedOpacity,\r\n            ),\r\n        }),\r\n      }}\r\n    >\r\n      {selected.length > 0 ? (\r\n        <Typography\r\n          sx={{ flex: '1 1 100%' }}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {selected.length} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          sx={{\r\n            flex: '1 1 100%',\r\n            whiteSpace: 'nowrap',\r\n            textOverflow: 'ellipsis',\r\n            overflow: 'hidden',\r\n          }}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          Trucks\r\n        </Typography>\r\n      )}\r\n      <TextField\r\n        label=\"Truck Number\"\r\n        value={truckNumberSearch || ''}\r\n        onChange={truckNumberHandler}\r\n        onKeyUp={keyUpHandler}\r\n        size=\"small\"\r\n      />\r\n      <Tooltip title=\"Filter list\">\r\n        {(truckNumberChanged || !truckNumberSearch) &&\r\n        !(truckNumberChanged && !truckNumberSearch) ? (\r\n          <span>\r\n            <IconButton disabled={!truckNumberSearch} onClick={filterHandler}>\r\n              <FilterListIcon />\r\n            </IconButton>\r\n          </span>\r\n        ) : (\r\n          <span>\r\n            <IconButton onClick={filterClearHandler}>\r\n              <FilterListOffIcon />\r\n            </IconButton>\r\n          </span>\r\n        )}\r\n      </Tooltip>\r\n      <Box sx={{ p: 1, display: 'inline-flex' }}>\r\n        {selected.length === 1 ? (\r\n          <>\r\n            <Tooltip title=\"Set Will be available\">\r\n              <span>\r\n                <IconButton onClick={openWBADialogHandler}>\r\n                  <AccessTime />\r\n                </IconButton>\r\n              </span>\r\n            </Tooltip>\r\n            <SetWillBeAvailableDialog\r\n              truckId={truckWAId}\r\n              setTruckId={setTruckWAId}\r\n            />\r\n            <Tooltip title=\"Set Last Location\">\r\n              <span>\r\n                <IconButton onClick={openSLLDialogHandler}>\r\n                  <EditLocationAltIcon />\r\n                </IconButton>\r\n              </span>\r\n            </Tooltip>\r\n            <SetLastLocationDialog\r\n              truckId={truckLLId}\r\n              setTruckId={setTruckLLId}\r\n            />\r\n          </>\r\n        ) : (\r\n          <Tooltip title=\"Create\">\r\n            <span>\r\n              <IconButton onClick={createHandler}>\r\n                <AddIcon />\r\n              </IconButton>\r\n            </span>\r\n          </Tooltip>\r\n        )}\r\n        <Tooltip title=\"Edit\">\r\n          <span>\r\n            <IconButton disabled={selected.length !== 1} onClick={editHandler}>\r\n              <EditIcon />\r\n            </IconButton>\r\n          </span>\r\n        </Tooltip>\r\n        <Tooltip title=\"Delete\">\r\n          <span>\r\n            <IconButton\r\n              disabled={selected.length !== 1}\r\n              onClick={deleteHandler}\r\n            >\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </span>\r\n        </Tooltip>\r\n      </Box>\r\n      <Loader visible={isLoading} />\r\n    </Toolbar>\r\n  );\r\n}\r\n\r\nexport default function EnhancedTable() {\r\n  const [order, setOrder] = React.useState<Order | undefined>('asc');\r\n  const [orderBy, setOrderBy] = React.useState<keyof Truck | undefined>(\r\n    'truckNumber',\r\n  );\r\n  const [selected, setSelected] = React.useState<readonly string[]>([]);\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState<number>(15);\r\n  const [queryParams, setQueryParams] = React.useState<Record<string, any>>({});\r\n  const tableContainerRef = React.useRef(null);\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const setSnackbarMessage = useSnackbar();\r\n  const [, setMapData] = useMap();\r\n\r\n  const {\r\n    isLoading,\r\n    isFetching,\r\n    error,\r\n    data: { items, total } = { items: [], total: 0 },\r\n  } = useQuery({\r\n    queryKey: ['trucks', page, rowsPerPage, orderBy, order, queryParams],\r\n    queryFn: TrucksQuery,\r\n    keepPreviousData: true,\r\n    retry: false,\r\n  });\r\n  React.useEffect(() => {\r\n    if (!error) {\r\n      return;\r\n    }\r\n    setSnackbarMessage({\r\n      severity: 'error',\r\n      message: error instanceof Error ? error.message : JSON.stringify(error),\r\n    });\r\n  }, [error]);\r\n  const rows = items || [];\r\n\r\n  React.useEffect(() => {\r\n    if (tableContainerRef.current) {\r\n      const container = tableContainerRef.current as HTMLElement;\r\n      container.scrollTo({\r\n        top: 0,\r\n        left: 0,\r\n        behavior: 'smooth',\r\n      });\r\n    }\r\n  }, [rows]);\r\n\r\n  React.useEffect(() => {\r\n    const newSelected: string[] = [];\r\n    selected.forEach((selectedItem) => {\r\n      const selectedRow = rows.find((row) => row.id === selectedItem);\r\n      if (selectedRow) {\r\n        newSelected.push(selectedItem);\r\n      }\r\n    });\r\n    setSelected(newSelected);\r\n  }, [rows]);\r\n\r\n  const handleRequestSort = (\r\n    event: React.MouseEvent<unknown>,\r\n    property: keyof Truck,\r\n  ) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    const isDesc = orderBy === property && order === 'desc';\r\n    if (isDesc) {\r\n      setOrder(undefined);\r\n      setOrderBy(undefined);\r\n    } else {\r\n      setOrder(isAsc ? 'desc' : 'asc');\r\n      setOrderBy(property);\r\n    }\r\n  };\r\n\r\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (event.target.checked) {\r\n      const newSelected = rows.map((n: Truck) => n.id);\r\n      setSelected(newSelected);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (\r\n    event: React.MouseEvent<unknown>,\r\n    item: (typeof rows)[number],\r\n  ) => {\r\n    navigate(`./view/${item.id}`, {\r\n      relative: 'path',\r\n      state: { from: location },\r\n      replace: false,\r\n    });\r\n  };\r\n\r\n  const handleSelect = (event: React.MouseEvent<unknown>, name: string) => {\r\n    event.stopPropagation();\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected: readonly string[] = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event: unknown, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (\r\n    event: React.ChangeEvent<HTMLInputElement>,\r\n  ) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const isSelected = (name: string) => selected.indexOf(name) !== -1;\r\n\r\n  return (\r\n    <Box sx={{ width: '100%', height: '100%' }}>\r\n      <Paper sx={{ width: '100%', height: '100%', backgroundColor: 'unset' }}>\r\n        <EnhancedTableToolbar\r\n          selected={selected}\r\n          setQueryParams={(query) => {\r\n            setQueryParams(query);\r\n            setPage(0);\r\n          }}\r\n        />\r\n        <TableContainer\r\n          ref={tableContainerRef}\r\n          sx={{ height: 'calc(100% - 115px)' }}\r\n        >\r\n          <Table\r\n            sx={{ minWidth: 750 }}\r\n            aria-labelledby=\"tableTitle\"\r\n            size=\"small\"\r\n            stickyHeader\r\n          >\r\n            <EnhancedTableHead\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {rows.map((row, index) => {\r\n                const isItemSelected = isSelected(`${row.id}`);\r\n                const labelId = `enhanced-table-checkbox-${index}`;\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    onDoubleClick={(event) => handleClick(event, row)}\r\n                    role=\"checkbox\"\r\n                    aria-checked={isItemSelected}\r\n                    tabIndex={-1}\r\n                    key={row.id}\r\n                    selected={isItemSelected}\r\n                    sx={{ cursor: 'pointer' }}\r\n                  >\r\n                    <StyledTableCell padding=\"checkbox\">\r\n                      <Checkbox\r\n                        id={`${labelId}`}\r\n                        color=\"primary\"\r\n                        checked={isItemSelected}\r\n                        inputProps={{\r\n                          'aria-labelledby': labelId,\r\n                        }}\r\n                        onClick={(event) => handleSelect(event, `${row.id}`)}\r\n                      />\r\n                    </StyledTableCell>\r\n                    {headCells.map((cell) => {\r\n                      const cellData = cell.getData(row, setMapData);\r\n                      return (\r\n                        <StyledTableCell\r\n                          key={cell.id}\r\n                          title={cellData.title}\r\n                          align={cell.numeric ? 'right' : 'center'}\r\n                        >\r\n                          {cellData.data}\r\n                        </StyledTableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 15, 20, 25, 35, 50]}\r\n          component=\"div\"\r\n          count={total}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <Loader visible={isLoading || isFetching} />\r\n    </Box>\r\n  );\r\n}\r\n","export const dateTimeFormatter = Intl.DateTimeFormat('en-US', {\r\n  year: 'numeric',\r\n  month: 'numeric',\r\n  day: 'numeric',\r\n  hour: 'numeric',\r\n  minute: 'numeric',\r\n  second: 'numeric',\r\n  hour12: true,\r\n});\r\n","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2m0 16H8V7h11z\"\n}), 'ContentCopy');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.996.996 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'Edit');","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Typography from \"../Typography/index.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getDialogTitleUtilityClass } from \"./dialogTitleClasses.js\";\nimport DialogContext from \"../Dialog/DialogContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getDialogTitleUtilityClass, classes);\n};\nconst DialogTitleRoot = styled(Typography, {\n  name: 'MuiDialogTitle',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  padding: '16px 24px',\n  flex: '0 0 auto'\n});\nconst DialogTitle = /*#__PURE__*/React.forwardRef(function DialogTitle(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiDialogTitle'\n  });\n  const {\n    className,\n    id: idProp,\n    ...other\n  } = props;\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  const {\n    titleId = idProp\n  } = React.useContext(DialogContext);\n  return /*#__PURE__*/_jsx(DialogTitleRoot, {\n    component: \"h2\",\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    variant: \"h6\",\n    id: idProp ?? titleId,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  id: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogTitle;"],"names":["_excluded","_extends","Object","assign","bind","n","e","arguments","length","t","r","hasOwnProperty","call","apply","SvgCat","_ref","ref","title","titleId","props","o","i","includes","_objectWithoutPropertiesLoose","getOwnPropertySymbols","s","propertyIsEnumerable","_objectWithoutProperties","id","xmlns","viewBox","cx","cy","fill","strokeWidth","style","stroke","d","paintOrder","points","strokeLinecap","ForwardRef","forwardRef","SvgTruck","focusable","fillRule","LocationForGrid","location","onRefClick","addInfo","children","value","setValue","React","items","setItems","geocoder","setGeocoder","setSearch","debounce","geocodeRequest","geocode","Promise","reject","then","result","results","locationFromRequest","google","maps","LatLng","res","address_components","formatted_address","concat","lat","lng","geometry","location_type","GeocoderLocationType","APPROXIMATE","viewport","LatLngBounds","place_id","types","forEach","item","toStringLocation","catch","selected","selectLocation","join","_jsxs","display","_jsx","Wrapper","_objectSpread","getMapSettings","render","status","setSnackbarMessage","useSnackbar","setLoaderVisibility","useLoader","Status","LOADING","FAILURE","severity","message","SUCCESS","window","Geocoder","textOverflow","overflow","textAlign","href","target","onClick","_Fragment","IconButton","size","event","stopPropagation","navigator","clipboard","writeText","ContentCopy","sx","height","width","createSvgIcon","validationSchema","yup","availabilityLocation","typeError","min","max","required","availabilityAtLocal","initialValues","undefined","Transition","Slide","direction","SetWillBeAvailableDialog","truckId","setTruckId","queryClient","useQueryClient","mutate","isLoading","useMutation","TruckUpdate","onSuccess","invalidateQueries","onError","error","Error","JSON","stringify","formik","useFormik","enableReinitialize","onSubmit","values","Dialog","open","TransitionComponent","keepMounted","onClose","handleDialogClose","PaperProps","DialogTitle","DialogContent","handleSubmit","onReset","handleReset","Box","p","SearchLocationField","fieldName","label","DateTimeField","minDateTime","Date","now","paddingTop","Button","fullWidth","variant","color","type","handleClose","Loader","visible","lastLocation","SetLastLocationDialog","headCells","orderField","getData","row","data","truckNumber","numeric","disablePadding","person","coordinator","owner","path","firstRow","secondRow","getPath","getType","fullName","phone","theme","useTheme","val","CatIcon","palette","cat","main","TruckIcon","truck","Avatar","bgcolor","green","margin","grey","setMapData","preventDefault","locationUpdatedAt","dateTimeFormatter","format","locationUpdatedBy","fromISOCorrected","equipment","firstRowPart1","insideDims","firstRowPart2","doorDims","payload","driver","StyledTableHead","styled","TableHead","backgroundColor","background","default","StyledTableCell","TableCell","maxWidth","paddingBottom","whiteSpace","EnhancedTableHead","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","TableRow","padding","Checkbox","name","indeterminate","checked","onChange","inputProps","map","headCell","align","sortDirection","TableSortLabel","active","hideSortIcon","property","component","visuallyHidden","EnhancedTableToolbar","setQueryParams","truckWAId","setTruckWAId","truckLLId","setTruckLLId","truckNumberSearch","setTruckNumberSearch","truckNumberChanged","setTruckNumberChanged","useLocation","navigate","useNavigate","TruckDelete","filterClearHandler","filterHandler","Toolbar","pl","sm","pr","xs","alpha","primary","action","activatedOpacity","Typography","flex","TextField","Number","isFinite","onKeyUp","key","Tooltip","FilterListOffIcon","disabled","FilterListIcon","openWBADialogHandler","AccessTime","openSLLDialogHandler","EditLocationAltIcon","createHandler","relative","state","from","replace","AddIcon","editHandler","EditIcon","deleteHandler","DeleteIcon","EnhancedTable","setOrder","setOrderBy","setSelected","page","setPage","rowsPerPage","setRowsPerPage","queryParams","tableContainerRef","useMap","isFetching","total","useQuery","queryKey","queryFn","TrucksQuery","keepPreviousData","retry","rows","current","scrollTo","top","left","behavior","newSelected","selectedItem","find","push","Paper","query","TableContainer","Table","minWidth","stickyHeader","handleRequestSort","isAsc","TableBody","index","isItemSelected","indexOf","labelId","hover","onDoubleClick","role","tabIndex","cursor","handleSelect","selectedIndex","slice","cell","cellData","TablePagination","rowsPerPageOptions","count","onPageChange","handleChangePage","newPage","onRowsPerPageChange","parseInt","Intl","DateTimeFormat","year","month","day","hour","minute","second","hour12","DialogTitleRoot","slot","overridesResolver","styles","root","inProps","useDefaultProps","className","idProp","other","ownerState","classes","composeClasses","getDialogTitleUtilityClass","useUtilityClasses","DialogContext","clsx"],"sourceRoot":""}