{"version":3,"file":"static/js/902.6aa6d5e1.chunk.js","mappings":"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","sources":["trucks/viewTruck.tsx","utils/dataTypes.ts"],"sourcesContent":["import React from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport { useFormik } from 'formik';\r\n\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Person4Icon from '@mui/icons-material/Person4';\r\nimport ContactPhoneIcon from '@mui/icons-material/ContactPhone';\r\nimport BadgeIcon from '@mui/icons-material/Badge';\r\nimport Divider from '@mui/material/Divider';\r\n\r\nimport {\r\n  DateField,\r\n  Loader,\r\n  SearchField,\r\n  SelectField,\r\n  SelectMultiField,\r\n  TextField,\r\n} from '../components';\r\n\r\nimport {\r\n  CoordinatorsQuery,\r\n  DriversQuery,\r\n  OwnersQuery,\r\n  TruckQuery,\r\n} from '../api';\r\nimport { useSnackbar } from '../hooks';\r\nimport {\r\n  Owner,\r\n  Coordinator,\r\n  Driver,\r\n  CreateTruck,\r\n  TruckCertificates,\r\n  TruckCrossborders,\r\n  TruckEquipments,\r\n  TruckStatuses,\r\n  TruckTypes,\r\n  TruckStatus,\r\n  TruckCrossborder,\r\n  TruckCertificate,\r\n  TruckType,\r\n} from '../utils/dataTypes';\r\nimport { getType } from '../utils/queryHelpers';\r\n\r\nconst initialValues = {\r\n  truckNumber: undefined,\r\n  status: 'Available' as TruckStatus,\r\n  crossborder: 'Yes' as TruckCrossborder,\r\n  certificate: 'Hazmat' as TruckCertificate,\r\n  type: 'Cargo van' as TruckType,\r\n  equipment: [],\r\n  payload: undefined,\r\n  grossWeight: undefined,\r\n  make: undefined,\r\n  model: undefined,\r\n  year: undefined,\r\n  color: undefined,\r\n  vinCode: undefined,\r\n  licencePlate: undefined,\r\n  licenceState: undefined,\r\n  plateExpires: undefined,\r\n  insideDims: undefined,\r\n  doorDims: undefined,\r\n  owner: null,\r\n  coordinator: null,\r\n  driver: null,\r\n};\r\n\r\nexport default function ViewTruckForm() {\r\n  const [driverAddQueryParams] = React.useState<Record<string, string>>({});\r\n  const [coordinatorAddQueryParams] = React.useState<Record<string, string>>(\r\n    {},\r\n  );\r\n  const { pathname } = useLocation();\r\n  const navigate = useNavigate();\r\n  const setSnackbarMessage = useSnackbar();\r\n\r\n  const {\r\n    isLoading: loading,\r\n    isFetching: fetching,\r\n    data,\r\n  } = useQuery({\r\n    queryKey: ['truck', pathname.split('/')[3]],\r\n    queryFn: TruckQuery,\r\n    keepPreviousData: false,\r\n    onError: (error: Error) => {\r\n      setSnackbarMessage({\r\n        severity: 'error',\r\n        message: error instanceof Error ? error.message : JSON.stringify(error),\r\n      });\r\n    },\r\n  });\r\n\r\n  const formik = useFormik<CreateTruck>({\r\n    initialValues: {\r\n      ...initialValues,\r\n      ...data,\r\n    },\r\n    enableReinitialize: true,\r\n    onSubmit: () => {\r\n      return;\r\n    },\r\n  });\r\n\r\n  const handleClose = () => {\r\n    navigate(-1);\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    navigate(pathname.replace('view', 'edit'), { replace: true });\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ height: '100%' }}>\r\n      <form\r\n        onSubmit={formik.handleSubmit}\r\n        onReset={formik.handleReset}\r\n        style={{ height: '100%' }}\r\n      >\r\n        <Box sx={{ p: 3, display: 'grid', height: '100%' }}>\r\n          <Divider />\r\n          <Box\r\n            key=\"controls\"\r\n            sx={{\r\n              height: '100%',\r\n              overflowX: 'hidden',\r\n              overflowY: 'scroll',\r\n            }}\r\n          >\r\n            <Box\r\n              key=\"centerControls\"\r\n              sx={{ display: 'inline-flex', width: '100%' }}\r\n            >\r\n              <Box key=\"left\" sx={{ p: 1, paddingBottom: 0, width: '50%' }}>\r\n                <TextField\r\n                  fieldName=\"truckNumber\"\r\n                  label=\"Truck Number\"\r\n                  number\r\n                  disabled\r\n                  formik={formik}\r\n                />\r\n                <SelectField\r\n                  fieldName=\"crossborder\"\r\n                  label=\"Cross Border\"\r\n                  items={TruckCrossborders}\r\n                  disabled\r\n                  formik={formik}\r\n                />\r\n                <SelectField\r\n                  fieldName=\"type\"\r\n                  label=\"Type\"\r\n                  items={TruckTypes}\r\n                  disabled\r\n                  formik={formik}\r\n                />\r\n                <TextField\r\n                  fieldName=\"payload\"\r\n                  label=\"Payload\"\r\n                  number\r\n                  disabled\r\n                  formik={formik}\r\n                />\r\n                <TextField\r\n                  fieldName=\"make\"\r\n                  label=\"Make\"\r\n                  disabled\r\n                  formik={formik}\r\n                />\r\n                <TextField\r\n                  fieldName=\"year\"\r\n                  label=\"Year\"\r\n                  number\r\n                  disabled\r\n                  formik={formik}\r\n                />\r\n                <TextField\r\n                  fieldName=\"vinCode\"\r\n                  label=\"Vin Code\"\r\n                  disabled\r\n                  formik={formik}\r\n                />\r\n                <TextField\r\n                  fieldName=\"licenceState\"\r\n                  label=\"Licence State\"\r\n                  disabled\r\n                  formik={formik}\r\n                />\r\n                <TextField\r\n                  fieldName=\"insideDims\"\r\n                  label=\"Inside Dims (length x width x height)\"\r\n                  disabled\r\n                  formik={formik}\r\n                />\r\n              </Box>\r\n              <Box key=\"right\" sx={{ p: 1, paddingBottom: 0, width: '50%' }}>\r\n                <SelectField\r\n                  fieldName=\"status\"\r\n                  label=\"Status\"\r\n                  items={TruckStatuses}\r\n                  disabled\r\n                  formik={formik}\r\n                />\r\n                <SelectField\r\n                  fieldName=\"certificate\"\r\n                  label=\"Certificate\"\r\n                  items={TruckCertificates}\r\n                  disabled\r\n                  formik={formik}\r\n                />\r\n                <SelectMultiField\r\n                  fieldName=\"equipment\"\r\n                  label=\"Equipment\"\r\n                  items={TruckEquipments}\r\n                  disabled\r\n                  formik={formik}\r\n                />\r\n                <TextField\r\n                  fieldName=\"grossWeight\"\r\n                  label=\"Gross Weight\"\r\n                  disabled\r\n                  formik={formik}\r\n                />\r\n                <TextField\r\n                  fieldName=\"model\"\r\n                  label=\"Model\"\r\n                  disabled\r\n                  formik={formik}\r\n                />\r\n                <TextField\r\n                  fieldName=\"color\"\r\n                  label=\"Color\"\r\n                  disabled\r\n                  formik={formik}\r\n                />\r\n                <TextField\r\n                  fieldName=\"licencePlate\"\r\n                  label=\"Licence Plate\"\r\n                  disabled\r\n                  formik={formik}\r\n                />\r\n                <DateField\r\n                  fieldName=\"plateExpires\"\r\n                  label=\"Plate Expires\"\r\n                  disabled\r\n                  formik={formik}\r\n                />\r\n                <TextField\r\n                  fieldName=\"doorDims\"\r\n                  label=\"Door Dims (width x height)\"\r\n                  disabled\r\n                  formik={formik}\r\n                />\r\n              </Box>\r\n            </Box>\r\n            <Box\r\n              key=\"bottomControls\"\r\n              sx={{ p: 1, paddingBottom: 0, paddingTop: 0 }}\r\n            >\r\n              <SearchField<Owner>\r\n                fieldName=\"owner\"\r\n                label=\"Owner\"\r\n                getSelectedLabel={(selectedItem) =>\r\n                  `${selectedItem.fullName}, ${getType(selectedItem)}, ${\r\n                    selectedItem.phone\r\n                  }`\r\n                }\r\n                getItemLabel={(item) => `${item.fullName}`}\r\n                getItemSecondLabel={(item) => `${getType(item)}, ${item.phone}`}\r\n                ListIcon={Person4Icon}\r\n                queryFn={OwnersQuery}\r\n                startEmpty={false}\r\n                orderby=\"fullName\"\r\n                order=\"asc\"\r\n                disabled\r\n                formik={formik}\r\n              />\r\n              <SearchField<Coordinator>\r\n                fieldName=\"coordinator\"\r\n                label=\"Coordinator\"\r\n                getSelectedLabel={(selectedItem) =>\r\n                  `${selectedItem.fullName}, ${getType(selectedItem)}, ${\r\n                    selectedItem.phone\r\n                  }`\r\n                }\r\n                getItemLabel={(item) => `${item.fullName}`}\r\n                getItemSecondLabel={(item) => `${getType(item)}, ${item.phone}`}\r\n                ListIcon={ContactPhoneIcon}\r\n                queryFn={CoordinatorsQuery}\r\n                startEmpty={false}\r\n                orderby=\"fullName\"\r\n                order=\"asc\"\r\n                additionalQueryParams={coordinatorAddQueryParams}\r\n                disabled\r\n                formik={formik}\r\n              />\r\n              <SearchField<Driver>\r\n                fieldName=\"driver\"\r\n                label=\"Driver\"\r\n                getSelectedLabel={(selectedItem) =>\r\n                  `${selectedItem.fullName}, ${getType(selectedItem)}, ${\r\n                    selectedItem.phone\r\n                  }`\r\n                }\r\n                getItemLabel={(item) =>\r\n                  `${item.fullName}${\r\n                    item.driveTrucks && item.driveTrucks[0]\r\n                      ? ', On Truck: ' + item.driveTrucks[0].truckNumber\r\n                      : ''\r\n                  }`\r\n                }\r\n                getItemSecondLabel={(item) => `${getType(item)}, ${item.phone}`}\r\n                ListIcon={BadgeIcon}\r\n                queryFn={DriversQuery}\r\n                startEmpty={false}\r\n                orderby=\"fullName\"\r\n                order=\"asc\"\r\n                additionalQueryParams={driverAddQueryParams}\r\n                disabled\r\n                formik={formik}\r\n              />\r\n            </Box>\r\n          </Box>\r\n          <Divider />\r\n          <Box key=\"buttons\" sx={{ paddingTop: 3, display: 'inline-flex' }}>\r\n            <Box key=\"left\" sx={{ p: 1, paddingTop: 0, width: '50%' }}>\r\n              <Button\r\n                fullWidth\r\n                variant=\"contained\"\r\n                size=\"small\"\r\n                color=\"primary\"\r\n                type=\"button\"\r\n                onClick={handleEdit}\r\n              >\r\n                Edit\r\n              </Button>\r\n            </Box>\r\n            <Box key=\"right\" sx={{ p: 1, paddingTop: 0, width: '50%' }}>\r\n              <Button\r\n                fullWidth\r\n                variant=\"contained\"\r\n                size=\"small\"\r\n                color=\"primary\"\r\n                type=\"button\"\r\n                onClick={handleClose}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      </form>\r\n      <Loader visible={loading || fetching} />\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { AlertColor } from '@mui/material/Alert/Alert';\r\n\r\nexport const LangPriorities = ['EN', 'UA', 'ES', 'RU'] as const;\r\n\r\nexport const PersonTypes = [\r\n  'Owner',\r\n  'OwnerDriver',\r\n  'Coordinator',\r\n  'CoordinatorDriver',\r\n  'Driver',\r\n] as const;\r\n\r\nexport const UserRoles = ['Admin', 'Super Admin'] as const;\r\n\r\nexport const TruckTypes = [\r\n  'Cargo van',\r\n  'Reefer van',\r\n  'Box truck',\r\n  'Box truck Reefer',\r\n  'Straight truck',\r\n  'Hotshot',\r\n  'Tented box',\r\n] as const;\r\n\r\nexport const TruckStatuses = ['Available', 'Not Available'] as const;\r\n\r\nexport const TruckCrossborders = ['Yes', 'No'] as const;\r\n\r\nexport const TruckCertificates = [\r\n  'Hazmat',\r\n  'Tsa',\r\n  'TWIC',\r\n  'Tanker Endorsement',\r\n] as const;\r\n\r\nexport const TruckEquipments = [\r\n  'Dock height risers',\r\n  'Air ride',\r\n  'Lift gate',\r\n  'Keep from freezing',\r\n  'ICC bar',\r\n  'Vertical E-track',\r\n  'Horizontal E-track',\r\n  'Pallet jack',\r\n  'PPE',\r\n  'Ramps',\r\n  'Straps',\r\n  'Loads bars',\r\n  'Blankets',\r\n  'Pads',\r\n  'Fire extinguisher',\r\n] as const;\r\n\r\nexport type Order = 'asc' | 'desc';\r\nexport type QueryKey<T> = readonly [\r\n  key: string,\r\n  page: number,\r\n  rowsPerPage: number,\r\n  orderBy?: string,\r\n  order?: Order,\r\n  queryParams?: T,\r\n];\r\n// export type BaseQuery = {\r\n//   readonly queryKey: QueryKey;\r\n// };\r\nexport type Query<T> = {\r\n  readonly queryKey: QueryKey<T>;\r\n};\r\nexport type QuerySingleKey = readonly [key: string, recordId: string];\r\nexport type QuerySingle = {\r\n  readonly queryKey: QuerySingleKey;\r\n};\r\nexport type Result<T> = {\r\n  items: T[];\r\n  limit: number;\r\n  offset: number;\r\n  total: number;\r\n};\r\nexport type QueryFn = (query: Query<{ search: any }>) => Promise<Result<any>>;\r\nexport interface AuthContextType {\r\n  user: any;\r\n  signin: (\r\n    username: string,\r\n    password: string,\r\n    callback: (res: boolean) => void,\r\n  ) => void;\r\n  signout: (callback: VoidFunction) => void;\r\n}\r\nexport type SnackbarMessage = {\r\n  message: string;\r\n  severity: AlertColor;\r\n  handleClose?: (event?: React.SyntheticEvent | Event, reason?: string) => void;\r\n};\r\nexport type PersonType = (typeof PersonTypes)[number];\r\nexport type LangPriority = (typeof LangPriorities)[number];\r\nexport type UserRole = (typeof UserRoles)[number];\r\nexport type TruckType = (typeof TruckTypes)[number];\r\nexport type TruckStatus = (typeof TruckStatuses)[number];\r\nexport type TruckCrossborder = (typeof TruckCrossborders)[number];\r\nexport type TruckCertificate = (typeof TruckCertificates)[number];\r\nexport type TruckEquipment = (typeof TruckEquipments)[number];\r\n\r\nexport interface Person {\r\n  id: string;\r\n  fullName: string;\r\n  type: PersonType;\r\n  phone?: string;\r\n}\r\n\r\nexport interface Owner extends Person {\r\n  type: PersonType;\r\n  phone: string;\r\n  phone2?: string;\r\n  email: string;\r\n  address: string;\r\n  ownTrucks?: Truck[];\r\n  coordinators?: Coordinator[];\r\n  drivers?: Driver[];\r\n}\r\n\r\nexport interface CreateOwner {\r\n  fullName?: string;\r\n  birthDate?: Date;\r\n  birthPlace?: string;\r\n  citizenship?: string;\r\n  languagePriority?: LangPriority;\r\n  hiredBy?: string;\r\n  hireDate?: Date;\r\n  snn?: string;\r\n  company?: string;\r\n  insurancePolicy?: string;\r\n  insurancePolicyEFF?: string;\r\n  insurancePolicyExp?: Date;\r\n  address?: string;\r\n  phone?: string;\r\n  phone2?: string;\r\n  email?: string;\r\n  emergencyContactName?: string;\r\n  emergencyContactRel?: string;\r\n  emergencyContactPhone?: string;\r\n  notes?: string;\r\n}\r\n\r\nexport interface UpdateOwner extends Partial<CreateOwner> {\r\n  id: string;\r\n}\r\n\r\nexport interface CreateOwnerDriver {\r\n  fullName?: string;\r\n  birthDate?: Date;\r\n  birthPlace?: string;\r\n  citizenship?: string;\r\n  languagePriority?: LangPriority;\r\n  driverLicenceType?: string;\r\n  driverLicenceNumber?: string;\r\n  driverLicenceState?: string;\r\n  driverLicenceClass?: string;\r\n  driverLicenceExp?: Date;\r\n  idDocId?: string;\r\n  idDocType?: string;\r\n  idDocExp?: Date;\r\n  hiredBy?: string;\r\n  hireDate?: Date;\r\n  snn?: string;\r\n  company?: string;\r\n  insurancePolicy?: string;\r\n  insurancePolicyEFF?: string;\r\n  insurancePolicyExp?: Date;\r\n  address?: string;\r\n  phone?: string;\r\n  phone2?: string;\r\n  email?: string;\r\n  emergencyContactName?: string;\r\n  emergencyContactRel?: string;\r\n  emergencyContactPhone?: string;\r\n  appLogin?: string;\r\n  appPass?: string;\r\n  notes?: string;\r\n}\r\n\r\nexport interface UpdateOwnerDriver extends Partial<CreateOwnerDriver> {\r\n  id: string;\r\n}\r\n\r\nexport interface Coordinator extends Person {\r\n  type: PersonType;\r\n  phone: string;\r\n  phone2?: string;\r\n  email: string;\r\n  address: string;\r\n  coordinateTrucks?: Truck[];\r\n  owner: Owner;\r\n}\r\n\r\nexport interface CreateCoordinator {\r\n  fullName?: string;\r\n  birthDate?: Date;\r\n  birthPlace?: string;\r\n  citizenship?: string;\r\n  languagePriority?: LangPriority;\r\n  hiredBy?: string;\r\n  hireDate?: Date;\r\n  snn?: string;\r\n  company?: string;\r\n  insurancePolicy?: string;\r\n  insurancePolicyEFF?: string;\r\n  insurancePolicyExp?: Date;\r\n  address?: string;\r\n  phone?: string;\r\n  phone2?: string;\r\n  email?: string;\r\n  emergencyContactName?: string;\r\n  emergencyContactRel?: string;\r\n  emergencyContactPhone?: string;\r\n  owner?: Owner | null;\r\n  notes?: string;\r\n}\r\n\r\nexport interface UpdateCoordinator extends Partial<CreateCoordinator> {\r\n  id: string;\r\n}\r\n\r\nexport interface CreateCoordinatorDriver {\r\n  fullName?: string;\r\n  birthDate?: Date;\r\n  birthPlace?: string;\r\n  citizenship?: string;\r\n  languagePriority?: LangPriority;\r\n  driverLicenceType?: string;\r\n  driverLicenceNumber?: string;\r\n  driverLicenceState?: string;\r\n  driverLicenceClass?: string;\r\n  driverLicenceExp?: Date;\r\n  idDocId?: string;\r\n  idDocType?: string;\r\n  idDocExp?: Date;\r\n  hiredBy?: string;\r\n  hireDate?: Date;\r\n  snn?: string;\r\n  company?: string;\r\n  insurancePolicy?: string;\r\n  insurancePolicyEFF?: string;\r\n  insurancePolicyExp?: Date;\r\n  address?: string;\r\n  phone?: string;\r\n  phone2?: string;\r\n  email?: string;\r\n  emergencyContactName?: string;\r\n  emergencyContactRel?: string;\r\n  emergencyContactPhone?: string;\r\n  appLogin?: string;\r\n  appPass?: string;\r\n  owner?: Owner | null;\r\n  notes?: string;\r\n}\r\n\r\nexport interface UpdateCoordinatorDriver\r\n  extends Partial<CreateCoordinatorDriver> {\r\n  id: string;\r\n}\r\n\r\nexport interface Driver extends Person {\r\n  type: PersonType;\r\n  phone: string;\r\n  phone2?: string;\r\n  email?: string;\r\n  address?: string;\r\n  driveTrucks?: Truck[];\r\n  owner: Owner;\r\n}\r\n\r\nexport interface CreateDriver {\r\n  fullName?: string;\r\n  birthDate?: Date;\r\n  birthPlace?: string;\r\n  citizenship?: string;\r\n  languagePriority?: LangPriority;\r\n  driverLicenceType?: string;\r\n  driverLicenceNumber?: string;\r\n  driverLicenceState?: string;\r\n  driverLicenceClass?: string;\r\n  driverLicenceExp?: Date;\r\n  idDocId?: string;\r\n  idDocType?: string;\r\n  idDocExp?: Date;\r\n  hiredBy?: string;\r\n  hireDate?: Date;\r\n  address?: string;\r\n  phone?: string;\r\n  phone2?: string;\r\n  email?: string;\r\n  emergencyContactName?: string;\r\n  emergencyContactRel?: string;\r\n  emergencyContactPhone?: string;\r\n  appLogin?: string;\r\n  appPass?: string;\r\n  owner?: Owner | null;\r\n  notes?: string;\r\n}\r\n\r\nexport interface UpdateDriver extends Partial<CreateDriver> {\r\n  id: string;\r\n}\r\n\r\nexport interface Truck {\r\n  id: string;\r\n  truckNumber: number;\r\n  status: TruckStatus;\r\n  lastLocation?: [number, number];\r\n  lastCity?: Location;\r\n  locationUpdatedAt?: string;\r\n  milesHaversine?: number;\r\n  milesByRoads?: number;\r\n  crossborder: TruckCrossborder;\r\n  certificate: TruckCertificate;\r\n  type: TruckType;\r\n  equipment?: TruckEquipment[];\r\n  payload?: number;\r\n  grossWeight: string;\r\n  make: string;\r\n  model: string;\r\n  year: number;\r\n  color: string;\r\n  vinCode: string;\r\n  licencePlate: string;\r\n  licenceState: string;\r\n  plateExpires: Date;\r\n  insideDims: string;\r\n  doorDims?: string;\r\n  owner?: Owner;\r\n  coordinator?: Coordinator;\r\n  driver?: Driver;\r\n}\r\n\r\nexport interface CreateTruck {\r\n  truckNumber?: number;\r\n  status?: TruckStatus;\r\n  crossborder?: TruckCrossborder;\r\n  certificate?: TruckCertificate;\r\n  type?: TruckType;\r\n  equipment?: TruckEquipment[];\r\n  payload?: number;\r\n  grossWeight?: string;\r\n  make?: string;\r\n  model?: string;\r\n  year?: number;\r\n  color?: string;\r\n  vinCode?: string;\r\n  licencePlate?: string;\r\n  licenceState?: string;\r\n  plateExpires?: Date;\r\n  insideDims?: string;\r\n  doorDims?: string;\r\n  owner?: Owner | null;\r\n  coordinator?: Coordinator | null;\r\n  driver?: Driver | null;\r\n}\r\n\r\nexport interface UpdateTruck extends Partial<CreateTruck> {\r\n  id: string;\r\n}\r\n\r\nexport interface Load {\r\n  id: string;\r\n  loadNumber: number;\r\n  pick?: google.maps.GeocoderResult;\r\n  pickLocation?: Location;\r\n  pickDate?: Date;\r\n  deliver?: google.maps.GeocoderResult;\r\n  deliverLocation?: Location;\r\n  deliverDate?: Date;\r\n  milesByRoads?: number;\r\n  milesHaversine?: number;\r\n  weight: string;\r\n  truckType: TruckType[];\r\n  rate?: number;\r\n  bookedByUser?: User;\r\n  bookedByCompany?: string;\r\n  dispatchers?: User[];\r\n  checkInAs?: string;\r\n  truck?: Truck;\r\n}\r\n\r\nexport interface CreateLoad {\r\n  pick?: google.maps.GeocoderResult | null;\r\n  pickDate?: Date;\r\n  deliver?: google.maps.GeocoderResult | null;\r\n  deliverDate?: Date;\r\n  weight?: string;\r\n  truckType?: TruckType[];\r\n  rate?: number;\r\n  bookedByUser?: User | null;\r\n  bookedByCompany?: string;\r\n  dispatchers?: User[];\r\n  checkInAs?: string;\r\n  truck?: Truck | null;\r\n}\r\n\r\nexport interface UpdateLoad extends Partial<CreateLoad> {\r\n  id: string;\r\n}\r\n\r\nexport interface Location {\r\n  id: string;\r\n  zipCode: string;\r\n  name: string;\r\n  stateCode: string;\r\n  stateName: string;\r\n  location: [number, number];\r\n}\r\n\r\nexport type CreateLocation = Omit<Location, 'id'>;\r\n\r\nexport interface UpdateLocation extends Partial<CreateLocation> {\r\n  id: string;\r\n}\r\n\r\nexport interface User {\r\n  id: string;\r\n  fullName: string;\r\n  phone?: string;\r\n  userRole: UserRole;\r\n  jobTitle: string;\r\n  email: string;\r\n}\r\n\r\nexport interface CreateUser extends Omit<User, 'id'> {\r\n  password?: string;\r\n}\r\n\r\nexport interface UpdateUser extends Partial<CreateUser> {\r\n  id: string;\r\n}\r\n"],"names":["initialValues","truckNumber","undefined","status","crossborder","certificate","type","equipment","payload","grossWeight","make","model","year","color","vinCode","licencePlate","licenceState","plateExpires","insideDims","doorDims","owner","coordinator","driver","ViewTruckForm","_React$useState","React","driverAddQueryParams","_slicedToArray","_React$useState3","coordinatorAddQueryParams","pathname","useLocation","navigate","useNavigate","setSnackbarMessage","useSnackbar","_useQuery","useQuery","queryKey","split","queryFn","TruckQuery","keepPreviousData","onError","error","severity","message","Error","JSON","stringify","loading","isLoading","fetching","isFetching","data","formik","useFormik","_objectSpread","enableReinitialize","onSubmit","_jsxs","Box","sx","height","children","_jsx","handleSubmit","onReset","handleReset","style","p","display","Divider","overflowX","overflowY","width","paddingBottom","TextField","fieldName","label","number","disabled","SelectField","items","TruckCrossborders","TruckTypes","TruckStatuses","TruckCertificates","SelectMultiField","TruckEquipments","DateField","paddingTop","SearchField","getSelectedLabel","selectedItem","concat","fullName","getType","phone","getItemLabel","item","getItemSecondLabel","ListIcon","Person4Icon","OwnersQuery","startEmpty","orderby","order","ContactPhoneIcon","CoordinatorsQuery","additionalQueryParams","driveTrucks","BadgeIcon","DriversQuery","Button","fullWidth","variant","size","onClick","replace","Loader","visible","LangPriorities","UserRoles"],"sourceRoot":""}