{"version":3,"file":"static/js/240.2c4366b4.chunk.js","mappings":"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","sources":["drivers/drivers.tsx","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/icons-material/Edit.js"],"sourcesContent":["import * as React from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\r\n\r\nimport { alpha, styled } from '@mui/material/styles';\r\nimport TextField from '@mui/material/TextField';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport Box from '@mui/material/Box';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableSortLabel from '@mui/material/TableSortLabel';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport FilterListIcon from '@mui/icons-material/FilterList';\r\nimport FilterListOffIcon from '@mui/icons-material/FilterListOff';\r\nimport { visuallyHidden } from '@mui/utils';\r\n\r\nimport Loader from '../components/Loader';\r\n\r\nimport { DriversQuery, DriverDelete } from '../api';\r\nimport { useSnackbar } from '../hooks';\r\nimport { Order, Driver } from '../utils/dataTypes';\r\nimport { getType, getPath } from '../utils/queryHelpers';\r\n\r\ninterface HeadCell {\r\n  id: string;\r\n  disablePadding: boolean;\r\n  orderField?: keyof Driver;\r\n  getData: (row: Driver) => { data: JSX.Element | string; title?: string };\r\n  label: string;\r\n  numeric: boolean;\r\n}\r\n\r\nconst headCells: readonly HeadCell[] = [\r\n  {\r\n    id: 'fullName',\r\n    orderField: 'fullName',\r\n    getData: (row) => ({ data: `${row.fullName}` }),\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Full name',\r\n  },\r\n  {\r\n    id: 'type',\r\n    getData: (row) => {\r\n      const type = `${getType(row)} `;\r\n      let title = '';\r\n      if (row.type === 'Driver') {\r\n        title = 'Driver';\r\n      }\r\n      if (row.type === 'OwnerDriver') {\r\n        title = 'Owner/Driver';\r\n      }\r\n      if (row.type === 'CoordinatorDriver') {\r\n        title = 'Coordinator/Driver';\r\n      }\r\n      return {\r\n        data: (\r\n          <span>\r\n            <b>{type}</b>\r\n          </span>\r\n        ),\r\n        title: title,\r\n      };\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Type',\r\n  },\r\n  {\r\n    id: 'phone',\r\n    getData: (row) => {\r\n      const firstRow = `${row.phone}`;\r\n      const secondRow = `${row.phone2 ? row.phone2 : ''}`;\r\n      return {\r\n        data: (\r\n          <span>\r\n            <a\r\n              href={`tel:${firstRow}`}\r\n              target=\"_blank\"\r\n              onClick={stopPropagation}\r\n            >\r\n              {firstRow}\r\n            </a>\r\n            <br />\r\n            <a\r\n              href={secondRow ? `tel:${secondRow}` : undefined}\r\n              target=\"_blank\"\r\n              onClick={stopPropagation}\r\n            >\r\n              {secondRow || ' '}\r\n            </a>\r\n          </span>\r\n        ),\r\n        title: firstRow + '\\n' + secondRow,\r\n      };\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Mobile phone',\r\n  },\r\n  {\r\n    id: 'email',\r\n    getData: (row) => {\r\n      if (row.email) {\r\n        const firstRow = `${row.email}`;\r\n        return {\r\n          data: (\r\n            <span>\r\n              <a\r\n                href={`mailto:${firstRow}`}\r\n                target=\"_blank\"\r\n                onClick={stopPropagation}\r\n              >\r\n                {firstRow}\r\n              </a>\r\n            </span>\r\n          ),\r\n          title: firstRow,\r\n        };\r\n      } else {\r\n        return { data: '' };\r\n      }\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Email',\r\n  },\r\n  {\r\n    id: 'address',\r\n    getData: (row) => {\r\n      if (row.address) {\r\n        const firstRow = `${row.address}`;\r\n        return {\r\n          data: <span>{firstRow}</span>,\r\n          title: firstRow,\r\n        };\r\n      } else {\r\n        return { data: '' };\r\n      }\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Home address',\r\n  },\r\n  {\r\n    id: 'onTruck',\r\n    getData: (row) => {\r\n      if (row.driveTrucks && row.driveTrucks.length) {\r\n        const truck = row.driveTrucks[0];\r\n        return {\r\n          data: (\r\n            <span>\r\n              <a\r\n                href={`/trucks/view/${truck.id}`}\r\n                target=\"_blank\"\r\n                onClick={stopPropagation}\r\n              >\r\n                {`${truck.truckNumber}`}\r\n              </a>\r\n              <br />\r\n              <a\r\n                href={\r\n                  truck.owner\r\n                    ? `/${getPath(truck.owner)}/view/${truck.owner.id}`\r\n                    : undefined\r\n                }\r\n                target=\"_blank\"\r\n                onClick={stopPropagation}\r\n              >\r\n                {truck.owner ? `${truck.owner.fullName}` : ' '}\r\n              </a>\r\n            </span>\r\n          ),\r\n          title: `${truck.truckNumber}${\r\n            truck.owner ? `\\n${truck.owner.fullName}` : ''\r\n          }`,\r\n        };\r\n      } else {\r\n        return { data: '' };\r\n      }\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'ON TRUCK',\r\n  },\r\n];\r\n\r\ninterface EnhancedTableProps {\r\n  numSelected: number;\r\n  onRequestSort: (\r\n    event: React.MouseEvent<unknown>,\r\n    property: keyof Driver,\r\n  ) => void;\r\n  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n  order: Order | undefined;\r\n  orderBy: string | undefined;\r\n  rowCount: number;\r\n}\r\n\r\nconst StyledTableHead = styled(TableHead)(({ theme }) => ({\r\n  backgroundColor: theme.palette.background.default,\r\n}));\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n  maxWidth: '100px',\r\n  paddingTop: '6px',\r\n  paddingBottom: '6px',\r\n  whiteSpace: 'nowrap',\r\n  textOverflow: 'ellipsis',\r\n  overflow: 'hidden',\r\n}));\r\n\r\nfunction stopPropagation(e: React.SyntheticEvent) {\r\n  e.stopPropagation();\r\n}\r\n\r\nfunction EnhancedTableHead(props: EnhancedTableProps) {\r\n  const {\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n  const createSortHandler =\r\n    (property: keyof Driver) => (event: React.MouseEvent<unknown>) => {\r\n      onRequestSort(event, property);\r\n    };\r\n\r\n  return (\r\n    <StyledTableHead>\r\n      <TableRow>\r\n        <StyledTableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            name={'enhanced-table-checkbox-select-all'}\r\n            color=\"primary\"\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{\r\n              'aria-label': 'enhanced-table-checkbox-select-all',\r\n            }}\r\n          />\r\n        </StyledTableCell>\r\n        {headCells.map((headCell) => (\r\n          <StyledTableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'center'}\r\n            padding={headCell.disablePadding ? 'none' : 'normal'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={headCell.orderField && orderBy === headCell.orderField}\r\n              hideSortIcon={!headCell.orderField}\r\n              direction={orderBy === headCell.orderField ? order : 'asc'}\r\n              onClick={\r\n                headCell.orderField\r\n                  ? createSortHandler(headCell.orderField)\r\n                  : () => {\r\n                      return;\r\n                    }\r\n              }\r\n            >\r\n              {headCell.label}\r\n              {headCell.orderField && orderBy === headCell.orderField ? (\r\n                <Box component=\"span\" sx={visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </Box>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </StyledTableCell>\r\n        ))}\r\n      </TableRow>\r\n    </StyledTableHead>\r\n  );\r\n}\r\n\r\ninterface EnhancedTableToolbarProps {\r\n  selected: readonly string[];\r\n  setQueryParams: React.Dispatch<\r\n    React.SetStateAction<Record<string, number | string>>\r\n  >;\r\n}\r\n\r\nfunction EnhancedTableToolbar(props: EnhancedTableToolbarProps) {\r\n  const { selected, setQueryParams } = props;\r\n  const [fullNameSearch, setFullNameSearch] = React.useState<string>('');\r\n  const [truckNumberSearch, setTruckNumberSearch] = React.useState<number>(0);\r\n  const [searchChanged, setSearchChanged] = React.useState<boolean>(false);\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const queryClient = useQueryClient();\r\n\r\n  const setSnackbarMessage = useSnackbar();\r\n\r\n  const { mutate, isLoading } = useMutation(DriverDelete, {\r\n    onSuccess: () => {\r\n      setSnackbarMessage({\r\n        severity: 'success',\r\n        message: 'Deleted',\r\n      });\r\n      queryClient.invalidateQueries(['drivers']);\r\n    },\r\n    onError: (error: Error) => {\r\n      setSnackbarMessage({\r\n        severity: 'error',\r\n        message: error instanceof Error ? error.message : JSON.stringify(error),\r\n      });\r\n    },\r\n  });\r\n\r\n  const fullNameHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setFullNameSearch(event.target.value);\r\n    setSearchChanged(true);\r\n  };\r\n  const truckNumberHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (Number.isFinite(Number(event.target.value))) {\r\n      setTruckNumberSearch(Number(event.target.value));\r\n      setSearchChanged(true);\r\n    }\r\n  };\r\n  const fullNameClearHandler = () => {\r\n    setSearchChanged(false);\r\n    setFullNameSearch('');\r\n    setTruckNumberSearch(0);\r\n    setQueryParams({});\r\n  };\r\n  const filterHandler = () => {\r\n    setSearchChanged(false);\r\n    const queryParams: Record<string, number | string> = {};\r\n    if (fullNameSearch) {\r\n      queryParams.fullName = fullNameSearch;\r\n    }\r\n    if (truckNumberSearch) {\r\n      queryParams.truckNumber = truckNumberSearch;\r\n    }\r\n    setQueryParams(queryParams);\r\n  };\r\n  const createHandler = () => {\r\n    navigate('./create', {\r\n      relative: 'path',\r\n      state: { from: location },\r\n      replace: false,\r\n    });\r\n  };\r\n  const editHandler = () => {\r\n    navigate(`./edit/${selected[0]}`, {\r\n      relative: 'path',\r\n      state: { from: location },\r\n      replace: false,\r\n    });\r\n  };\r\n  const deleteHandler = () => {\r\n    mutate(`${selected[0]}`);\r\n  };\r\n\r\n  return (\r\n    <Toolbar\r\n      sx={{\r\n        pl: { sm: 2 },\r\n        pr: { xs: 1, sm: 1 },\r\n        ...(selected.length > 0 && {\r\n          bgcolor: (theme) =>\r\n            alpha(\r\n              theme.palette.primary.main,\r\n              theme.palette.action.activatedOpacity,\r\n            ),\r\n        }),\r\n      }}\r\n    >\r\n      {selected.length > 0 ? (\r\n        <Typography\r\n          sx={{ flex: '1 1 100%' }}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {selected.length} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          sx={{\r\n            flex: '1 1 100%',\r\n            whiteSpace: 'nowrap',\r\n            textOverflow: 'ellipsis',\r\n            overflow: 'hidden',\r\n          }}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          Drivers\r\n        </Typography>\r\n      )}\r\n      <Box\r\n        component=\"div\"\r\n        sx={{\r\n          '& .MuiTextField-root': { m: 1, width: '140px' },\r\n        }}\r\n      >\r\n        <TextField\r\n          label=\"Full name\"\r\n          value={fullNameSearch}\r\n          onChange={fullNameHandler}\r\n          size=\"small\"\r\n        />\r\n      </Box>\r\n      <Box\r\n        component=\"div\"\r\n        sx={{\r\n          '& .MuiTextField-root': { m: 1, width: '140px' },\r\n        }}\r\n      >\r\n        <TextField\r\n          label=\"Truck Number\"\r\n          value={truckNumberSearch || ''}\r\n          onChange={truckNumberHandler}\r\n          size=\"small\"\r\n        />\r\n      </Box>\r\n      <Tooltip title=\"Filter list\">\r\n        {(searchChanged || (!fullNameSearch && !truckNumberSearch)) &&\r\n        (!(searchChanged && !fullNameSearch) ||\r\n          !(searchChanged && !truckNumberSearch)) ? (\r\n          <span>\r\n            <IconButton\r\n              disabled={!fullNameSearch && !truckNumberSearch}\r\n              onClick={filterHandler}\r\n            >\r\n              <FilterListIcon />\r\n            </IconButton>\r\n          </span>\r\n        ) : (\r\n          <span>\r\n            <IconButton onClick={fullNameClearHandler}>\r\n              <FilterListOffIcon />\r\n            </IconButton>\r\n          </span>\r\n        )}\r\n      </Tooltip>\r\n      <Box sx={{ p: 1, display: 'inline-flex' }}>\r\n        <Tooltip title=\"Create\">\r\n          <span>\r\n            <IconButton onClick={createHandler}>\r\n              <AddIcon />\r\n            </IconButton>\r\n          </span>\r\n        </Tooltip>\r\n        <Tooltip title=\"Edit\">\r\n          <span>\r\n            <IconButton disabled={selected.length !== 1} onClick={editHandler}>\r\n              <EditIcon />\r\n            </IconButton>\r\n          </span>\r\n        </Tooltip>\r\n        <Tooltip title=\"Delete\">\r\n          <span>\r\n            <IconButton\r\n              disabled={selected.length !== 1}\r\n              onClick={deleteHandler}\r\n            >\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </span>\r\n        </Tooltip>\r\n      </Box>\r\n      <Loader visible={isLoading} />\r\n    </Toolbar>\r\n  );\r\n}\r\n\r\nexport default function EnhancedTable() {\r\n  const [order, setOrder] = React.useState<Order | undefined>('asc');\r\n  const [orderBy, setOrderBy] = React.useState<keyof Driver | undefined>(\r\n    'fullName',\r\n  );\r\n  const [selected, setSelected] = React.useState<readonly string[]>([]);\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState<number>(15);\r\n  const [queryParams, setQueryParams] = React.useState<Record<string, any>>({});\r\n  const tableContainerRef = React.useRef(null);\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const setSnackbarMessage = useSnackbar();\r\n\r\n  const {\r\n    isLoading,\r\n    isFetching,\r\n    data: { items, total } = { items: [], total: 0 },\r\n  } = useQuery({\r\n    queryKey: ['drivers', page, rowsPerPage, orderBy, order, queryParams],\r\n    queryFn: DriversQuery,\r\n    keepPreviousData: true,\r\n    onError: (error: Error) => {\r\n      setSnackbarMessage({\r\n        severity: 'error',\r\n        message: error instanceof Error ? error.message : JSON.stringify(error),\r\n      });\r\n    },\r\n  });\r\n  const rows = items || [];\r\n\r\n  React.useEffect(() => {\r\n    if (tableContainerRef.current) {\r\n      const container = tableContainerRef.current as HTMLElement;\r\n      container.scrollTo({\r\n        top: 0,\r\n        left: 0,\r\n        behavior: 'smooth',\r\n      });\r\n    }\r\n  }, [rows]);\r\n\r\n  React.useEffect(() => {\r\n    const newSelected: string[] = [];\r\n    selected.forEach((selectedItem) => {\r\n      const selectedRow = rows.find((row) => row.id === selectedItem);\r\n      if (selectedRow) {\r\n        newSelected.push(selectedItem);\r\n      }\r\n    });\r\n    setSelected(newSelected);\r\n  }, [rows]);\r\n\r\n  const handleRequestSort = (\r\n    event: React.MouseEvent<unknown>,\r\n    property: keyof Driver,\r\n  ) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    const isDesc = orderBy === property && order === 'desc';\r\n    if (isDesc) {\r\n      setOrder(undefined);\r\n      setOrderBy(undefined);\r\n    } else {\r\n      setOrder(isAsc ? 'desc' : 'asc');\r\n      setOrderBy(property);\r\n    }\r\n  };\r\n\r\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (event.target.checked) {\r\n      const newSelected = rows.map((n: Driver) => n.id);\r\n      setSelected(newSelected);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (\r\n    event: React.MouseEvent<unknown>,\r\n    item: (typeof rows)[number],\r\n  ) => {\r\n    navigate(`../${getPath(item)}/view/${item.id}`, {\r\n      relative: 'path',\r\n      state: { from: location },\r\n      replace: false,\r\n    });\r\n  };\r\n\r\n  const handleSelect = (event: React.MouseEvent<unknown>, name: string) => {\r\n    event.stopPropagation();\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected: readonly string[] = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event: unknown, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (\r\n    event: React.ChangeEvent<HTMLInputElement>,\r\n  ) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const isSelected = (name: string) => selected.indexOf(name) !== -1;\r\n\r\n  return (\r\n    <Box sx={{ width: '100%', height: '100%' }}>\r\n      <Paper sx={{ width: '100%', height: '100%', backgroundColor: 'unset' }}>\r\n        <EnhancedTableToolbar\r\n          selected={selected}\r\n          setQueryParams={(query) => {\r\n            setQueryParams(query);\r\n            setPage(0);\r\n          }}\r\n        />\r\n        <TableContainer\r\n          ref={tableContainerRef}\r\n          sx={{ height: 'calc(100% - 115px)' }}\r\n        >\r\n          <Table\r\n            sx={{ minWidth: 750 }}\r\n            aria-labelledby=\"tableTitle\"\r\n            size=\"small\"\r\n            stickyHeader\r\n          >\r\n            <EnhancedTableHead\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {rows.map((row, index) => {\r\n                const isItemSelected = isSelected(`${row.id}`);\r\n                const labelId = `enhanced-table-checkbox-${index}`;\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    onClick={(event) => handleClick(event, row)}\r\n                    role=\"checkbox\"\r\n                    aria-checked={isItemSelected}\r\n                    tabIndex={-1}\r\n                    key={row.id}\r\n                    selected={isItemSelected}\r\n                    sx={{ cursor: 'pointer' }}\r\n                  >\r\n                    <StyledTableCell padding=\"checkbox\">\r\n                      <Checkbox\r\n                        id={`${labelId}`}\r\n                        color=\"primary\"\r\n                        checked={isItemSelected}\r\n                        inputProps={{\r\n                          'aria-labelledby': labelId,\r\n                        }}\r\n                        onClick={(event) => handleSelect(event, `${row.id}`)}\r\n                      />\r\n                    </StyledTableCell>\r\n                    {headCells.map((cell) => {\r\n                      const cellData = cell.getData(row);\r\n                      return (\r\n                        <StyledTableCell\r\n                          key={cell.id}\r\n                          title={cellData.title}\r\n                          align={cell.numeric ? 'right' : 'center'}\r\n                        >\r\n                          {cellData.data}\r\n                        </StyledTableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 15, 20, 25, 35, 50]}\r\n          component=\"div\"\r\n          count={total}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <Loader visible={isLoading || isFetching} />\r\n    </Box>\r\n  );\r\n}\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\nexports.default = _default;"],"names":["headCells","id","orderField","getData","row","data","concat","fullName","numeric","disablePadding","label","type","getType","title","_jsx","children","firstRow","phone","secondRow","phone2","_jsxs","href","target","onClick","stopPropagation","undefined","email","address","driveTrucks","length","truck","truckNumber","owner","getPath","StyledTableHead","styled","TableHead","_ref","backgroundColor","theme","palette","background","default","StyledTableCell","TableCell","_ref2","maxWidth","paddingTop","paddingBottom","whiteSpace","textOverflow","overflow","e","EnhancedTableHead","props","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","TableRow","padding","Checkbox","name","color","indeterminate","checked","onChange","inputProps","map","headCell","align","sortDirection","TableSortLabel","active","hideSortIcon","direction","property","event","Box","component","sx","visuallyHidden","EnhancedTableToolbar","selected","setQueryParams","_React$useState","React","_React$useState2","_slicedToArray","fullNameSearch","setFullNameSearch","_React$useState3","_React$useState4","truckNumberSearch","setTruckNumberSearch","_React$useState5","_React$useState6","searchChanged","setSearchChanged","location","useLocation","navigate","useNavigate","queryClient","useQueryClient","setSnackbarMessage","useSnackbar","_useMutation","useMutation","DriverDelete","onSuccess","severity","message","invalidateQueries","onError","error","Error","JSON","stringify","mutate","isLoading","Toolbar","_objectSpread","pl","sm","pr","xs","bgcolor","alpha","primary","main","action","activatedOpacity","Typography","flex","variant","m","width","TextField","value","size","Number","isFinite","Tooltip","IconButton","FilterListOffIcon","disabled","queryParams","FilterListIcon","p","display","relative","state","from","replace","AddIcon","EditIcon","DeleteIcon","Loader","visible","EnhancedTable","_React$useState7","_React$useState8","setOrder","_React$useState9","_React$useState10","setOrderBy","_React$useState11","_React$useState12","setSelected","_React$useState13","_React$useState14","page","setPage","_React$useState15","_React$useState16","rowsPerPage","setRowsPerPage","_React$useState17","_React$useState18","tableContainerRef","_useQuery","useQuery","queryKey","queryFn","DriversQuery","keepPreviousData","isFetching","_useQuery$data","_useQuery$data2","items","total","rows","current","scrollTo","top","left","behavior","newSelected","forEach","selectedItem","find","push","height","Paper","query","TableContainer","ref","Table","minWidth","stickyHeader","n","isAsc","TableBody","index","isItemSelected","indexOf","labelId","hover","item","role","tabIndex","cursor","selectedIndex","slice","handleSelect","cell","cellData","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","jsx","d"],"sourceRoot":""}