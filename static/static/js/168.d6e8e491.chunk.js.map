{"version":3,"file":"static/js/168.d6e8e491.chunk.js","mappings":"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","sources":["loads/loads.tsx","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/icons-material/Edit.js"],"sourcesContent":["import * as React from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\r\n\r\nimport { alpha, styled } from '@mui/material/styles';\r\nimport TextField from '@mui/material/TextField';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport Box from '@mui/material/Box';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableSortLabel from '@mui/material/TableSortLabel';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport FilterListIcon from '@mui/icons-material/FilterList';\r\nimport FilterListOffIcon from '@mui/icons-material/FilterListOff';\r\nimport { visuallyHidden } from '@mui/utils';\r\n\r\nimport Loader from '../components/Loader';\r\n\r\nimport { LoadsQuery, LoadDelete } from '../api';\r\nimport { useSnackbar } from '../hooks';\r\nimport { Order, Load } from '../utils/dataTypes';\r\n\r\ninterface HeadCell {\r\n  id: string;\r\n  disablePadding: boolean;\r\n  orderField?: keyof Load;\r\n  getData: (row: Load) => { data: JSX.Element | string; title?: string };\r\n  label: string;\r\n  numeric: boolean;\r\n}\r\n\r\nconst headCells: readonly HeadCell[] = [\r\n  {\r\n    id: 'loadNumber',\r\n    orderField: 'loadNumber',\r\n    getData: (row) => ({ data: `${row.loadNumber}` }),\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Load Number',\r\n  },\r\n  {\r\n    id: 'pickLocation',\r\n    getData: (row) => {\r\n      if (row?.pickLocation) {\r\n        const path = `./locations/view/${row.pickLocation.id}`;\r\n        const firstRow = `${row.pickLocation.name}, ${row.pickLocation.stateCode}, ${row.pickLocation.zipCode},`;\r\n        const secondRow = `${\r\n          row.pickDate ? new Date(row.pickDate).toLocaleString() : ''\r\n        }`;\r\n\r\n        return {\r\n          data: (\r\n            <span>\r\n              <a href={path} target=\"_blank\" onClick={stopPropagation}>\r\n                {firstRow}\r\n              </a>\r\n              <br />\r\n              {secondRow}\r\n            </span>\r\n          ),\r\n          title: firstRow + '\\n' + secondRow,\r\n        };\r\n      } else {\r\n        return { data: '' };\r\n      }\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'First pick up EDT',\r\n  },\r\n  {\r\n    id: 'deliverLocation',\r\n    getData: (row) => {\r\n      if (row?.deliverLocation) {\r\n        const path = `./locations/view/${row.deliverLocation.id}`;\r\n        const firstRow = `${row.deliverLocation.name}, ${row.deliverLocation.stateCode}, ${row.deliverLocation.zipCode},`;\r\n        const secondRow = `${\r\n          row.deliverDate ? new Date(row.deliverDate).toLocaleString() : ''\r\n        }`;\r\n\r\n        return {\r\n          data: (\r\n            <span>\r\n              <a href={path} target=\"_blank\" onClick={stopPropagation}>\r\n                {firstRow}\r\n              </a>\r\n              <br />\r\n              {secondRow}\r\n            </span>\r\n          ),\r\n          title: firstRow + '\\n' + secondRow,\r\n        };\r\n      } else {\r\n        return { data: '' };\r\n      }\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Last delivery EDT',\r\n  },\r\n  {\r\n    id: 'miles',\r\n    getData: (row) => {\r\n      if (row?.milesHaversine) {\r\n        const firstRow = `${\r\n          row.milesByRoads ? row.milesByRoads.toFixed(2) : ''\r\n        }`;\r\n        const secondRow = `${row.milesHaversine.toFixed(2)}`;\r\n\r\n        return {\r\n          data: (\r\n            <span>\r\n              <b>{firstRow}</b>\r\n              <br />\r\n              {secondRow}\r\n            </span>\r\n          ),\r\n          title: firstRow + ' - By roads' + '\\n' + secondRow + ' - Distance',\r\n        };\r\n      } else {\r\n        return { data: '' };\r\n      }\r\n    },\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Miles',\r\n  },\r\n  {\r\n    id: 'truckType',\r\n    getData: (row) => {\r\n      const firstRow = `${row.truckType.join(', ')}`;\r\n\r\n      return {\r\n        data: <span>{firstRow}</span>,\r\n        title: firstRow,\r\n      };\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Required truck info',\r\n  },\r\n  {\r\n    id: 'truck',\r\n    getData: (row) => {\r\n      if (row?.truck) {\r\n        const path = `./trucks/view/${row.truck.id}`;\r\n        const firstRow = `${row.truck.truckNumber}`;\r\n\r\n        return {\r\n          data: (\r\n            <span>\r\n              <a href={path} target=\"_blank\" onClick={stopPropagation}>\r\n                {firstRow}\r\n              </a>\r\n            </span>\r\n          ),\r\n          title: firstRow,\r\n        };\r\n      } else {\r\n        return { data: '' };\r\n      }\r\n    },\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Truck',\r\n  },\r\n];\r\n\r\ninterface EnhancedTableProps {\r\n  numSelected: number;\r\n  onRequestSort: (\r\n    event: React.MouseEvent<unknown>,\r\n    property: keyof Load,\r\n  ) => void;\r\n  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n  order: Order | undefined;\r\n  orderBy: string | undefined;\r\n  rowCount: number;\r\n}\r\n\r\nconst StyledTableHead = styled(TableHead)(({ theme }) => ({\r\n  backgroundColor: theme.palette.background.default,\r\n}));\r\n\r\nconst StyledTableCell = styled(TableCell)(() => ({\r\n  maxWidth: '100px',\r\n  paddingTop: '6px',\r\n  paddingBottom: '6px',\r\n  whiteSpace: 'nowrap',\r\n  textOverflow: 'ellipsis',\r\n  overflow: 'hidden',\r\n}));\r\n\r\nfunction stopPropagation(e: React.SyntheticEvent) {\r\n  e.stopPropagation();\r\n}\r\n\r\nfunction EnhancedTableHead(props: EnhancedTableProps) {\r\n  const {\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n  const createSortHandler =\r\n    (property: keyof Load) => (event: React.MouseEvent<unknown>) => {\r\n      onRequestSort(event, property);\r\n    };\r\n\r\n  return (\r\n    <StyledTableHead>\r\n      <TableRow>\r\n        <StyledTableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            name={'enhanced-table-checkbox-select-all'}\r\n            color=\"primary\"\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{\r\n              'aria-label': 'enhanced-table-checkbox-select-all',\r\n            }}\r\n          />\r\n        </StyledTableCell>\r\n        {headCells.map((headCell) => (\r\n          <StyledTableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'center'}\r\n            padding={headCell.disablePadding ? 'none' : 'normal'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={headCell.orderField && orderBy === headCell.orderField}\r\n              hideSortIcon={!headCell.orderField}\r\n              direction={orderBy === headCell.orderField ? order : 'asc'}\r\n              onClick={\r\n                headCell.orderField\r\n                  ? createSortHandler(headCell.orderField)\r\n                  : () => {\r\n                      return;\r\n                    }\r\n              }\r\n            >\r\n              {headCell.label}\r\n              {headCell.orderField && orderBy === headCell.orderField ? (\r\n                <Box component=\"span\" sx={visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </Box>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </StyledTableCell>\r\n        ))}\r\n      </TableRow>\r\n    </StyledTableHead>\r\n  );\r\n}\r\n\r\ninterface EnhancedTableToolbarProps {\r\n  selected: readonly string[];\r\n  setQueryParams: React.Dispatch<React.SetStateAction<Record<string, number>>>;\r\n}\r\n\r\nfunction EnhancedTableToolbar(props: EnhancedTableToolbarProps) {\r\n  const { selected, setQueryParams } = props;\r\n  const [loadNumberSearch, setLoadNumberSearch] = React.useState<number>(0);\r\n  const [truckNumberSearch, setTruckNumberSearch] = React.useState<number>(0);\r\n  const [searchChanged, setSearchChanged] = React.useState<boolean>(false);\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const queryClient = useQueryClient();\r\n\r\n  const setSnackbarMessage = useSnackbar();\r\n\r\n  const { mutate, isLoading } = useMutation(LoadDelete, {\r\n    onSuccess: () => {\r\n      setSnackbarMessage({\r\n        severity: 'success',\r\n        message: 'Deleted',\r\n      });\r\n      queryClient.invalidateQueries(['loads']);\r\n    },\r\n    onError: (error: Error) => {\r\n      setSnackbarMessage({\r\n        severity: 'error',\r\n        message: error instanceof Error ? error.message : JSON.stringify(error),\r\n      });\r\n    },\r\n  });\r\n\r\n  const loadNumberHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (Number.isFinite(Number(event.target.value))) {\r\n      setLoadNumberSearch(Number(event.target.value));\r\n      setSearchChanged(true);\r\n    }\r\n  };\r\n  const truckNumberHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (Number.isFinite(Number(event.target.value))) {\r\n      setTruckNumberSearch(Number(event.target.value));\r\n      setSearchChanged(true);\r\n    }\r\n  };\r\n  const loadClearHandler = () => {\r\n    setSearchChanged(false);\r\n    setLoadNumberSearch(0);\r\n    setTruckNumberSearch(0);\r\n    setQueryParams({});\r\n  };\r\n  const filterHandler = () => {\r\n    setSearchChanged(false);\r\n    const queryParams: Record<string, number> = {};\r\n    if (loadNumberSearch) {\r\n      queryParams.loadNumber = loadNumberSearch;\r\n    }\r\n    if (truckNumberSearch) {\r\n      queryParams.truckNumber = truckNumberSearch;\r\n    }\r\n    setQueryParams(queryParams);\r\n  };\r\n  const createHandler = () => {\r\n    navigate('./create', {\r\n      relative: 'path',\r\n      state: { from: location },\r\n      replace: false,\r\n    });\r\n  };\r\n  const editHandler = () => {\r\n    navigate(`./edit/${selected[0]}`, {\r\n      relative: 'path',\r\n      state: { from: location },\r\n      replace: false,\r\n    });\r\n  };\r\n  const deleteHandler = () => {\r\n    mutate(`${selected[0]}`);\r\n  };\r\n\r\n  return (\r\n    <Toolbar\r\n      sx={{\r\n        pl: { sm: 2 },\r\n        pr: { xs: 1, sm: 1 },\r\n        ...(selected.length > 0 && {\r\n          bgcolor: (theme) =>\r\n            alpha(\r\n              theme.palette.primary.main,\r\n              theme.palette.action.activatedOpacity,\r\n            ),\r\n        }),\r\n      }}\r\n    >\r\n      {selected.length > 0 ? (\r\n        <Typography\r\n          sx={{ flex: '1 1 100%' }}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {selected.length} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          sx={{\r\n            flex: '1 1 100%',\r\n            whiteSpace: 'nowrap',\r\n            textOverflow: 'ellipsis',\r\n            overflow: 'hidden',\r\n          }}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          Loads\r\n        </Typography>\r\n      )}\r\n      <Box\r\n        component=\"div\"\r\n        sx={{\r\n          '& .MuiTextField-root': { m: 1, width: '140px' },\r\n        }}\r\n      >\r\n        <TextField\r\n          label=\"Load Number\"\r\n          value={loadNumberSearch || ''}\r\n          onChange={loadNumberHandler}\r\n          size=\"small\"\r\n        />\r\n      </Box>\r\n      <Box\r\n        component=\"div\"\r\n        sx={{\r\n          '& .MuiTextField-root': { m: 1, width: '140px' },\r\n        }}\r\n      >\r\n        <TextField\r\n          label=\"Truck Number\"\r\n          value={truckNumberSearch || ''}\r\n          onChange={truckNumberHandler}\r\n          size=\"small\"\r\n        />\r\n      </Box>\r\n      <Tooltip title=\"Filter list\">\r\n        {(searchChanged || (!loadNumberSearch && !truckNumberSearch)) &&\r\n        (!(searchChanged && !loadNumberSearch) ||\r\n          !(searchChanged && !truckNumberSearch)) ? (\r\n          <span>\r\n            <IconButton\r\n              disabled={!loadNumberSearch && !truckNumberSearch}\r\n              onClick={filterHandler}\r\n            >\r\n              <FilterListIcon />\r\n            </IconButton>\r\n          </span>\r\n        ) : (\r\n          <span>\r\n            <IconButton onClick={loadClearHandler}>\r\n              <FilterListOffIcon />\r\n            </IconButton>\r\n          </span>\r\n        )}\r\n      </Tooltip>\r\n      <Box sx={{ p: 1, display: 'inline-flex' }}>\r\n        <Tooltip title=\"Create\">\r\n          <span>\r\n            <IconButton onClick={createHandler}>\r\n              <AddIcon />\r\n            </IconButton>\r\n          </span>\r\n        </Tooltip>\r\n        <Tooltip title=\"Edit\">\r\n          <span>\r\n            <IconButton disabled={selected.length !== 1} onClick={editHandler}>\r\n              <EditIcon />\r\n            </IconButton>\r\n          </span>\r\n        </Tooltip>\r\n        <Tooltip title=\"Delete\">\r\n          <span>\r\n            <IconButton\r\n              disabled={selected.length !== 1}\r\n              onClick={deleteHandler}\r\n            >\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </span>\r\n        </Tooltip>\r\n      </Box>\r\n      <Loader visible={isLoading} />\r\n    </Toolbar>\r\n  );\r\n}\r\n\r\nexport default function EnhancedTable() {\r\n  const [order, setOrder] = React.useState<Order | undefined>('desc');\r\n  const [orderBy, setOrderBy] = React.useState<keyof Load | undefined>(\r\n    'loadNumber',\r\n  );\r\n  const [selected, setSelected] = React.useState<readonly string[]>([]);\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState<number>(15);\r\n  const [queryParams, setQueryParams] = React.useState<Record<string, any>>({});\r\n  const tableContainerRef = React.useRef(null);\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const setSnackbarMessage = useSnackbar();\r\n\r\n  const {\r\n    isLoading,\r\n    isFetching,\r\n    data: { items, total } = { items: [], total: 0 },\r\n  } = useQuery({\r\n    queryKey: ['loads', page, rowsPerPage, orderBy, order, queryParams],\r\n    queryFn: LoadsQuery,\r\n    keepPreviousData: true,\r\n    onError: (error: Error) => {\r\n      setSnackbarMessage({\r\n        severity: 'error',\r\n        message: error instanceof Error ? error.message : JSON.stringify(error),\r\n      });\r\n    },\r\n  });\r\n  const rows: Load[] = items || [];\r\n\r\n  React.useEffect(() => {\r\n    if (tableContainerRef.current) {\r\n      const container = tableContainerRef.current as HTMLElement;\r\n      container.scrollTo({\r\n        top: 0,\r\n        left: 0,\r\n        behavior: 'smooth',\r\n      });\r\n    }\r\n  }, [rows]);\r\n\r\n  React.useEffect(() => {\r\n    const newSelected: string[] = [];\r\n    selected.forEach((selectedItem) => {\r\n      const selectedRow = rows.find((row) => row.id === selectedItem);\r\n      if (selectedRow) {\r\n        newSelected.push(selectedItem);\r\n      }\r\n    });\r\n    setSelected(newSelected);\r\n  }, [rows]);\r\n\r\n  const handleRequestSort = (\r\n    event: React.MouseEvent<unknown>,\r\n    property: keyof Load,\r\n  ) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    const isDesc = orderBy === property && order === 'desc';\r\n    if (isDesc) {\r\n      setOrder(undefined);\r\n      setOrderBy(undefined);\r\n    } else {\r\n      setOrder(isAsc ? 'desc' : 'asc');\r\n      setOrderBy(property);\r\n    }\r\n  };\r\n\r\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (event.target.checked) {\r\n      const newSelected = rows.map((n: Load) => n.id);\r\n      setSelected(newSelected);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (\r\n    event: React.MouseEvent<unknown>,\r\n    item: (typeof rows)[number],\r\n  ) => {\r\n    navigate(`./view/${item.id}`, {\r\n      relative: 'path',\r\n      state: { from: location },\r\n      replace: false,\r\n    });\r\n  };\r\n\r\n  const handleSelect = (event: React.MouseEvent<unknown>, name: string) => {\r\n    event.stopPropagation();\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected: readonly string[] = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event: unknown, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (\r\n    event: React.ChangeEvent<HTMLInputElement>,\r\n  ) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const isSelected = (name: string) => selected.indexOf(name) !== -1;\r\n\r\n  return (\r\n    <Box sx={{ width: '100%', height: '100%' }}>\r\n      <Paper sx={{ width: '100%', height: '100%', backgroundColor: 'unset' }}>\r\n        <EnhancedTableToolbar\r\n          selected={selected}\r\n          setQueryParams={(query) => {\r\n            setQueryParams(query);\r\n            setPage(0);\r\n          }}\r\n        />\r\n        <TableContainer\r\n          ref={tableContainerRef}\r\n          sx={{ height: 'calc(100% - 115px)' }}\r\n        >\r\n          <Table\r\n            sx={{ minWidth: 750 }}\r\n            aria-labelledby=\"tableTitle\"\r\n            size=\"small\"\r\n            stickyHeader\r\n          >\r\n            <EnhancedTableHead\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {rows.map((row, index) => {\r\n                const isItemSelected = isSelected(`${row.id}`);\r\n                const labelId = `enhanced-table-checkbox-${index}`;\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    onClick={(event) => handleClick(event, row)}\r\n                    role=\"checkbox\"\r\n                    aria-checked={isItemSelected}\r\n                    tabIndex={-1}\r\n                    key={row.id}\r\n                    selected={isItemSelected}\r\n                    sx={{ cursor: 'pointer' }}\r\n                  >\r\n                    <StyledTableCell padding=\"checkbox\">\r\n                      <Checkbox\r\n                        id={`${labelId}`}\r\n                        color=\"primary\"\r\n                        checked={isItemSelected}\r\n                        inputProps={{\r\n                          'aria-labelledby': labelId,\r\n                        }}\r\n                        onClick={(event) => handleSelect(event, `${row.id}`)}\r\n                      />\r\n                    </StyledTableCell>\r\n                    {headCells.map((cell) => {\r\n                      const cellData = cell.getData(row);\r\n                      return (\r\n                        <StyledTableCell\r\n                          key={cell.id}\r\n                          title={cellData.title}\r\n                          align={cell.numeric ? 'right' : 'center'}\r\n                        >\r\n                          {cellData.data}\r\n                        </StyledTableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 15, 20, 25, 35, 50]}\r\n          component=\"div\"\r\n          count={total}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <Loader visible={isLoading || isFetching} />\r\n    </Box>\r\n  );\r\n}\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\nexports.default = _default;"],"names":["headCells","id","orderField","getData","row","data","concat","loadNumber","numeric","disablePadding","label","pickLocation","path","firstRow","name","stateCode","zipCode","secondRow","pickDate","Date","toLocaleString","_jsxs","children","_jsx","href","target","onClick","stopPropagation","title","deliverLocation","deliverDate","milesHaversine","milesByRoads","toFixed","truckType","join","truck","truckNumber","StyledTableHead","styled","TableHead","_ref","backgroundColor","theme","palette","background","default","StyledTableCell","TableCell","maxWidth","paddingTop","paddingBottom","whiteSpace","textOverflow","overflow","e","EnhancedTableHead","props","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","TableRow","padding","Checkbox","color","indeterminate","checked","onChange","inputProps","map","headCell","align","sortDirection","TableSortLabel","active","hideSortIcon","direction","property","event","Box","component","sx","visuallyHidden","EnhancedTableToolbar","selected","setQueryParams","_React$useState","React","_React$useState2","_slicedToArray","loadNumberSearch","setLoadNumberSearch","_React$useState3","_React$useState4","truckNumberSearch","setTruckNumberSearch","_React$useState5","_React$useState6","searchChanged","setSearchChanged","location","useLocation","navigate","useNavigate","queryClient","useQueryClient","setSnackbarMessage","useSnackbar","_useMutation","useMutation","LoadDelete","onSuccess","severity","message","invalidateQueries","onError","error","Error","JSON","stringify","mutate","isLoading","Toolbar","_objectSpread","pl","sm","pr","xs","length","bgcolor","alpha","primary","main","action","activatedOpacity","Typography","flex","variant","m","width","TextField","value","Number","isFinite","size","Tooltip","IconButton","FilterListOffIcon","disabled","queryParams","FilterListIcon","p","display","relative","state","from","replace","AddIcon","EditIcon","DeleteIcon","Loader","visible","EnhancedTable","_React$useState7","_React$useState8","setOrder","_React$useState9","_React$useState10","setOrderBy","_React$useState11","_React$useState12","setSelected","_React$useState13","_React$useState14","page","setPage","_React$useState15","_React$useState16","rowsPerPage","setRowsPerPage","_React$useState17","_React$useState18","tableContainerRef","_useQuery","useQuery","queryKey","queryFn","LoadsQuery","keepPreviousData","isFetching","_useQuery$data","_useQuery$data2","items","total","rows","current","scrollTo","top","left","behavior","newSelected","forEach","selectedItem","find","push","height","Paper","query","TableContainer","ref","Table","minWidth","stickyHeader","n","isAsc","undefined","TableBody","index","isItemSelected","indexOf","labelId","hover","role","tabIndex","cursor","selectedIndex","slice","handleSelect","cell","cellData","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","jsx","d"],"sourceRoot":""}