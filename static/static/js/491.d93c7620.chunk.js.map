{"version":3,"file":"static/js/491.d93c7620.chunk.js","mappings":"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","sources":["api/api.ts","trucksNearby/trucksNearby.tsx"],"sourcesContent":["import { authProvider } from '../utils/auth';\nimport {\n  Coordinator,\n  Driver,\n  Load,\n  Location,\n  Owner,\n  Truck,\n  User,\n  CreateUser,\n  Query,\n  QuerySingle,\n  Result,\n} from '../utils/dataTypes';\n\nconst SUCCESS_HTTP_CODE = 200;\nconst CREATED_HTTP_CODE = 201;\nconst FORBIDDEN_HTTP_CODE = 403;\nconst NOT_FOUND_HTTP_CODE = 404;\n\nconst { origin } = new URL(window.location.href);\n\nexport const authFetch: (\n  input: string | URL,\n  init?: RequestInit,\n) => Promise<object> = (input, init = {}) => {\n  const fetchInit = { ...init, headers: new Headers() };\n  fetchInit.headers.set(\n    'Authorization',\n    'Basic ' +\n      btoa(authProvider.user?.username + ':' + authProvider.user?.password),\n  );\n  if (fetchInit.body) {\n    fetchInit.headers.set('Accept', 'application/json');\n    fetchInit.headers.set('Content-Type', 'application/json');\n  }\n  return fetch(input, fetchInit)\n    .catch((reason) => {\n      const error = new Error();\n      error.cause = reason;\n      error.name = 'Fetch error';\n      error.message = 'Network error has occurred';\n      throw error;\n    })\n    .then((response) => {\n      if (\n        response.status !== SUCCESS_HTTP_CODE &&\n        response.status !== CREATED_HTTP_CODE\n      ) {\n        const error = new Error();\n        error.cause = response;\n        if (response.status) {\n          error.name = response.status + ' ' + response.statusText;\n          switch (response.status) {\n            case FORBIDDEN_HTTP_CODE:\n              error.message = 'Insufficient permissions';\n              break;\n            case NOT_FOUND_HTTP_CODE:\n              error.message = 'Not found';\n              break;\n            default:\n              error.message = 'Some server error has occurred';\n          }\n        } else {\n          error.message = 'Network error has occurred';\n        }\n        throw error;\n      }\n      return response.json().catch((reason) => {\n        const error = new Error();\n        error.cause = reason;\n        error.name = 'Fetch error';\n        error.message = 'Server responded with incorrect data';\n        throw error;\n      });\n    });\n};\n\nexport const TrucksQuery: (\n  query: Query<{\n    truckNumber?: number;\n    lastLocation?: string;\n    distance?: string;\n  }>,\n) => Promise<Result<Truck>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/truck', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  if (queryParams?.lastLocation && queryParams?.distance) {\n    url.searchParams.append('lastLocation', `${queryParams.lastLocation}`);\n    url.searchParams.append('distance', `${queryParams.distance}`);\n  }\n  return authFetch(url) as Promise<Result<Truck>>;\n};\n\nexport const TruckDelete = (userId: string): Promise<Truck> => {\n  const url = new URL(`/truck/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<Truck>;\n};\n\nexport const LocationsQuery: (\n  query: Query<{ search?: string; name?: string }>,\n) => Promise<Result<Location>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/location', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.search) {\n    url.searchParams.append('search', `${queryParams.search}`);\n  }\n  if (queryParams?.name) {\n    url.searchParams.append('name', `${queryParams.name}`);\n  }\n  return authFetch(url) as Promise<Result<Location>>;\n};\n\nexport const LocationDelete = (userId: string): Promise<Location> => {\n  const url = new URL(`/location/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<Location>;\n};\n\nexport const LoadsQuery: (\n  query: Query<{ loadNumber?: number; truckNumber?: number }>,\n) => Promise<Result<Load>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/load', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.loadNumber) {\n    url.searchParams.append('loadNumber', `${queryParams.loadNumber}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  return authFetch(url) as Promise<Result<Load>>;\n};\n\nexport const LoadDelete = (userId: string): Promise<Load> => {\n  const url = new URL(`/load/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<Load>;\n};\n\nexport const OwnersQuery: (\n  query: Query<{ fullName?: number; truckNumber?: number }>,\n) => Promise<Result<Owner>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/owner', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.fullName) {\n    url.searchParams.append('fullName', `${queryParams.fullName}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  return authFetch(url) as Promise<Result<Owner>>;\n};\n\nexport const OwnerDelete = (userId: string): Promise<Owner> => {\n  const url = new URL(`/owner/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<Owner>;\n};\n\nexport const DriversQuery: (\n  query: Query<{ fullName?: number; truckNumber?: number }>,\n) => Promise<Result<Driver>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/driver', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.fullName) {\n    url.searchParams.append('fullName', `${queryParams.fullName}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  return authFetch(url) as Promise<Result<Driver>>;\n};\n\nexport const DriverDelete = (userId: string): Promise<Driver> => {\n  const url = new URL(`/driver/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<Driver>;\n};\n\nexport const CoordinatorsQuery: (\n  query: Query<{ fullName?: number; truckNumber?: number }>,\n) => Promise<Result<Coordinator>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/coordinator', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.fullName) {\n    url.searchParams.append('fullName', `${queryParams.fullName}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  return authFetch(url) as Promise<Result<Coordinator>>;\n};\n\nexport const CoordinatorDelete = (userId: string): Promise<Coordinator> => {\n  const url = new URL(`/coordinator/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<Coordinator>;\n};\n\nexport const UsersQuery: (\n  query: Query<{ fullName?: number }>,\n) => Promise<Result<User>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/user', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.fullName) {\n    url.searchParams.append('fullName', `${queryParams.fullName}`);\n  }\n  return authFetch(url) as Promise<Result<User>>;\n};\n\nexport const UserDelete = (userId: string): Promise<User> => {\n  const url = new URL(`/user/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<User>;\n};\n\nexport const UserCreate = (data: CreateUser): Promise<User> => {\n  const url = new URL(`/user`, origin);\n  return authFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(data),\n  }) as Promise<User>;\n};\n\nexport const UserQuery = (query: QuerySingle): Promise<User> => {\n  const url = new URL(`/user/${query.queryKey[1]}`, origin);\n  return authFetch(url, {\n    method: 'GET',\n  }) as Promise<User>;\n};\n","import * as React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\n\nimport { alpha, styled } from '@mui/material/styles';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport TextField from '@mui/material/TextField';\nimport Tooltip from '@mui/material/Tooltip';\nimport TableCell from '@mui/material/TableCell';\nimport MenuItem from '@mui/material/MenuItem';\nimport Box from '@mui/material/Box';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport TableSortLabel from '@mui/material/TableSortLabel';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\nimport AddIcon from '@mui/icons-material/Add';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport FilterListIcon from '@mui/icons-material/FilterList';\nimport FilterListOffIcon from '@mui/icons-material/FilterListOff';\nimport { visuallyHidden } from '@mui/utils';\nimport { debounce } from '@mui/material/utils';\n\nimport Loader from '../components/Loader';\n\nimport { LocationsQuery, TrucksQuery, TruckDelete } from '../api';\nimport { useSnackbar } from '../hooks';\nimport { Order, Truck, City } from '../utils/dataTypes';\n\ninterface HeadCell {\n  id: string;\n  disablePadding: boolean;\n  orderField?: keyof Truck;\n  getData: (row: Truck) => { data: JSX.Element | string; title?: string };\n  label: string;\n  numeric: boolean;\n}\n\nconst headCells: readonly HeadCell[] = [\n  {\n    id: 'truckNumber',\n    orderField: 'truckNumber',\n    getData: (row) => ({ data: `${row.truckNumber}` }),\n    numeric: true,\n    disablePadding: false,\n    label: 'Truck Number',\n  },\n  {\n    id: 'mainContactInfo',\n    getData: (row) => {\n      const coordinator = row.coordinator;\n      const owner = row.owner;\n      let path = '';\n      let type = '';\n      let firstRow = '';\n      let secondRow = '';\n      if (coordinator) {\n        path = `./coordinators/view/${coordinator.id}`;\n        type = '(C) ';\n        firstRow = `${coordinator.fullName}`;\n        secondRow = `${coordinator?.phone}`;\n      } else if (owner) {\n        path = `./owners/view/${owner.id}`;\n        type = `${owner.type === 'Owner' ? '(O) ' : ''}${\n          owner.type === 'OwnerDriver' ? '(O/d) ' : ''\n        }`;\n        firstRow = `${owner.fullName}`;\n        secondRow = `${owner?.phone}`;\n      }\n      return {\n        data: (\n          <span>\n            <b>{type}</b>\n            <a href={path} target=\"_blank\" onClick={stopPropagation}>\n              {firstRow}\n            </a>\n            <br />\n            <a\n              href={secondRow ? `tel:${secondRow}` : undefined}\n              target=\"_blank\"\n              onClick={stopPropagation}\n            >\n              {secondRow || ' '}\n            </a>\n          </span>\n        ),\n        title: type + '' + firstRow + '\\n' + secondRow,\n      };\n    },\n    numeric: false,\n    disablePadding: true,\n    label: 'Main Contact info',\n  },\n  {\n    id: 'truckInfo',\n    getData: (row) => {\n      const firstRow = row.type ? `${row.type}` : '';\n      const secondRow = row.equipment ? `${row.equipment.join(', ')}` : '';\n\n      return {\n        data: (\n          <span>\n            {firstRow}\n            <br />\n            {secondRow}\n          </span>\n        ),\n        title: firstRow + '\\n' + secondRow,\n      };\n    },\n    numeric: false,\n    disablePadding: true,\n    label: 'Truck info',\n  },\n  {\n    id: 'dimsPayload',\n    getData: (row) => {\n      const firstRow = row.doorDims ? `${row.doorDims}` : '';\n      const secondRow = row.payload ? `${row.payload}` : '';\n\n      return {\n        data: (\n          <span>\n            {firstRow}\n            <br />\n            {secondRow}\n          </span>\n        ),\n        title: firstRow + '\\n' + secondRow,\n      };\n    },\n    numeric: false,\n    disablePadding: true,\n    label: 'DIMS/Payload',\n  },\n  {\n    id: 'status',\n    orderField: 'status',\n    getData: (row) => ({ data: `${row.status}` }),\n    numeric: false,\n    disablePadding: true,\n    label: 'Status',\n  },\n  {\n    id: 'roadsDistance',\n    getData: (row) => ({\n      data: `${row.milesByRoads ? row.milesByRoads.toFixed(2) : ''}`,\n    }),\n    numeric: false,\n    disablePadding: true,\n    label: 'Road distance',\n  },\n  {\n    id: 'location',\n    getData: (row) => {\n      if (row?.lastCity) {\n        const path = `./locations/view/${row.lastCity.id}`;\n        const firstRow = `${row.lastCity.name}, ${row.lastCity.stateCode}, ${row.lastCity.zipCode},`;\n        const secondRow = `${\n          row.locationUpdatedAt\n            ? new Date(row.locationUpdatedAt).toLocaleString()\n            : ''\n        }`;\n\n        return {\n          data: (\n            <span>\n              <a href={path} target=\"_blank\" onClick={stopPropagation}>\n                {firstRow}\n              </a>\n              <br />\n              {secondRow}\n            </span>\n          ),\n          title: firstRow + '\\n' + secondRow,\n        };\n      } else {\n        return { data: '' };\n      }\n    },\n    numeric: false,\n    disablePadding: true,\n    label: 'Last known location',\n  },\n  {\n    id: 'calcDistance',\n    getData: (row) => ({\n      data: `${row.milesHaversine ? row.milesHaversine.toFixed(2) : ''}`,\n    }),\n    numeric: false,\n    disablePadding: true,\n    label: 'Origin away',\n  },\n];\n\ninterface EnhancedTableProps {\n  numSelected: number;\n  onRequestSort: (\n    event: React.MouseEvent<unknown>,\n    property: keyof Truck,\n  ) => void;\n  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  order: Order | undefined;\n  orderBy: string | undefined;\n  rowCount: number;\n}\n\nconst StyledTableHead = styled(TableHead)(({ theme }) => ({\n  backgroundColor: theme.palette.background.default,\n}));\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  maxWidth: '100px',\n  whiteSpace: 'nowrap',\n  textOverflow: 'ellipsis',\n  overflow: 'hidden',\n}));\n\nfunction stopPropagation(e: React.SyntheticEvent) {\n  e.stopPropagation();\n}\n\nfunction EnhancedTableHead(props: EnhancedTableProps) {\n  const {\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n  } = props;\n  const createSortHandler =\n    (property: keyof Truck) => (event: React.MouseEvent<unknown>) => {\n      onRequestSort(event, property);\n    };\n\n  return (\n    <StyledTableHead>\n      <TableRow>\n        <StyledTableCell align=\"center\" padding=\"checkbox\">\n          Actions\n        </StyledTableCell>\n        {headCells.map((headCell) => (\n          <StyledTableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'center'}\n            padding={headCell.disablePadding ? 'none' : 'normal'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={headCell.orderField && orderBy === headCell.orderField}\n              hideSortIcon={!headCell.orderField}\n              direction={orderBy === headCell.orderField ? order : 'asc'}\n              onClick={\n                headCell.orderField\n                  ? createSortHandler(headCell.orderField)\n                  : () => {\n                      return;\n                    }\n              }\n            >\n              {headCell.label}\n              {headCell.orderField && orderBy === headCell.orderField ? (\n                <Box component=\"span\" sx={visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </StyledTableCell>\n        ))}\n      </TableRow>\n    </StyledTableHead>\n  );\n}\n\ninterface EnhancedTableToolbarProps {\n  selected: readonly string[];\n  setQueryParams: React.Dispatch<\n    React.SetStateAction<Record<string, number | string>>\n  >;\n}\n\nfunction EnhancedTableToolbar(props: EnhancedTableToolbarProps) {\n  const { selected, setQueryParams } = props;\n  const [value, setValue] = React.useState<City | null>(null);\n  const [inputValue, setInputValue] = React.useState('');\n  const [locationsQueryParams, setLocationsQueryParams] = React.useState<\n    Record<string, any>\n  >({});\n  const [options, setOptions] = React.useState<readonly City[]>([]);\n  const [distanceValue, setDistanceValue] = React.useState(200);\n  const [searchDataChanged, setSearchDataChanged] =\n    React.useState<boolean>(false);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const queryClient = useQueryClient();\n\n  const setSnackbarMessage = useSnackbar();\n\n  const { mutate, isLoading } = useMutation(TruckDelete, {\n    onSuccess: () => {\n      setSnackbarMessage({\n        severity: 'success',\n        message: 'Deleted',\n      });\n      queryClient.invalidateQueries(['trucks']);\n    },\n    onError: (error: Error) => {\n      setSnackbarMessage({\n        severity: 'error',\n        message: error instanceof Error ? error.message : JSON.stringify(error),\n      });\n    },\n  });\n\n  const setSearch = React.useMemo(() => {\n    return debounce((search: string): void => {\n      setLocationsQueryParams({ search });\n    }, 400);\n  }, []);\n  const { data: { items } = { items: [], total: 0 } } = useQuery({\n    queryKey: ['locations', 0, 15, 'name', 'asc', locationsQueryParams],\n    queryFn: LocationsQuery,\n    keepPreviousData: true,\n  });\n\n  React.useEffect(() => {\n    if (inputValue === '') {\n      setOptions(value ? [value] : []);\n      return undefined;\n    }\n    let newOptions: readonly City[] = [];\n\n    if (value) {\n      newOptions = [value];\n    }\n\n    if (items.length) {\n      newOptions = [...newOptions, ...items];\n    }\n\n    setOptions(newOptions);\n\n    return undefined;\n  }, [value, items]);\n\n  const handleLocationChange = (event: any, newValue: City | null) => {\n    setOptions(newValue ? [newValue, ...options] : options);\n    setValue(newValue);\n    handleApplyFilter();\n    if (newValue?.location) {\n      setQueryParams({\n        lastLocation: newValue.location.join(','),\n        distance: distanceValue,\n      });\n      setSearchDataChanged(false);\n    } else if (!newValue) {\n      setInputValue('');\n      setQueryParams({});\n      setSearchDataChanged(false);\n    }\n    // setSearchDataChanged(true);\n  };\n  const handleLocationInputChange = (event: any, newInputValue: string) => {\n    setInputValue(newInputValue);\n    setSearch(newInputValue);\n  };\n  const handleDistanceInputChange = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    if (Number.isInteger(Number(event.target.value))) {\n      setDistanceValue(Number(event.target.value));\n      setSearchDataChanged(true);\n    }\n  };\n  const handleClearFilter = () => {\n    setValue(null);\n    setInputValue('');\n    setDistanceValue(200);\n    setQueryParams({});\n    setSearchDataChanged(false);\n  };\n  const handleApplyFilter = () => {\n    if (value?.location) {\n      setQueryParams({\n        lastLocation: value.location.join(','),\n        distance: distanceValue,\n      });\n      setSearchDataChanged(false);\n    }\n  };\n  const createHandler = () => {\n    navigate('./create', {\n      relative: 'path',\n      state: { from: location },\n      replace: false,\n    });\n  };\n  const editHandler = () => {\n    navigate(`./edit/${selected[0]}`, {\n      relative: 'path',\n      state: { from: location },\n      replace: false,\n    });\n  };\n  const deleteHandler = () => {\n    mutate(`${selected[0]}`);\n  };\n\n  return (\n    <Toolbar\n      sx={{\n        pl: { sm: 2 },\n        pr: { xs: 1, sm: 1 },\n        ...(selected.length > 0 && {\n          bgcolor: (theme) =>\n            alpha(\n              theme.palette.primary.main,\n              theme.palette.action.activatedOpacity,\n            ),\n        }),\n      }}\n    >\n      {selected.length > 0 ? (\n        <Typography\n          sx={{ flex: '1 1 100%' }}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {selected.length} selected\n        </Typography>\n      ) : (\n        <Typography\n          sx={{\n            flex: '1 1 100%',\n            whiteSpace: 'nowrap',\n            textOverflow: 'ellipsis',\n            overflow: 'hidden',\n          }}\n          variant=\"h6\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          Trucks Nearby\n        </Typography>\n      )}\n      <Box\n        component=\"div\"\n        sx={{\n          '& .MuiTextField-root': { m: 1, width: '350px' },\n        }}\n      >\n        <Autocomplete\n          getOptionLabel={(option) =>\n            typeof option === 'string'\n              ? option\n              : `${option.name}, ${option.zipCode}, ${option.stateName}`\n          }\n          filterOptions={(x) => x}\n          options={options}\n          autoComplete\n          includeInputInList\n          filterSelectedOptions\n          value={value}\n          noOptionsText=\"No locations\"\n          onChange={handleLocationChange}\n          onInputChange={handleLocationInputChange}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Enter city, state or zip\"\n              size=\"small\"\n              fullWidth\n            />\n          )}\n          renderOption={(props, option) => (\n            <li {...props}>\n              <Grid container alignItems=\"center\">\n                <Grid item sx={{ display: 'flex', width: 44 }}>\n                  <LocationOnIcon sx={{ color: 'text.secondary' }} />\n                </Grid>\n                <Grid\n                  item\n                  sx={{ width: 'calc(100% - 44px)', wordWrap: 'break-word' }}\n                >\n                  <Box component=\"span\" sx={{ fontWeight: 'regular' }}>\n                    {`${option.name}, ${option.stateCode}`}\n                  </Box>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    {`${option.zipCode}, ${option.stateName}`}\n                  </Typography>\n                </Grid>\n              </Grid>\n            </li>\n          )}\n        />\n      </Box>\n      <Box\n        component=\"div\"\n        sx={{\n          '& .MuiTextField-root': { m: 1, width: '140px' },\n        }}\n      >\n        <TextField\n          select\n          label=\"Select Distance\"\n          value={distanceValue}\n          onChange={handleDistanceInputChange}\n          size=\"small\"\n          fullWidth\n        >\n          {Array.from(\n            { length: (1000 - 50) / 50 + 1 },\n            (_, index) => 50 + index * 50,\n          ).map((option) => (\n            <MenuItem key={option} value={option}>\n              {option}\n            </MenuItem>\n          ))}\n        </TextField>\n      </Box>\n      <Tooltip title=\"Filter list\">\n        {(searchDataChanged || !value) && !(searchDataChanged && !value) ? (\n          <span>\n            <IconButton\n              disabled={!value || !distanceValue}\n              onClick={handleApplyFilter}\n            >\n              <FilterListIcon />\n            </IconButton>\n          </span>\n        ) : (\n          <IconButton onClick={handleClearFilter}>\n            <FilterListOffIcon />\n          </IconButton>\n        )}\n      </Tooltip>\n      <Loader visible={isLoading} />\n    </Toolbar>\n  );\n}\n\nexport default function EnhancedTable() {\n  const [order, setOrder] = React.useState<Order | undefined>(undefined);\n  const [orderBy, setOrderBy] = React.useState<keyof Truck | undefined>(\n    undefined,\n  );\n  const [selected, setSelected] = React.useState<readonly string[]>([]);\n  const [page, setPage] = React.useState<number>(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState<number>(15);\n  const [queryParams, setQueryParams] = React.useState<Record<string, any>>({});\n  const tableContainerRef = React.useRef(null);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const setSnackbarMessage = useSnackbar();\n\n  const {\n    isLoading,\n    isFetching,\n    data: { items, total } = { items: [], total: 0 },\n  } = useQuery({\n    queryKey: ['trucks', page, rowsPerPage, orderBy, order, queryParams],\n    queryFn: TrucksQuery,\n    keepPreviousData: true,\n    onError: (error: Error) => {\n      setSnackbarMessage({\n        severity: 'error',\n        message: error instanceof Error ? error.message : JSON.stringify(error),\n      });\n    },\n  });\n  const rows: Truck[] = items || [];\n\n  React.useEffect(() => {\n    if (tableContainerRef.current) {\n      const container = tableContainerRef.current as HTMLElement;\n      container.scrollTo({\n        top: 0,\n        left: 0,\n        behavior: 'smooth',\n      });\n    }\n  }, [rows]);\n\n  React.useEffect(() => {\n    const newSelected: string[] = [];\n    selected.forEach((selectedItem) => {\n      const selectedRow = rows.find((row) => row.id === selectedItem);\n      if (selectedRow) {\n        newSelected.push(selectedItem);\n      }\n    });\n    setSelected(newSelected);\n  }, [rows]);\n\n  const handleRequestSort = (\n    event: React.MouseEvent<unknown>,\n    property: keyof Truck,\n  ) => {\n    const isAsc = orderBy === property && order === 'asc';\n    const isDesc = orderBy === property && order === 'desc';\n    if (isDesc) {\n      setOrder(undefined);\n      setOrderBy(undefined);\n    } else {\n      setOrder(isAsc ? 'desc' : 'asc');\n      setOrderBy(property);\n    }\n  };\n\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.checked) {\n      const newSelected = rows.map((n: Truck) => n.id);\n      setSelected(newSelected);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event: React.MouseEvent<unknown>, name: string) => {\n    navigate(`./view/${name}`, {\n      relative: 'path',\n      state: { from: location },\n      replace: false,\n    });\n  };\n\n  const handleSelect = (event: React.MouseEvent<unknown>, name: string) => {\n    event.stopPropagation();\n    // const selectedIndex = selected.indexOf(name);\n    // let newSelected: readonly string[] = [];\n    //\n    // if (selectedIndex === -1) {\n    //     newSelected = newSelected.concat(selected, name);\n    // } else if (selectedIndex === 0) {\n    //     newSelected = newSelected.concat(selected.slice(1));\n    // } else if (selectedIndex === selected.length - 1) {\n    //     newSelected = newSelected.concat(selected.slice(0, -1));\n    // } else if (selectedIndex > 0) {\n    //     newSelected = newSelected.concat(\n    //         selected.slice(0, selectedIndex),\n    //         selected.slice(selectedIndex + 1),\n    //     );\n    // }\n    //\n    // setSelected(newSelected);\n  };\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = (name: string) => selected.indexOf(name) !== -1;\n\n  return (\n    <Box sx={{ width: '100%', height: '100%' }}>\n      <Paper sx={{ width: '100%', height: '100%', backgroundColor: 'unset' }}>\n        <EnhancedTableToolbar\n          selected={selected}\n          setQueryParams={(query) => {\n            setQueryParams(query);\n            setPage(0);\n          }}\n        />\n        <TableContainer\n          ref={tableContainerRef}\n          sx={{ height: 'calc(100% - 115px)' }}\n        >\n          <Table\n            sx={{ minWidth: 750 }}\n            aria-labelledby=\"tableTitle\"\n            size=\"small\"\n            stickyHeader\n          >\n            <EnhancedTableHead\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {rows.map((row, index) => {\n                const isItemSelected = isSelected(`${row.id}`);\n                const labelId = `enhanced-table-checkbox-${index}`;\n                return (\n                  <TableRow\n                    hover\n                    onClick={(event) => handleClick(event, `${row.id}`)}\n                    role=\"checkbox\"\n                    aria-checked={isItemSelected}\n                    tabIndex={-1}\n                    key={row.id}\n                    selected={isItemSelected}\n                    sx={{ cursor: 'pointer' }}\n                  >\n                    <StyledTableCell padding=\"checkbox\">\n                      <Button\n                        id={`${labelId}`}\n                        sx={{ m: 1 }}\n                        fullWidth\n                        variant=\"contained\"\n                        size=\"small\"\n                        color=\"primary\"\n                        onClick={() => {\n                          return;\n                        }}\n                      >\n                        Reserve\n                      </Button>\n                    </StyledTableCell>\n                    {headCells.map((cell) => {\n                      const cellData = cell.getData(row);\n                      return (\n                        <StyledTableCell\n                          key={cell.id}\n                          title={cellData.title}\n                          align={cell.numeric ? 'right' : 'center'}\n                        >\n                          {cellData.data}\n                        </StyledTableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 15, 20, 25, 35, 50]}\n          component=\"div\"\n          count={total}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <Loader visible={isLoading || isFetching} />\n    </Box>\n  );\n}\n"],"names":["origin","URL","window","location","href","authFetch","input","_authProvider$user","_authProvider$user2","init","arguments","length","undefined","fetchInit","_objectSpread","headers","Headers","set","btoa","authProvider","user","username","password","body","fetch","catch","reason","error","Error","cause","name","message","then","response","status","statusText","json","TrucksQuery","_ref","_ref$queryKey","_slicedToArray","queryKey","page","rowsPerPage","orderBy","order","queryParams","url","searchParams","append","concat","truckNumber","lastLocation","distance","TruckDelete","userId","method","LocationsQuery","_ref2","_ref2$queryKey","search","LocationDelete","LoadsQuery","_ref3","_ref3$queryKey","loadNumber","LoadDelete","OwnersQuery","_ref4","_ref4$queryKey","fullName","OwnerDelete","DriversQuery","_ref5","_ref5$queryKey","DriverDelete","CoordinatorsQuery","_ref6","_ref6$queryKey","CoordinatorDelete","UsersQuery","_ref7","_ref7$queryKey","UserDelete","UserCreate","data","JSON","stringify","UserQuery","query","headCells","id","orderField","getData","row","numeric","disablePadding","label","coordinator","owner","path","type","firstRow","secondRow","phone","_jsxs","children","_jsx","target","onClick","stopPropagation","title","equipment","join","doorDims","payload","milesByRoads","toFixed","lastCity","stateCode","zipCode","locationUpdatedAt","Date","toLocaleString","milesHaversine","StyledTableHead","styled","TableHead","backgroundColor","theme","palette","background","default","StyledTableCell","TableCell","maxWidth","whiteSpace","textOverflow","overflow","e","EnhancedTableHead","props","onSelectAllClick","onRequestSort","numSelected","rowCount","TableRow","align","padding","map","headCell","sortDirection","TableSortLabel","active","hideSortIcon","direction","property","event","Box","component","sx","visuallyHidden","EnhancedTableToolbar","selected","setQueryParams","_React$useState","React","_React$useState2","value","setValue","_React$useState3","_React$useState4","inputValue","setInputValue","_React$useState5","_React$useState6","locationsQueryParams","setLocationsQueryParams","_React$useState7","_React$useState8","options","setOptions","_React$useState9","_React$useState10","distanceValue","setDistanceValue","_React$useState11","_React$useState12","searchDataChanged","setSearchDataChanged","queryClient","useLocation","useNavigate","useQueryClient","setSnackbarMessage","useSnackbar","_useMutation","useMutation","onSuccess","severity","invalidateQueries","onError","isLoading","mutate","setSearch","debounce","_useQuery$data","useQuery","queryFn","keepPreviousData","items","total","newOptions","_toConsumableArray","handleApplyFilter","Toolbar","pl","sm","pr","xs","bgcolor","alpha","primary","main","action","activatedOpacity","Typography","flex","color","variant","m","width","Autocomplete","getOptionLabel","option","stateName","filterOptions","x","autoComplete","includeInputInList","filterSelectedOptions","noOptionsText","onChange","newValue","onInputChange","newInputValue","renderInput","params","TextField","size","fullWidth","renderOption","Grid","container","alignItems","item","display","LocationOnIcon","wordWrap","fontWeight","select","Number","isInteger","Array","from","_","index","MenuItem","Tooltip","IconButton","FilterListOffIcon","disabled","FilterListIcon","Loader","visible","EnhancedTable","_React$useState13","_React$useState14","setOrder","_React$useState15","_React$useState16","setOrderBy","_React$useState17","_React$useState18","setSelected","_React$useState19","_React$useState20","setPage","_React$useState21","_React$useState22","setRowsPerPage","_React$useState23","_React$useState24","tableContainerRef","navigate","_useQuery2","isFetching","_useQuery2$data","_useQuery2$data2","rows","current","scrollTo","top","left","behavior","newSelected","forEach","selectedItem","find","push","height","Paper","TableContainer","ref","Table","minWidth","stickyHeader","checked","n","isAsc","TableBody","isItemSelected","indexOf","labelId","hover","relative","state","replace","handleClick","role","tabIndex","cursor","Button","cell","cellData","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt"],"sourceRoot":""}