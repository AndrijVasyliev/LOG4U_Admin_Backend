{"version":3,"file":"static/js/1168.d497b418.chunk.js","mappings":"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","sources":["loads/loads.tsx","utils/stopPropagation.ts","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/icons-material/Edit.js","../node_modules/@tanstack/query-core/src/mutationObserver.ts","../node_modules/@tanstack/react-query/src/useMutation.ts"],"sourcesContent":["import * as React from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\r\n\r\nimport { alpha, styled } from '@mui/material/styles';\r\nimport TextField from '@mui/material/TextField';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport Box from '@mui/material/Box';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableSortLabel from '@mui/material/TableSortLabel';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport FilterListIcon from '@mui/icons-material/FilterList';\r\nimport FilterListOffIcon from '@mui/icons-material/FilterListOff';\r\nimport { visuallyHidden } from '@mui/utils';\r\n\r\nimport Loader from '../components/Loader';\r\n\r\nimport { LoadsQuery, LoadDelete } from '../api';\r\nimport { useSnackbar } from '../hooks';\r\nimport { Order, Load } from '../utils/dataTypes';\r\nimport { stopPropagation } from '../utils/stopPropagation';\r\n\r\ninterface HeadCell {\r\n  id: string;\r\n  disablePadding: boolean;\r\n  orderField?: keyof Load;\r\n  getData: (row: Load) => { data: JSX.Element | string; title?: string };\r\n  label: string;\r\n  numeric: boolean;\r\n}\r\n\r\nconst headCells: readonly HeadCell[] = [\r\n  {\r\n    id: 'loadNumber',\r\n    orderField: 'loadNumber',\r\n    getData: (row) => ({ data: `${row.loadNumber}` }),\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Load Number',\r\n  },\r\n  /*{\r\n    id: 'pickLocation',\r\n    getData: (row) => {\r\n      if (row?.pickLocation) {\r\n        const path = `./locations/view/${row.pickLocation.id}`;\r\n        const firstRow = `${row.pickLocation.name}, ${row.pickLocation.stateCode}, ${row.pickLocation.zipCode},`;\r\n        const secondRow = `${\r\n          row.pickDate ? new Date(row.pickDate).toLocaleString() : ''\r\n        }`;\r\n\r\n        return {\r\n          data: (\r\n            <span>\r\n              <a href={path} target=\"_blank\" onClick={stopPropagation}>\r\n                {firstRow}\r\n              </a>\r\n              <br />\r\n              {secondRow}\r\n            </span>\r\n          ),\r\n          title: firstRow + '\\n' + secondRow,\r\n        };\r\n      } else {\r\n        return { data: '' };\r\n      }\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'First pick up EDT',\r\n  },\r\n  {\r\n    id: 'deliverLocation',\r\n    getData: (row) => {\r\n      if (row?.deliverLocation) {\r\n        const path = `./locations/view/${row.deliverLocation.id}`;\r\n        const firstRow = `${row.deliverLocation.name}, ${row.deliverLocation.stateCode}, ${row.deliverLocation.zipCode},`;\r\n        const secondRow = `${\r\n          row.deliverDate ? new Date(row.deliverDate).toLocaleString() : ''\r\n        }`;\r\n\r\n        return {\r\n          data: (\r\n            <span>\r\n              <a href={path} target=\"_blank\" onClick={stopPropagation}>\r\n                {firstRow}\r\n              </a>\r\n              <br />\r\n              {secondRow}\r\n            </span>\r\n          ),\r\n          title: firstRow + '\\n' + secondRow,\r\n        };\r\n      } else {\r\n        return { data: '' };\r\n      }\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Last delivery EDT',\r\n  },*/\r\n  {\r\n    id: 'miles',\r\n    getData: (row) => {\r\n      if (row?.milesHaversine) {\r\n        const firstRow = `${\r\n          row.milesByRoads ? row.milesByRoads.toFixed(2) : ''\r\n        }`;\r\n        const secondRow = `${row.milesHaversine.toFixed(2)}`;\r\n\r\n        return {\r\n          data: (\r\n            <span>\r\n              <b>{firstRow}</b>\r\n              <br />\r\n              {secondRow}\r\n            </span>\r\n          ),\r\n          title: firstRow + ' - By roads' + '\\n' + secondRow + ' - Distance',\r\n        };\r\n      } else {\r\n        return { data: '' };\r\n      }\r\n    },\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Miles',\r\n  },\r\n  {\r\n    id: 'truckType',\r\n    getData: (row) => {\r\n      const firstRow = `${row.truckType.join(', ')}`;\r\n\r\n      return {\r\n        data: <span>{firstRow}</span>,\r\n        title: firstRow,\r\n      };\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Required truck info',\r\n  },\r\n  {\r\n    id: 'truck',\r\n    getData: (row) => {\r\n      if (row?.truck) {\r\n        const path = `./trucks/view/${row.truck.id}`;\r\n        const firstRow = `${row.truck.truckNumber}`;\r\n\r\n        return {\r\n          data: (\r\n            <span>\r\n              <a href={path} target=\"_blank\" onClick={stopPropagation}>\r\n                {firstRow}\r\n              </a>\r\n            </span>\r\n          ),\r\n          title: firstRow,\r\n        };\r\n      } else {\r\n        return { data: '' };\r\n      }\r\n    },\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Truck',\r\n  },\r\n];\r\n\r\ninterface EnhancedTableProps {\r\n  numSelected: number;\r\n  onRequestSort: (\r\n    event: React.MouseEvent<unknown>,\r\n    property: keyof Load,\r\n  ) => void;\r\n  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n  order: Order | undefined;\r\n  orderBy: string | undefined;\r\n  rowCount: number;\r\n}\r\n\r\nconst StyledTableHead = styled(TableHead)(({ theme }) => ({\r\n  backgroundColor: theme.palette.background.default,\r\n}));\r\n\r\nconst StyledTableCell = styled(TableCell)(() => ({\r\n  maxWidth: '100px',\r\n  paddingTop: '6px',\r\n  paddingBottom: '6px',\r\n  whiteSpace: 'nowrap',\r\n  textOverflow: 'ellipsis',\r\n  overflow: 'hidden',\r\n}));\r\n\r\nfunction EnhancedTableHead(props: EnhancedTableProps) {\r\n  const {\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n  const createSortHandler =\r\n    (property: keyof Load) => (event: React.MouseEvent<unknown>) => {\r\n      onRequestSort(event, property);\r\n    };\r\n\r\n  return (\r\n    <StyledTableHead>\r\n      <TableRow>\r\n        <StyledTableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            name={'enhanced-table-checkbox-select-all'}\r\n            color=\"primary\"\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{\r\n              'aria-label': 'enhanced-table-checkbox-select-all',\r\n            }}\r\n          />\r\n        </StyledTableCell>\r\n        {headCells.map((headCell) => (\r\n          <StyledTableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'center'}\r\n            padding={headCell.disablePadding ? 'none' : 'normal'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={headCell.orderField && orderBy === headCell.orderField}\r\n              hideSortIcon={!headCell.orderField}\r\n              direction={orderBy === headCell.orderField ? order : 'asc'}\r\n              onClick={\r\n                headCell.orderField\r\n                  ? createSortHandler(headCell.orderField)\r\n                  : () => {\r\n                      return;\r\n                    }\r\n              }\r\n            >\r\n              {headCell.label}\r\n              {headCell.orderField && orderBy === headCell.orderField ? (\r\n                <Box component=\"span\" sx={visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </Box>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </StyledTableCell>\r\n        ))}\r\n      </TableRow>\r\n    </StyledTableHead>\r\n  );\r\n}\r\n\r\ninterface EnhancedTableToolbarProps {\r\n  selected: readonly string[];\r\n  setQueryParams: React.Dispatch<React.SetStateAction<Record<string, number>>>;\r\n}\r\n\r\nfunction EnhancedTableToolbar(props: EnhancedTableToolbarProps) {\r\n  const { selected, setQueryParams } = props;\r\n  const [loadNumberSearch, setLoadNumberSearch] = React.useState<number>(0);\r\n  const [truckNumberSearch, setTruckNumberSearch] = React.useState<number>(0);\r\n  const [searchChanged, setSearchChanged] = React.useState<boolean>(false);\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const queryClient = useQueryClient();\r\n\r\n  const setSnackbarMessage = useSnackbar();\r\n\r\n  const { mutate, isLoading } = useMutation(LoadDelete, {\r\n    onSuccess: () => {\r\n      setSnackbarMessage({\r\n        severity: 'success',\r\n        message: 'Deleted',\r\n      });\r\n      queryClient.invalidateQueries(['loads']);\r\n    },\r\n    onError: (error: Error) => {\r\n      setSnackbarMessage({\r\n        severity: 'error',\r\n        message: error instanceof Error ? error.message : JSON.stringify(error),\r\n      });\r\n    },\r\n  });\r\n\r\n  const loadNumberHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (Number.isFinite(Number(event.target.value))) {\r\n      setLoadNumberSearch(Number(event.target.value));\r\n      setSearchChanged(true);\r\n    }\r\n  };\r\n  const truckNumberHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (Number.isFinite(Number(event.target.value))) {\r\n      setTruckNumberSearch(Number(event.target.value));\r\n      setSearchChanged(true);\r\n    }\r\n  };\r\n  const filterClearHandler = () => {\r\n    setSearchChanged(false);\r\n    setLoadNumberSearch(0);\r\n    setTruckNumberSearch(0);\r\n    setQueryParams({});\r\n  };\r\n  const filterHandler = () => {\r\n    setSearchChanged(false);\r\n    const queryParams: Record<string, number> = {};\r\n    if (loadNumberSearch) {\r\n      queryParams.loadNumber = loadNumberSearch;\r\n    }\r\n    if (truckNumberSearch) {\r\n      queryParams.truckNumber = truckNumberSearch;\r\n    }\r\n    setQueryParams(queryParams);\r\n  };\r\n  const keyUpHandler = (event: React.KeyboardEvent) => {\r\n    if (event.key !== 'Enter') {\r\n      return;\r\n    }\r\n    if (loadNumberSearch || truckNumberSearch) {\r\n      filterHandler();\r\n    } else {\r\n      filterClearHandler();\r\n    }\r\n  };\r\n  const createHandler = () => {\r\n    navigate('./create', {\r\n      relative: 'path',\r\n      state: { from: location },\r\n      replace: false,\r\n    });\r\n  };\r\n  const editHandler = () => {\r\n    navigate(`./edit/${selected[0]}`, {\r\n      relative: 'path',\r\n      state: { from: location },\r\n      replace: false,\r\n    });\r\n  };\r\n  const deleteHandler = () => {\r\n    mutate(`${selected[0]}`);\r\n  };\r\n\r\n  return (\r\n    <Toolbar\r\n      sx={{\r\n        overflow: 'hidden',\r\n        pl: { sm: 2 },\r\n        pr: { xs: 1, sm: 1 },\r\n        ...(selected.length > 0 && {\r\n          bgcolor: (theme) =>\r\n            alpha(\r\n              theme.palette.primary.main,\r\n              theme.palette.action.activatedOpacity,\r\n            ),\r\n        }),\r\n      }}\r\n    >\r\n      {selected.length > 0 ? (\r\n        <Typography\r\n          sx={{ flex: '1 1 100%' }}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {selected.length} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          sx={{\r\n            flex: '1 1 100%',\r\n            whiteSpace: 'nowrap',\r\n            textOverflow: 'ellipsis',\r\n            overflow: 'hidden',\r\n          }}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          Loads\r\n        </Typography>\r\n      )}\r\n      <Box\r\n        component=\"div\"\r\n        sx={{\r\n          '& .MuiTextField-root': { m: 1, width: '140px' },\r\n        }}\r\n      >\r\n        <TextField\r\n          label=\"Load Number\"\r\n          value={loadNumberSearch || ''}\r\n          onChange={loadNumberHandler}\r\n          onKeyUp={keyUpHandler}\r\n          size=\"small\"\r\n        />\r\n      </Box>\r\n      <Box\r\n        component=\"div\"\r\n        sx={{\r\n          '& .MuiTextField-root': { m: 1, width: '140px' },\r\n        }}\r\n      >\r\n        <TextField\r\n          label=\"Truck Number\"\r\n          value={truckNumberSearch || ''}\r\n          onChange={truckNumberHandler}\r\n          onKeyUp={keyUpHandler}\r\n          size=\"small\"\r\n        />\r\n      </Box>\r\n      <Tooltip title=\"Filter list\">\r\n        {(searchChanged || (!loadNumberSearch && !truckNumberSearch)) &&\r\n        (!(searchChanged && !loadNumberSearch) ||\r\n          !(searchChanged && !truckNumberSearch)) ? (\r\n          <span>\r\n            <IconButton\r\n              disabled={!loadNumberSearch && !truckNumberSearch}\r\n              onClick={filterHandler}\r\n            >\r\n              <FilterListIcon />\r\n            </IconButton>\r\n          </span>\r\n        ) : (\r\n          <span>\r\n            <IconButton onClick={filterClearHandler}>\r\n              <FilterListOffIcon />\r\n            </IconButton>\r\n          </span>\r\n        )}\r\n      </Tooltip>\r\n      <Box sx={{ p: 1, display: 'inline-flex' }}>\r\n        <Tooltip title=\"Create\">\r\n          <span>\r\n            <IconButton onClick={createHandler}>\r\n              <AddIcon />\r\n            </IconButton>\r\n          </span>\r\n        </Tooltip>\r\n        <Tooltip title=\"Edit\">\r\n          <span>\r\n            <IconButton disabled={selected.length !== 1} onClick={editHandler}>\r\n              <EditIcon />\r\n            </IconButton>\r\n          </span>\r\n        </Tooltip>\r\n        <Tooltip title=\"Delete\">\r\n          <span>\r\n            <IconButton\r\n              disabled={selected.length !== 1}\r\n              onClick={deleteHandler}\r\n            >\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </span>\r\n        </Tooltip>\r\n      </Box>\r\n      <Loader visible={isLoading} />\r\n    </Toolbar>\r\n  );\r\n}\r\n\r\nexport default function EnhancedTable() {\r\n  const [order, setOrder] = React.useState<Order | undefined>('desc');\r\n  const [orderBy, setOrderBy] = React.useState<keyof Load | undefined>(\r\n    'loadNumber',\r\n  );\r\n  const [selected, setSelected] = React.useState<readonly string[]>([]);\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState<number>(15);\r\n  const [queryParams, setQueryParams] = React.useState<Record<string, any>>({});\r\n  const tableContainerRef = React.useRef(null);\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const setSnackbarMessage = useSnackbar();\r\n\r\n  const {\r\n    isLoading,\r\n    isFetching,\r\n    data: { items, total } = { items: [], total: 0 },\r\n  } = useQuery({\r\n    queryKey: ['loads', page, rowsPerPage, orderBy, order, queryParams],\r\n    queryFn: LoadsQuery,\r\n    keepPreviousData: true,\r\n    retry: false,\r\n    onError: (error: Error) => {\r\n      setSnackbarMessage({\r\n        severity: 'error',\r\n        message: error instanceof Error ? error.message : JSON.stringify(error),\r\n      });\r\n    },\r\n  });\r\n  const rows: Load[] = items || [];\r\n\r\n  React.useEffect(() => {\r\n    if (tableContainerRef.current) {\r\n      const container = tableContainerRef.current as HTMLElement;\r\n      container.scrollTo({\r\n        top: 0,\r\n        left: 0,\r\n        behavior: 'smooth',\r\n      });\r\n    }\r\n  }, [rows]);\r\n\r\n  React.useEffect(() => {\r\n    const newSelected: string[] = [];\r\n    selected.forEach((selectedItem) => {\r\n      const selectedRow = rows.find((row) => row.id === selectedItem);\r\n      if (selectedRow) {\r\n        newSelected.push(selectedItem);\r\n      }\r\n    });\r\n    setSelected(newSelected);\r\n  }, [rows]);\r\n\r\n  const handleRequestSort = (\r\n    event: React.MouseEvent<unknown>,\r\n    property: keyof Load,\r\n  ) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    const isDesc = orderBy === property && order === 'desc';\r\n    if (isDesc) {\r\n      setOrder(undefined);\r\n      setOrderBy(undefined);\r\n    } else {\r\n      setOrder(isAsc ? 'desc' : 'asc');\r\n      setOrderBy(property);\r\n    }\r\n  };\r\n\r\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (event.target.checked) {\r\n      const newSelected = rows.map((n: Load) => n.id);\r\n      setSelected(newSelected);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (\r\n    event: React.MouseEvent<unknown>,\r\n    item: (typeof rows)[number],\r\n  ) => {\r\n    navigate(`./view/${item.id}`, {\r\n      relative: 'path',\r\n      state: { from: location },\r\n      replace: false,\r\n    });\r\n  };\r\n\r\n  const handleSelect = (event: React.MouseEvent<unknown>, name: string) => {\r\n    event.stopPropagation();\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected: readonly string[] = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event: unknown, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (\r\n    event: React.ChangeEvent<HTMLInputElement>,\r\n  ) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const isSelected = (name: string) => selected.indexOf(name) !== -1;\r\n\r\n  return (\r\n    <Box sx={{ width: '100%', height: '100%' }}>\r\n      <Paper sx={{ width: '100%', height: '100%', backgroundColor: 'unset' }}>\r\n        <EnhancedTableToolbar\r\n          selected={selected}\r\n          setQueryParams={(query) => {\r\n            setQueryParams(query);\r\n            setPage(0);\r\n          }}\r\n        />\r\n        <TableContainer\r\n          ref={tableContainerRef}\r\n          sx={{ height: 'calc(100% - 115px)' }}\r\n        >\r\n          <Table\r\n            sx={{ minWidth: 750 }}\r\n            aria-labelledby=\"tableTitle\"\r\n            size=\"small\"\r\n            stickyHeader\r\n          >\r\n            <EnhancedTableHead\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {rows.map((row, index) => {\r\n                const isItemSelected = isSelected(`${row.id}`);\r\n                const labelId = `enhanced-table-checkbox-${index}`;\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    onDoubleClick={(event) => handleClick(event, row)}\r\n                    role=\"checkbox\"\r\n                    aria-checked={isItemSelected}\r\n                    tabIndex={-1}\r\n                    key={row.id}\r\n                    selected={isItemSelected}\r\n                    sx={{ cursor: 'pointer' }}\r\n                  >\r\n                    <StyledTableCell padding=\"checkbox\">\r\n                      <Checkbox\r\n                        id={`${labelId}`}\r\n                        color=\"primary\"\r\n                        checked={isItemSelected}\r\n                        inputProps={{\r\n                          'aria-labelledby': labelId,\r\n                        }}\r\n                        onClick={(event) => handleSelect(event, `${row.id}`)}\r\n                      />\r\n                    </StyledTableCell>\r\n                    {headCells.map((cell) => {\r\n                      const cellData = cell.getData(row);\r\n                      return (\r\n                        <StyledTableCell\r\n                          key={cell.id}\r\n                          title={cellData.title}\r\n                          align={cell.numeric ? 'right' : 'center'}\r\n                        >\r\n                          {cellData.data}\r\n                        </StyledTableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 15, 20, 25, 35, 50]}\r\n          component=\"div\"\r\n          count={total}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <Loader visible={isLoading || isFetching} />\r\n    </Box>\r\n  );\r\n}\r\n","import * as React from 'react';\r\n\r\nexport function stopPropagation(e: React.SyntheticEvent) {\r\n  e.stopPropagation();\r\n}\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\nexports.default = _default;","import { getDefaultState } from './mutation'\nimport { notifyManager } from './notifyManager'\nimport { Subscribable } from './subscribable'\nimport { shallowEqualObjects } from './utils'\nimport type { QueryClient } from './queryClient'\nimport type {\n  MutateOptions,\n  MutationObserverBaseResult,\n  MutationObserverOptions,\n  MutationObserverResult,\n} from './types'\nimport type { Action, Mutation } from './mutation'\n\n// TYPES\n\ntype MutationObserverListener<TData, TError, TVariables, TContext> = (\n  result: MutationObserverResult<TData, TError, TVariables, TContext>,\n) => void\n\ninterface NotifyOptions {\n  listeners?: boolean\n  onError?: boolean\n  onSuccess?: boolean\n}\n\n// CLASS\n\nexport class MutationObserver<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n> extends Subscribable<\n  MutationObserverListener<TData, TError, TVariables, TContext>\n> {\n  options!: MutationObserverOptions<TData, TError, TVariables, TContext>\n\n  private client: QueryClient\n  private currentResult!: MutationObserverResult<\n    TData,\n    TError,\n    TVariables,\n    TContext\n  >\n  private currentMutation?: Mutation<TData, TError, TVariables, TContext>\n  private mutateOptions?: MutateOptions<TData, TError, TVariables, TContext>\n\n  constructor(\n    client: QueryClient,\n    options: MutationObserverOptions<TData, TError, TVariables, TContext>,\n  ) {\n    super()\n\n    this.client = client\n    this.setOptions(options)\n    this.bindMethods()\n    this.updateResult()\n  }\n\n  protected bindMethods(): void {\n    this.mutate = this.mutate.bind(this)\n    this.reset = this.reset.bind(this)\n  }\n\n  setOptions(\n    options?: MutationObserverOptions<TData, TError, TVariables, TContext>,\n  ) {\n    const prevOptions = this.options\n    this.options = this.client.defaultMutationOptions(options)\n    if (!shallowEqualObjects(prevOptions, this.options)) {\n      this.client.getMutationCache().notify({\n        type: 'observerOptionsUpdated',\n        mutation: this.currentMutation,\n        observer: this,\n      })\n    }\n    this.currentMutation?.setOptions(this.options)\n  }\n\n  protected onUnsubscribe(): void {\n    if (!this.hasListeners()) {\n      this.currentMutation?.removeObserver(this)\n    }\n  }\n\n  onMutationUpdate(action: Action<TData, TError, TVariables, TContext>): void {\n    this.updateResult()\n\n    // Determine which callbacks to trigger\n    const notifyOptions: NotifyOptions = {\n      listeners: true,\n    }\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = true\n    } else if (action.type === 'error') {\n      notifyOptions.onError = true\n    }\n\n    this.notify(notifyOptions)\n  }\n\n  getCurrentResult(): MutationObserverResult<\n    TData,\n    TError,\n    TVariables,\n    TContext\n  > {\n    return this.currentResult\n  }\n\n  reset(): void {\n    this.currentMutation = undefined\n    this.updateResult()\n    this.notify({ listeners: true })\n  }\n\n  mutate(\n    variables?: TVariables,\n    options?: MutateOptions<TData, TError, TVariables, TContext>,\n  ): Promise<TData> {\n    this.mutateOptions = options\n\n    if (this.currentMutation) {\n      this.currentMutation.removeObserver(this)\n    }\n\n    this.currentMutation = this.client.getMutationCache().build(this.client, {\n      ...this.options,\n      variables:\n        typeof variables !== 'undefined' ? variables : this.options.variables,\n    })\n\n    this.currentMutation.addObserver(this)\n\n    return this.currentMutation.execute()\n  }\n\n  private updateResult(): void {\n    const state = this.currentMutation\n      ? this.currentMutation.state\n      : getDefaultState<TData, TError, TVariables, TContext>()\n\n    const result: MutationObserverBaseResult<\n      TData,\n      TError,\n      TVariables,\n      TContext\n    > = {\n      ...state,\n      isLoading: state.status === 'loading',\n      isSuccess: state.status === 'success',\n      isError: state.status === 'error',\n      isIdle: state.status === 'idle',\n      mutate: this.mutate,\n      reset: this.reset,\n    }\n\n    this.currentResult = result as MutationObserverResult<\n      TData,\n      TError,\n      TVariables,\n      TContext\n    >\n  }\n\n  private notify(options: NotifyOptions) {\n    notifyManager.batch(() => {\n      // First trigger the mutate callbacks\n      if (this.mutateOptions && this.hasListeners()) {\n        if (options.onSuccess) {\n          this.mutateOptions.onSuccess?.(\n            this.currentResult.data!,\n            this.currentResult.variables!,\n            this.currentResult.context!,\n          )\n          this.mutateOptions.onSettled?.(\n            this.currentResult.data!,\n            null,\n            this.currentResult.variables!,\n            this.currentResult.context,\n          )\n        } else if (options.onError) {\n          this.mutateOptions.onError?.(\n            this.currentResult.error!,\n            this.currentResult.variables!,\n            this.currentResult.context,\n          )\n          this.mutateOptions.onSettled?.(\n            undefined,\n            this.currentResult.error,\n            this.currentResult.variables!,\n            this.currentResult.context,\n          )\n        }\n      }\n\n      // Then trigger the listeners\n      if (options.listeners) {\n        this.listeners.forEach(({ listener }) => {\n          listener(this.currentResult)\n        })\n      }\n    })\n  }\n}\n","'use client'\nimport * as React from 'react'\nimport {\n  MutationObserver,\n  notifyManager,\n  parseMutationArgs,\n} from '@tanstack/query-core'\nimport { useSyncExternalStore } from './useSyncExternalStore'\n\nimport { useQueryClient } from './QueryClientProvider'\nimport { shouldThrowError } from './utils'\nimport type { MutationFunction, MutationKey } from '@tanstack/query-core'\nimport type {\n  UseMutateFunction,\n  UseMutationOptions,\n  UseMutationResult,\n} from './types'\n\n// HOOK\n\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  options: UseMutationOptions<TData, TError, TVariables, TContext>,\n): UseMutationResult<TData, TError, TVariables, TContext>\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  mutationFn: MutationFunction<TData, TVariables>,\n  options?: Omit<\n    UseMutationOptions<TData, TError, TVariables, TContext>,\n    'mutationFn'\n  >,\n): UseMutationResult<TData, TError, TVariables, TContext>\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  mutationKey: MutationKey,\n  options?: Omit<\n    UseMutationOptions<TData, TError, TVariables, TContext>,\n    'mutationKey'\n  >,\n): UseMutationResult<TData, TError, TVariables, TContext>\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  mutationKey: MutationKey,\n  mutationFn?: MutationFunction<TData, TVariables>,\n  options?: Omit<\n    UseMutationOptions<TData, TError, TVariables, TContext>,\n    'mutationKey' | 'mutationFn'\n  >,\n): UseMutationResult<TData, TError, TVariables, TContext>\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  arg1:\n    | MutationKey\n    | MutationFunction<TData, TVariables>\n    | UseMutationOptions<TData, TError, TVariables, TContext>,\n  arg2?:\n    | MutationFunction<TData, TVariables>\n    | UseMutationOptions<TData, TError, TVariables, TContext>,\n  arg3?: UseMutationOptions<TData, TError, TVariables, TContext>,\n): UseMutationResult<TData, TError, TVariables, TContext> {\n  const options = parseMutationArgs(arg1, arg2, arg3)\n  const queryClient = useQueryClient({ context: options.context })\n\n  const [observer] = React.useState(\n    () =>\n      new MutationObserver<TData, TError, TVariables, TContext>(\n        queryClient,\n        options,\n      ),\n  )\n\n  React.useEffect(() => {\n    observer.setOptions(options)\n  }, [observer, options])\n\n  const result = useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) =>\n        observer.subscribe(notifyManager.batchCalls(onStoreChange)),\n      [observer],\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult(),\n  )\n\n  const mutate = React.useCallback<\n    UseMutateFunction<TData, TError, TVariables, TContext>\n  >(\n    (variables, mutateOptions) => {\n      observer.mutate(variables, mutateOptions).catch(noop)\n    },\n    [observer],\n  )\n\n  if (\n    result.error &&\n    shouldThrowError(observer.options.useErrorBoundary, [result.error])\n  ) {\n    throw result.error\n  }\n\n  return { ...result, mutate, mutateAsync: result.mutate }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nfunction noop() {}\n"],"names":["headCells","id","orderField","getData","row","data","concat","loadNumber","numeric","disablePadding","label","milesHaversine","firstRow","milesByRoads","toFixed","secondRow","_jsxs","children","_jsx","title","truckType","join","truck","path","truckNumber","href","target","onClick","stopPropagation","StyledTableHead","styled","TableHead","_ref","backgroundColor","theme","palette","background","default","StyledTableCell","TableCell","maxWidth","paddingTop","paddingBottom","whiteSpace","textOverflow","overflow","EnhancedTableHead","props","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","TableRow","padding","Checkbox","name","color","indeterminate","checked","onChange","inputProps","map","headCell","align","sortDirection","TableSortLabel","active","hideSortIcon","direction","property","event","Box","component","sx","visuallyHidden","EnhancedTableToolbar","selected","setQueryParams","_React$useState","React","_React$useState2","_slicedToArray","loadNumberSearch","setLoadNumberSearch","_React$useState3","_React$useState4","truckNumberSearch","setTruckNumberSearch","_React$useState5","_React$useState6","searchChanged","setSearchChanged","location","useLocation","navigate","useNavigate","queryClient","useQueryClient","setSnackbarMessage","useSnackbar","_useMutation","useMutation","LoadDelete","onSuccess","severity","message","invalidateQueries","onError","error","Error","JSON","stringify","mutate","isLoading","filterClearHandler","filterHandler","queryParams","keyUpHandler","key","Toolbar","_objectSpread","pl","sm","pr","xs","length","bgcolor","alpha","primary","main","action","activatedOpacity","Typography","flex","variant","m","width","TextField","value","Number","isFinite","onKeyUp","size","Tooltip","IconButton","FilterListOffIcon","disabled","FilterListIcon","p","display","relative","state","from","replace","AddIcon","EditIcon","DeleteIcon","Loader","visible","EnhancedTable","_React$useState7","_React$useState8","setOrder","_React$useState9","_React$useState10","setOrderBy","_React$useState11","_React$useState12","setSelected","_React$useState13","_React$useState14","page","setPage","_React$useState15","_React$useState16","rowsPerPage","setRowsPerPage","_React$useState17","_React$useState18","tableContainerRef","_useQuery","useQuery","queryKey","queryFn","LoadsQuery","keepPreviousData","retry","isFetching","_useQuery$data","_useQuery$data2","items","total","rows","current","scrollTo","top","left","behavior","newSelected","forEach","selectedItem","find","push","height","Paper","query","TableContainer","ref","Table","minWidth","stickyHeader","n","isAsc","undefined","TableBody","index","isItemSelected","indexOf","labelId","hover","onDoubleClick","role","tabIndex","cursor","selectedIndex","slice","handleSelect","cell","cellData","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","e","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","jsx","d","MutationObserver","_Subscribable","_inherits","_super","_createSuper","client","options","_this","_classCallCheck","call","setOptions","bindMethods","updateResult","_createClass","this","bind","reset","_this$currentMutation","prevOptions","defaultMutationOptions","shallowEqualObjects","getMutationCache","notify","type","mutation","currentMutation","observer","_this$currentMutation2","hasListeners","removeObserver","notifyOptions","listeners","currentResult","variables","mutateOptions","build","addObserver","execute","getDefaultState","result","status","isSuccess","isError","isIdle","_this2","notifyManager","batch","_this$mutateOptions$o","_this$mutateOptions","_this$mutateOptions$o2","_this$mutateOptions2","context","onSettled","_this$mutateOptions$o3","_this$mutateOptions3","_this$mutateOptions$o4","_this$mutateOptions4","listener","Subscribable","arg1","arg2","arg3","useSyncExternalStore","onStoreChange","subscribe","batchCalls","getCurrentResult","shouldThrowError","useErrorBoundary","noop"],"sourceRoot":""}