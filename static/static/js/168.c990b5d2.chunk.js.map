{"version":3,"file":"static/js/168.c990b5d2.chunk.js","mappings":"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","sources":["api/api.ts","loads/loads.tsx","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/icons-material/Edit.js"],"sourcesContent":["import { authProvider } from '../utils/auth';\nimport {\n  Coordinator,\n  Driver,\n  Load,\n  Location,\n  Owner,\n  Truck,\n  User,\n  Query,\n  Result,\n} from '../utils/dataTypes';\n\nconst SUCCESS_HTTP_CODE = 200;\nconst CREATED_HTTP_CODE = 201;\nconst FORBIDDEN_HTTP_CODE = 403;\nconst NOT_FOUND_HTTP_CODE = 404;\n\nconst { origin } = new URL(window.location.href);\n\nexport const authFetch: (\n  input: string | URL,\n  init?: RequestInit,\n) => Promise<object> = (input, init = {}) => {\n  const fetchInit = { ...init, headers: new Headers() };\n  fetchInit.headers.set(\n    'Authorization',\n    'Basic ' +\n      btoa(authProvider.user?.username + ':' + authProvider.user?.password),\n  );\n  return fetch(input, fetchInit)\n    .then((response) => {\n      if (\n        response.status !== SUCCESS_HTTP_CODE &&\n        response.status !== CREATED_HTTP_CODE\n      ) {\n        const error = new Error();\n        error.cause = response;\n        if (response.status) {\n          error.name = response.status + ' ' + response.statusText;\n          switch (response.status) {\n            case FORBIDDEN_HTTP_CODE:\n              error.message = 'Insufficient permissions';\n              break;\n            case NOT_FOUND_HTTP_CODE:\n              error.message = 'Not found';\n              break;\n            default:\n              error.message = 'Some server error has occurred';\n          }\n        } else {\n          error.message = 'Network error has occurred';\n        }\n        throw error;\n      }\n      return response.json().catch((reason) => {\n        const error = new Error();\n        error.cause = reason;\n        error.name = 'Fetch error';\n        error.message = 'Server responded with incorrect data';\n        throw error;\n      });\n    })\n    .catch((reason) => {\n      const error = new Error();\n      error.cause = reason;\n      error.name = 'Fetch error';\n      error.message = 'Network error has occurred';\n      throw error;\n    });\n};\n\nexport const TrucksQuery: (\n  query: Query<{\n    truckNumber?: number;\n    lastLocation?: string;\n    distance?: string;\n  }>,\n) => Promise<Result<Truck>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/truck', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  if (queryParams?.lastLocation && queryParams?.distance) {\n    url.searchParams.append('lastLocation', `${queryParams.lastLocation}`);\n    url.searchParams.append('distance', `${queryParams.distance}`);\n  }\n  return authFetch(url) as Promise<Result<Truck>>;\n};\n\nexport const TruckDelete = (userId: string): Promise<Truck> => {\n  const url = new URL(`/truck/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<Truck>;\n};\n\nexport const LocationsQuery: (\n  query: Query<{ search?: string; name?: string }>,\n) => Promise<Result<Location>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/location', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.search) {\n    url.searchParams.append('search', `${queryParams.search}`);\n  }\n  if (queryParams?.name) {\n    url.searchParams.append('name', `${queryParams.name}`);\n  }\n  return authFetch(url) as Promise<Result<Location>>;\n};\n\nexport const LocationDelete = (userId: string): Promise<Location> => {\n  const url = new URL(`/location/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<Location>;\n};\n\nexport const LoadsQuery: (\n  query: Query<{ loadNumber?: number; truckNumber?: number }>,\n) => Promise<Result<Load>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/load', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.loadNumber) {\n    url.searchParams.append('loadNumber', `${queryParams.loadNumber}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  return authFetch(url) as Promise<Result<Load>>;\n};\n\nexport const LoadDelete = (userId: string): Promise<Load> => {\n  const url = new URL(`/load/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<Load>;\n};\n\nexport const OwnersQuery: (\n  query: Query<{ fullName?: number; truckNumber?: number }>,\n) => Promise<Result<Owner>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/owner', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.fullName) {\n    url.searchParams.append('fullName', `${queryParams.fullName}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  return authFetch(url) as Promise<Result<Owner>>;\n};\n\nexport const OwnerDelete = (userId: string): Promise<Owner> => {\n  const url = new URL(`/owner/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<Owner>;\n};\n\nexport const DriversQuery: (\n  query: Query<{ fullName?: number; truckNumber?: number }>,\n) => Promise<Result<Driver>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/driver', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.fullName) {\n    url.searchParams.append('fullName', `${queryParams.fullName}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  return authFetch(url) as Promise<Result<Driver>>;\n};\n\nexport const DriverDelete = (userId: string): Promise<Driver> => {\n  const url = new URL(`/driver/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<Driver>;\n};\n\nexport const CoordinatorsQuery: (\n  query: Query<{ fullName?: number; truckNumber?: number }>,\n) => Promise<Result<Coordinator>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/coordinator', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.fullName) {\n    url.searchParams.append('fullName', `${queryParams.fullName}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  return authFetch(url) as Promise<Result<Coordinator>>;\n};\n\nexport const CoordinatorDelete = (userId: string): Promise<Coordinator> => {\n  const url = new URL(`/coordinator/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<Coordinator>;\n};\n\nexport const UsersQuery: (\n  query: Query<{ fullName?: number }>,\n) => Promise<Result<User>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/user', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.fullName) {\n    url.searchParams.append('fullName', `${queryParams.fullName}`);\n  }\n  return authFetch(url) as Promise<Result<User>>;\n};\n\nexport const UserDelete = (userId: string): Promise<User> => {\n  const url = new URL(`/user/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<User>;\n};\n","import * as React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\n\nimport { alpha, styled } from '@mui/material/styles';\nimport TextField from '@mui/material/TextField';\nimport Checkbox from '@mui/material/Checkbox';\nimport Tooltip from '@mui/material/Tooltip';\nimport TableCell from '@mui/material/TableCell';\nimport Box from '@mui/material/Box';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport TableSortLabel from '@mui/material/TableSortLabel';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\nimport IconButton from '@mui/material/IconButton';\nimport AddIcon from '@mui/icons-material/Add';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport FilterListIcon from '@mui/icons-material/FilterList';\nimport FilterListOffIcon from '@mui/icons-material/FilterListOff';\nimport { visuallyHidden } from '@mui/utils';\n\nimport Loader from '../components/Loader';\n\nimport { LoadsQuery, LoadDelete } from '../api';\nimport { useSnackbar } from '../hooks';\nimport { Order, Load, Truck } from '../utils/dataTypes';\n\ninterface HeadCell {\n  id: string;\n  disablePadding: boolean;\n  orderField?: keyof Load;\n  getData: (row: Load) => { data: JSX.Element | string; title?: string };\n  label: string;\n  numeric: boolean;\n}\n\nconst headCells: readonly HeadCell[] = [\n  {\n    id: 'loadNumber',\n    orderField: 'loadNumber',\n    getData: (row) => ({ data: `${row.loadNumber}` }),\n    numeric: true,\n    disablePadding: false,\n    label: 'Load Number',\n  },\n  {\n    id: 'pickLocation',\n    getData: (row) => {\n      if (row?.pick) {\n        const path = `./locations/view/${row.pick.id}`;\n        const firstRow = `${row.pick.name}, ${row.pick.stateCode}, ${row.pick.zipCode},`;\n        const secondRow = `${\n          row.pickDate ? new Date(row.pickDate).toLocaleString() : ''\n        }`;\n\n        return {\n          data: (\n            <span>\n              <a href={path} target=\"_blank\" onClick={stopPropagation}>\n                {firstRow}\n              </a>\n              <br />\n              {secondRow}\n            </span>\n          ),\n          title: firstRow + '\\n' + secondRow,\n        };\n      } else {\n        return { data: '' };\n      }\n    },\n    numeric: false,\n    disablePadding: true,\n    label: 'First pick up EDT',\n  },\n  {\n    id: 'deliverLocation',\n    getData: (row) => {\n      if (row?.deliver) {\n        const path = `./locations/view/${row.deliver.id}`;\n        const firstRow = `${row.deliver.name}, ${row.deliver.stateCode}, ${row.deliver.zipCode},`;\n        const secondRow = `${\n          row.deliverDate ? new Date(row.deliverDate).toLocaleString() : ''\n        }`;\n\n        return {\n          data: (\n            <span>\n              <a href={path} target=\"_blank\" onClick={stopPropagation}>\n                {firstRow}\n              </a>\n              <br />\n              {secondRow}\n            </span>\n          ),\n          title: firstRow + '\\n' + secondRow,\n        };\n      } else {\n        return { data: '' };\n      }\n    },\n    numeric: false,\n    disablePadding: true,\n    label: 'Last delivery EDT',\n  },\n  {\n    id: 'miles',\n    getData: (row) => {\n      if (row?.milesHaversine) {\n        const firstRow = `${\n          row.milesByRoads ? row.milesByRoads.toFixed(2) : ''\n        }`;\n        const secondRow = `${row.milesHaversine.toFixed(2)}`;\n\n        return {\n          data: (\n            <span>\n              <b>{firstRow}</b>\n              <br />\n              {secondRow}\n            </span>\n          ),\n          title: firstRow + ' - By roads' + '\\n' + secondRow + ' - Distance',\n        };\n      } else {\n        return { data: '' };\n      }\n    },\n    numeric: true,\n    disablePadding: false,\n    label: 'Miles',\n  },\n  {\n    id: 'truckType',\n    getData: (row) => {\n      const firstRow = `${row.truckType.join(', ')}`;\n\n      return {\n        data: <span>{firstRow}</span>,\n        title: firstRow,\n      };\n    },\n    numeric: false,\n    disablePadding: true,\n    label: 'Required truck info',\n  },\n  {\n    id: 'truck',\n    getData: (row) => {\n      if (row?.truck) {\n        const path = `./trucks/view/${row.truck.id}`;\n        const firstRow = `${row.truck.truckNumber}`;\n\n        return {\n          data: (\n            <span>\n              <a href={path} target=\"_blank\" onClick={stopPropagation}>\n                {firstRow}\n              </a>\n            </span>\n          ),\n          title: firstRow,\n        };\n      } else {\n        return { data: '' };\n      }\n    },\n    numeric: true,\n    disablePadding: false,\n    label: 'Truck',\n  },\n];\n\ninterface EnhancedTableProps {\n  numSelected: number;\n  onRequestSort: (\n    event: React.MouseEvent<unknown>,\n    property: keyof Load,\n  ) => void;\n  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  order: Order | undefined;\n  orderBy: string | undefined;\n  rowCount: number;\n}\n\nconst StyledTableHead = styled(TableHead)(({ theme }) => ({\n  backgroundColor: theme.palette.background.default,\n}));\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  maxWidth: '100px',\n  whiteSpace: 'nowrap',\n  textOverflow: 'ellipsis',\n  overflow: 'hidden',\n}));\n\nfunction stopPropagation(e: React.SyntheticEvent) {\n  e.stopPropagation();\n}\n\nfunction EnhancedTableHead(props: EnhancedTableProps) {\n  const {\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n  } = props;\n  const createSortHandler =\n    (property: keyof Load) => (event: React.MouseEvent<unknown>) => {\n      onRequestSort(event, property);\n    };\n\n  return (\n    <StyledTableHead>\n      <TableRow>\n        <StyledTableCell padding=\"checkbox\">\n          <Checkbox\n            name={'enhanced-table-checkbox-select-all'}\n            color=\"primary\"\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{\n              'aria-label': 'enhanced-table-checkbox-select-all',\n            }}\n          />\n        </StyledTableCell>\n        {headCells.map((headCell) => (\n          <StyledTableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'center'}\n            padding={headCell.disablePadding ? 'none' : 'normal'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={headCell.orderField && orderBy === headCell.orderField}\n              hideSortIcon={!headCell.orderField}\n              direction={orderBy === headCell.orderField ? order : 'asc'}\n              onClick={\n                headCell.orderField\n                  ? createSortHandler(headCell.orderField)\n                  : () => {\n                      return;\n                    }\n              }\n            >\n              {headCell.label}\n              {headCell.orderField && orderBy === headCell.orderField ? (\n                <Box component=\"span\" sx={visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </StyledTableCell>\n        ))}\n      </TableRow>\n    </StyledTableHead>\n  );\n}\n\ninterface EnhancedTableToolbarProps {\n  selected: readonly string[];\n  setQueryParams: React.Dispatch<React.SetStateAction<Record<string, number>>>;\n}\n\nfunction EnhancedTableToolbar(props: EnhancedTableToolbarProps) {\n  const { selected, setQueryParams } = props;\n  const [loadNumberSearch, setLoadNumberSearch] = React.useState<number>(0);\n  const [truckNumberSearch, setTruckNumberSearch] = React.useState<number>(0);\n  const [searchChanged, setSearchChanged] = React.useState<boolean>(false);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const queryClient = useQueryClient();\n\n  const setSnackbarMessage = useSnackbar();\n\n  const mutation = useMutation(LoadDelete, {\n    onSuccess: () => {\n      setSnackbarMessage({\n        severity: 'success',\n        message: 'Deleted',\n      });\n      queryClient.invalidateQueries(['loads']);\n    },\n    onError: (error: Error) => {\n      setSnackbarMessage({\n        severity: 'error',\n        message: error instanceof Error ? error.message : JSON.stringify(error),\n      });\n    },\n  });\n\n  const loadNumberHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (Number.isFinite(Number(event.target.value))) {\n      setLoadNumberSearch(Number(event.target.value));\n      setSearchChanged(true);\n    }\n  };\n  const truckNumberHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (Number.isFinite(Number(event.target.value))) {\n      setTruckNumberSearch(Number(event.target.value));\n      setSearchChanged(true);\n    }\n  };\n  const loadClearHandler = () => {\n    setSearchChanged(false);\n    setLoadNumberSearch(0);\n    setTruckNumberSearch(0);\n    setQueryParams({});\n  };\n  const filterHandler = () => {\n    setSearchChanged(false);\n    const queryParams: Record<string, number> = {};\n    if (loadNumberSearch) {\n      queryParams.loadNumber = loadNumberSearch;\n    }\n    if (truckNumberSearch) {\n      queryParams.truckNumber = truckNumberSearch;\n    }\n    setQueryParams(queryParams);\n  };\n  const createHandler = () => {\n    navigate('./create', {\n      relative: 'path',\n      state: { from: location },\n      replace: false,\n    });\n  };\n  const editHandler = () => {\n    navigate(`./edit/${selected[0]}`, {\n      relative: 'path',\n      state: { from: location },\n      replace: false,\n    });\n  };\n  const deleteHandler = () => {\n    mutation.mutate(`${selected[0]}`);\n  };\n\n  return (\n    <Toolbar\n      sx={{\n        pl: { sm: 2 },\n        pr: { xs: 1, sm: 1 },\n        ...(selected.length > 0 && {\n          bgcolor: (theme) =>\n            alpha(\n              theme.palette.primary.main,\n              theme.palette.action.activatedOpacity,\n            ),\n        }),\n      }}\n    >\n      {selected.length > 0 ? (\n        <Typography\n          sx={{ flex: '1 1 100%' }}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {selected.length} selected\n        </Typography>\n      ) : (\n        <Typography\n          sx={{\n            flex: '1 1 100%',\n            whiteSpace: 'nowrap',\n            textOverflow: 'ellipsis',\n            overflow: 'hidden',\n          }}\n          variant=\"h6\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          Loads\n        </Typography>\n      )}\n      <Box\n        component=\"div\"\n        sx={{\n          '& .MuiTextField-root': { m: 1, width: '140px' },\n        }}\n      >\n        <TextField\n          label=\"Load Number\"\n          value={loadNumberSearch || ''}\n          onChange={loadNumberHandler}\n          size=\"small\"\n        />\n      </Box>\n      <Box\n        component=\"div\"\n        sx={{\n          '& .MuiTextField-root': { m: 1, width: '140px' },\n        }}\n      >\n        <TextField\n          label=\"Truck Number\"\n          value={truckNumberSearch || ''}\n          onChange={truckNumberHandler}\n          size=\"small\"\n        />\n      </Box>\n      <Tooltip title=\"Filter list\">\n        {(searchChanged || (!loadNumberSearch && !truckNumberSearch)) &&\n        (!(searchChanged && !loadNumberSearch) ||\n          !(searchChanged && !truckNumberSearch)) ? (\n          <span>\n            <IconButton\n              disabled={!loadNumberSearch && !truckNumberSearch}\n              onClick={filterHandler}\n            >\n              <FilterListIcon />\n            </IconButton>\n          </span>\n        ) : (\n          <IconButton onClick={loadClearHandler}>\n            <FilterListOffIcon />\n          </IconButton>\n        )}\n      </Tooltip>\n      <Box sx={{ p: 1, display: 'inline-flex' }}>\n        <Tooltip title=\"Create\">\n          <span>\n            <IconButton onClick={createHandler}>\n              <AddIcon />\n            </IconButton>\n          </span>\n        </Tooltip>\n        <Tooltip title=\"Edit\">\n          <span>\n            <IconButton disabled={selected.length !== 1} onClick={editHandler}>\n              <EditIcon />\n            </IconButton>\n          </span>\n        </Tooltip>\n        <Tooltip title=\"Delete\">\n          <span>\n            <IconButton\n              disabled={selected.length !== 1}\n              onClick={deleteHandler}\n            >\n              <DeleteIcon />\n            </IconButton>\n          </span>\n        </Tooltip>\n      </Box>\n    </Toolbar>\n  );\n}\n\nexport default function EnhancedTable() {\n  const [order, setOrder] = React.useState<Order | undefined>('asc');\n  const [orderBy, setOrderBy] = React.useState<keyof Load | undefined>(\n    'loadNumber',\n  );\n  const [selected, setSelected] = React.useState<readonly string[]>([]);\n  const [page, setPage] = React.useState<number>(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState<number>(15);\n  const [queryParams, setQueryParams] = React.useState<Record<string, any>>({});\n  const tableContainerRef = React.useRef(null);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const setSnackbarMessage = useSnackbar();\n\n  const {\n    isLoading,\n    isFetching,\n    data: { items, total } = { items: [], total: 0 },\n  } = useQuery({\n    queryKey: ['loads', page, rowsPerPage, orderBy, order, queryParams],\n    queryFn: LoadsQuery,\n    keepPreviousData: true,\n    onError: (error: Error) => {\n      setSnackbarMessage({\n        severity: 'error',\n        message: error instanceof Error ? error.message : JSON.stringify(error),\n      });\n    },\n  });\n  const rows: Load[] = items || [];\n\n  React.useEffect(() => {\n    if (tableContainerRef.current) {\n      const container = tableContainerRef.current as HTMLElement;\n      container.scrollTo({\n        top: 0,\n        left: 0,\n        behavior: 'smooth',\n      });\n    }\n  }, [rows]);\n\n  React.useEffect(() => {\n    const newSelected: string[] = [];\n    selected.forEach((selectedItem) => {\n      const selectedRow = rows.find((row) => row.id === selectedItem);\n      if (selectedRow) {\n        newSelected.push(selectedItem);\n      }\n    });\n    setSelected(newSelected);\n  }, [rows]);\n\n  const handleRequestSort = (\n    event: React.MouseEvent<unknown>,\n    property: keyof Load,\n  ) => {\n    const isAsc = orderBy === property && order === 'asc';\n    const isDesc = orderBy === property && order === 'desc';\n    if (isDesc) {\n      setOrder(undefined);\n      setOrderBy(undefined);\n    } else {\n      setOrder(isAsc ? 'desc' : 'asc');\n      setOrderBy(property);\n    }\n  };\n\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.checked) {\n      const newSelected = rows.map((n: Load) => n.id);\n      setSelected(newSelected);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event: React.MouseEvent<unknown>, name: string) => {\n    navigate(`./view/${name}`, {\n      relative: 'path',\n      state: { from: location },\n      replace: false,\n    });\n  };\n\n  const handleSelect = (event: React.MouseEvent<unknown>, name: string) => {\n    event.stopPropagation();\n    const selectedIndex = selected.indexOf(name);\n    let newSelected: readonly string[] = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = (name: string) => selected.indexOf(name) !== -1;\n\n  return (\n    <Box sx={{ width: '100%', height: '100%' }}>\n      <Paper sx={{ width: '100%', height: '100%', backgroundColor: 'unset' }}>\n        <EnhancedTableToolbar\n          selected={selected}\n          setQueryParams={(query) => {\n            setQueryParams(query);\n            setPage(0);\n          }}\n        />\n        <TableContainer\n          ref={tableContainerRef}\n          sx={{ height: 'calc(100% - 115px)' }}\n        >\n          <Table\n            sx={{ minWidth: 750 }}\n            aria-labelledby=\"tableTitle\"\n            size=\"small\"\n            stickyHeader\n          >\n            <EnhancedTableHead\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {rows.map((row, index) => {\n                const isItemSelected = isSelected(`${row.id}`);\n                const labelId = `enhanced-table-checkbox-${index}`;\n                return (\n                  <TableRow\n                    hover\n                    onClick={(event) => handleClick(event, `${row.id}`)}\n                    role=\"checkbox\"\n                    aria-checked={isItemSelected}\n                    tabIndex={-1}\n                    key={row.id}\n                    selected={isItemSelected}\n                    sx={{ cursor: 'pointer' }}\n                  >\n                    <StyledTableCell padding=\"checkbox\">\n                      <Checkbox\n                        id={`${labelId}`}\n                        color=\"primary\"\n                        checked={isItemSelected}\n                        inputProps={{\n                          'aria-labelledby': labelId,\n                        }}\n                        onClick={(event) => handleSelect(event, `${row.id}`)}\n                      />\n                    </StyledTableCell>\n                    {headCells.map((cell) => {\n                      const cellData = cell.getData(row);\n                      return (\n                        <StyledTableCell\n                          key={cell.id}\n                          title={cellData.title}\n                          align={cell.numeric ? 'right' : 'center'}\n                        >\n                          {cellData.data}\n                        </StyledTableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 15, 20, 25, 35, 50]}\n          component=\"div\"\n          count={total}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <Loader visible={isLoading || isFetching} />\n    </Box>\n  );\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\nexports.default = _default;"],"names":["origin","URL","window","location","href","authFetch","input","_authProvider$user","_authProvider$user2","init","arguments","length","undefined","fetchInit","_objectSpread","headers","Headers","set","btoa","authProvider","user","username","password","fetch","then","response","status","error","Error","cause","name","statusText","message","json","catch","reason","TrucksQuery","_ref","_ref$queryKey","_slicedToArray","queryKey","page","rowsPerPage","orderBy","order","queryParams","url","searchParams","append","concat","truckNumber","lastLocation","distance","TruckDelete","userId","method","LocationsQuery","_ref2","_ref2$queryKey","search","LocationDelete","LoadsQuery","_ref3","_ref3$queryKey","loadNumber","LoadDelete","OwnersQuery","_ref4","_ref4$queryKey","fullName","OwnerDelete","DriversQuery","_ref5","_ref5$queryKey","DriverDelete","CoordinatorsQuery","_ref6","_ref6$queryKey","CoordinatorDelete","UsersQuery","_ref7","_ref7$queryKey","UserDelete","headCells","id","orderField","getData","row","data","numeric","disablePadding","label","pick","path","firstRow","stateCode","zipCode","secondRow","pickDate","Date","toLocaleString","_jsxs","children","_jsx","target","onClick","stopPropagation","title","deliver","deliverDate","milesHaversine","milesByRoads","toFixed","truckType","join","truck","StyledTableHead","styled","TableHead","backgroundColor","theme","palette","background","default","StyledTableCell","TableCell","maxWidth","whiteSpace","textOverflow","overflow","e","EnhancedTableHead","props","onSelectAllClick","numSelected","rowCount","onRequestSort","TableRow","padding","Checkbox","color","indeterminate","checked","onChange","inputProps","map","headCell","align","sortDirection","TableSortLabel","active","hideSortIcon","direction","property","event","Box","component","sx","visuallyHidden","EnhancedTableToolbar","selected","setQueryParams","_React$useState","React","_React$useState2","loadNumberSearch","setLoadNumberSearch","_React$useState3","_React$useState4","truckNumberSearch","setTruckNumberSearch","_React$useState5","_React$useState6","searchChanged","setSearchChanged","useLocation","navigate","useNavigate","queryClient","useQueryClient","setSnackbarMessage","useSnackbar","mutation","useMutation","onSuccess","severity","invalidateQueries","onError","JSON","stringify","Toolbar","pl","sm","pr","xs","bgcolor","alpha","primary","main","action","activatedOpacity","Typography","flex","variant","m","width","TextField","value","Number","isFinite","size","Tooltip","IconButton","FilterListOffIcon","disabled","FilterListIcon","p","display","relative","state","from","replace","AddIcon","EditIcon","mutate","DeleteIcon","EnhancedTable","_React$useState7","_React$useState8","setOrder","_React$useState9","_React$useState10","setOrderBy","_React$useState11","_React$useState12","setSelected","_React$useState13","_React$useState14","setPage","_React$useState15","_React$useState16","setRowsPerPage","_React$useState17","_React$useState18","tableContainerRef","_useQuery","useQuery","queryFn","keepPreviousData","isLoading","isFetching","_useQuery$data","_useQuery$data2","items","total","rows","current","scrollTo","top","left","behavior","newSelected","forEach","selectedItem","find","push","height","Paper","query","TableContainer","ref","Table","minWidth","stickyHeader","n","isAsc","TableBody","index","isItemSelected","indexOf","labelId","hover","handleClick","role","tabIndex","cursor","selectedIndex","slice","handleSelect","cell","cellData","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","Loader","visible","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","jsx","d"],"sourceRoot":""}