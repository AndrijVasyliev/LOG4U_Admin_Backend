{"version":3,"file":"static/js/833.65ea7b3d.chunk.js","mappings":"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","sources":["api/api.ts","owners/owners.tsx","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/icons-material/Edit.js"],"sourcesContent":["import { authProvider } from '../utils/auth';\nimport {\n  Coordinator,\n  Driver,\n  Load,\n  CreateLoad,\n  UpdateLoad,\n  Location,\n  CreateLocation,\n  UpdateLocation,\n  Owner,\n  Truck,\n  CreateTruck,\n  UpdateTruck,\n  User,\n  CreateUser,\n  UpdateUser,\n  Query,\n  QuerySingle,\n  Result,\n} from '../utils/dataTypes';\n\nconst SUCCESS_HTTP_CODE = 200;\nconst CREATED_HTTP_CODE = 201;\nconst FORBIDDEN_HTTP_CODE = 403;\nconst NOT_FOUND_HTTP_CODE = 404;\nconst CONFLICT_HTTP_CODE = 409;\n\nconst { origin } = new URL(window.location.href);\n\nconst transformBody = (body: object): Record<string, any> => {\n  const transformedBody: Record<string, any> = {};\n  Object.entries(body).forEach((entry) => {\n    if (Array.isArray(entry[1])) {\n      transformedBody[entry[0]] = entry[1].map((elem) =>\n        typeof elem === 'object' && !(elem instanceof Date) ? elem.id : elem,\n      );\n    } else if (typeof entry[1] === 'object' && !(entry[1] instanceof Date)) {\n      transformedBody[entry[0]] = entry[1] && entry[1].id;\n    } else {\n      transformedBody[entry[0]] = entry[1];\n    }\n  });\n  return transformedBody;\n};\n\nexport const authFetch: (\n  input: string | URL,\n  init?: RequestInit & { bodyObj?: object },\n) => Promise<object> = (input, init = {}) => {\n  const { bodyObj, ...restInit } = init;\n  const fetchInit = { ...restInit, headers: new Headers() };\n  fetchInit.headers.set(\n    'Authorization',\n    'Basic ' +\n      btoa(authProvider.user?.username + ':' + authProvider.user?.password),\n  );\n  if (bodyObj && typeof bodyObj === 'object') {\n    fetchInit.headers.set('Accept', 'application/json');\n    fetchInit.headers.set('Content-Type', 'application/json');\n    fetchInit.body = JSON.stringify(transformBody(bodyObj));\n  }\n  return fetch(input, fetchInit)\n    .catch((reason) => {\n      const error = new Error();\n      error.cause = reason;\n      error.name = 'Fetch error';\n      error.message = 'Network error has occurred';\n      throw error;\n    })\n    .then((response) => {\n      if (\n        response.status !== SUCCESS_HTTP_CODE &&\n        response.status !== CREATED_HTTP_CODE\n      ) {\n        const error = new Error();\n        error.cause = response;\n        if (response.status) {\n          error.name = response.status + ' ' + response.statusText;\n          switch (response.status) {\n            case FORBIDDEN_HTTP_CODE:\n              error.message = 'Insufficient permissions';\n              break;\n            case NOT_FOUND_HTTP_CODE:\n              error.message = 'Not found';\n              break;\n            case CONFLICT_HTTP_CODE:\n              error.message = 'Some field values invalidate unique constrain';\n              break;\n            default:\n              error.message = 'Some server error has occurred';\n          }\n        } else {\n          error.message = 'Network error has occurred';\n        }\n        throw error;\n      }\n      return response.json().catch((reason) => {\n        const error = new Error();\n        error.cause = reason;\n        error.name = 'Fetch error';\n        error.message = 'Server responded with incorrect data';\n        throw error;\n      });\n    });\n};\n\nexport const TrucksQuery: (\n  query: Query<{\n    search?: number;\n    truckNumber?: number;\n    lastLocation?: string;\n    distance?: string;\n  }>,\n) => Promise<Result<Truck>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/truck', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (queryParams?.search) {\n    url.searchParams.append('search', `${queryParams.search}`);\n  }\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  if (queryParams?.lastLocation && queryParams?.distance) {\n    url.searchParams.append('lastLocation', `${queryParams.lastLocation}`);\n    url.searchParams.append('distance', `${queryParams.distance}`);\n  }\n  return authFetch(url) as Promise<Result<Truck>>;\n};\n\nexport const TruckDelete = (userId: string): Promise<Truck> => {\n  const url = new URL(`/truck/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<Truck>;\n};\n\nexport const TruckCreate = (data: CreateTruck): Promise<Truck> => {\n  const url = new URL(`/truck`, origin);\n  return authFetch(url, {\n    method: 'POST',\n    bodyObj: data,\n  }) as Promise<Truck>;\n};\n\nexport const TruckUpdate = (data: UpdateTruck): Promise<Truck> => {\n  const { id, ...updatedData } = data;\n  const url = new URL(`/truck/${id}`, origin);\n  return authFetch(url, {\n    method: 'PATCH',\n    bodyObj: updatedData,\n  }) as Promise<Truck>;\n};\n\nexport const TruckQuery = (query: QuerySingle): Promise<Truck> => {\n  const url = new URL(`/truck/${query.queryKey[1]}`, origin);\n  return authFetch(url, {\n    method: 'GET',\n  }) as Promise<Truck>;\n};\n\nexport const LocationsQuery: (\n  query: Query<{ search?: string; name?: string }>,\n) => Promise<Result<Location>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/location', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.search) {\n    url.searchParams.append('search', `${queryParams.search}`);\n  }\n  if (queryParams?.name) {\n    url.searchParams.append('name', `${queryParams.name}`);\n  }\n  return authFetch(url) as Promise<Result<Location>>;\n};\n\nexport const LocationDelete = (userId: string): Promise<Location> => {\n  const url = new URL(`/location/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<Location>;\n};\n\nexport const LocationCreate = (data: CreateLocation): Promise<Location> => {\n  const url = new URL(`/location`, origin);\n  return authFetch(url, {\n    method: 'POST',\n    bodyObj: data,\n  }) as Promise<Location>;\n};\n\nexport const LocationUpdate = (data: UpdateLocation): Promise<Location> => {\n  const { id, ...updatedData } = data;\n  const url = new URL(`/location/${id}`, origin);\n  return authFetch(url, {\n    method: 'PATCH',\n    bodyObj: updatedData,\n  }) as Promise<Location>;\n};\n\nexport const LocationQuery = (query: QuerySingle): Promise<Location> => {\n  const url = new URL(`/location/${query.queryKey[1]}`, origin);\n  return authFetch(url, {\n    method: 'GET',\n  }) as Promise<Location>;\n};\n\nexport const LoadsQuery: (\n  query: Query<{ loadNumber?: number; truckNumber?: number }>,\n) => Promise<Result<Load>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/load', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.loadNumber) {\n    url.searchParams.append('loadNumber', `${queryParams.loadNumber}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  return authFetch(url) as Promise<Result<Load>>;\n};\n\nexport const LoadDelete = (userId: string): Promise<Load> => {\n  const url = new URL(`/load/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<Load>;\n};\n\nexport const LoadCreate = (data: CreateLoad): Promise<Load> => {\n  const url = new URL(`/load`, origin);\n  return authFetch(url, {\n    method: 'POST',\n    bodyObj: data,\n  }) as Promise<Load>;\n};\n\nexport const LoadUpdate = (data: UpdateLoad): Promise<Load> => {\n  const { id, ...updatedData } = data;\n  const url = new URL(`/load/${id}`, origin);\n  return authFetch(url, {\n    method: 'PATCH',\n    bodyObj: updatedData,\n  }) as Promise<Load>;\n};\n\nexport const LoadQuery = (query: QuerySingle): Promise<Load> => {\n  const url = new URL(`/load/${query.queryKey[1]}`, origin);\n  return authFetch(url, {\n    method: 'GET',\n  }) as Promise<Load>;\n};\n\nexport const OwnersQuery: (\n  query: Query<{ search?: string; fullName?: number; truckNumber?: number }>,\n) => Promise<Result<Owner>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/owner', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.search) {\n    url.searchParams.append('search', `${queryParams.search}`);\n  }\n  if (queryParams?.fullName) {\n    url.searchParams.append('fullName', `${queryParams.fullName}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  return authFetch(url) as Promise<Result<Owner>>;\n};\n\nexport const OwnerDelete = (userId: string): Promise<Owner> => {\n  const url = new URL(`/owner/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<Owner>;\n};\n\nexport const DriversQuery: (\n  query: Query<{ search?: string; fullName?: number; truckNumber?: number }>,\n) => Promise<Result<Driver>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/driver', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.search) {\n    url.searchParams.append('search', `${queryParams.search}`);\n  }\n  if (queryParams?.fullName) {\n    url.searchParams.append('fullName', `${queryParams.fullName}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  return authFetch(url) as Promise<Result<Driver>>;\n};\n\nexport const DriverDelete = (userId: string): Promise<Driver> => {\n  const url = new URL(`/driver/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<Driver>;\n};\n\nexport const CoordinatorsQuery: (\n  query: Query<{ search?: string; fullName?: number; truckNumber?: number }>,\n) => Promise<Result<Coordinator>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/coordinator', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.search) {\n    url.searchParams.append('search', `${queryParams.search}`);\n  }\n  if (queryParams?.fullName) {\n    url.searchParams.append('fullName', `${queryParams.fullName}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  return authFetch(url) as Promise<Result<Coordinator>>;\n};\n\nexport const CoordinatorDelete = (userId: string): Promise<Coordinator> => {\n  const url = new URL(`/coordinator/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<Coordinator>;\n};\n\nexport const UsersQuery: (\n  query: Query<{ search?: string; fullName?: number }>,\n) => Promise<Result<User>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/user', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.search) {\n    url.searchParams.append('search', `${queryParams.search}`);\n  }\n  if (queryParams?.fullName) {\n    url.searchParams.append('fullName', `${queryParams.fullName}`);\n  }\n  return authFetch(url) as Promise<Result<User>>;\n};\n\nexport const UserDelete = (userId: string): Promise<User> => {\n  const url = new URL(`/user/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<User>;\n};\n\nexport const UserCreate = (data: CreateUser): Promise<User> => {\n  const url = new URL(`/user`, origin);\n  return authFetch(url, {\n    method: 'POST',\n    bodyObj: data,\n  }) as Promise<User>;\n};\n\nexport const UserUpdate = (data: UpdateUser): Promise<User> => {\n  const { id, ...updatedData } = data;\n  const url = new URL(`/user/${id}`, origin);\n  return authFetch(url, {\n    method: 'PATCH',\n    bodyObj: updatedData,\n  }) as Promise<User>;\n};\n\nexport const UserQuery = (query: QuerySingle): Promise<User> => {\n  const url = new URL(`/user/${query.queryKey[1]}`, origin);\n  return authFetch(url, {\n    method: 'GET',\n  }) as Promise<User>;\n};\n","import * as React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\n\nimport { alpha, styled } from '@mui/material/styles';\nimport TextField from '@mui/material/TextField';\nimport Checkbox from '@mui/material/Checkbox';\nimport Tooltip from '@mui/material/Tooltip';\nimport TableCell from '@mui/material/TableCell';\nimport Box from '@mui/material/Box';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport TableSortLabel from '@mui/material/TableSortLabel';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\nimport IconButton from '@mui/material/IconButton';\nimport AddIcon from '@mui/icons-material/Add';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport FilterListIcon from '@mui/icons-material/FilterList';\nimport FilterListOffIcon from '@mui/icons-material/FilterListOff';\nimport { visuallyHidden } from '@mui/utils';\n\nimport Loader from '../components/Loader';\n\nimport { OwnersQuery, OwnerDelete } from '../api';\nimport { useSnackbar } from '../hooks';\nimport { Order, Owner, Person } from '../utils/dataTypes';\n\ninterface HeadCell {\n  id: string;\n  disablePadding: boolean;\n  orderField?: keyof Owner;\n  getData: (row: Owner) => { data: JSX.Element | string; title?: string };\n  label: string;\n  numeric: boolean;\n}\n\nconst headCells: readonly HeadCell[] = [\n  {\n    id: 'fullName',\n    orderField: 'fullName',\n    getData: (row) => ({ data: `${row.fullName}` }),\n    numeric: false,\n    disablePadding: true,\n    label: 'Full name',\n  },\n  {\n    id: 'type',\n    getData: (row) => {\n      let type = '';\n      let title = '';\n      if (row.type === 'Owner') {\n        type = '(O) ';\n        title = 'Owner';\n      }\n      if (row.type === 'OwnerDriver') {\n        type = '(O/d) ';\n        title = 'Owner/Driver';\n      }\n      return {\n        data: (\n          <span>\n            <b>{type}</b>\n          </span>\n        ),\n        title: title,\n      };\n    },\n    numeric: false,\n    disablePadding: true,\n    label: 'Type',\n  },\n  {\n    id: 'phone',\n    getData: (row) => {\n      const firstRow = `${row.phone}`;\n      const secondRow = `${row.phone2 ? row.phone2 : ''}`;\n      return {\n        data: (\n          <span>\n            <a\n              href={`tel:${firstRow}`}\n              target=\"_blank\"\n              onClick={stopPropagation}\n            >\n              {firstRow}\n            </a>\n            <br />\n            <a\n              href={secondRow ? `tel:${secondRow}` : undefined}\n              target=\"_blank\"\n              onClick={stopPropagation}\n            >\n              {secondRow || ' '}\n            </a>\n          </span>\n        ),\n        title: firstRow + '\\n' + secondRow,\n      };\n    },\n    numeric: false,\n    disablePadding: true,\n    label: 'Mobile phone',\n  },\n  {\n    id: 'email',\n    getData: (row) => {\n      const firstRow = `${row.email}`;\n      return {\n        data: (\n          <span>\n            <a\n              href={`mailto:${firstRow}`}\n              target=\"_blank\"\n              onClick={stopPropagation}\n            >\n              {firstRow}\n            </a>\n          </span>\n        ),\n        title: firstRow,\n      };\n    },\n    numeric: false,\n    disablePadding: true,\n    label: 'Email',\n  },\n  {\n    id: 'address',\n    getData: (row) => {\n      const firstRow = `${row.address}`;\n      return {\n        data: <span>{firstRow}</span>,\n        title: firstRow,\n      };\n    },\n    numeric: false,\n    disablePadding: true,\n    label: 'Address',\n  },\n  {\n    id: 'ownTrucks',\n    getData: (row) => {\n      if (row.ownTrucks && row.ownTrucks.length) {\n        const trucks = row.ownTrucks;\n        return {\n          data: (\n            <span>\n              {trucks.map((truck, index) => (\n                <a\n                  key={index}\n                  href={`/trucks/view/${truck.id}`}\n                  target=\"_blank\"\n                  onClick={stopPropagation}\n                >\n                  {`${truck.truckNumber}${\n                    index === trucks.length - 1 ? '' : ', '\n                  }`}\n                </a>\n              ))}\n            </span>\n          ),\n          title: trucks.map((truck) => truck.truckNumber).join(', '),\n        };\n      } else {\n        return { data: '' };\n      }\n    },\n    numeric: false,\n    disablePadding: true,\n    label: 'OWN TRUCKS',\n  },\n  {\n    id: 'driversCoordinators',\n    getData: (row) => {\n      if (row.coordinators || row.drivers) {\n        const items = new Map<string, Person>();\n        row.coordinators?.forEach((coordinator) =>\n          items.set(coordinator.id, {\n            id: coordinator.id,\n            fullName: coordinator.fullName,\n            type: coordinator.type,\n          }),\n        );\n        row.drivers?.forEach(\n          (driver) =>\n            !items.has(driver.id) &&\n            items.set(driver.id, {\n              id: driver.id,\n              fullName: driver.fullName,\n              type: driver.type,\n            }),\n        );\n        const persons = Array.from(items.values());\n        return {\n          data: (\n            <span>\n              {persons.map((person, index) => (\n                <a\n                  key={person.id}\n                  href={\n                    (person.type === 'Driver' &&\n                      `/drivers/view/${person.id}`) ||\n                    (person.type === 'OwnerDriver' &&\n                      `/owners/view/${person.id}`) ||\n                    (person.type === 'Coordinator' &&\n                      `/coordinators/view/${person.id}`) ||\n                    (person.type === 'CoordinatorDriver' &&\n                      `/coordinators/view/${person.id}`) ||\n                    undefined\n                  }\n                  target=\"_blank\"\n                  onClick={stopPropagation}\n                >\n                  {`${person.fullName}${\n                    index === persons.length - 1 ? '' : ', '\n                  }`}\n                </a>\n              ))}\n            </span>\n          ),\n          title: persons.map((person) => person.fullName).join(', '),\n        };\n      } else {\n        return { data: '' };\n      }\n    },\n    numeric: false,\n    disablePadding: true,\n    label: 'Drivers/coordinators',\n  },\n];\n\ninterface EnhancedTableProps {\n  numSelected: number;\n  onRequestSort: (\n    event: React.MouseEvent<unknown>,\n    property: keyof Owner,\n  ) => void;\n  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  order: Order | undefined;\n  orderBy: string | undefined;\n  rowCount: number;\n}\n\nconst StyledTableHead = styled(TableHead)(({ theme }) => ({\n  backgroundColor: theme.palette.background.default,\n}));\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  maxWidth: '100px',\n  whiteSpace: 'nowrap',\n  textOverflow: 'ellipsis',\n  overflow: 'hidden',\n}));\n\nfunction stopPropagation(e: React.SyntheticEvent) {\n  e.stopPropagation();\n}\n\nfunction EnhancedTableHead(props: EnhancedTableProps) {\n  const {\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n  } = props;\n  const createSortHandler =\n    (property: keyof Owner) => (event: React.MouseEvent<unknown>) => {\n      onRequestSort(event, property);\n    };\n\n  return (\n    <StyledTableHead>\n      <TableRow>\n        <StyledTableCell padding=\"checkbox\">\n          <Checkbox\n            name={'enhanced-table-checkbox-select-all'}\n            color=\"primary\"\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{\n              'aria-label': 'enhanced-table-checkbox-select-all',\n            }}\n          />\n        </StyledTableCell>\n        {headCells.map((headCell) => (\n          <StyledTableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'center'}\n            padding={headCell.disablePadding ? 'none' : 'normal'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={headCell.orderField && orderBy === headCell.orderField}\n              hideSortIcon={!headCell.orderField}\n              direction={orderBy === headCell.orderField ? order : 'asc'}\n              onClick={\n                headCell.orderField\n                  ? createSortHandler(headCell.orderField)\n                  : () => {\n                      return;\n                    }\n              }\n            >\n              {headCell.label}\n              {headCell.orderField && orderBy === headCell.orderField ? (\n                <Box component=\"span\" sx={visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </StyledTableCell>\n        ))}\n      </TableRow>\n    </StyledTableHead>\n  );\n}\n\ninterface EnhancedTableToolbarProps {\n  selected: readonly string[];\n  setQueryParams: React.Dispatch<\n    React.SetStateAction<Record<string, number | string>>\n  >;\n}\n\nfunction EnhancedTableToolbar(props: EnhancedTableToolbarProps) {\n  const { selected, setQueryParams } = props;\n  const [fullNameSearch, setFullNameSearch] = React.useState<string>('');\n  const [truckNumberSearch, setTruckNumberSearch] = React.useState<number>(0);\n  const [searchChanged, setSearchChanged] = React.useState<boolean>(false);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const queryClient = useQueryClient();\n\n  const setSnackbarMessage = useSnackbar();\n\n  const { mutate, isLoading } = useMutation(OwnerDelete, {\n    onSuccess: () => {\n      setSnackbarMessage({\n        severity: 'success',\n        message: 'Deleted',\n      });\n      queryClient.invalidateQueries(['owners']);\n    },\n    onError: (error: Error) => {\n      setSnackbarMessage({\n        severity: 'error',\n        message: error instanceof Error ? error.message : JSON.stringify(error),\n      });\n    },\n  });\n\n  const fullNameHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setFullNameSearch(event.target.value);\n    setSearchChanged(true);\n  };\n  const truckNumberHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (Number.isFinite(Number(event.target.value))) {\n      setTruckNumberSearch(Number(event.target.value));\n      setSearchChanged(true);\n    }\n  };\n  const fullNameClearHandler = () => {\n    setSearchChanged(false);\n    setFullNameSearch('');\n    setTruckNumberSearch(0);\n    setQueryParams({});\n  };\n  const filterHandler = () => {\n    setSearchChanged(false);\n    const queryParams: Record<string, number | string> = {};\n    if (fullNameSearch) {\n      queryParams.fullName = fullNameSearch;\n    }\n    if (truckNumberSearch) {\n      queryParams.truckNumber = truckNumberSearch;\n    }\n    setQueryParams(queryParams);\n  };\n  const createHandler = () => {\n    navigate('./create', {\n      relative: 'path',\n      state: { from: location },\n      replace: false,\n    });\n  };\n  const editHandler = () => {\n    navigate(`./edit/${selected[0]}`, {\n      relative: 'path',\n      state: { from: location },\n      replace: false,\n    });\n  };\n  const deleteHandler = () => {\n    mutate(`${selected[0]}`);\n  };\n\n  return (\n    <Toolbar\n      sx={{\n        pl: { sm: 2 },\n        pr: { xs: 1, sm: 1 },\n        ...(selected.length > 0 && {\n          bgcolor: (theme) =>\n            alpha(\n              theme.palette.primary.main,\n              theme.palette.action.activatedOpacity,\n            ),\n        }),\n      }}\n    >\n      {selected.length > 0 ? (\n        <Typography\n          sx={{ flex: '1 1 100%' }}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {selected.length} selected\n        </Typography>\n      ) : (\n        <Typography\n          sx={{\n            flex: '1 1 100%',\n            whiteSpace: 'nowrap',\n            textOverflow: 'ellipsis',\n            overflow: 'hidden',\n          }}\n          variant=\"h6\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          Owners\n        </Typography>\n      )}\n      <Box\n        component=\"div\"\n        sx={{\n          '& .MuiTextField-root': { m: 1, width: '140px' },\n        }}\n      >\n        <TextField\n          label=\"Full name\"\n          value={fullNameSearch}\n          onChange={fullNameHandler}\n          size=\"small\"\n        />\n      </Box>\n      <Box\n        component=\"div\"\n        sx={{\n          '& .MuiTextField-root': { m: 1, width: '140px' },\n        }}\n      >\n        <TextField\n          label=\"Truck Number\"\n          value={truckNumberSearch || ''}\n          onChange={truckNumberHandler}\n          size=\"small\"\n        />\n      </Box>\n      <Tooltip title=\"Filter list\">\n        {(searchChanged || (!fullNameSearch && !truckNumberSearch)) &&\n        (!(searchChanged && !fullNameSearch) ||\n          !(searchChanged && !truckNumberSearch)) ? (\n          <span>\n            <IconButton\n              disabled={!fullNameSearch && !truckNumberSearch}\n              onClick={filterHandler}\n            >\n              <FilterListIcon />\n            </IconButton>\n          </span>\n        ) : (\n          <span>\n            <IconButton onClick={fullNameClearHandler}>\n              <FilterListOffIcon />\n            </IconButton>\n          </span>\n        )}\n      </Tooltip>\n      <Box sx={{ p: 1, display: 'inline-flex' }}>\n        <Tooltip title=\"Create\">\n          <span>\n            <IconButton onClick={createHandler}>\n              <AddIcon />\n            </IconButton>\n          </span>\n        </Tooltip>\n        <Tooltip title=\"Edit\">\n          <span>\n            <IconButton disabled={selected.length !== 1} onClick={editHandler}>\n              <EditIcon />\n            </IconButton>\n          </span>\n        </Tooltip>\n        <Tooltip title=\"Delete\">\n          <span>\n            <IconButton\n              disabled={selected.length !== 1}\n              onClick={deleteHandler}\n            >\n              <DeleteIcon />\n            </IconButton>\n          </span>\n        </Tooltip>\n      </Box>\n      <Loader visible={isLoading} />\n    </Toolbar>\n  );\n}\n\nexport default function EnhancedTable() {\n  const [order, setOrder] = React.useState<Order | undefined>('asc');\n  const [orderBy, setOrderBy] = React.useState<keyof Owner | undefined>(\n    'fullName',\n  );\n  const [selected, setSelected] = React.useState<readonly string[]>([]);\n  const [page, setPage] = React.useState<number>(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState<number>(15);\n  const [queryParams, setQueryParams] = React.useState<Record<string, any>>({});\n  const tableContainerRef = React.useRef(null);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const setSnackbarMessage = useSnackbar();\n\n  const {\n    isLoading,\n    isFetching,\n    data: { items, total } = { items: [], total: 0 },\n  } = useQuery({\n    queryKey: ['owners', page, rowsPerPage, orderBy, order, queryParams],\n    queryFn: OwnersQuery,\n    keepPreviousData: true,\n    onError: (error: Error) => {\n      setSnackbarMessage({\n        severity: 'error',\n        message: error instanceof Error ? error.message : JSON.stringify(error),\n      });\n    },\n  });\n  const rows: Owner[] = items || [];\n\n  React.useEffect(() => {\n    if (tableContainerRef.current) {\n      const container = tableContainerRef.current as HTMLElement;\n      container.scrollTo({\n        top: 0,\n        left: 0,\n        behavior: 'smooth',\n      });\n    }\n  }, [rows]);\n\n  React.useEffect(() => {\n    const newSelected: string[] = [];\n    selected.forEach((selectedItem) => {\n      const selectedRow = rows.find((row) => row.id === selectedItem);\n      if (selectedRow) {\n        newSelected.push(selectedItem);\n      }\n    });\n    setSelected(newSelected);\n  }, [rows]);\n\n  const handleRequestSort = (\n    event: React.MouseEvent<unknown>,\n    property: keyof Owner,\n  ) => {\n    const isAsc = orderBy === property && order === 'asc';\n    const isDesc = orderBy === property && order === 'desc';\n    if (isDesc) {\n      setOrder(undefined);\n      setOrderBy(undefined);\n    } else {\n      setOrder(isAsc ? 'desc' : 'asc');\n      setOrderBy(property);\n    }\n  };\n\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.checked) {\n      const newSelected = rows.map((n: Owner) => n.id);\n      setSelected(newSelected);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event: React.MouseEvent<unknown>, name: string) => {\n    navigate(`./view/${name}`, {\n      relative: 'path',\n      state: { from: location },\n      replace: false,\n    });\n  };\n\n  const handleSelect = (event: React.MouseEvent<unknown>, name: string) => {\n    event.stopPropagation();\n    const selectedIndex = selected.indexOf(name);\n    let newSelected: readonly string[] = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = (name: string) => selected.indexOf(name) !== -1;\n\n  return (\n    <Box sx={{ width: '100%', height: '100%' }}>\n      <Paper sx={{ width: '100%', height: '100%', backgroundColor: 'unset' }}>\n        <EnhancedTableToolbar\n          selected={selected}\n          setQueryParams={(query) => {\n            setQueryParams(query);\n            setPage(0);\n          }}\n        />\n        <TableContainer\n          ref={tableContainerRef}\n          sx={{ height: 'calc(100% - 115px)' }}\n        >\n          <Table\n            sx={{ minWidth: 750 }}\n            aria-labelledby=\"tableTitle\"\n            size=\"small\"\n            stickyHeader\n          >\n            <EnhancedTableHead\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {rows.map((row, index) => {\n                const isItemSelected = isSelected(`${row.id}`);\n                const labelId = `enhanced-table-checkbox-${index}`;\n                return (\n                  <TableRow\n                    hover\n                    onClick={(event) => handleClick(event, `${row.id}`)}\n                    role=\"checkbox\"\n                    aria-checked={isItemSelected}\n                    tabIndex={-1}\n                    key={row.id}\n                    selected={isItemSelected}\n                    sx={{ cursor: 'pointer' }}\n                  >\n                    <StyledTableCell padding=\"checkbox\">\n                      <Checkbox\n                        id={`${labelId}`}\n                        color=\"primary\"\n                        checked={isItemSelected}\n                        inputProps={{\n                          'aria-labelledby': labelId,\n                        }}\n                        onClick={(event) => handleSelect(event, `${row.id}`)}\n                      />\n                    </StyledTableCell>\n                    {headCells.map((cell) => {\n                      const cellData = cell.getData(row);\n                      return (\n                        <StyledTableCell\n                          key={cell.id}\n                          title={cellData.title}\n                          align={cell.numeric ? 'right' : 'center'}\n                        >\n                          {cellData.data}\n                        </StyledTableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 15, 20, 25, 35, 50]}\n          component=\"div\"\n          count={total}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <Loader visible={isLoading || isFetching} />\n    </Box>\n  );\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\nexports.default = _default;"],"names":["origin","URL","window","location","href","authFetch","input","_authProvider$user","_authProvider$user2","init","arguments","length","undefined","bodyObj","restInit","_objectWithoutProperties","_excluded","fetchInit","_objectSpread","headers","Headers","set","btoa","authProvider","user","username","password","body","JSON","stringify","transformedBody","Object","entries","forEach","entry","Array","isArray","map","elem","Date","id","transformBody","fetch","catch","reason","error","Error","cause","name","message","then","response","status","statusText","json","TrucksQuery","_ref","_ref$queryKey","_slicedToArray","queryKey","page","rowsPerPage","orderBy","order","queryParams","url","searchParams","append","concat","search","truckNumber","lastLocation","distance","TruckDelete","userId","method","TruckCreate","data","LocationsQuery","_ref2","_ref2$queryKey","LocationDelete","LocationCreate","LocationUpdate","updatedData","_excluded3","LocationQuery","query","LoadsQuery","_ref3","_ref3$queryKey","loadNumber","LoadDelete","LoadCreate","LoadUpdate","_excluded4","LoadQuery","OwnersQuery","_ref4","_ref4$queryKey","fullName","OwnerDelete","DriversQuery","_ref5","_ref5$queryKey","DriverDelete","CoordinatorsQuery","_ref6","_ref6$queryKey","CoordinatorDelete","UsersQuery","_ref7","_ref7$queryKey","UserDelete","UserCreate","UserUpdate","_excluded5","UserQuery","headCells","orderField","getData","row","numeric","disablePadding","label","type","title","_jsx","children","firstRow","phone","secondRow","phone2","_jsxs","target","onClick","stopPropagation","email","address","ownTrucks","trucks","truck","index","join","coordinators","drivers","_row$coordinators","_row$drivers","items","Map","coordinator","driver","has","persons","from","values","person","StyledTableHead","styled","TableHead","backgroundColor","theme","palette","background","default","StyledTableCell","TableCell","maxWidth","whiteSpace","textOverflow","overflow","e","EnhancedTableHead","props","onSelectAllClick","numSelected","rowCount","onRequestSort","TableRow","padding","Checkbox","color","indeterminate","checked","onChange","inputProps","headCell","align","sortDirection","TableSortLabel","active","hideSortIcon","direction","property","event","Box","component","sx","visuallyHidden","EnhancedTableToolbar","selected","setQueryParams","_React$useState","React","_React$useState2","fullNameSearch","setFullNameSearch","_React$useState3","_React$useState4","truckNumberSearch","setTruckNumberSearch","_React$useState5","_React$useState6","searchChanged","setSearchChanged","useLocation","navigate","useNavigate","queryClient","useQueryClient","setSnackbarMessage","useSnackbar","_useMutation","useMutation","onSuccess","severity","invalidateQueries","onError","mutate","isLoading","Toolbar","pl","sm","pr","xs","bgcolor","alpha","primary","main","action","activatedOpacity","Typography","flex","variant","m","width","TextField","value","size","Number","isFinite","Tooltip","IconButton","FilterListOffIcon","disabled","FilterListIcon","p","display","relative","state","replace","AddIcon","EditIcon","DeleteIcon","Loader","visible","EnhancedTable","_React$useState7","_React$useState8","setOrder","_React$useState9","_React$useState10","setOrderBy","_React$useState11","_React$useState12","setSelected","_React$useState13","_React$useState14","setPage","_React$useState15","_React$useState16","setRowsPerPage","_React$useState17","_React$useState18","tableContainerRef","_useQuery","useQuery","queryFn","keepPreviousData","isFetching","_useQuery$data","_useQuery$data2","total","rows","current","scrollTo","top","left","behavior","newSelected","selectedItem","find","push","height","Paper","TableContainer","ref","Table","minWidth","stickyHeader","n","isAsc","TableBody","isItemSelected","indexOf","labelId","hover","handleClick","role","tabIndex","cursor","selectedIndex","slice","handleSelect","cell","cellData","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","jsx","d"],"sourceRoot":""}