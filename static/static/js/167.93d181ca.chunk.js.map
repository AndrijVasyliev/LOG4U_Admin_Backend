{"version":3,"file":"static/js/167.93d181ca.chunk.js","mappings":"wlBAoByBA,EAAAA,GAAW,CAClCC,qBAAsBD,EAAAA,GACZ,CACNE,kBAAmBF,EAAAA,KAAaG,WAChCC,SAAUJ,EAAAA,GACA,CACNK,SAAUL,EAAAA,GACA,CACNM,IAAKN,EAAAA,KAAYG,WACjBI,IAAKP,EAAAA,KAAYG,aAElBA,aAEJA,aAEJA,SAAS,0CACZK,eAAgBR,EAAAA,KAEbS,UAAU,sBACVN,SAAS,wC,kCCgBRO,EAAiC,CACrC,CACEC,GAAI,cACJC,WAAY,cACZC,QAAS,SAACC,GAAG,MAAM,CAAEC,KAAK,GAADC,OAAKF,EAAIG,aAAe,EACjDC,SAAS,EACTC,gBAAgB,EAChBC,MAAO,mBAET,CACET,GAAI,kBACJE,QAAS,SAACC,GACR,IAAMO,EAASP,EAAIQ,aAAeR,EAAIS,MAClCC,EAAO,GACPC,EAAO,GACPC,EAAW,GACXC,EAAY,GAOhB,OANIN,IACFG,EAAI,KAAAR,QAAQY,EAAAA,EAAAA,IAAQP,GAAO,UAAAL,OAASK,EAAOV,IAC3Cc,EAAI,GAAAT,QAAMa,EAAAA,EAAAA,IAAQR,GAAO,KACzBK,EAAQ,GAAAV,OAAMK,EAAOS,UACrBH,EAAS,GAAAX,OAAY,OAANK,QAAM,IAANA,OAAM,EAANA,EAAQU,QAElB,CACLhB,MACEiB,EAAAA,EAAAA,MAAA,QAAMC,MAAO,CAAEC,QAAS,QAASC,SAAA,EAC/BH,EAAAA,EAAAA,MAAA,QACEC,MAAO,CACLG,aAAc,WACdC,SAAU,SACVC,UAAW,QACXH,SAAA,EAEFI,EAAAA,EAAAA,KAAA,KAAAJ,SAAIV,KACJc,EAAAA,EAAAA,KAAA,KAAGC,KAAMhB,EAAMiB,OAAO,SAASC,QAASC,EAAAA,EAAgBR,SACrDT,KAEHa,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,KACEC,KAAMb,EAAS,OAAAX,OAAUW,QAAciB,EACvCH,OAAO,SACPC,QAASC,EAAAA,EAAgBR,SAExBR,GAAa,aAGlBY,EAAAA,EAAAA,KAACM,EAAAA,EAAU,CACTC,KAAK,QACLJ,QAAS,SAACK,IACRJ,EAAAA,EAAAA,GAAgBI,GAChBC,UAAUC,UAAUC,UAAUxB,EAAW,IAAMC,EACjD,EAAEQ,UAEFI,EAAAA,EAAAA,KAACY,EAAAA,EAAW,CAACC,GAAI,CAAEC,OAAQ,OAAQC,MAAO,eAIhDC,MAAO9B,EAAO,GAAKC,EAAW,KAAOC,EAEzC,EACAT,SAAS,EACTC,gBAAgB,EAChBC,MAAO,2BAET,CACET,GAAI,SACJC,WAAY,SACZC,QAAS,SAACC,GACR,IAAM0C,EAAM,GAAAxC,OAAMF,EAAI0C,QAChBC,EAAO,WACX,OAAQD,GACN,IAAK,oBACH,OACEjB,EAAAA,EAAAA,KAACmB,EAAAA,EAAU,CACTN,GAAI,CAAEC,OAAQ,OAAQC,MAAO,OAAQK,MAAOC,EAAAA,EAAK,QAGvD,IAAK,WACH,OACErB,EAAAA,EAAAA,KAACsB,EAAAA,EAAa,CACZT,GAAI,CAAEC,OAAQ,OAAQC,MAAO,OAAQK,MAAOG,EAAAA,EAAO,QAGzD,IAAK,YACH,OACEvB,EAAAA,EAAAA,KAACwB,EAAAA,EAAM,CACLX,GAAI,CACFC,OAAQ,OACRC,MAAO,OACPU,QAASC,EAAAA,EAAM,KACfC,OAAQ,QACR/B,SACH,MAIL,IAAK,gBACH,OACEI,EAAAA,EAAAA,KAACwB,EAAAA,EAAM,CACLX,GAAI,CACFC,OAAQ,OACRC,MAAO,OACPU,QAASJ,EAAAA,EAAK,KACdM,OAAQ,QACR/B,SACH,MAIL,QACE,OAAOqB,EAEb,CA3Ca,GA6Cb,MAAO,CACLzC,MAAMwB,EAAAA,EAAAA,KAAA,QAAAJ,SAAOsB,IACbF,MAAOC,EAEX,EACAtC,SAAS,EACTC,gBAAgB,EAChBC,MAAO,UAET,CACET,GAAI,WACJE,QAAS,SAACC,EAAKqD,GAOb,GAAO,OAAHrD,QAAG,IAAHA,GAAAA,EAAKsD,SAAU,CACjB,IAAM5C,EAAI,oBAAAR,OAAuBF,EAAIsD,SAASzD,IACxCe,EAAQ,GAAAV,OAAMF,EAAIsD,SAASC,KAAI,MAAArD,OAAKF,EAAIsD,SAASE,UAAS,MAAAtD,OAAKF,EAAIsD,SAASG,SAC5E5C,EAAS,GAAAX,OACbF,EAAI0D,kBACA,IAAIC,KAAK3D,EAAI0D,mBAAmBE,iBAChC,IAGN,MAAO,CACL3D,MACEiB,EAAAA,EAAAA,MAAA,QAAMC,MAAO,CAAEC,QAAS,QAASC,SAAA,EAC/BH,EAAAA,EAAAA,MAAA,QACEC,MAAO,CACLG,aAAc,WACdC,SAAU,UACVF,SAAA,EAEFI,EAAAA,EAAAA,KAAA,KAAGC,KAAMhB,EAAMiB,OAAO,SAASC,QAxBtB,SAACK,GAClBA,EAAM4B,kBACNhC,EAAAA,EAAAA,GAAgBI,GAChBoB,EAAW,CAACrD,GACd,EAoB6DqB,SAChDT,KAEHa,EAAAA,EAAAA,KAAA,SACCZ,MAEHY,EAAAA,EAAAA,KAACM,EAAAA,EAAU,CACTC,KAAK,QACLJ,QAAS,SAACK,IACRJ,EAAAA,EAAAA,GAAgBI,GAChBC,UAAUC,UAAUC,UAAUxB,EAChC,EAAES,UAEFI,EAAAA,EAAAA,KAACY,EAAAA,EAAW,CAACC,GAAI,CAAEC,OAAQ,OAAQC,MAAO,eAIhDC,MAAO7B,EAAW,KAAOC,EAE7B,CACE,MAAO,CAAEZ,KAAM,GAEnB,EACAG,SAAS,EACTC,gBAAgB,EAChBC,MAAO,6BAET,CACET,GAAI,YACJE,QAAS,SAACC,GACR,IAAMY,EAAWZ,EAAIW,KAAI,GAAAT,OAAMF,EAAIW,MAAS,GACtCE,EAAYb,EAAI8D,UAAS,GAAA5D,OAAMF,EAAI8D,UAAUC,KAAK,OAAU,GAElE,MAAO,CACL9D,MACEiB,EAAAA,EAAAA,MAAA,QAAAG,SAAA,CACGT,GACDa,EAAAA,EAAAA,KAAA,SACCZ,KAGL4B,MAAO7B,EAAW,KAAOC,EAE7B,EACAT,SAAS,EACTC,gBAAgB,EAChBC,MAAO,iBAET,CACET,GAAI,iBACJE,QAAS,SAACC,GACR,IAAMgE,EAAgBhE,EAAIiE,WAAU,GAAA/D,OAAMF,EAAIiE,YAAe,GACvDC,EAAgBlE,EAAImE,SAAQ,GAAAjE,OAAMF,EAAImE,UAAa,GACnDtD,EAAYb,EAAIoE,QAAO,GAAAlE,OAAMF,EAAIoE,SAAY,GAEnD,MAAO,CACLnE,MACEiB,EAAAA,EAAAA,MAAA,QAAAG,SAAA,EACI2C,EAAgBA,EAAgB,IAAM,IAAME,GAC9CzC,EAAAA,EAAAA,KAAA,SACCZ,KAGL4B,OACGuB,EAAgBA,EAAgB,WAAa,KAC7CE,EAAgBA,EAAgB,SAAW,IAC5C,KACArD,EACA,WAEN,EACAT,SAAS,EACTC,gBAAgB,EAChBC,MAAO,gBAET,CACET,GAAI,aACJE,QAAS,SAACC,GACR,IAAMqE,EAASrE,EAAIqE,OACf3D,EAAO,GACPC,EAAO,GACPC,EAAW,GACXC,EAAY,GAOhB,OANIwD,IACF3D,EAAI,KAAAR,QAAQY,EAAAA,EAAAA,IAAQuD,GAAO,UAAAnE,OAASmE,EAAOxE,IAC3Cc,EAAI,GAAAT,QAAMa,EAAAA,EAAAA,IAAQsD,GAAO,KACzBzD,EAAQ,GAAAV,OAAMmE,EAAOrD,UACrBH,EAAS,GAAAX,OAAMmE,EAAOpD,QAEjB,CACLhB,MACEiB,EAAAA,EAAAA,MAAA,QAAAG,SAAA,EACEI,EAAAA,EAAAA,KAAA,KAAAJ,SAAIV,KACJc,EAAAA,EAAAA,KAAA,KACEC,KAAMd,EAAWF,OAAOoB,EACxBH,OAAO,SACPC,QAASC,EAAAA,EAAgBR,SAExBT,KAEHa,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,KACEC,KAAMb,EAAS,OAAAX,OAAUW,QAAciB,EACvCH,OAAO,SACPC,QAASC,EAAAA,EAAgBR,SAExBR,GAAa,YAIpB4B,MAAO9B,EAAO,GAAKC,EAAW,KAAOC,EAEzC,EACAT,SAAS,EACTC,gBAAgB,EAChBC,MAAO,mBAgBLgE,GAAkBC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAAkB,SAAAE,GAAQ,MAAQ,CACxDC,gBADgDD,EAALE,MACpBC,QAAQC,WAAWC,QAC3C,IAEKC,GAAkBR,EAAAA,EAAAA,IAAOS,EAAAA,EAAPT,EAAkB,SAAAU,GAAQA,EAALN,MAAK,MAAQ,CACxDO,SAAU,QACVC,WAAY,MACZC,cAAe,MACfC,WAAY,SACZ/D,aAAc,WACdC,SAAU,SACX,IAED,SAAS+D,EAAkBC,GACzB,IACEC,EAMED,EANFC,iBACAC,EAKEF,EALFE,MACAC,EAIEH,EAJFG,QACAC,EAGEJ,EAHFI,YACAC,EAEEL,EAFFK,SACAC,EACEN,EADFM,cAOF,OACEpE,EAAAA,EAAAA,KAAC6C,EAAe,CAAAjD,UACdH,EAAAA,EAAAA,MAAC4E,EAAAA,EAAQ,CAAAzE,SAAA,EACPI,EAAAA,EAAAA,KAACsD,EAAe,CAACgB,QAAQ,WAAU1E,UACjCI,EAAAA,EAAAA,KAACuE,EAAAA,EAAQ,CACPzC,KAAM,qCACNV,MAAM,UACNoD,cAAeN,EAAc,GAAKA,EAAcC,EAChDM,QAASN,EAAW,GAAKD,IAAgBC,EACzCO,SAAUX,EACVY,WAAY,CACV,aAAc,0CAInBxG,EAAUyG,KAAI,SAACC,GAAQ,OACtB7E,EAAAA,EAAAA,KAACsD,EAAe,CAEdwB,MAAOD,EAASlG,QAAU,QAAU,SACpC2F,QAASO,EAASjG,eAAiB,OAAS,SAC5CmG,cAAed,IAAYY,EAASzG,IAAK4F,EAAcpE,UAEvDH,EAAAA,EAAAA,MAACuF,EAAAA,EAAc,CACbC,OAAQJ,EAASxG,YAAc4F,IAAYY,EAASxG,WACpD6G,cAAeL,EAASxG,WACxB8G,UAAWlB,IAAYY,EAASxG,WAAa2F,EAAQ,MACrD7D,QACE0E,EAASxG,YA/BpB+G,EAgCiCP,EAASxG,WAhChB,SAACmC,GAC1B4D,EAAc5D,EAAO4E,EACvB,GA+BgB,WAEA,EACLxF,SAAA,CAEAiF,EAAShG,MACTgG,EAASxG,YAAc4F,IAAYY,EAASxG,YAC3C2B,EAAAA,EAAAA,KAACqF,EAAAA,EAAG,CAACC,UAAU,OAAOzE,GAAI0E,EAAAA,EAAe3F,SAC5B,SAAVoE,EAAmB,oBAAsB,qBAE1C,SAtBDa,EAASzG,IArBtB,IAACgH,CA6CuB,QAK5B,CAOA,SAASI,EAAqB1B,GAC5B,IAAQ2B,EAA6B3B,EAA7B2B,SAAUC,EAAmB5B,EAAnB4B,eAClBC,EAA8BC,EAAAA,SAAuB,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GACxDI,GADcF,EAAA,GAAYA,EAAA,GACwBD,EAAAA,SAAuB,IAAEI,GAAAF,EAAAA,EAAAA,GAAAC,EAAA,GAApEE,EAAiBD,EAAA,GAAEE,EAAoBF,EAAA,GAC9CG,EACEP,EAAAA,UAAwB,GAAMQ,GAAAN,EAAAA,EAAAA,GAAAK,EAAA,GADzBE,EAAkBD,EAAA,GAAEE,EAAqBF,EAAA,GAE1CtI,GAAWyI,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,MAEdC,GAAqBC,EAAAA,EAAAA,MAE3BC,GAA8BC,EAAAA,EAAAA,GAAYC,EAAAA,GAAa,CACrDC,UAAW,WACTL,EAAmB,CACjBM,SAAU,UACVC,QAAS,YAEXT,EAAYU,kBAAkB,CAAC,UACjC,EACAC,QAAS,SAACC,GACRV,EAAmB,CACjBM,SAAU,QACVC,QAASG,aAAiBC,MAAQD,EAAMH,QAAUK,KAAKC,UAAUH,IAErE,IAbMI,EAAMZ,EAANY,OAAQC,EAASb,EAATa,UAsBVC,EAAqB,WACzBtB,GAAsB,GACtBJ,EAAqB,GACrBR,EAAe,CAAC,EAClB,EACMmC,EAAgB,WACpBvB,GAAsB,GACtBZ,EAAe,CAAEhH,YAAauH,GAChC,EAgCA,OACExG,EAAAA,EAAAA,MAACqI,EAAAA,EAAO,CACNjH,IAAEkH,EAAAA,EAAAA,GAAA,CACAjI,SAAU,SACVkI,GAAI,CAAEC,GAAI,GACVC,GAAI,CAAEC,GAAI,EAAGF,GAAI,IACbxC,EAAS2C,OAAS,GAAK,CACzB3G,QAAS,SAACyB,GAAK,OACbmF,EAAAA,EAAAA,IACEnF,EAAMC,QAAQmF,QAAQC,KACtBrF,EAAMC,QAAQqF,OAAOC,iBACtB,IAEL7I,SAAA,CAED6F,EAAS2C,OAAS,GACjB3I,EAAAA,EAAAA,MAACiJ,EAAAA,EAAU,CACT7H,GAAI,CAAE8H,KAAM,YACZvH,MAAM,UACNwH,QAAQ,YACRtD,UAAU,MAAK1F,SAAA,CAEd6F,EAAS2C,OAAO,gBAGnBpI,EAAAA,EAAAA,KAAC0I,EAAAA,EAAU,CACT7H,GAAI,CACF8H,KAAM,WACN/E,WAAY,SACZ/D,aAAc,WACdC,SAAU,UAEZ8I,QAAQ,KACRxK,GAAG,aACHkH,UAAU,MAAK1F,SAChB,YAIHI,EAAAA,EAAAA,KAAC6I,EAAAA,EAAS,CACRhK,MAAM,eACNiK,MAAO7C,GAAqB,GAC5BvB,SAxFqB,SAAClE,GACtBuI,OAAOC,SAASD,OAAOvI,EAAMN,OAAO4I,UACtC5C,EAAqB6C,OAAOvI,EAAMN,OAAO4I,QACzCxC,GAAsB,GAE1B,EAoFM2C,QA1Ee,SAACzI,GACF,UAAdA,EAAM0I,MAGNjD,EACF4B,IAEAD,IAEJ,EAkEMrH,KAAK,WAEPP,EAAAA,EAAAA,KAACmJ,EAAAA,EAAO,CAACnI,MAAM,cAAapB,UACxByG,GAAuBJ,GACvBI,IAAuBJ,GAOvBjG,EAAAA,EAAAA,KAAA,QAAAJ,UACEI,EAAAA,EAAAA,KAACM,EAAAA,EAAU,CAACH,QAASyH,EAAmBhI,UACtCI,EAAAA,EAAAA,KAACoJ,EAAAA,EAAiB,SARtBpJ,EAAAA,EAAAA,KAAA,QAAAJ,UACEI,EAAAA,EAAAA,KAACM,EAAAA,EAAU,CAAC+I,UAAWpD,EAAmB9F,QAAS0H,EAAcjI,UAC/DI,EAAAA,EAAAA,KAACsJ,EAAAA,EAAc,WAWvB7J,EAAAA,EAAAA,MAAC4F,EAAAA,EAAG,CAACxE,GAAI,CAAE0I,EAAG,EAAG5J,QAAS,eAAgBC,SAAA,EACvC6F,EAAS2C,QAeRpI,EAAAA,EAAAA,KAACmJ,EAAAA,EAAO,CAACnI,MAAM,SAAQpB,UACrBI,EAAAA,EAAAA,KAAA,QAAAJ,UACEI,EAAAA,EAAAA,KAACM,EAAAA,EAAU,CAACH,QAlGF,WACpBqG,EAAS,WAAY,CACnBgD,SAAU,OACVC,MAAO,CAAEC,KAAM5L,GACf6L,SAAS,GAEb,EA4F+C/J,UACjCI,EAAAA,EAAAA,KAAC4J,EAAAA,EAAO,YAKhB5J,EAAAA,EAAAA,KAACmJ,EAAAA,EAAO,CAACnI,MAAM,OAAMpB,UACnBI,EAAAA,EAAAA,KAAA,QAAAJ,UACEI,EAAAA,EAAAA,KAACM,EAAAA,EAAU,CAAC+I,SAA8B,IAApB5D,EAAS2C,OAAcjI,QAnGnC,WAClBqG,EAAS,UAAD/H,OAAWgH,EAAS,IAAM,CAChC+D,SAAU,OACVC,MAAO,CAAEC,KAAM5L,GACf6L,SAAS,GAEb,EA6F4E/J,UAChEI,EAAAA,EAAAA,KAAC6J,EAAAA,EAAQ,WAIf7J,EAAAA,EAAAA,KAACmJ,EAAAA,EAAO,CAACnI,MAAM,SAAQpB,UACrBI,EAAAA,EAAAA,KAAA,QAAAJ,UACEI,EAAAA,EAAAA,KAACM,EAAAA,EAAU,CACT+I,SAA8B,IAApB5D,EAAS2C,OACnBjI,QArGU,WACpBuH,EAAO,GAADjJ,OAAIgH,EAAS,IACrB,EAmGmC7F,UAEvBI,EAAAA,EAAAA,KAAC8J,EAAAA,EAAU,cAKnB9J,EAAAA,EAAAA,KAAC+J,EAAAA,EAAM,CAACC,QAASrC,MAGvB,CAEe,SAASsC,IACtB,IAAAC,EAA0BtE,EAAAA,SAAkC,OAAMuE,GAAArE,EAAAA,EAAAA,GAAAoE,EAAA,GAA3DlG,EAAKmG,EAAA,GAAEC,EAAQD,EAAA,GACtBE,EAA8BzE,EAAAA,SAC5B,eACD0E,GAAAxE,EAAAA,EAAAA,GAAAuE,EAAA,GAFMpG,EAAOqG,EAAA,GAAEC,EAAUD,EAAA,GAG1BE,EAAgC5E,EAAAA,SAAkC,IAAG6E,GAAA3E,EAAAA,EAAAA,GAAA0E,EAAA,GAA9D/E,EAAQgF,EAAA,GAAEC,EAAWD,EAAA,GAC5BE,EAAwB/E,EAAAA,SAAuB,GAAEgF,GAAA9E,EAAAA,EAAAA,GAAA6E,EAAA,GAA1CE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,EAAsCnF,EAAAA,SAAuB,IAAGoF,GAAAlF,EAAAA,EAAAA,GAAAiF,EAAA,GAAzDE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,EAAsCvF,EAAAA,SAAoC,CAAC,GAAEwF,GAAAtF,EAAAA,EAAAA,GAAAqF,EAAA,GAAtEE,EAAWD,EAAA,GAAE1F,EAAc0F,EAAA,GAC5BE,EAAoB1F,EAAAA,OAAa,MACjC9H,GAAWyI,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXG,GAAqBC,EAAAA,EAAAA,MAC3B0E,GAAuBC,EAAAA,EAAAA,MAAd5J,GAAsBkE,EAAAA,EAAAA,GAAAyF,EAAA,GAAZ,GAEnBE,GAIIC,EAAAA,EAAAA,GAAS,CACXC,SAAU,CAAC,SAAUd,EAAMI,EAAahH,EAASD,EAAOqH,GACxDO,QAASC,EAAAA,GACTC,kBAAkB,EAClBC,OAAO,EACP1E,QAAS,SAACC,GACRV,EAAmB,CACjBM,SAAU,QACVC,QAASG,aAAiBC,MAAQD,EAAMH,QAAUK,KAAKC,UAAUH,IAErE,IAbAK,EAAS8D,EAAT9D,UACAqE,EAAUP,EAAVO,WAAUC,EAAAR,EACVjN,KAAI0N,QAAA,IAAAD,EAAqB,CAAEE,MAAO,GAAIC,MAAO,GAAGH,EAAxCE,GAAKD,GAALC,MAAOC,GAAKF,GAALE,MAaXC,GAAOF,IAAS,GAEtBvG,EAAAA,WAAgB,WACV0F,EAAkBgB,SACFhB,EAAkBgB,QAC1BC,SAAS,CACjBC,IAAK,EACLC,KAAM,EACNC,SAAU,UAGhB,GAAG,CAACL,KAEJzG,EAAAA,WAAgB,WACd,IAAM+G,EAAwB,GAC9BlH,EAASmH,SAAQ,SAACC,GACIR,GAAKS,MAAK,SAACvO,GAAG,OAAKA,EAAIH,KAAOyO,CAAY,KAE5DF,EAAYI,KAAKF,EAErB,IACAnC,EAAYiC,EACd,GAAG,CAACN,KAuEJ,OACE5M,EAAAA,EAAAA,MAAC4F,EAAAA,EAAG,CAACxE,GAAI,CAAEE,MAAO,OAAQD,OAAQ,QAASlB,SAAA,EACzCH,EAAAA,EAAAA,MAACuN,EAAAA,EAAK,CAACnM,GAAI,CAAEE,MAAO,OAAQD,OAAQ,OAAQmC,gBAAiB,SAAUrD,SAAA,EACrEI,EAAAA,EAAAA,KAACwF,EAAoB,CACnBC,SAAUA,EACVC,eAAgB,SAACuH,GACfvH,EAAeuH,GACfnC,EAAQ,EACV,KAEF9K,EAAAA,EAAAA,KAACkN,EAAAA,EAAc,CACbC,IAAK7B,EACLzK,GAAI,CAAEC,OAAQ,sBAAuBlB,UAErCH,EAAAA,EAAAA,MAAC2N,EAAAA,EAAK,CACJvM,GAAI,CAAEwM,SAAU,KAChB,kBAAgB,aAChB9M,KAAK,QACL+M,cAAY,EAAA1N,SAAA,EAEZI,EAAAA,EAAAA,KAAC6D,EAAiB,CAChBK,YAAauB,EAAS2C,OACtBpE,MAAOA,EACPC,QAASA,EACTF,iBA9EiB,SAACvD,GAC5B,GAAIA,EAAMN,OAAOuE,QAAjB,CACE,IAAMkI,EAAcN,GAAKzH,KAAI,SAAC2I,GAAQ,OAAKA,EAAEnP,EAAE,IAC/CsM,EAAYiC,EAEd,MACAjC,EAAY,GACd,EAwEYtG,cA9Fc,SACxB5D,EACA4E,GAEA,IAAMoI,EAAQvJ,IAAYmB,GAAsB,QAAVpB,EACvBC,IAAYmB,GAAsB,SAAVpB,GAErCoG,OAAS/J,GACTkK,OAAWlK,KAEX+J,EAASoD,EAAQ,OAAS,OAC1BjD,EAAWnF,GAEf,EAkFYjB,SAAUkI,GAAKjE,UAEjBpI,EAAAA,EAAAA,KAACyN,EAAAA,EAAS,CAAA7N,SACPyM,GAAKzH,KAAI,SAACrG,EAAKmP,GACd,IAhCM5L,EAgCA6L,GAhCA7L,EAgC4B,GAADrD,OAAIF,EAAIH,KAhCU,IAA5BqH,EAASmI,QAAQ9L,IAiClC+L,EAAO,2BAAApP,OAA8BiP,GAC3C,OACEjO,EAAAA,EAAAA,MAAC4E,EAAAA,EAAQ,CACPyJ,OAAK,EACLC,cAAe,SAACvN,GA5EhCgG,EAAS,UAAD/H,OA4EqDF,EA5ErCH,IAAM,CAC5BoL,SAAU,OACVC,MAAO,CAAEC,KAAM5L,GACf6L,SAAS,GAyEsD,EACjDqE,KAAK,WACL,eAAcL,EACdM,UAAW,EAEXxI,SAAUkI,EACV9M,GAAI,CAAEqN,OAAQ,WAAYtO,SAAA,EAE1BI,EAAAA,EAAAA,KAACsD,EAAe,CAACgB,QAAQ,WAAU1E,UACjCI,EAAAA,EAAAA,KAACuE,EAAAA,EAAQ,CACPnG,GAAE,GAAAK,OAAKoP,GACPzM,MAAM,UACNqD,QAASkJ,EACThJ,WAAY,CACV,kBAAmBkJ,GAErB1N,QAAS,SAACK,GAAK,OArFhB,SAACA,EAAkCsB,GACtDtB,EAAMJ,kBACN,IAAM+N,EAAgB1I,EAASmI,QAAQ9L,GACnC6K,EAAiC,IAEd,IAAnBwB,EACFxB,EAAcA,EAAYlO,OAAOgH,EAAU3D,GAChB,IAAlBqM,EACTxB,EAAcA,EAAYlO,OAAOgH,EAAS2I,MAAM,IACvCD,IAAkB1I,EAAS2C,OAAS,EAC7CuE,EAAcA,EAAYlO,OAAOgH,EAAS2I,MAAM,GAAI,IAC3CD,EAAgB,IACzBxB,EAAcA,EAAYlO,OACxBgH,EAAS2I,MAAM,EAAGD,GAClB1I,EAAS2I,MAAMD,EAAgB,KAInCzD,EAAYiC,EACd,CAkE0C0B,CAAa7N,EAAM,GAAD/B,OAAKF,EAAIH,IAAK,MAGvDD,EAAUyG,KAAI,SAAC0J,GACd,IAAMC,EAAWD,EAAKhQ,QAAQC,EAAKqD,GACnC,OACE5B,EAAAA,EAAAA,KAACsD,EAAe,CAEdtC,MAAOuN,EAASvN,MAChB8D,MAAOwJ,EAAK3P,QAAU,QAAU,SAASiB,SAExC2O,EAAS/P,MAJL8P,EAAKlQ,GAOhB,MA1BKG,EAAIH,GA6Bf,YAIN4B,EAAAA,EAAAA,KAACwO,EAAAA,EAAe,CACdC,mBAAoB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,IAC5CnJ,UAAU,MACVoJ,MAAOtC,GACPnB,YAAaA,EACbJ,KAAMA,EACN8D,aA3FiB,SAACnO,EAAgBoO,GACxC9D,EAAQ8D,EACV,EA0FQC,oBAxFwB,SAC9BrO,GAEA0K,EAAe4D,SAAStO,EAAMN,OAAO4I,MAAO,KAC5CgC,EAAQ,EACV,QAsFI9K,EAAAA,EAAAA,KAAC+J,EAAAA,EAAM,CAACC,QAASrC,GAAaqE,MAGpC,C,2BCryBI+C,EAAyBC,EAAQ,MAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,OAChDG,EAAcH,EAAQ,KACtBI,GAAW,EAAIF,EAAe7L,SAAS,EAAc,EAAI8L,EAAYE,KAAK,OAAQ,CACpFC,EAAG,mJACF,MAAmB,EAAIH,EAAYE,KAAK,OAAQ,CACjDC,EAAG,4CACF,MAAO,cACVL,EAAQ,EAAUG,C,2BCZdL,EAAyBC,EAAQ,MAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,OAChDG,EAAcH,EAAQ,KACtBI,GAAW,EAAIF,EAAe7L,UAAuB,EAAI8L,EAAYE,KAAK,OAAQ,CACpFC,EAAG,wCACD,OACJL,EAAQ,EAAUG,C,2BCVdL,EAAyBC,EAAQ,MAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,OAChDG,EAAcH,EAAQ,KACtBI,GAAW,EAAIF,EAAe7L,UAAuB,EAAI8L,EAAYE,KAAK,OAAQ,CACpFC,EAAG,kFACD,UACJL,EAAQ,EAAUG,C,2BCVdL,EAAyBC,EAAQ,MAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,OAChDG,EAAcH,EAAQ,KACtBI,GAAW,EAAIF,EAAe7L,UAAuB,EAAI8L,EAAYE,KAAK,OAAQ,CACpFC,EAAG,yJACD,QACJL,EAAQ,EAAUG,C,8JCJlB,GAAeG,EAAAA,EAAAA,IAA4BvP,EAAAA,EAAAA,KAAK,OAAQ,CACtDsP,EAAG,kHACD,U,oBCTG,SAASE,EAAsBC,GACpC,OAAOC,EAAAA,EAAAA,GAAqB,YAAaD,EAC3C,EACsBE,EAAAA,EAAAA,GAAuB,YAAa,CAAC,OAAQ,eAAgB,WAAY,UAAW,SAAU,MAAO,aAA3H,ICDMC,EAAY,CAAC,MAAO,WAAY,YAAa,YAAa,WAAY,QAAS,MAAO,SAAU,WAuBhGC,GAAa/M,EAAAA,EAAAA,IAAO,MAAO,CAC/BhB,KAAM,YACN2N,KAAM,OACNK,kBAAmB,SAAChM,EAAOiM,GACzB,IACEC,EACElM,EADFkM,WAEF,MAAO,CAACD,EAAOE,KAAMF,EAAOC,EAAWpH,SAAUoH,EAAWE,cAAgBH,EAAOG,aACrF,GARiBpN,EAShB,SAAAE,GAAA,IACDE,EAAKF,EAALE,MACA8M,EAAUhN,EAAVgN,WAAU,OACNG,EAAAA,EAAAA,GAAS,CACbC,SAAU,WACVzQ,QAAS,OACT0Q,WAAY,SACZC,eAAgB,SAChBC,WAAY,EACZxP,MAAO,GACPD,OAAQ,GACR0P,WAAYtN,EAAMuN,WAAWD,WAC7BE,SAAUxN,EAAMuN,WAAWE,QAAQ,IACnCC,WAAY,EACZC,aAAc,MACd/Q,SAAU,SACVgR,WAAY,QACY,YAAvBd,EAAWpH,SAAyB,CACrCiI,cAAe3N,EAAM6N,MAAQ7N,GAAO8N,MAAMH,cAClB,WAAvBb,EAAWpH,SAAwB,CACpCiI,aAAc,GACbb,EAAWE,eAAgBC,EAAAA,EAAAA,GAAS,CACrC/O,OAAQ8B,EAAM6N,MAAQ7N,GAAOC,QAAQC,WAAWC,SAC/CH,EAAM6N,KAAO,CACd9N,gBAAiBC,EAAM6N,KAAK5N,QAAQ3B,OAAOyP,WACzC,CACFhO,gBAAwC,UAAvBC,EAAMC,QAAQ+N,KAAmBhO,EAAMC,QAAQ9B,KAAK,KAAO6B,EAAMC,QAAQ9B,KAAK,OAC9F,IACG8P,GAAYrO,EAAAA,EAAAA,IAAO,MAAO,CAC9BhB,KAAM,YACN2N,KAAM,MACNK,kBAAmB,SAAChM,EAAOiM,GAAM,OAAKA,EAAOqB,GAAG,GAHhCtO,CAIf,CACD/B,MAAO,OACPD,OAAQ,OACRf,UAAW,SAEXsR,UAAW,QAEXjQ,MAAO,cAEPkQ,WAAY,MAERC,GAAiBzO,EAAAA,EAAAA,IAAO0O,EAAQ,CACpC1P,KAAM,YACN2N,KAAM,WACNK,kBAAmB,SAAChM,EAAOiM,GAAM,OAAKA,EAAO0B,QAAQ,GAHhC3O,CAIpB,CACD/B,MAAO,MACPD,OAAQ,QAwCV,IAoHA,EApH4B8E,EAAAA,YAAiB,SAAgB8L,EAASvE,GACpE,IAAMrJ,GAAQ6N,EAAAA,EAAAA,GAAc,CAC1B7N,MAAO4N,EACP5P,KAAM,cAGJ8P,EASE9N,EATF8N,IACUC,EAQR/N,EARFlE,SACAkS,EAOEhO,EAPFgO,UAASC,EAOPjO,EANFwB,UAAAA,OAAS,IAAAyM,EAAG,MAAKA,EACjBC,EAKElO,EALFkO,SACAC,EAIEnO,EAJFmO,MACAC,EAGEpO,EAHFoO,IACAC,EAEErO,EAFFqO,OAAMC,EAEJtO,EADF8E,QAAAA,OAAO,IAAAwJ,EAAG,WAAUA,EAEtBC,GAAQC,EAAAA,EAAAA,GAA8BxO,EAAO8L,GAC3ChQ,EAAW,KAGT2S,EA1DR,SAAkB/O,GAKf,IAJDgP,EAAWhP,EAAXgP,YACAC,EAAcjP,EAAdiP,eACAP,EAAG1O,EAAH0O,IACAC,EAAM3O,EAAN2O,OAEAxM,EAA4BC,EAAAA,UAAe,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1C4M,EAAM1M,EAAA,GAAE6M,EAAS7M,EAAA,GA8BxB,OA7BAD,EAAAA,WAAgB,WACd,GAAKsM,GAAQC,EAAb,CAGAO,GAAU,GACV,IAAIzN,GAAS,EACP0N,EAAQ,IAAIC,MAmBlB,OAlBAD,EAAME,OAAS,WACR5N,GAGLyN,EAAU,SACZ,EACAC,EAAMG,QAAU,WACT7N,GAGLyN,EAAU,QACZ,EACAC,EAAMH,YAAcA,EACpBG,EAAMF,eAAiBA,EACvBE,EAAMT,IAAMA,EACRC,IACFQ,EAAMI,OAASZ,GAEV,WACLlN,GAAS,CACX,CAxBA,CAyBF,GAAG,CAACuN,EAAaC,EAAgBP,EAAKC,IAC/BI,CACT,CAqBiBS,EAAU7C,EAAAA,EAAAA,GAAS,CAAC,EAAG6B,EAAU,CAC9CE,IAAAA,EACAC,OAAAA,KAEIc,EAASf,GAAOC,EAChBe,EAAmBD,GAAqB,UAAXV,EAC7BvC,GAAaG,EAAAA,EAAAA,GAAS,CAAC,EAAGrM,EAAO,CACrCoM,cAAegD,EACf5N,UAAAA,EACAsD,QAAAA,IAEIuK,EA9IkB,SAAAnD,GACxB,IACEmD,EAGEnD,EAHFmD,QAIIC,EAAQ,CACZnD,KAAM,CAAC,OAFLD,EAFFpH,QAEEoH,EADFE,cAGwC,gBACxCkB,IAAK,CAAC,OACNK,SAAU,CAAC,aAEb,OAAO4B,EAAAA,EAAAA,GAAeD,EAAO5D,EAAuB2D,EACtD,CAkIkBG,CAAkBtD,GAoBlC,OAlBEpQ,EADEsT,GACsBlT,EAAAA,EAAAA,KAAKmR,GAAWhB,EAAAA,EAAAA,GAAS,CAC/CyB,IAAKA,EACLO,OAAQA,EACRD,IAAKA,EACLD,MAAOA,EACPjC,WAAYA,EACZ8B,UAAWqB,EAAQ/B,KAClBY,IACsB,MAAhBH,EACEA,EACFoB,GAAUrB,EACRA,EAAI,IAES5R,EAAAA,EAAAA,KAAKuR,EAAgB,CAC3CvB,WAAYA,EACZ8B,UAAWqB,EAAQ1B,YAGHzR,EAAAA,EAAAA,KAAK6P,GAAYM,EAAAA,EAAAA,GAAS,CAC5CoD,GAAIjO,EACJ0K,WAAYA,EACZ8B,WAAW0B,EAAAA,EAAAA,GAAKL,EAAQlD,KAAM6B,GAC9B3E,IAAKA,GACJkF,EAAO,CACRzS,SAAUA,IAEd,G","sources":["trucks/setWillBeAvailable.tsx","trucks/trucks.tsx","../node_modules/@mui/icons-material/AccessTime.js","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/icons-material/Edit.js","../node_modules/@mui/material/internal/svg-icons/Person.js","../node_modules/@mui/material/Avatar/avatarClasses.js","../node_modules/@mui/material/Avatar/Avatar.js"],"sourcesContent":["import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\n\r\nimport { Loader, SearchLocationField, DateTimeField } from '../components';\r\n\r\nimport { TruckUpdate } from '../api';\r\nimport { useSnackbar } from '../hooks';\r\nimport { UpdateTruck, TruckStatus } from '../utils/dataTypes';\r\nimport { TransitionProps } from '@mui/material/transitions';\r\nimport Slide from '@mui/material/Slide';\r\n\r\nconst validationSchema = yup.object({\r\n  availabilityLocation: yup\r\n    .object({\r\n      formatted_address: yup.string().required(),\r\n      geometry: yup\r\n        .object({\r\n          location: yup\r\n            .object({\r\n              lat: yup.mixed().required(),\r\n              lng: yup.mixed().required(),\r\n            })\r\n            .required(),\r\n        })\r\n        .required(),\r\n    })\r\n    .required('Will be available location is required'),\r\n  availabilityAt: yup\r\n    .date()\r\n    .typeError('Enter correct date')\r\n    .required('Will be available date is required'),\r\n});\r\n\r\nconst initialValues = {\r\n  id: '',\r\n  status: 'Will be available' as TruckStatus,\r\n  availabilityLocation: null,\r\n  availabilityAt: undefined,\r\n};\r\n\r\nconst Transition = React.forwardRef(function Transition(\r\n  props: TransitionProps & {\r\n    children: React.ReactElement<any, any>;\r\n  },\r\n  ref: React.Ref<unknown>,\r\n) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function SetWillBeAvailableDialog({\r\n  truckId,\r\n  setTruckId,\r\n}: {\r\n  truckId: string;\r\n  setTruckId: React.Dispatch<React.SetStateAction<string>>;\r\n}) {\r\n  const navigate = useNavigate();\r\n  const queryClient = useQueryClient();\r\n  const setSnackbarMessage = useSnackbar();\r\n\r\n  const { mutate, isLoading } = useMutation(TruckUpdate, {\r\n    onSuccess: () => {\r\n      setSnackbarMessage({\r\n        severity: 'success',\r\n        message: 'Will be available set',\r\n      });\r\n      setTruckId('');\r\n    },\r\n    onError: (error: Error) => {\r\n      setSnackbarMessage({\r\n        severity: 'error',\r\n        message: error instanceof Error ? error.message : JSON.stringify(error),\r\n      });\r\n    },\r\n  });\r\n\r\n  const formik = useFormik<UpdateTruck>({\r\n    initialValues: { ...initialValues, id: truckId },\r\n    enableReinitialize: true,\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      console.log(values);\r\n      values.availabilityLocation = [\r\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n        // @ts-ignore\r\n        values.availabilityLocation.geometry.location.lat(),\r\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n        // @ts-ignore\r\n        values.availabilityLocation.geometry.location.lng(),\r\n      ];\r\n      mutate(values as unknown as UpdateTruck);\r\n    },\r\n  });\r\n\r\n  const handleClose = () => {\r\n    setTruckId('');\r\n  };\r\n  const handleDialogClose = () => {\r\n    setTruckId('');\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={!!truckId}\r\n      TransitionComponent={Transition}\r\n      keepMounted\r\n      onClose={handleDialogClose}\r\n      aria-describedby=\"alert-dialog-set-will-be-available\"\r\n      PaperProps={{ sx: { width: '600px' } }}\r\n    >\r\n      <DialogTitle>\r\n        <span>Set \"Will ba available\"</span>\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <form onSubmit={formik.handleSubmit} onReset={formik.handleReset}>\r\n          <Box sx={{ display: 'grid' }}>\r\n            <Box key=\"controls\" sx={{ display: 'inline-flex' }}>\r\n              <Box key=\"left\" sx={{ p: 1, width: '50%' }}>\r\n                <SearchLocationField\r\n                  fieldName=\"availabilityLocation\"\r\n                  label=\"Will be available at location\"\r\n                  formik={formik}\r\n                />\r\n              </Box>\r\n              <Box key=\"right\" sx={{ p: 1, width: '50%' }}>\r\n                <DateTimeField\r\n                  fieldName=\"availabilityAt\"\r\n                  label=\"Will be available at date\"\r\n                  disablePast\r\n                  formik={formik}\r\n                />\r\n              </Box>\r\n            </Box>\r\n            <Box key=\"buttons\" sx={{ display: 'inline-flex' }}>\r\n              <Box key=\"left\" sx={{ p: 1, paddingTop: 0, width: '50%' }}>\r\n                <Button\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  size=\"small\"\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                >\r\n                  Set\r\n                </Button>\r\n              </Box>\r\n              <Box key=\"right\" sx={{ p: 1, paddingTop: 0, width: '50%' }}>\r\n                <Button\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  size=\"small\"\r\n                  color=\"primary\"\r\n                  type=\"button\"\r\n                  onClick={handleClose}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n        </form>\r\n        <Loader visible={isLoading} />\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\r\n\r\nimport { alpha, styled } from '@mui/material/styles';\r\nimport TextField from '@mui/material/TextField';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport Box from '@mui/material/Box';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableSortLabel from '@mui/material/TableSortLabel';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport FilterListIcon from '@mui/icons-material/FilterList';\r\nimport FilterListOffIcon from '@mui/icons-material/FilterListOff';\r\nimport LocalShipping from '@mui/icons-material/LocalShipping';\r\nimport ContentCopy from '@mui/icons-material/ContentCopy';\r\nimport AccessTime from '@mui/icons-material/AccessTime';\r\nimport { visuallyHidden } from '@mui/utils';\r\nimport { green, grey, orange } from '@mui/material/colors';\r\n\r\nimport SetWillBeAvailableDialog from './setWillBeAvailable';\r\n\r\nimport Loader from '../components/Loader';\r\n\r\nimport { TrucksQuery, TruckDelete } from '../api';\r\nimport { useMap, useSnackbar } from '../hooks';\r\nimport { Order, Truck } from '../utils/dataTypes';\r\nimport { getPath, getType } from '../utils/queryHelpers';\r\nimport { stopPropagation } from '../utils/stopPropagation';\r\n\r\ninterface HeadCell {\r\n  id: string;\r\n  disablePadding: boolean;\r\n  orderField?: keyof Truck;\r\n  getData: (\r\n    row: Truck,\r\n    setMapData: any,\r\n  ) => { data: JSX.Element | string; title?: string };\r\n  label: string;\r\n  numeric: boolean;\r\n}\r\n\r\nconst headCells: readonly HeadCell[] = [\r\n  {\r\n    id: 'truckNumber',\r\n    orderField: 'truckNumber',\r\n    getData: (row) => ({ data: `${row.truckNumber}` }),\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Truck Number',\r\n  },\r\n  {\r\n    id: 'mainContactInfo',\r\n    getData: (row) => {\r\n      const person = row.coordinator || row.owner;\r\n      let path = '';\r\n      let type = '';\r\n      let firstRow = '';\r\n      let secondRow = '';\r\n      if (person) {\r\n        path = `./${getPath(person)}/view/${person.id}`;\r\n        type = `${getType(person)} `;\r\n        firstRow = `${person.fullName}`;\r\n        secondRow = `${person?.phone}`;\r\n      }\r\n      return {\r\n        data: (\r\n          <span style={{ display: 'flex' }}>\r\n            <span\r\n              style={{\r\n                textOverflow: 'ellipsis',\r\n                overflow: 'hidden',\r\n                textAlign: 'left',\r\n              }}\r\n            >\r\n              <b>{type}</b>\r\n              <a href={path} target=\"_blank\" onClick={stopPropagation}>\r\n                {firstRow}\r\n              </a>\r\n              <br />\r\n              <a\r\n                href={secondRow ? `tel:${secondRow}` : undefined}\r\n                target=\"_blank\"\r\n                onClick={stopPropagation}\r\n              >\r\n                {secondRow || ' '}\r\n              </a>\r\n            </span>\r\n            <IconButton\r\n              size=\"small\"\r\n              onClick={(event) => {\r\n                stopPropagation(event);\r\n                navigator.clipboard.writeText(firstRow + ' ' + secondRow);\r\n              }}\r\n            >\r\n              <ContentCopy sx={{ height: '16px', width: '16px' }} />\r\n            </IconButton>\r\n          </span>\r\n        ),\r\n        title: type + '' + firstRow + '\\n' + secondRow,\r\n      };\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Main Contact info',\r\n  },\r\n  {\r\n    id: 'status',\r\n    orderField: 'status',\r\n    getData: (row) => {\r\n      const status = `${row.status}`;\r\n      const val = (() => {\r\n        switch (status) {\r\n          case 'Will be available':\r\n            return (\r\n              <AccessTime\r\n                sx={{ height: '24px', width: '24px', color: grey[900] }}\r\n              />\r\n            );\r\n          case 'On route':\r\n            return (\r\n              <LocalShipping\r\n                sx={{ height: '24px', width: '24px', color: orange[500] }}\r\n              />\r\n            );\r\n          case 'Available':\r\n            return (\r\n              <Avatar\r\n                sx={{\r\n                  height: '24px',\r\n                  width: '24px',\r\n                  bgcolor: green[500],\r\n                  margin: 'auto',\r\n                }}\r\n              >\r\n                A\r\n              </Avatar>\r\n            );\r\n          case 'Not Available':\r\n            return (\r\n              <Avatar\r\n                sx={{\r\n                  height: '24px',\r\n                  width: '24px',\r\n                  bgcolor: grey[500],\r\n                  margin: 'auto',\r\n                }}\r\n              >\r\n                N\r\n              </Avatar>\r\n            );\r\n          default:\r\n            return status;\r\n        }\r\n      })();\r\n\r\n      return {\r\n        data: <span>{val}</span>,\r\n        title: status,\r\n      };\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Status',\r\n  },\r\n  {\r\n    id: 'location',\r\n    getData: (row, setMapData) => {\r\n      const onRefClick = (event: React.SyntheticEvent) => {\r\n        event.preventDefault();\r\n        stopPropagation(event);\r\n        setMapData([row]);\r\n      };\r\n\r\n      if (row?.lastCity) {\r\n        const path = `./locations/view/${row.lastCity.id}`;\r\n        const firstRow = `${row.lastCity.name}, ${row.lastCity.stateCode}, ${row.lastCity.zipCode}`;\r\n        const secondRow = `${\r\n          row.locationUpdatedAt\r\n            ? new Date(row.locationUpdatedAt).toLocaleString()\r\n            : ''\r\n        }`;\r\n\r\n        return {\r\n          data: (\r\n            <span style={{ display: 'flex' }}>\r\n              <span\r\n                style={{\r\n                  textOverflow: 'ellipsis',\r\n                  overflow: 'hidden',\r\n                }}\r\n              >\r\n                <a href={path} target=\"_blank\" onClick={onRefClick}>\r\n                  {firstRow}\r\n                </a>\r\n                <br />\r\n                {secondRow}\r\n              </span>\r\n              <IconButton\r\n                size=\"small\"\r\n                onClick={(event) => {\r\n                  stopPropagation(event);\r\n                  navigator.clipboard.writeText(firstRow);\r\n                }}\r\n              >\r\n                <ContentCopy sx={{ height: '16px', width: '16px' }} />\r\n              </IconButton>\r\n            </span>\r\n          ),\r\n          title: firstRow + '\\n' + secondRow,\r\n        };\r\n      } else {\r\n        return { data: '' };\r\n      }\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Last known location',\r\n  },\r\n  {\r\n    id: 'truckInfo',\r\n    getData: (row) => {\r\n      const firstRow = row.type ? `${row.type}` : '';\r\n      const secondRow = row.equipment ? `${row.equipment.join(', ')}` : '';\r\n\r\n      return {\r\n        data: (\r\n          <span>\r\n            {firstRow}\r\n            <br />\r\n            {secondRow}\r\n          </span>\r\n        ),\r\n        title: firstRow + '\\n' + secondRow,\r\n      };\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Truck info',\r\n  },\r\n  {\r\n    id: 'dimsAndPayload',\r\n    getData: (row) => {\r\n      const firstRowPart1 = row.insideDims ? `${row.insideDims}` : '';\r\n      const firstRowPart2 = row.doorDims ? `${row.doorDims}` : '';\r\n      const secondRow = row.payload ? `${row.payload}` : '';\r\n\r\n      return {\r\n        data: (\r\n          <span>\r\n            {(firstRowPart1 ? firstRowPart1 + ' ' : '') + firstRowPart2}\r\n            <br />\r\n            {secondRow}\r\n          </span>\r\n        ),\r\n        title:\r\n          (firstRowPart1 ? firstRowPart1 + ' Inside ' : '') +\r\n          (firstRowPart2 ? firstRowPart2 + ' Door ' : '') +\r\n          '\\n' +\r\n          secondRow +\r\n          ' Payload',\r\n      };\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'DIMS/Payload',\r\n  },\r\n  {\r\n    id: 'driverInfo',\r\n    getData: (row) => {\r\n      const driver = row.driver;\r\n      let path = '';\r\n      let type = '';\r\n      let firstRow = '';\r\n      let secondRow = '';\r\n      if (driver) {\r\n        path = `./${getPath(driver)}/view/${driver.id}`;\r\n        type = `${getType(driver)} `;\r\n        firstRow = `${driver.fullName}`;\r\n        secondRow = `${driver.phone}`;\r\n      }\r\n      return {\r\n        data: (\r\n          <span>\r\n            <b>{type}</b>\r\n            <a\r\n              href={firstRow ? path : undefined}\r\n              target=\"_blank\"\r\n              onClick={stopPropagation}\r\n            >\r\n              {firstRow}\r\n            </a>\r\n            <br />\r\n            <a\r\n              href={secondRow ? `tel:${secondRow}` : undefined}\r\n              target=\"_blank\"\r\n              onClick={stopPropagation}\r\n            >\r\n              {secondRow || ' '}\r\n            </a>\r\n          </span>\r\n        ),\r\n        title: type + '' + firstRow + '\\n' + secondRow,\r\n      };\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Driver info',\r\n  },\r\n];\r\n\r\ninterface EnhancedTableProps {\r\n  numSelected: number;\r\n  onRequestSort: (\r\n    event: React.MouseEvent<unknown>,\r\n    property: keyof Truck,\r\n  ) => void;\r\n  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n  order: Order | undefined;\r\n  orderBy: string | undefined;\r\n  rowCount: number;\r\n}\r\n\r\nconst StyledTableHead = styled(TableHead)(({ theme }) => ({\r\n  backgroundColor: theme.palette.background.default,\r\n}));\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n  maxWidth: '100px',\r\n  paddingTop: '6px',\r\n  paddingBottom: '6px',\r\n  whiteSpace: 'nowrap',\r\n  textOverflow: 'ellipsis',\r\n  overflow: 'hidden',\r\n}));\r\n\r\nfunction EnhancedTableHead(props: EnhancedTableProps) {\r\n  const {\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n  const createSortHandler =\r\n    (property: keyof Truck) => (event: React.MouseEvent<unknown>) => {\r\n      onRequestSort(event, property);\r\n    };\r\n\r\n  return (\r\n    <StyledTableHead>\r\n      <TableRow>\r\n        <StyledTableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            name={'enhanced-table-checkbox-select-all'}\r\n            color=\"primary\"\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{\r\n              'aria-label': 'enhanced-table-checkbox-select-all',\r\n            }}\r\n          />\r\n        </StyledTableCell>\r\n        {headCells.map((headCell) => (\r\n          <StyledTableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'center'}\r\n            padding={headCell.disablePadding ? 'none' : 'normal'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={headCell.orderField && orderBy === headCell.orderField}\r\n              hideSortIcon={!headCell.orderField}\r\n              direction={orderBy === headCell.orderField ? order : 'asc'}\r\n              onClick={\r\n                headCell.orderField\r\n                  ? createSortHandler(headCell.orderField)\r\n                  : () => {\r\n                      return;\r\n                    }\r\n              }\r\n            >\r\n              {headCell.label}\r\n              {headCell.orderField && orderBy === headCell.orderField ? (\r\n                <Box component=\"span\" sx={visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </Box>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </StyledTableCell>\r\n        ))}\r\n      </TableRow>\r\n    </StyledTableHead>\r\n  );\r\n}\r\n\r\ninterface EnhancedTableToolbarProps {\r\n  selected: readonly string[];\r\n  setQueryParams: React.Dispatch<React.SetStateAction<Record<string, number>>>;\r\n}\r\n\r\nfunction EnhancedTableToolbar(props: EnhancedTableToolbarProps) {\r\n  const { selected, setQueryParams } = props;\r\n  const [truckId, setTruckId] = React.useState<string>('');\r\n  const [truckNumberSearch, setTruckNumberSearch] = React.useState<number>(0);\r\n  const [truckNumberChanged, setTruckNumberChanged] =\r\n    React.useState<boolean>(false);\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const queryClient = useQueryClient();\r\n\r\n  const setSnackbarMessage = useSnackbar();\r\n\r\n  const { mutate, isLoading } = useMutation(TruckDelete, {\r\n    onSuccess: () => {\r\n      setSnackbarMessage({\r\n        severity: 'success',\r\n        message: 'Deleted',\r\n      });\r\n      queryClient.invalidateQueries(['trucks']);\r\n    },\r\n    onError: (error: Error) => {\r\n      setSnackbarMessage({\r\n        severity: 'error',\r\n        message: error instanceof Error ? error.message : JSON.stringify(error),\r\n      });\r\n    },\r\n  });\r\n\r\n  const truckNumberHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (Number.isFinite(Number(event.target.value))) {\r\n      setTruckNumberSearch(Number(event.target.value));\r\n      setTruckNumberChanged(true);\r\n    }\r\n  };\r\n  const filterClearHandler = () => {\r\n    setTruckNumberChanged(false);\r\n    setTruckNumberSearch(0);\r\n    setQueryParams({});\r\n  };\r\n  const filterHandler = () => {\r\n    setTruckNumberChanged(false);\r\n    setQueryParams({ truckNumber: truckNumberSearch });\r\n  };\r\n  const keyUpHandler = (event: React.KeyboardEvent) => {\r\n    if (event.key !== 'Enter') {\r\n      return;\r\n    }\r\n    if (truckNumberSearch) {\r\n      filterHandler();\r\n    } else {\r\n      filterClearHandler();\r\n    }\r\n  };\r\n  const openWBADialogHandler = () => {\r\n    setTruckId(selected[0]);\r\n  };\r\n  const createHandler = () => {\r\n    navigate('./create', {\r\n      relative: 'path',\r\n      state: { from: location },\r\n      replace: false,\r\n    });\r\n  };\r\n  const editHandler = () => {\r\n    navigate(`./edit/${selected[0]}`, {\r\n      relative: 'path',\r\n      state: { from: location },\r\n      replace: false,\r\n    });\r\n  };\r\n  const deleteHandler = () => {\r\n    mutate(`${selected[0]}`);\r\n  };\r\n\r\n  return (\r\n    <Toolbar\r\n      sx={{\r\n        overflow: 'hidden',\r\n        pl: { sm: 2 },\r\n        pr: { xs: 1, sm: 1 },\r\n        ...(selected.length > 0 && {\r\n          bgcolor: (theme) =>\r\n            alpha(\r\n              theme.palette.primary.main,\r\n              theme.palette.action.activatedOpacity,\r\n            ),\r\n        }),\r\n      }}\r\n    >\r\n      {selected.length > 0 ? (\r\n        <Typography\r\n          sx={{ flex: '1 1 100%' }}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {selected.length} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          sx={{\r\n            flex: '1 1 100%',\r\n            whiteSpace: 'nowrap',\r\n            textOverflow: 'ellipsis',\r\n            overflow: 'hidden',\r\n          }}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          Trucks\r\n        </Typography>\r\n      )}\r\n      <TextField\r\n        label=\"Truck Number\"\r\n        value={truckNumberSearch || ''}\r\n        onChange={truckNumberHandler}\r\n        onKeyUp={keyUpHandler}\r\n        size=\"small\"\r\n      />\r\n      <Tooltip title=\"Filter list\">\r\n        {(truckNumberChanged || !truckNumberSearch) &&\r\n        !(truckNumberChanged && !truckNumberSearch) ? (\r\n          <span>\r\n            <IconButton disabled={!truckNumberSearch} onClick={filterHandler}>\r\n              <FilterListIcon />\r\n            </IconButton>\r\n          </span>\r\n        ) : (\r\n          <span>\r\n            <IconButton onClick={filterClearHandler}>\r\n              <FilterListOffIcon />\r\n            </IconButton>\r\n          </span>\r\n        )}\r\n      </Tooltip>\r\n      <Box sx={{ p: 1, display: 'inline-flex' }}>\r\n        {selected.length === 1 && false ? (\r\n          <>\r\n            <Tooltip title=\"Set Will be available\">\r\n              <span>\r\n                <IconButton onClick={openWBADialogHandler}>\r\n                  <AccessTime />\r\n                </IconButton>\r\n              </span>\r\n            </Tooltip>\r\n            <SetWillBeAvailableDialog\r\n              truckId={truckId}\r\n              setTruckId={setTruckId}\r\n            />\r\n          </>\r\n        ) : (\r\n          <Tooltip title=\"Create\">\r\n            <span>\r\n              <IconButton onClick={createHandler}>\r\n                <AddIcon />\r\n              </IconButton>\r\n            </span>\r\n          </Tooltip>\r\n        )}\r\n        <Tooltip title=\"Edit\">\r\n          <span>\r\n            <IconButton disabled={selected.length !== 1} onClick={editHandler}>\r\n              <EditIcon />\r\n            </IconButton>\r\n          </span>\r\n        </Tooltip>\r\n        <Tooltip title=\"Delete\">\r\n          <span>\r\n            <IconButton\r\n              disabled={selected.length !== 1}\r\n              onClick={deleteHandler}\r\n            >\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </span>\r\n        </Tooltip>\r\n      </Box>\r\n      <Loader visible={isLoading} />\r\n    </Toolbar>\r\n  );\r\n}\r\n\r\nexport default function EnhancedTable() {\r\n  const [order, setOrder] = React.useState<Order | undefined>('asc');\r\n  const [orderBy, setOrderBy] = React.useState<keyof Truck | undefined>(\r\n    'truckNumber',\r\n  );\r\n  const [selected, setSelected] = React.useState<readonly string[]>([]);\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState<number>(15);\r\n  const [queryParams, setQueryParams] = React.useState<Record<string, any>>({});\r\n  const tableContainerRef = React.useRef(null);\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const setSnackbarMessage = useSnackbar();\r\n  const [, setMapData] = useMap();\r\n\r\n  const {\r\n    isLoading,\r\n    isFetching,\r\n    data: { items, total } = { items: [], total: 0 },\r\n  } = useQuery({\r\n    queryKey: ['trucks', page, rowsPerPage, orderBy, order, queryParams],\r\n    queryFn: TrucksQuery,\r\n    keepPreviousData: true,\r\n    retry: false,\r\n    onError: (error: Error) => {\r\n      setSnackbarMessage({\r\n        severity: 'error',\r\n        message: error instanceof Error ? error.message : JSON.stringify(error),\r\n      });\r\n    },\r\n  });\r\n  const rows = items || [];\r\n\r\n  React.useEffect(() => {\r\n    if (tableContainerRef.current) {\r\n      const container = tableContainerRef.current as HTMLElement;\r\n      container.scrollTo({\r\n        top: 0,\r\n        left: 0,\r\n        behavior: 'smooth',\r\n      });\r\n    }\r\n  }, [rows]);\r\n\r\n  React.useEffect(() => {\r\n    const newSelected: string[] = [];\r\n    selected.forEach((selectedItem) => {\r\n      const selectedRow = rows.find((row) => row.id === selectedItem);\r\n      if (selectedRow) {\r\n        newSelected.push(selectedItem);\r\n      }\r\n    });\r\n    setSelected(newSelected);\r\n  }, [rows]);\r\n\r\n  const handleRequestSort = (\r\n    event: React.MouseEvent<unknown>,\r\n    property: keyof Truck,\r\n  ) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    const isDesc = orderBy === property && order === 'desc';\r\n    if (isDesc) {\r\n      setOrder(undefined);\r\n      setOrderBy(undefined);\r\n    } else {\r\n      setOrder(isAsc ? 'desc' : 'asc');\r\n      setOrderBy(property);\r\n    }\r\n  };\r\n\r\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (event.target.checked) {\r\n      const newSelected = rows.map((n: Truck) => n.id);\r\n      setSelected(newSelected);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (\r\n    event: React.MouseEvent<unknown>,\r\n    item: (typeof rows)[number],\r\n  ) => {\r\n    navigate(`./view/${item.id}`, {\r\n      relative: 'path',\r\n      state: { from: location },\r\n      replace: false,\r\n    });\r\n  };\r\n\r\n  const handleSelect = (event: React.MouseEvent<unknown>, name: string) => {\r\n    event.stopPropagation();\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected: readonly string[] = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event: unknown, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (\r\n    event: React.ChangeEvent<HTMLInputElement>,\r\n  ) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const isSelected = (name: string) => selected.indexOf(name) !== -1;\r\n\r\n  return (\r\n    <Box sx={{ width: '100%', height: '100%' }}>\r\n      <Paper sx={{ width: '100%', height: '100%', backgroundColor: 'unset' }}>\r\n        <EnhancedTableToolbar\r\n          selected={selected}\r\n          setQueryParams={(query) => {\r\n            setQueryParams(query);\r\n            setPage(0);\r\n          }}\r\n        />\r\n        <TableContainer\r\n          ref={tableContainerRef}\r\n          sx={{ height: 'calc(100% - 115px)' }}\r\n        >\r\n          <Table\r\n            sx={{ minWidth: 750 }}\r\n            aria-labelledby=\"tableTitle\"\r\n            size=\"small\"\r\n            stickyHeader\r\n          >\r\n            <EnhancedTableHead\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {rows.map((row, index) => {\r\n                const isItemSelected = isSelected(`${row.id}`);\r\n                const labelId = `enhanced-table-checkbox-${index}`;\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    onDoubleClick={(event) => handleClick(event, row)}\r\n                    role=\"checkbox\"\r\n                    aria-checked={isItemSelected}\r\n                    tabIndex={-1}\r\n                    key={row.id}\r\n                    selected={isItemSelected}\r\n                    sx={{ cursor: 'pointer' }}\r\n                  >\r\n                    <StyledTableCell padding=\"checkbox\">\r\n                      <Checkbox\r\n                        id={`${labelId}`}\r\n                        color=\"primary\"\r\n                        checked={isItemSelected}\r\n                        inputProps={{\r\n                          'aria-labelledby': labelId,\r\n                        }}\r\n                        onClick={(event) => handleSelect(event, `${row.id}`)}\r\n                      />\r\n                    </StyledTableCell>\r\n                    {headCells.map((cell) => {\r\n                      const cellData = cell.getData(row, setMapData);\r\n                      return (\r\n                        <StyledTableCell\r\n                          key={cell.id}\r\n                          title={cellData.title}\r\n                          align={cell.numeric ? 'right' : 'center'}\r\n                        >\r\n                          {cellData.data}\r\n                        </StyledTableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 15, 20, 25, 35, 50]}\r\n          component=\"div\"\r\n          count={total}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <Loader visible={isLoading || isFetching} />\r\n    </Box>\r\n  );\r\n}\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z\"\n}, \"1\")], 'AccessTime');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\nexports.default = _default;","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getAvatarUtilityClass(slot) {\n  return generateUtilityClass('MuiAvatar', slot);\n}\nconst avatarClasses = generateUtilityClasses('MuiAvatar', ['root', 'colorDefault', 'circular', 'rounded', 'square', 'img', 'fallback']);\nexport default avatarClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"alt\", \"children\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Person from '../internal/svg-icons/Person';\nimport { getAvatarUtilityClass } from './avatarClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    colorDefault\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, colorDefault && 'colorDefault'],\n    img: ['img'],\n    fallback: ['fallback']\n  };\n  return composeClasses(slots, getAvatarUtilityClass, classes);\n};\nconst AvatarRoot = styled('div', {\n  name: 'MuiAvatar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.colorDefault && styles.colorDefault];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  position: 'relative',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  flexShrink: 0,\n  width: 40,\n  height: 40,\n  fontFamily: theme.typography.fontFamily,\n  fontSize: theme.typography.pxToRem(20),\n  lineHeight: 1,\n  borderRadius: '50%',\n  overflow: 'hidden',\n  userSelect: 'none'\n}, ownerState.variant === 'rounded' && {\n  borderRadius: (theme.vars || theme).shape.borderRadius\n}, ownerState.variant === 'square' && {\n  borderRadius: 0\n}, ownerState.colorDefault && _extends({\n  color: (theme.vars || theme).palette.background.default\n}, theme.vars ? {\n  backgroundColor: theme.vars.palette.Avatar.defaultBg\n} : {\n  backgroundColor: theme.palette.mode === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n})));\nconst AvatarImg = styled('img', {\n  name: 'MuiAvatar',\n  slot: 'Img',\n  overridesResolver: (props, styles) => styles.img\n})({\n  width: '100%',\n  height: '100%',\n  textAlign: 'center',\n  // Handle non-square image. The property isn't supported by IE11.\n  objectFit: 'cover',\n  // Hide alt text.\n  color: 'transparent',\n  // Hide the image broken icon, only works on Chrome.\n  textIndent: 10000\n});\nconst AvatarFallback = styled(Person, {\n  name: 'MuiAvatar',\n  slot: 'Fallback',\n  overridesResolver: (props, styles) => styles.fallback\n})({\n  width: '75%',\n  height: '75%'\n});\nfunction useLoaded({\n  crossOrigin,\n  referrerPolicy,\n  src,\n  srcSet\n}) {\n  const [loaded, setLoaded] = React.useState(false);\n  React.useEffect(() => {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n    setLoaded(false);\n    let active = true;\n    const image = new Image();\n    image.onload = () => {\n      if (!active) {\n        return;\n      }\n      setLoaded('loaded');\n    };\n    image.onerror = () => {\n      if (!active) {\n        return;\n      }\n      setLoaded('error');\n    };\n    image.crossOrigin = crossOrigin;\n    image.referrerPolicy = referrerPolicy;\n    image.src = src;\n    if (srcSet) {\n      image.srcset = srcSet;\n    }\n    return () => {\n      active = false;\n    };\n  }, [crossOrigin, referrerPolicy, src, srcSet]);\n  return loaded;\n}\nconst Avatar = /*#__PURE__*/React.forwardRef(function Avatar(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAvatar'\n  });\n  const {\n      alt,\n      children: childrenProp,\n      className,\n      component = 'div',\n      imgProps,\n      sizes,\n      src,\n      srcSet,\n      variant = 'circular'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  let children = null;\n\n  // Use a hook instead of onError on the img element to support server-side rendering.\n  const loaded = useLoaded(_extends({}, imgProps, {\n    src,\n    srcSet\n  }));\n  const hasImg = src || srcSet;\n  const hasImgNotFailing = hasImg && loaded !== 'error';\n  const ownerState = _extends({}, props, {\n    colorDefault: !hasImgNotFailing,\n    component,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/_jsx(AvatarImg, _extends({\n      alt: alt,\n      srcSet: srcSet,\n      src: src,\n      sizes: sizes,\n      ownerState: ownerState,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenProp != null) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/_jsx(AvatarFallback, {\n      ownerState: ownerState,\n      className: classes.fallback\n    });\n  }\n  return /*#__PURE__*/_jsx(AvatarRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attributes) applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   */\n  imgProps: PropTypes.object,\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The shape of the avatar.\n   * @default 'circular'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rounded', 'square']), PropTypes.string])\n} : void 0;\nexport default Avatar;"],"names":["yup","availabilityLocation","formatted_address","required","geometry","location","lat","lng","availabilityAt","typeError","headCells","id","orderField","getData","row","data","concat","truckNumber","numeric","disablePadding","label","person","coordinator","owner","path","type","firstRow","secondRow","getPath","getType","fullName","phone","_jsxs","style","display","children","textOverflow","overflow","textAlign","_jsx","href","target","onClick","stopPropagation","undefined","IconButton","size","event","navigator","clipboard","writeText","ContentCopy","sx","height","width","title","status","val","AccessTime","color","grey","LocalShipping","orange","Avatar","bgcolor","green","margin","setMapData","lastCity","name","stateCode","zipCode","locationUpdatedAt","Date","toLocaleString","preventDefault","equipment","join","firstRowPart1","insideDims","firstRowPart2","doorDims","payload","driver","StyledTableHead","styled","TableHead","_ref","backgroundColor","theme","palette","background","default","StyledTableCell","TableCell","_ref2","maxWidth","paddingTop","paddingBottom","whiteSpace","EnhancedTableHead","props","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","TableRow","padding","Checkbox","indeterminate","checked","onChange","inputProps","map","headCell","align","sortDirection","TableSortLabel","active","hideSortIcon","direction","property","Box","component","visuallyHidden","EnhancedTableToolbar","selected","setQueryParams","_React$useState","React","_React$useState2","_slicedToArray","_React$useState3","_React$useState4","truckNumberSearch","setTruckNumberSearch","_React$useState5","_React$useState6","truckNumberChanged","setTruckNumberChanged","useLocation","navigate","useNavigate","queryClient","useQueryClient","setSnackbarMessage","useSnackbar","_useMutation","useMutation","TruckDelete","onSuccess","severity","message","invalidateQueries","onError","error","Error","JSON","stringify","mutate","isLoading","filterClearHandler","filterHandler","Toolbar","_objectSpread","pl","sm","pr","xs","length","alpha","primary","main","action","activatedOpacity","Typography","flex","variant","TextField","value","Number","isFinite","onKeyUp","key","Tooltip","FilterListOffIcon","disabled","FilterListIcon","p","relative","state","from","replace","AddIcon","EditIcon","DeleteIcon","Loader","visible","EnhancedTable","_React$useState7","_React$useState8","setOrder","_React$useState9","_React$useState10","setOrderBy","_React$useState11","_React$useState12","setSelected","_React$useState13","_React$useState14","page","setPage","_React$useState15","_React$useState16","rowsPerPage","setRowsPerPage","_React$useState17","_React$useState18","queryParams","tableContainerRef","_useMap","useMap","_useQuery","useQuery","queryKey","queryFn","TrucksQuery","keepPreviousData","retry","isFetching","_useQuery$data","_useQuery$data2","items","total","rows","current","scrollTo","top","left","behavior","newSelected","forEach","selectedItem","find","push","Paper","query","TableContainer","ref","Table","minWidth","stickyHeader","n","isAsc","TableBody","index","isItemSelected","indexOf","labelId","hover","onDoubleClick","role","tabIndex","cursor","selectedIndex","slice","handleSelect","cell","cellData","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","jsx","d","createSvgIcon","getAvatarUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","AvatarRoot","overridesResolver","styles","ownerState","root","colorDefault","_extends","position","alignItems","justifyContent","flexShrink","fontFamily","typography","fontSize","pxToRem","lineHeight","borderRadius","userSelect","vars","shape","defaultBg","mode","AvatarImg","img","objectFit","textIndent","AvatarFallback","Person","fallback","inProps","useThemeProps","alt","childrenProp","className","_props$component","imgProps","sizes","src","srcSet","_props$variant","other","_objectWithoutPropertiesLoose","loaded","crossOrigin","referrerPolicy","setLoaded","image","Image","onload","onerror","srcset","useLoaded","hasImg","hasImgNotFailing","classes","slots","composeClasses","useUtilityClasses","as","clsx"],"sourceRoot":""}