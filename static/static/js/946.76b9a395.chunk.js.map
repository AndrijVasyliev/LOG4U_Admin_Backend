{"version":3,"file":"static/js/946.76b9a395.chunk.js","mappings":"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","sources":["users/users.tsx","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/icons-material/Edit.js"],"sourcesContent":["import * as React from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { useQuery, useQueryClient, useMutation } from '@tanstack/react-query';\r\n\r\nimport { alpha, styled } from '@mui/material/styles';\r\nimport TextField from '@mui/material/TextField';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport Box from '@mui/material/Box';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableSortLabel from '@mui/material/TableSortLabel';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport FilterListIcon from '@mui/icons-material/FilterList';\r\nimport FilterListOffIcon from '@mui/icons-material/FilterListOff';\r\nimport { visuallyHidden } from '@mui/utils';\r\n\r\nimport Loader from '../components/Loader';\r\n\r\nimport { UsersQuery, UserDelete } from '../api';\r\nimport { useSnackbar } from '../hooks';\r\nimport { Order, User } from '../utils/dataTypes';\r\n\r\ninterface HeadCell {\r\n  id: string;\r\n  disablePadding: boolean;\r\n  orderField?: keyof User;\r\n  getData: (row: User) => { data: JSX.Element | string; title?: string };\r\n  label: string;\r\n  numeric: boolean;\r\n}\r\n\r\nconst headCells: readonly HeadCell[] = [\r\n  {\r\n    id: 'fullName',\r\n    orderField: 'fullName',\r\n    getData: (row) => ({ data: `${row.fullName}` }),\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Full Name',\r\n  },\r\n  {\r\n    id: 'email',\r\n    orderField: 'email',\r\n    getData: (row) => ({ data: `${row.email}` }),\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Email',\r\n  },\r\n  {\r\n    id: 'userRole',\r\n    orderField: 'userRole',\r\n    getData: (row) => ({ data: `${row.userRole}` }),\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'User Role',\r\n  },\r\n  {\r\n    id: 'jobTitle',\r\n    orderField: 'jobTitle',\r\n    getData: (row) => ({ data: `${row.jobTitle}` }),\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Job Title',\r\n  },\r\n];\r\n\r\ninterface EnhancedTableProps {\r\n  numSelected: number;\r\n  onRequestSort: (\r\n    event: React.MouseEvent<unknown>,\r\n    property: keyof User,\r\n  ) => void;\r\n  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n  order: Order | undefined;\r\n  orderBy: string | undefined;\r\n  rowCount: number;\r\n}\r\n\r\nconst StyledTableHead = styled(TableHead)(({ theme }) => ({\r\n  backgroundColor: theme.palette.background.default,\r\n}));\r\n\r\nconst StyledTableCell = styled(TableCell)(() => ({\r\n  maxWidth: '100px',\r\n  paddingTop: '6px',\r\n  paddingBottom: '6px',\r\n  whiteSpace: 'nowrap',\r\n  textOverflow: 'ellipsis',\r\n  overflow: 'hidden',\r\n}));\r\nfunction EnhancedTableHead(props: EnhancedTableProps) {\r\n  const {\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n  const createSortHandler =\r\n    (property: keyof User) => (event: React.MouseEvent<unknown>) => {\r\n      onRequestSort(event, property);\r\n    };\r\n\r\n  return (\r\n    <StyledTableHead>\r\n      <TableRow>\r\n        <StyledTableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            name={'enhanced-table-checkbox-select-all'}\r\n            color=\"primary\"\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{\r\n              'aria-label': 'enhanced-table-checkbox-select-all',\r\n            }}\r\n          />\r\n        </StyledTableCell>\r\n        {headCells.map((headCell) => (\r\n          <StyledTableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'center'}\r\n            padding={headCell.disablePadding ? 'none' : 'normal'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={headCell.orderField && orderBy === headCell.orderField}\r\n              hideSortIcon={!headCell.orderField}\r\n              direction={orderBy === headCell.orderField ? order : 'asc'}\r\n              onClick={\r\n                headCell.orderField\r\n                  ? createSortHandler(headCell.orderField)\r\n                  : () => {\r\n                      return;\r\n                    }\r\n              }\r\n            >\r\n              {headCell.label}\r\n              {headCell.orderField && orderBy === headCell.orderField ? (\r\n                <Box component=\"span\" sx={visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </Box>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </StyledTableCell>\r\n        ))}\r\n      </TableRow>\r\n    </StyledTableHead>\r\n  );\r\n}\r\n\r\ninterface EnhancedTableToolbarProps {\r\n  selected: readonly string[];\r\n  setQueryParams: React.Dispatch<React.SetStateAction<Record<string, string>>>;\r\n}\r\n\r\nfunction EnhancedTableToolbar(props: EnhancedTableToolbarProps) {\r\n  const { selected, setQueryParams } = props;\r\n  const [fullNameSearch, setFullNameSearch] = React.useState<string>('');\r\n  const [fullNameChanged, setFullNameChanged] = React.useState<boolean>(false);\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const queryClient = useQueryClient();\r\n  const setSnackbarMessage = useSnackbar();\r\n\r\n  const { mutate, isLoading } = useMutation(UserDelete, {\r\n    onSuccess: () => {\r\n      setSnackbarMessage({\r\n        severity: 'success',\r\n        message: 'Deleted',\r\n      });\r\n      queryClient.invalidateQueries(['user']);\r\n    },\r\n    onError: (error: Error) => {\r\n      setSnackbarMessage({\r\n        severity: 'error',\r\n        message: error instanceof Error ? error.message : JSON.stringify(error),\r\n      });\r\n    },\r\n  });\r\n\r\n  const fullNameHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setFullNameSearch(event.target.value);\r\n    setFullNameChanged(true);\r\n  };\r\n  const filterClearHandler = () => {\r\n    setFullNameChanged(false);\r\n    setFullNameSearch('');\r\n    setQueryParams({});\r\n  };\r\n  const filterHandler = () => {\r\n    setFullNameChanged(false);\r\n    setQueryParams({ fullName: fullNameSearch });\r\n  };\r\n  const keyUpHandler = (event: React.KeyboardEvent) => {\r\n    if (event.key !== 'Enter') {\r\n      return;\r\n    }\r\n    if (fullNameSearch) {\r\n      filterHandler();\r\n    } else {\r\n      filterClearHandler();\r\n    }\r\n  };\r\n  const createHandler = () => {\r\n    navigate('./create', {\r\n      relative: 'path',\r\n      state: { from: location },\r\n      replace: false,\r\n    });\r\n  };\r\n  const editHandler = () => {\r\n    navigate(`./edit/${selected[0]}`, {\r\n      relative: 'path',\r\n      state: { from: location },\r\n      replace: false,\r\n    });\r\n  };\r\n  const deleteHandler = () => {\r\n    mutate(`${selected[0]}`);\r\n  };\r\n\r\n  return (\r\n    <Toolbar\r\n      sx={{\r\n        pl: { sm: 2 },\r\n        pr: { xs: 1, sm: 1 },\r\n        ...(selected.length > 0 && {\r\n          bgcolor: (theme) =>\r\n            alpha(\r\n              theme.palette.primary.main,\r\n              theme.palette.action.activatedOpacity,\r\n            ),\r\n        }),\r\n      }}\r\n    >\r\n      {selected.length > 0 ? (\r\n        <Typography\r\n          sx={{ flex: '1 1 100%' }}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {selected.length} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          sx={{\r\n            flex: '1 1 100%',\r\n            whiteSpace: 'nowrap',\r\n            textOverflow: 'ellipsis',\r\n            overflow: 'hidden',\r\n          }}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          Users\r\n        </Typography>\r\n      )}\r\n      <TextField\r\n        label=\"Full Name\"\r\n        value={fullNameSearch}\r\n        onChange={fullNameHandler}\r\n        onKeyUp={keyUpHandler}\r\n        size=\"small\"\r\n      />\r\n      <Tooltip title=\"Filter list\">\r\n        {(fullNameChanged || !fullNameSearch) &&\r\n        !(fullNameChanged && !fullNameSearch) ? (\r\n          <span>\r\n            <IconButton disabled={!fullNameSearch} onClick={filterHandler}>\r\n              <FilterListIcon />\r\n            </IconButton>\r\n          </span>\r\n        ) : (\r\n          <span>\r\n            <IconButton onClick={filterClearHandler}>\r\n              <FilterListOffIcon />\r\n            </IconButton>\r\n          </span>\r\n        )}\r\n      </Tooltip>\r\n      <Box sx={{ p: 1, display: 'inline-flex' }}>\r\n        <Tooltip title=\"Create\">\r\n          <span>\r\n            <IconButton onClick={createHandler}>\r\n              <AddIcon />\r\n            </IconButton>\r\n          </span>\r\n        </Tooltip>\r\n        <Tooltip title=\"Edit\">\r\n          <span>\r\n            <IconButton disabled={selected.length !== 1} onClick={editHandler}>\r\n              <EditIcon />\r\n            </IconButton>\r\n          </span>\r\n        </Tooltip>\r\n        <Tooltip title=\"Delete\">\r\n          <span>\r\n            <IconButton\r\n              disabled={selected.length !== 1}\r\n              onClick={deleteHandler}\r\n            >\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </span>\r\n        </Tooltip>\r\n      </Box>\r\n      <Loader visible={isLoading} />\r\n    </Toolbar>\r\n  );\r\n}\r\n\r\nexport default function EnhancedTable() {\r\n  const [order, setOrder] = React.useState<Order | undefined>('asc');\r\n  const [orderBy, setOrderBy] = React.useState<keyof User | undefined>(\r\n    'fullName',\r\n  );\r\n  const [selected, setSelected] = React.useState<readonly string[]>([]);\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState<number>(15);\r\n  const [queryParams, setQueryParams] = React.useState<Record<string, any>>({});\r\n  const tableContainerRef = React.useRef(null);\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const setSnackbarMessage = useSnackbar();\r\n\r\n  const {\r\n    isLoading,\r\n    isFetching,\r\n    data: { items, total } = { items: [], total: 0 },\r\n  } = useQuery({\r\n    queryKey: ['user', page, rowsPerPage, orderBy, order, queryParams],\r\n    queryFn: UsersQuery,\r\n    keepPreviousData: true,\r\n    retry: false,\r\n    onError: (error: Error) => {\r\n      setSnackbarMessage({\r\n        severity: 'error',\r\n        message: error instanceof Error ? error.message : JSON.stringify(error),\r\n      });\r\n    },\r\n  });\r\n  const rows: User[] = items || [];\r\n\r\n  React.useEffect(() => {\r\n    if (tableContainerRef.current) {\r\n      const container = tableContainerRef.current as HTMLElement;\r\n      container.scrollTo({\r\n        top: 0,\r\n        left: 0,\r\n        behavior: 'smooth',\r\n      });\r\n    }\r\n  }, [rows]);\r\n\r\n  React.useEffect(() => {\r\n    const newSelected: string[] = [];\r\n    selected.forEach((selectedItem) => {\r\n      const selectedRow = rows.find((row) => row.id === selectedItem);\r\n      if (selectedRow) {\r\n        newSelected.push(selectedItem);\r\n      }\r\n    });\r\n    setSelected(newSelected);\r\n  }, [rows]);\r\n\r\n  const handleRequestSort = (\r\n    event: React.MouseEvent<unknown>,\r\n    property: keyof User,\r\n  ) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    const isDesc = orderBy === property && order === 'desc';\r\n    if (isDesc) {\r\n      setOrder(undefined);\r\n      setOrderBy(undefined);\r\n    } else {\r\n      setOrder(isAsc ? 'desc' : 'asc');\r\n      setOrderBy(property);\r\n    }\r\n  };\r\n\r\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (event.target.checked) {\r\n      const newSelected = rows.map((n: User) => n.id);\r\n      setSelected(newSelected);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (\r\n    event: React.MouseEvent<unknown>,\r\n    item: (typeof rows)[number],\r\n  ) => {\r\n    navigate(`./view/${item.id}`, {\r\n      relative: 'path',\r\n      state: { from: location },\r\n      replace: false,\r\n    });\r\n  };\r\n\r\n  const handleSelect = (event: React.MouseEvent<unknown>, name: string) => {\r\n    event.stopPropagation();\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected: readonly string[] = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event: unknown, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (\r\n    event: React.ChangeEvent<HTMLInputElement>,\r\n  ) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const isSelected = (name: string) => selected.indexOf(name) !== -1;\r\n\r\n  return (\r\n    <Box sx={{ width: '100%', height: '100%' }}>\r\n      <Paper sx={{ width: '100%', height: '100%', backgroundColor: 'unset' }}>\r\n        <EnhancedTableToolbar\r\n          selected={selected}\r\n          setQueryParams={(query) => {\r\n            setQueryParams(query);\r\n            setPage(0);\r\n          }}\r\n        />\r\n        <TableContainer\r\n          ref={tableContainerRef}\r\n          sx={{ height: 'calc(100% - 115px)' }}\r\n        >\r\n          <Table\r\n            sx={{ minWidth: 750 }}\r\n            aria-labelledby=\"tableTitle\"\r\n            size=\"small\"\r\n            stickyHeader\r\n          >\r\n            <EnhancedTableHead\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {rows.map((row, index) => {\r\n                const isItemSelected = isSelected(`${row.id}`);\r\n                const labelId = `enhanced-table-checkbox-${index}`;\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    onClick={(event) => handleClick(event, row)}\r\n                    role=\"checkbox\"\r\n                    aria-checked={isItemSelected}\r\n                    tabIndex={-1}\r\n                    key={row.id}\r\n                    selected={isItemSelected}\r\n                    sx={{ cursor: 'pointer' }}\r\n                  >\r\n                    <StyledTableCell padding=\"checkbox\">\r\n                      <Checkbox\r\n                        id={`${labelId}`}\r\n                        color=\"primary\"\r\n                        checked={isItemSelected}\r\n                        inputProps={{\r\n                          'aria-labelledby': labelId,\r\n                        }}\r\n                        onClick={(event) => handleSelect(event, `${row.id}`)}\r\n                      />\r\n                    </StyledTableCell>\r\n                    {headCells.map((cell) => {\r\n                      const cellData = cell.getData(row);\r\n                      return (\r\n                        <StyledTableCell\r\n                          key={cell.id}\r\n                          title={cellData.title}\r\n                          align={cell.numeric ? 'right' : 'center'}\r\n                        >\r\n                          {cellData.data}\r\n                        </StyledTableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 15, 20, 25, 35, 50]}\r\n          component=\"div\"\r\n          count={total}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <Loader visible={isLoading || isFetching} />\r\n    </Box>\r\n  );\r\n}\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\nexports.default = _default;"],"names":["headCells","id","orderField","getData","row","data","concat","fullName","numeric","disablePadding","label","email","userRole","jobTitle","StyledTableHead","styled","TableHead","_ref","backgroundColor","theme","palette","background","default","StyledTableCell","TableCell","maxWidth","paddingTop","paddingBottom","whiteSpace","textOverflow","overflow","EnhancedTableHead","props","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","_jsx","children","_jsxs","TableRow","padding","Checkbox","name","color","indeterminate","checked","onChange","inputProps","map","headCell","align","sortDirection","TableSortLabel","active","hideSortIcon","direction","onClick","property","event","Box","component","sx","visuallyHidden","EnhancedTableToolbar","selected","setQueryParams","_React$useState","React","_React$useState2","_slicedToArray","fullNameSearch","setFullNameSearch","_React$useState3","_React$useState4","fullNameChanged","setFullNameChanged","location","useLocation","navigate","useNavigate","queryClient","useQueryClient","setSnackbarMessage","useSnackbar","_useMutation","useMutation","UserDelete","onSuccess","severity","message","invalidateQueries","onError","error","Error","JSON","stringify","mutate","isLoading","filterClearHandler","filterHandler","Toolbar","_objectSpread","pl","sm","pr","xs","length","bgcolor","alpha","primary","main","action","activatedOpacity","Typography","flex","variant","TextField","value","target","onKeyUp","key","size","Tooltip","title","IconButton","FilterListOffIcon","disabled","FilterListIcon","p","display","relative","state","from","replace","AddIcon","EditIcon","DeleteIcon","Loader","visible","EnhancedTable","_React$useState5","_React$useState6","setOrder","_React$useState7","_React$useState8","setOrderBy","_React$useState9","_React$useState10","setSelected","_React$useState11","_React$useState12","page","setPage","_React$useState13","_React$useState14","rowsPerPage","setRowsPerPage","_React$useState15","_React$useState16","queryParams","tableContainerRef","_useQuery","useQuery","queryKey","queryFn","UsersQuery","keepPreviousData","retry","isFetching","_useQuery$data","_useQuery$data2","items","total","rows","current","scrollTo","top","left","behavior","newSelected","forEach","selectedItem","find","push","width","height","Paper","query","TableContainer","ref","Table","minWidth","stickyHeader","n","isAsc","undefined","TableBody","index","isItemSelected","indexOf","labelId","hover","role","tabIndex","cursor","stopPropagation","selectedIndex","slice","handleSelect","cell","cellData","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","jsx","d"],"sourceRoot":""}