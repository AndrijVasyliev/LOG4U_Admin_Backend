{"version":3,"file":"static/js/8936.751e1b19.chunk.js","mappings":"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","sources":["GoogleMaps/mapComponent.tsx","utils/stopPropagation.ts"],"sourcesContent":["import * as React from 'react';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport { Wrapper, Status } from '@googlemaps/react-wrapper';\r\nimport { Library } from '@googlemaps/js-api-loader/src';\r\nimport { MarkerClusterer as MarkerClustererClass } from '@googlemaps/markerclusterer';\r\n\r\nimport Slide from '@mui/material/Slide';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport Button from '@mui/material/Button';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Box from '@mui/material/Box';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport { TransitionProps } from '@mui/material/transitions';\r\nimport ContentCopy from '@mui/icons-material/ContentCopy';\r\n\r\nimport Loader from '../components/Loader';\r\nimport { TruckQuery } from '../api';\r\nimport { useSnackbar } from '../hooks';\r\nimport { Truck, TruckForMap } from '../utils/dataTypes';\r\nimport { getType } from '../utils/queryHelpers';\r\nimport { stopPropagation } from '../utils/stopPropagation';\r\nimport { getMapSettings } from '../utils/getMapSettings';\r\n\r\nconst center = { lat: 39.828922654821866, lng: -98.57947970000001 };\r\nconst zoom = 5;\r\nconst mapId = '865ca10c27c22749';\r\n\r\nconst Transition = React.forwardRef(function Transition(\r\n  props: TransitionProps & {\r\n    children: React.ReactElement<any, any>;\r\n  },\r\n  ref: React.Ref<unknown>,\r\n) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function MapComponent({\r\n  truckListData,\r\n}: {\r\n  truckListData: TruckForMap[];\r\n}) {\r\n  let mapCenter = center;\r\n  let mapZoom = zoom;\r\n  if (truckListData.length === 1 && truckListData[0].lastLocation) {\r\n    mapCenter = {\r\n      lat: truckListData[0].lastLocation[0],\r\n      lng: truckListData[0].lastLocation[1],\r\n    };\r\n    mapZoom = mapZoom * 2;\r\n  }\r\n\r\n  const [selectedTruckId, setSelectedTruckId] = React.useState<string>('');\r\n  const [selectedTruck, setSelectedTruck] = React.useState<Truck | null>(null);\r\n\r\n  const {\r\n    // isLoading: isTruckLoading,\r\n    isFetching: isTruckFetching,\r\n    data: truck,\r\n    refetch,\r\n  } = useQuery({\r\n    queryKey: ['truckForMap', selectedTruckId],\r\n    queryFn: TruckQuery,\r\n    keepPreviousData: false,\r\n    retry: false,\r\n    enabled: false,\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (!selectedTruckId) {\r\n      setSelectedTruck(null);\r\n    } else {\r\n      refetch();\r\n    }\r\n  }, [selectedTruckId]);\r\n\r\n  React.useEffect(() => {\r\n    setSelectedTruck(truck || null);\r\n  }, [truck]);\r\n\r\n  const handleClickOpen = (truckId: string) => {\r\n    setSelectedTruckId(truckId);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setSelectedTruckId('');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        component=\"main\"\r\n        sx={{ flexGrow: 1, p: 1, height: '100%', width: '100%' }}\r\n      >\r\n        <Wrapper {...getMapSettings()} render={render}>\r\n          <Map center={mapCenter} zoom={mapZoom} mapId={mapId}>\r\n            <MarkerClusterer>\r\n              {truckListData.map((truck) => {\r\n                return (\r\n                  <Marker\r\n                    key={truck.id}\r\n                    onCLick={() => handleClickOpen(truck.id)}\r\n                    optimized\r\n                    animation={window?.google?.maps?.Animation?.DROP}\r\n                    title={`${truck.truckNumber}\\n${truck.status}`}\r\n                    position={{\r\n                      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n                      // @ts-ignore\r\n                      lat: truck.lastLocation[0],\r\n                      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n                      // @ts-ignore\r\n                      lng: truck.lastLocation[1],\r\n                    }}\r\n                  />\r\n                );\r\n              })}\r\n            </MarkerClusterer>\r\n          </Map>\r\n        </Wrapper>\r\n      </Box>\r\n      <Dialog\r\n        open={!!selectedTruck}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleDialogClose}\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle>\r\n          <span>\r\n            TRUCK NUMBER: \r\n            <a href={`./trucks/view/${selectedTruck?.id}`} target=\"_blank\">\r\n              {selectedTruck?.truckNumber}\r\n            </a>\r\n          </span>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"truck-status\">\r\n            {`CURRENT STATUS: ${selectedTruck?.status}`}\r\n          </DialogContentText>\r\n          <DialogContentText id=\"main-contact\">\r\n            <span>\r\n              {'MAIN CONTACT: '}\r\n              <b>{`${\r\n                selectedTruck?.coordinator || selectedTruck?.owner\r\n                  ? // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n                    //@ts-ignore\r\n                    getType(selectedTruck?.coordinator || selectedTruck?.owner)\r\n                  : ''\r\n              }`}</b>\r\n              {` ${\r\n                selectedTruck?.coordinator || selectedTruck?.owner\r\n                  ? // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n                    //@ts-ignore\r\n                    (selectedTruck?.coordinator || selectedTruck?.owner)\r\n                      .fullName\r\n                  : ''\r\n              }`}\r\n              <IconButton\r\n                size=\"small\"\r\n                onClick={(event) => {\r\n                  stopPropagation(event);\r\n                  navigator.clipboard.writeText(\r\n                    ` ${\r\n                      selectedTruck?.coordinator || selectedTruck?.owner\r\n                        ? // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n                          //@ts-ignore\r\n                          (selectedTruck?.coordinator || selectedTruck?.owner)\r\n                            .fullName\r\n                        : ''\r\n                    } ${\r\n                      (selectedTruck?.coordinator || selectedTruck?.owner)\r\n                        ?.phone || ''\r\n                    }`,\r\n                  );\r\n                }}\r\n              >\r\n                <ContentCopy sx={{ height: '16px', width: '16px' }} />\r\n              </IconButton>\r\n            </span>\r\n          </DialogContentText>\r\n          <DialogContentText id=\"main-contact-number\">\r\n            <span>\r\n              {'MAIN CONTACT #: '}\r\n              <a\r\n                href={\r\n                  selectedTruck?.coordinator || selectedTruck?.owner\r\n                    ? `tel:${\r\n                        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n                        //@ts-ignore\r\n                        (selectedTruck?.coordinator || selectedTruck?.owner)\r\n                          .phone\r\n                      }`\r\n                    : undefined\r\n                }\r\n                target=\"_blank\"\r\n                onClick={stopPropagation}\r\n              >\r\n                {(selectedTruck?.coordinator || selectedTruck?.owner)?.phone ||\r\n                  ''}\r\n              </a>\r\n            </span>\r\n          </DialogContentText>\r\n          <DialogContentText id=\"last-location\">\r\n            <span>\r\n              {'LAST LOCATION #: '}\r\n              <a\r\n                href={`${\r\n                  selectedTruck?.lastCity\r\n                    ? './locations/view/' + selectedTruck?.lastCity.id\r\n                    : ''\r\n                }`}\r\n                target=\"_blank\"\r\n                onClick={stopPropagation}\r\n              >\r\n                {`${selectedTruck?.lastCity?.name}, ${selectedTruck?.lastCity?.stateCode}, ${selectedTruck?.lastCity?.zipCode}`}\r\n              </a>\r\n              <IconButton\r\n                size=\"small\"\r\n                onClick={(event) => {\r\n                  stopPropagation(event);\r\n                  navigator.clipboard.writeText(\r\n                    `${selectedTruck?.lastCity?.name}, ${selectedTruck?.lastCity?.stateCode}, ${selectedTruck?.lastCity?.zipCode}`,\r\n                  );\r\n                }}\r\n              >\r\n                <ContentCopy sx={{ height: '16px', width: '16px' }} />\r\n              </IconButton>\r\n            </span>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleDialogClose}>Close</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Loader visible={isTruckFetching} />\r\n    </>\r\n  );\r\n}\r\n\r\nconst render = (status: Status): React.ReactElement => {\r\n  const setSnackbarMessage = useSnackbar();\r\n  if (status === Status.FAILURE) {\r\n    setSnackbarMessage({\r\n      severity: 'error',\r\n      message: 'Error loading maps!',\r\n    });\r\n  }\r\n  return (\r\n    <>\r\n      <Loader visible={status === Status.LOADING} />\r\n    </>\r\n  );\r\n};\r\n\r\nfunction Map({\r\n  center,\r\n  zoom,\r\n  mapId,\r\n  children,\r\n}: {\r\n  center: google.maps.LatLngLiteral;\r\n  zoom: number;\r\n  mapId: string;\r\n  children?: React.ReactNode;\r\n}) {\r\n  const mapRef = React.useRef(null);\r\n  const [map, setMap] = React.useState<google.maps.Map>();\r\n\r\n  React.useEffect(() => {\r\n    if (mapRef.current && !map) {\r\n      setMap(\r\n        new window.google.maps.Map(mapRef.current, {\r\n          center,\r\n          zoom,\r\n          mapId,\r\n        }),\r\n      );\r\n    }\r\n  }, [mapRef, map]);\r\n\r\n  const child = React.Children.only(children);\r\n\r\n  return (\r\n    <>\r\n      <div style={{ height: '100%', width: '100%' }} ref={mapRef} id=\"map\" />\r\n      {React.isValidElement(child) &&\r\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n        // @ts-ignore\r\n        React.cloneElement(child, { map })}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction MarkerClusterer({\r\n  map,\r\n  children,\r\n}: {\r\n  map?: google.maps.Map;\r\n  children?: React.ReactNode;\r\n}) {\r\n  const [clusterer, setClasterer] = React.useState<MarkerClustererClass>();\r\n\r\n  React.useEffect(() => {\r\n    if (!clusterer) {\r\n      setClasterer(new MarkerClustererClass({}));\r\n    }\r\n\r\n    return () => {\r\n      if (clusterer) {\r\n        clusterer.setMap(null);\r\n      }\r\n    };\r\n  }, [clusterer]);\r\n\r\n  React.useEffect(() => {\r\n    if (clusterer && map) {\r\n      clusterer.setMap(map);\r\n    }\r\n  }, [map]);\r\n\r\n  React.useEffect(() => {\r\n    if (clusterer) {\r\n      clusterer.render();\r\n    }\r\n  }, [map, children]);\r\n  clusterer?.render();\r\n\r\n  return (\r\n    <>\r\n      {React.Children.map(children, (child) => {\r\n        if (React.isValidElement(child)) {\r\n          // set the map prop on the child component\r\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n          // @ts-ignore\r\n          return React.cloneElement(child, { map, clusterer });\r\n        }\r\n      })}\r\n    </>\r\n  );\r\n}\r\n\r\nconst Marker: React.FC<\r\n  google.maps.MarkerOptions & {\r\n    onCLick: () => void;\r\n    clusterer?: MarkerClustererClass;\r\n  }\r\n> = (options) => {\r\n  const { onCLick, clusterer, map, position, ...otherMarkerOptions } = options;\r\n  const [marker, setMarker] = React.useState<google.maps.Marker>();\r\n\r\n  React.useEffect(() => {\r\n    if (!marker) {\r\n      const newMarker = new window.google.maps.Marker();\r\n      setMarker(newMarker);\r\n      newMarker.addListener('click', onCLick);\r\n    }\r\n\r\n    return () => {\r\n      if (marker) {\r\n        marker.setMap(null);\r\n        clusterer?.removeMarker(marker, false);\r\n      }\r\n    };\r\n  }, [marker]);\r\n\r\n  React.useEffect(() => {\r\n    if (marker) {\r\n      marker.setMap(map || null);\r\n    }\r\n  }, [marker, map]);\r\n\r\n  React.useEffect(() => {\r\n    if (marker) {\r\n      marker.setPosition(position);\r\n    }\r\n  }, [marker, position && `${position?.lat},${position?.lng}`]);\r\n\r\n  React.useEffect(() => {\r\n    if (marker) {\r\n      clusterer?.addMarker(marker, false);\r\n    }\r\n  }, [marker, clusterer]);\r\n\r\n  React.useEffect(() => {\r\n    if (marker) {\r\n      marker.setOptions(otherMarkerOptions);\r\n    }\r\n  }, [marker, otherMarkerOptions]);\r\n\r\n  return null;\r\n};\r\n","import * as React from 'react';\r\n\r\nexport function stopPropagation(e: React.SyntheticEvent) {\r\n  e.stopPropagation();\r\n}\r\n"],"names":["center","lat","lng","zoom","mapId","Transition","React","props","ref","_jsx","Slide","_objectSpread","direction","MapComponent","_ref","_ref3","_selectedTruck$lastCi","_selectedTruck$lastCi2","_selectedTruck$lastCi3","truckListData","mapCenter","mapZoom","length","lastLocation","_React$useState","_React$useState2","_slicedToArray","selectedTruckId","setSelectedTruckId","_React$useState3","_React$useState4","selectedTruck","setSelectedTruck","_useQuery","useQuery","queryKey","queryFn","TruckQuery","keepPreviousData","retry","enabled","isTruckFetching","isFetching","truck","data","refetch","handleDialogClose","_jsxs","_Fragment","children","Box","component","sx","flexGrow","p","height","width","Wrapper","getMapSettings","render","Map","MarkerClusterer","map","_window","_window$google","_window$google$maps","_window$google$maps$A","Marker","onCLick","truckId","id","optimized","animation","window","google","maps","Animation","DROP","title","concat","truckNumber","status","position","Dialog","open","TransitionComponent","keepMounted","onClose","DialogTitle","href","target","DialogContent","DialogContentText","coordinator","owner","getType","fullName","IconButton","size","onClick","event","_ref2","stopPropagation","navigator","clipboard","writeText","phone","ContentCopy","undefined","lastCity","name","stateCode","zipCode","_selectedTruck$lastCi4","_selectedTruck$lastCi5","_selectedTruck$lastCi6","DialogActions","Button","Loader","visible","setSnackbarMessage","useSnackbar","Status","FAILURE","severity","message","LOADING","_ref4","mapRef","_React$useState5","_React$useState6","setMap","current","child","only","style","_ref5","_React$useState7","_React$useState8","clusterer","setClasterer","MarkerClustererClass","options","otherMarkerOptions","_objectWithoutProperties","_excluded","_React$useState9","_React$useState10","marker","setMarker","newMarker","addListener","removeMarker","setPosition","addMarker","setOptions","e"],"sourceRoot":""}