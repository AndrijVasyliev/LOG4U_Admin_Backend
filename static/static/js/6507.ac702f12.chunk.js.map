{"version":3,"file":"static/js/6507.ac702f12.chunk.js","mappings":"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","sources":["components/LocationForGrid.tsx","loads/loads.tsx","utils/dataTypes.ts","utils/dateTimeFormatters.ts","../node_modules/@mui/icons-material/ContentCopy.js","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/icons-material/Edit.js"],"sourcesContent":["import React from 'react';\r\n\r\nimport { Wrapper, Status } from '@googlemaps/react-wrapper';\r\n\r\nimport { debounce } from '@mui/material/utils';\r\n\r\nimport { useSnackbar, useLoader } from '../hooks';\r\nimport { GeoPoint } from '../utils/dataTypes';\r\nimport { toStringLocation } from '../utils/toStringLocation';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport { stopPropagation } from '../utils/stopPropagation';\r\nimport ContentCopy from '@mui/icons-material/ContentCopy';\r\nimport { selectLocation } from '../utils/selectLocation';\r\nimport { getMapSettings } from '../utils/getMapSettings';\r\n\r\nexport default function LocationForGrid({\r\n  location,\r\n  onRefClick,\r\n  addInfo,\r\n  children,\r\n}: {\r\n  readonly location: GeoPoint;\r\n  onRefClick?: (event: React.SyntheticEvent) => void;\r\n  addInfo?: string;\r\n  children?: React.ReactNode;\r\n}) {\r\n  const [value, setValue] = React.useState<google.maps.GeocoderResult | null>(\r\n    null,\r\n  );\r\n  const [items, setItems] = React.useState<google.maps.GeocoderResult[]>([]);\r\n  const [geocoder, setGeocoder] = React.useState<google.maps.Geocoder | null>(\r\n    null,\r\n  );\r\n\r\n  const setSearch = React.useMemo(() => {\r\n    return debounce((geocodeRequest: google.maps.GeocoderRequest): void => {\r\n      (geocoder?.geocode(geocodeRequest) || Promise.reject())\r\n        .then((result) => {\r\n          if (result.results.length < 1 && geocodeRequest.location) {\r\n            const locationFromRequest = new google.maps.LatLng(\r\n              geocodeRequest.location,\r\n            );\r\n            const res: google.maps.GeocoderResult = {\r\n              address_components: [],\r\n              formatted_address: `[${locationFromRequest.lat()}, ${locationFromRequest.lng()}]`,\r\n              geometry: {\r\n                location: locationFromRequest,\r\n                location_type: google.maps.GeocoderLocationType.APPROXIMATE,\r\n                viewport: new google.maps.LatLngBounds(),\r\n              },\r\n              place_id: `[${locationFromRequest.lat()}, ${locationFromRequest.lng()}]`,\r\n              types: [],\r\n            };\r\n            setItems([res]);\r\n          } else {\r\n            result.results.forEach(\r\n              (item) =>\r\n                (item.formatted_address = toStringLocation(\r\n                  item.address_components,\r\n                )),\r\n            );\r\n            setItems(result.results);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          setItems([]);\r\n        });\r\n    }, 400);\r\n  }, [geocoder]);\r\n\r\n  React.useEffect(() => {\r\n    const selected = location && selectLocation(items);\r\n    if (location && selected && selected?.place_id !== value?.place_id) {\r\n      setValue(selected);\r\n    }\r\n  }, [location, items]);\r\n\r\n  React.useEffect(() => {\r\n    if (location) {\r\n      setSearch({\r\n        location: {\r\n          lat: location[0],\r\n          lng: location[1],\r\n        },\r\n      });\r\n    } else {\r\n      setItems([]);\r\n      setValue(null);\r\n    }\r\n  }, [geocoder, location.join(',')]);\r\n\r\n  const handleApiLoad = (status: Status): React.ReactElement => {\r\n    const setSnackbarMessage = useSnackbar();\r\n    const [, setLoaderVisibility] = useLoader();\r\n    React.useLayoutEffect(() => {\r\n      if (status === Status.LOADING) {\r\n        setLoaderVisibility(true);\r\n      }\r\n      if (status === Status.FAILURE) {\r\n        setSnackbarMessage({\r\n          severity: 'error',\r\n          message: 'Error loading maps!',\r\n        });\r\n      }\r\n      if (status === Status.SUCCESS) {\r\n        setGeocoder(new window.google.maps.Geocoder());\r\n      }\r\n      return () => {\r\n        if (status === Status.LOADING) {\r\n          setLoaderVisibility(false);\r\n        }\r\n      };\r\n    }, [status]);\r\n    return null as unknown as React.ReactElement;\r\n  };\r\n\r\n  return (\r\n    <span style={{ display: 'flex' }}>\r\n      <Wrapper {...getMapSettings()} render={handleApiLoad} />\r\n      <span\r\n        style={{\r\n          textOverflow: 'ellipsis',\r\n          overflow: 'hidden',\r\n          textAlign: 'left',\r\n        }}\r\n        title={`${value ? value.formatted_address : ''}` + '\\n' + addInfo}\r\n      >\r\n        {onRefClick ? (\r\n          <a href={'#'} target=\"_blank\" onClick={onRefClick}>\r\n            {value ? value.formatted_address : ''}\r\n          </a>\r\n        ) : value ? (\r\n          value.formatted_address\r\n        ) : (\r\n          ''\r\n        )}\r\n        {!addInfo ? null : (\r\n          <>\r\n            <br />\r\n            {addInfo}\r\n          </>\r\n        )}\r\n        {children}\r\n      </span>\r\n      {!value ? null : (\r\n        <IconButton\r\n          size=\"small\"\r\n          onClick={(event) => {\r\n            stopPropagation(event);\r\n            navigator.clipboard.writeText(value.formatted_address);\r\n          }}\r\n        >\r\n          <ContentCopy sx={{ height: '16px', width: '16px' }} />\r\n        </IconButton>\r\n      )}\r\n    </span>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\r\n\r\nimport { alpha, styled } from '@mui/material/styles';\r\nimport TextField from '@mui/material/TextField';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport Box from '@mui/material/Box';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableSortLabel from '@mui/material/TableSortLabel';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport FilterListIcon from '@mui/icons-material/FilterList';\r\nimport FilterListOffIcon from '@mui/icons-material/FilterListOff';\r\nimport { visuallyHidden } from '@mui/utils';\r\n\r\nimport Loader from '../components/Loader';\r\n\r\nimport { LoadsQuery, LoadDelete } from '../api';\r\nimport { useSnackbar } from '../hooks';\r\nimport { Order, Load, LoadStatuses, LoadStatus } from '../utils/dataTypes';\r\nimport { stopPropagation } from '../utils/stopPropagation';\r\nimport LocationForGrid from '../components/LocationForGrid';\r\nimport { dateTimeFormatter } from '../utils/dateTimeFormatters';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\n\r\ninterface HeadCell {\r\n  id: string;\r\n  disablePadding: boolean;\r\n  orderField?: keyof Load;\r\n  getData: (row: Load) => { data: JSX.Element | string; title?: string };\r\n  label: string;\r\n  numeric: boolean;\r\n}\r\n\r\nconst headCells: readonly HeadCell[] = [\r\n  {\r\n    id: 'loadNumber',\r\n    orderField: 'loadNumber',\r\n    getData: (row) => ({ data: `${row.loadNumber}` }),\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Load Number',\r\n  },\r\n  {\r\n    id: 'ref',\r\n    getData: (row) => {\r\n      const firstRow = `${row?.ref && row?.ref[0] ? row?.ref[0] : ''}`;\r\n      const secondRow = `${row?.ref && row?.ref[1] ? row?.ref[1] : ''}`;\r\n      const thirdRow = `${row?.ref && row?.ref[2] ? row?.ref[2] : ''}`;\r\n\r\n      return {\r\n        data: (\r\n          <span>\r\n            {firstRow}\r\n            <br />\r\n            {secondRow}\r\n            <br />\r\n            {thirdRow}\r\n          </span>\r\n        ),\r\n        title:\r\n          firstRow +\r\n          (secondRow ? '\\n' + secondRow : '') +\r\n          (thirdRow ? '\\n' + thirdRow : ''),\r\n      };\r\n    },\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: 'REF Number',\r\n  },\r\n  {\r\n    id: 'firstPickUp',\r\n    getData: (row) => {\r\n      const onRefClick = (event: React.SyntheticEvent) => {\r\n        event.preventDefault();\r\n        stopPropagation(event);\r\n      };\r\n      const firstStop = row?.stops?.at(0);\r\n      const facility = firstStop?.facility;\r\n      const location = facility?.facilityLocation;\r\n      const timeFrame = firstStop?.timeFrame;\r\n      const timeFrameType = timeFrame?.type;\r\n      const timeFrameStart =\r\n        timeFrame?.type === 'FCFS' ? timeFrame?.from : timeFrame?.at;\r\n\r\n      const timeFrameStartString = `${\r\n        timeFrameStart ? dateTimeFormatter.format(new Date(timeFrameStart)) : ''\r\n      }`;\r\n\r\n      const secondRow = `${timeFrameType} ${timeFrameStartString}`;\r\n\r\n      if (location) {\r\n        return {\r\n          data: (\r\n            <LocationForGrid\r\n              location={location}\r\n              onRefClick={onRefClick}\r\n              addInfo={secondRow}\r\n            />\r\n          ),\r\n        };\r\n      } else {\r\n        return { data: '' };\r\n      }\r\n    },\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: 'First PickUp',\r\n  },\r\n  {\r\n    id: 'lastDelivery',\r\n    getData: (row) => {\r\n      const onRefClick = (event: React.SyntheticEvent) => {\r\n        event.preventDefault();\r\n        stopPropagation(event);\r\n      };\r\n      const firstStop = row?.stops?.at(-1);\r\n      const facility = firstStop?.facility;\r\n      const location = facility?.facilityLocation;\r\n      const timeFrame = firstStop?.timeFrame;\r\n      const timeFrameType = timeFrame?.type;\r\n      const timeFrameStart =\r\n        timeFrame?.type === 'FCFS' ? timeFrame?.to : timeFrame?.at;\r\n\r\n      const timeFrameStartString = `${\r\n        timeFrameStart ? dateTimeFormatter.format(new Date(timeFrameStart)) : ''\r\n      }`;\r\n\r\n      const secondRow = `${timeFrameType} ${timeFrameStartString}`;\r\n\r\n      if (location) {\r\n        return {\r\n          data: (\r\n            <LocationForGrid\r\n              location={location}\r\n              onRefClick={onRefClick}\r\n              addInfo={secondRow}\r\n            />\r\n          ),\r\n        };\r\n      } else {\r\n        return { data: '' };\r\n      }\r\n    },\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: 'Last Delivery',\r\n  },\r\n  {\r\n    id: 'miles',\r\n    getData: (row) => {\r\n      if (row?.milesHaversine) {\r\n        const firstRow = `${\r\n          row.milesByRoads ? row.milesByRoads.toFixed(2) : ''\r\n        }`;\r\n        const secondRow = `${row.milesHaversine.toFixed(2)}`;\r\n\r\n        return {\r\n          data: (\r\n            <span>\r\n              <b>{firstRow}</b>\r\n              <br />\r\n              {secondRow}\r\n            </span>\r\n          ),\r\n          title: firstRow\r\n            ? firstRow\r\n            : '?' + ' - By roads' + '\\n' + secondRow + ' - Distance',\r\n        };\r\n      } else {\r\n        return { data: '' };\r\n      }\r\n    },\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Miles',\r\n  },\r\n  {\r\n    id: 'status',\r\n    orderField: 'status',\r\n    getData: (row) => ({ data: `${row.status}` }),\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: 'Load Status',\r\n  },\r\n  {\r\n    id: 'truck',\r\n    getData: (row) => {\r\n      if (row?.truck) {\r\n        const path = `./trucks/view/${row.truck.id}`;\r\n        const firstRow = `${row.truck.truckNumber}`;\r\n\r\n        return {\r\n          data: (\r\n            <span>\r\n              <a href={path} target=\"_blank\" onClick={stopPropagation}>\r\n                {firstRow}\r\n              </a>\r\n            </span>\r\n          ),\r\n          title: firstRow,\r\n        };\r\n      } else {\r\n        return { data: '' };\r\n      }\r\n    },\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Truck',\r\n  },\r\n];\r\n\r\ninterface EnhancedTableProps {\r\n  numSelected: number;\r\n  onRequestSort: (\r\n    event: React.MouseEvent<unknown>,\r\n    property: keyof Load,\r\n  ) => void;\r\n  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n  order: Order | undefined;\r\n  orderBy: string | undefined;\r\n  rowCount: number;\r\n}\r\n\r\nconst StyledTableHead = styled(TableHead)(({ theme }) => ({\r\n  backgroundColor: theme.palette.background.default,\r\n}));\r\n\r\nconst StyledTableCell = styled(TableCell)(() => ({\r\n  maxWidth: '100px',\r\n  paddingTop: '6px',\r\n  paddingBottom: '6px',\r\n  whiteSpace: 'nowrap',\r\n  textOverflow: 'ellipsis',\r\n  overflow: 'hidden',\r\n}));\r\n\r\nfunction EnhancedTableHead(props: EnhancedTableProps) {\r\n  const {\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n  const createSortHandler =\r\n    (property: keyof Load) => (event: React.MouseEvent<unknown>) => {\r\n      onRequestSort(event, property);\r\n    };\r\n\r\n  return (\r\n    <StyledTableHead>\r\n      <TableRow>\r\n        <StyledTableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            name={'enhanced-table-checkbox-select-all'}\r\n            color=\"primary\"\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{\r\n              'aria-label': 'enhanced-table-checkbox-select-all',\r\n            }}\r\n          />\r\n        </StyledTableCell>\r\n        {headCells.map((headCell) => (\r\n          <StyledTableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'center'}\r\n            padding={headCell.disablePadding ? 'none' : 'normal'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={headCell.orderField && orderBy === headCell.orderField}\r\n              hideSortIcon={!headCell.orderField}\r\n              direction={orderBy === headCell.orderField ? order : 'asc'}\r\n              onClick={\r\n                headCell.orderField\r\n                  ? createSortHandler(headCell.orderField)\r\n                  : () => {\r\n                      return;\r\n                    }\r\n              }\r\n            >\r\n              {headCell.label}\r\n              {headCell.orderField && orderBy === headCell.orderField ? (\r\n                <Box component=\"span\" sx={visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </Box>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </StyledTableCell>\r\n        ))}\r\n      </TableRow>\r\n    </StyledTableHead>\r\n  );\r\n}\r\n\r\ninterface EnhancedTableToolbarProps {\r\n  selected: readonly string[];\r\n  setQueryParams: React.Dispatch<\r\n    React.SetStateAction<Record<string, number | string | string[]>>\r\n  >;\r\n}\r\n\r\nfunction EnhancedTableToolbar(props: EnhancedTableToolbarProps) {\r\n  const { selected, setQueryParams } = props;\r\n  const [refNumberSearch, setRefNumberSearch] = React.useState<string>('');\r\n  const [statusOpen, setStatusOpen] = React.useState<boolean>(false);\r\n  const [statusValue, setStatusValue] = React.useState<LoadStatus[]>([\r\n    ...LoadStatuses,\r\n  ]);\r\n  const [loadNumberSearch, setLoadNumberSearch] = React.useState<number>(0);\r\n  const [truckNumberSearch, setTruckNumberSearch] = React.useState<number>(0);\r\n  const [searchDataChanged, setSearchDataChanged] =\r\n    React.useState<boolean>(false);\r\n\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const queryClient = useQueryClient();\r\n\r\n  const setSnackbarMessage = useSnackbar();\r\n\r\n  const { mutate, isLoading } = useMutation(LoadDelete, {\r\n    onSuccess: () => {\r\n      setSnackbarMessage({\r\n        severity: 'success',\r\n        message: 'Deleted',\r\n      });\r\n      queryClient.invalidateQueries(['loads']);\r\n    },\r\n    onError: (error: Error) => {\r\n      setSnackbarMessage({\r\n        severity: 'error',\r\n        message: error instanceof Error ? error.message : JSON.stringify(error),\r\n      });\r\n    },\r\n  });\r\n\r\n  const refNumberHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setRefNumberSearch(event.target.value);\r\n    setSearchDataChanged(true);\r\n  };\r\n  const handleStatusInputChange = (\r\n    event: React.ChangeEvent<HTMLInputElement>,\r\n  ) => {\r\n    setStatusValue(event.target.value as unknown as LoadStatus[]);\r\n    setSearchDataChanged(true);\r\n  };\r\n  const handleStatusKeyUp = (event: React.KeyboardEvent) => {\r\n    if (event.key !== 'Enter') {\r\n      return;\r\n    }\r\n    stopPropagation(event);\r\n    handleStatusClose();\r\n  };\r\n  const handleStatusKeyDown = (event: React.KeyboardEvent) => {\r\n    if (event.key !== 'Enter') {\r\n      return;\r\n    }\r\n    stopPropagation(event);\r\n  };\r\n  const handleStatusOpen = () => {\r\n    setStatusOpen(true);\r\n  };\r\n  const handleStatusClose = () => {\r\n    setStatusOpen(false);\r\n    handleStatusChange();\r\n  };\r\n  const handleStatusChange = () => {\r\n    if (statusValue.length && statusValue.length !== LoadStatuses.length) {\r\n      setQueryParams((prev) => ({ ...prev, status: statusValue }));\r\n      setSearchDataChanged(false);\r\n    } else {\r\n      setQueryParams((prev) => {\r\n        const { status: _, ...rest } = prev;\r\n        return { ...rest };\r\n      });\r\n      setSearchDataChanged(false);\r\n    }\r\n  };\r\n  const loadNumberHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (Number.isFinite(Number(event.target.value))) {\r\n      setLoadNumberSearch(Number(event.target.value));\r\n      setSearchDataChanged(true);\r\n    }\r\n  };\r\n  const truckNumberHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (Number.isFinite(Number(event.target.value))) {\r\n      setTruckNumberSearch(Number(event.target.value));\r\n      setSearchDataChanged(true);\r\n    }\r\n  };\r\n  const filterClearHandler = () => {\r\n    setSearchDataChanged(false);\r\n    setRefNumberSearch('');\r\n    setStatusValue([...LoadStatuses]);\r\n    setLoadNumberSearch(0);\r\n    setTruckNumberSearch(0);\r\n    setQueryParams({});\r\n  };\r\n  const filterHandler = () => {\r\n    setSearchDataChanged(false);\r\n    const queryParams: Record<string, number | string | string[]> = {};\r\n    if (refNumberSearch) {\r\n      queryParams.refNumber = refNumberSearch;\r\n    }\r\n    if (statusValue.length && statusValue.length !== LoadStatuses.length) {\r\n      queryParams.status = statusValue;\r\n    }\r\n    if (loadNumberSearch) {\r\n      queryParams.loadNumber = loadNumberSearch;\r\n    }\r\n    if (truckNumberSearch) {\r\n      queryParams.truckNumber = truckNumberSearch;\r\n    }\r\n    setQueryParams(queryParams);\r\n  };\r\n  const keyUpHandler = (event: React.KeyboardEvent) => {\r\n    if (event.key !== 'Enter') {\r\n      return;\r\n    }\r\n    if (refNumberSearch || loadNumberSearch || truckNumberSearch) {\r\n      filterHandler();\r\n    } else {\r\n      filterClearHandler();\r\n    }\r\n  };\r\n  const createHandler = () => {\r\n    navigate('./create', {\r\n      relative: 'path',\r\n      state: { from: location },\r\n      replace: false,\r\n    });\r\n  };\r\n  const editHandler = () => {\r\n    navigate(`./edit/${selected[0]}`, {\r\n      relative: 'path',\r\n      state: { from: location },\r\n      replace: false,\r\n    });\r\n  };\r\n  const deleteHandler = () => {\r\n    mutate(`${selected[0]}`);\r\n  };\r\n\r\n  return (\r\n    <Toolbar\r\n      sx={{\r\n        overflow: 'hidden',\r\n        pl: { sm: 2 },\r\n        pr: { xs: 1, sm: 1 },\r\n        ...(selected.length > 0 && {\r\n          bgcolor: (theme) =>\r\n            alpha(\r\n              theme.palette.primary.main,\r\n              theme.palette.action.activatedOpacity,\r\n            ),\r\n        }),\r\n      }}\r\n    >\r\n      {selected.length > 0 ? (\r\n        <Typography\r\n          sx={{ flex: '1 1 100%' }}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {selected.length} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          sx={{\r\n            flex: '1 1 100%',\r\n            whiteSpace: 'nowrap',\r\n            textOverflow: 'ellipsis',\r\n            overflow: 'hidden',\r\n          }}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          Loads\r\n        </Typography>\r\n      )}\r\n      <Box\r\n        component=\"div\"\r\n        sx={{\r\n          '& .MuiTextField-root': { m: 1, width: '140px' },\r\n        }}\r\n      >\r\n        <TextField\r\n          label=\"REF Number\"\r\n          value={refNumberSearch || ''}\r\n          onChange={refNumberHandler}\r\n          onKeyUp={keyUpHandler}\r\n          size=\"small\"\r\n        />\r\n      </Box>\r\n      <Box\r\n        component=\"div\"\r\n        sx={{\r\n          '& .MuiTextField-root': { m: 1, width: '140px' },\r\n        }}\r\n      >\r\n        <TextField\r\n          select\r\n          SelectProps={{\r\n            multiple: true,\r\n            open: statusOpen,\r\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n            //@ts-ignore\r\n            renderValue: (selected: LoadStatuses[]) => selected.join(', '),\r\n            onOpen: handleStatusOpen,\r\n            onClose: handleStatusClose,\r\n          }}\r\n          label=\"Select Status\"\r\n          value={statusValue}\r\n          onChange={handleStatusInputChange}\r\n          onKeyUpCapture={handleStatusKeyUp}\r\n          onKeyDownCapture={handleStatusKeyDown}\r\n          onBlur={handleStatusChange}\r\n          size=\"small\"\r\n          fullWidth\r\n          title={statusValue.join(', ')}\r\n        >\r\n          {LoadStatuses.map((status) => (\r\n            <MenuItem key={status} value={status}>\r\n              <Checkbox\r\n                checked={statusValue.indexOf(status as LoadStatus) > -1}\r\n                id={status}\r\n              />\r\n              <ListItemText primary={status} />\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n      </Box>\r\n      <Box\r\n        component=\"div\"\r\n        sx={{\r\n          '& .MuiTextField-root': { m: 1, width: '140px' },\r\n        }}\r\n      >\r\n        <TextField\r\n          label=\"Load Number\"\r\n          value={loadNumberSearch || ''}\r\n          onChange={loadNumberHandler}\r\n          onKeyUp={keyUpHandler}\r\n          size=\"small\"\r\n        />\r\n      </Box>\r\n      <Box\r\n        component=\"div\"\r\n        sx={{\r\n          '& .MuiTextField-root': { m: 1, width: '140px' },\r\n        }}\r\n      >\r\n        <TextField\r\n          label=\"Truck Number\"\r\n          value={truckNumberSearch || ''}\r\n          onChange={truckNumberHandler}\r\n          onKeyUp={keyUpHandler}\r\n          size=\"small\"\r\n        />\r\n      </Box>\r\n      <Tooltip title=\"Filter list\">\r\n        {(searchDataChanged ||\r\n          (!refNumberSearch &&\r\n            !loadNumberSearch &&\r\n            !truckNumberSearch &&\r\n            !(\r\n              statusValue.length && statusValue.length !== LoadStatuses.length\r\n            ))) &&\r\n        (!(searchDataChanged && !refNumberSearch) ||\r\n          !(\r\n            searchDataChanged &&\r\n            !(statusValue.length && statusValue.length !== LoadStatuses.length)\r\n          ) ||\r\n          !(searchDataChanged && !loadNumberSearch) ||\r\n          !(searchDataChanged && !truckNumberSearch)) ? (\r\n          <span>\r\n            <IconButton\r\n              disabled={!loadNumberSearch && !truckNumberSearch}\r\n              onClick={filterHandler}\r\n            >\r\n              <FilterListIcon />\r\n            </IconButton>\r\n          </span>\r\n        ) : (\r\n          <span>\r\n            <IconButton onClick={filterClearHandler}>\r\n              <FilterListOffIcon />\r\n            </IconButton>\r\n          </span>\r\n        )}\r\n      </Tooltip>\r\n      <Box sx={{ p: 1, display: 'inline-flex' }}>\r\n        <Tooltip title=\"Create\">\r\n          <span>\r\n            <IconButton onClick={createHandler}>\r\n              <AddIcon />\r\n            </IconButton>\r\n          </span>\r\n        </Tooltip>\r\n        <Tooltip title=\"Edit\">\r\n          <span>\r\n            <IconButton disabled={selected.length !== 1} onClick={editHandler}>\r\n              <EditIcon />\r\n            </IconButton>\r\n          </span>\r\n        </Tooltip>\r\n        <Tooltip title=\"Delete\">\r\n          <span>\r\n            <IconButton\r\n              disabled={selected.length !== 1}\r\n              onClick={deleteHandler}\r\n            >\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </span>\r\n        </Tooltip>\r\n      </Box>\r\n      <Loader visible={isLoading} />\r\n    </Toolbar>\r\n  );\r\n}\r\n\r\nexport default function EnhancedTable() {\r\n  const [order, setOrder] = React.useState<Order | undefined>('desc');\r\n  const [orderBy, setOrderBy] = React.useState<keyof Load | undefined>(\r\n    'loadNumber',\r\n  );\r\n  const [selected, setSelected] = React.useState<readonly string[]>([]);\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState<number>(15);\r\n  const [queryParams, setQueryParams] = React.useState<Record<string, any>>({});\r\n  const tableContainerRef = React.useRef(null);\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const setSnackbarMessage = useSnackbar();\r\n\r\n  const {\r\n    isLoading,\r\n    isFetching,\r\n    data: { items, total } = { items: [], total: 0 },\r\n  } = useQuery({\r\n    queryKey: ['loads', page, rowsPerPage, orderBy, order, queryParams],\r\n    queryFn: LoadsQuery,\r\n    keepPreviousData: true,\r\n    retry: false,\r\n    onError: (error: Error) => {\r\n      setSnackbarMessage({\r\n        severity: 'error',\r\n        message: error instanceof Error ? error.message : JSON.stringify(error),\r\n      });\r\n    },\r\n  });\r\n  const rows: Load[] = items || [];\r\n\r\n  React.useEffect(() => {\r\n    if (tableContainerRef.current) {\r\n      const container = tableContainerRef.current as HTMLElement;\r\n      container.scrollTo({\r\n        top: 0,\r\n        left: 0,\r\n        behavior: 'smooth',\r\n      });\r\n    }\r\n  }, [rows]);\r\n\r\n  React.useEffect(() => {\r\n    const newSelected: string[] = [];\r\n    selected.forEach((selectedItem) => {\r\n      const selectedRow = rows.find((row) => row.id === selectedItem);\r\n      if (selectedRow) {\r\n        newSelected.push(selectedItem);\r\n      }\r\n    });\r\n    setSelected(newSelected);\r\n  }, [rows]);\r\n\r\n  const handleRequestSort = (\r\n    event: React.MouseEvent<unknown>,\r\n    property: keyof Load,\r\n  ) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    const isDesc = orderBy === property && order === 'desc';\r\n    if (isDesc) {\r\n      setOrder(undefined);\r\n      setOrderBy(undefined);\r\n    } else {\r\n      setOrder(isAsc ? 'desc' : 'asc');\r\n      setOrderBy(property);\r\n    }\r\n  };\r\n\r\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (event.target.checked) {\r\n      const newSelected = rows.map((n: Load) => n.id);\r\n      setSelected(newSelected);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (\r\n    event: React.MouseEvent<unknown>,\r\n    item: (typeof rows)[number],\r\n  ) => {\r\n    navigate(`./view/${item.id}`, {\r\n      relative: 'path',\r\n      state: { from: location },\r\n      replace: false,\r\n    });\r\n  };\r\n\r\n  const handleSelect = (event: React.MouseEvent<unknown>, name: string) => {\r\n    event.stopPropagation();\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected: readonly string[] = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event: unknown, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (\r\n    event: React.ChangeEvent<HTMLInputElement>,\r\n  ) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const isSelected = (name: string) => selected.indexOf(name) !== -1;\r\n\r\n  return (\r\n    <Box sx={{ width: '100%', height: '100%' }}>\r\n      <Paper sx={{ width: '100%', height: '100%', backgroundColor: 'unset' }}>\r\n        <EnhancedTableToolbar\r\n          selected={selected}\r\n          setQueryParams={(query) => {\r\n            setQueryParams(query);\r\n            setPage(0);\r\n          }}\r\n        />\r\n        <TableContainer\r\n          ref={tableContainerRef}\r\n          sx={{ height: 'calc(100% - 115px)' }}\r\n        >\r\n          <Table\r\n            sx={{ minWidth: 750 }}\r\n            aria-labelledby=\"tableTitle\"\r\n            size=\"small\"\r\n            stickyHeader\r\n          >\r\n            <EnhancedTableHead\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {rows.map((row, index) => {\r\n                const isItemSelected = isSelected(`${row.id}`);\r\n                const labelId = `enhanced-table-checkbox-${index}`;\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    onDoubleClick={(event) => handleClick(event, row)}\r\n                    role=\"checkbox\"\r\n                    aria-checked={isItemSelected}\r\n                    tabIndex={-1}\r\n                    key={row.id}\r\n                    selected={isItemSelected}\r\n                    sx={{ cursor: 'pointer' }}\r\n                  >\r\n                    <StyledTableCell padding=\"checkbox\">\r\n                      <Checkbox\r\n                        id={`${labelId}`}\r\n                        color=\"primary\"\r\n                        checked={isItemSelected}\r\n                        inputProps={{\r\n                          'aria-labelledby': labelId,\r\n                        }}\r\n                        onClick={(event) => handleSelect(event, `${row.id}`)}\r\n                      />\r\n                    </StyledTableCell>\r\n                    {headCells.map((cell) => {\r\n                      const cellData = cell.getData(row);\r\n                      return (\r\n                        <StyledTableCell\r\n                          key={cell.id}\r\n                          title={cellData.title}\r\n                          align={cell.numeric ? 'right' : 'center'}\r\n                        >\r\n                          {cellData.data}\r\n                        </StyledTableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 15, 20, 25, 35, 50]}\r\n          component=\"div\"\r\n          count={total}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <Loader visible={isLoading || isFetching} />\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { AlertColor } from '@mui/material/Alert/Alert';\r\n\r\nexport const EntityTypes = [\r\n  'Truck',\r\n  'Load',\r\n  'Owner',\r\n  'OwnerDriver',\r\n  'Coordinator',\r\n  'CoordinatorDriver',\r\n  'Driver',\r\n  'Location',\r\n  'User',\r\n  'Customer',\r\n  'Facility',\r\n] as const;\r\n\r\nexport const LangPriorities = ['EN', 'UA', 'ES', 'RU'] as const;\r\n\r\nexport const PersonTypes = [\r\n  'Owner',\r\n  'OwnerDriver',\r\n  'Coordinator',\r\n  'CoordinatorDriver',\r\n  'Driver',\r\n] as const;\r\n\r\nexport const UserRoles = ['Admin', 'Super Admin'] as const;\r\n\r\nexport const CustomerTypes = [\r\n  'BROKER DOMESTIC',\r\n  'BROKER INTERNATIONAL',\r\n  'FREIGHT FORWARDER DOMESTIC',\r\n  'FREIGHT FORWARDER INTERNATIONAL',\r\n  'SHIPPER/CONSIGNEE DOMESTIC',\r\n  'SHIPPER/CONSIGNEE INTERNATIONAL',\r\n  'OTHER',\r\n] as const;\r\n\r\nexport const TruckTypes = [\r\n  'Cargo van',\r\n  'Reefer van',\r\n  'Box truck',\r\n  'Box truck Reefer',\r\n  'Straight truck',\r\n  'Hotshot',\r\n  'Tented box',\r\n] as const;\r\n\r\nexport const TruckStatuses = [\r\n  'Available',\r\n  'Not Available',\r\n  'Will be available',\r\n  'On route',\r\n] as const;\r\n\r\nexport const TruckCrossborders = ['Yes', 'No'] as const;\r\n\r\nexport const TruckCertificates = [\r\n  'Hazmat',\r\n  'Tsa',\r\n  'TWIC',\r\n  'Tanker Endorsement',\r\n] as const;\r\n\r\nexport const TruckEquipments = [\r\n  'Dock height risers',\r\n  'Air ride',\r\n  'Lift gate',\r\n  'Keep from freezing',\r\n  'ICC bar',\r\n  'Vertical E-track',\r\n  'Horizontal E-track',\r\n  'Pallet jack',\r\n  'PPE',\r\n  'Ramps',\r\n  'Straps',\r\n  'Loads bars',\r\n  'Blankets',\r\n  'Pads',\r\n  'Fire extinguisher',\r\n  'Metal hooks',\r\n  'Reefer',\r\n  'Heater',\r\n] as const;\r\n\r\nexport const LoadStatuses = [\r\n  'Available',\r\n  'Planned',\r\n  'In Progress',\r\n  'TONU',\r\n  'Cancelled',\r\n  'Completed',\r\n] as const;\r\n\r\nexport const UnitsOfWeight = ['LBS', 'KG', 'TON'] as const;\r\n\r\nexport const UnitsOfLength = ['FT', 'IN', 'M', 'CM'] as const;\r\n\r\nexport const PUSH_STATES = [\r\n  'New',\r\n  'Ready for send',\r\n  'Processing send',\r\n  'Sent for deliver',\r\n  'Error sending',\r\n  'Ready for receiving receipt',\r\n  'Processing receiving receipt',\r\n  'Sent to user',\r\n  'Error from receipt',\r\n  'Error receiving receipt',\r\n] as const;\r\n\r\nexport const EMAIL_STATES = [\r\n  'New',\r\n  'Ready',\r\n  'Processing',\r\n  'Sent',\r\n  'Error',\r\n] as const;\r\n\r\nexport const EMAIL_TO_TYPES = ['User', 'Person'] as const;\r\n\r\nexport const FILE_OF_TYPES = ['Truck', 'Person', 'Load'] as const;\r\n\r\nexport type Order = 'asc' | 'desc';\r\nexport type QueryKey<T> = readonly [\r\n  key: string,\r\n  page: number,\r\n  rowsPerPage: number,\r\n  orderBy?: string,\r\n  order?: Order,\r\n  queryParams?: T,\r\n];\r\n// export type BaseQuery = {\r\n//   readonly queryKey: QueryKey;\r\n// };\r\nexport type Query<T> = {\r\n  readonly queryKey: QueryKey<T>;\r\n};\r\nexport type QuerySingleKey = readonly [key: string, recordId: string];\r\nexport type QuerySingle = {\r\n  readonly queryKey: QuerySingleKey;\r\n};\r\nexport type Result<T> = {\r\n  items: T[];\r\n  limit: number;\r\n  offset: number;\r\n  total: number;\r\n};\r\nexport type QueryFn<SearchType = any, ResultType = any> = (\r\n  query: Query<{ search: SearchType }>,\r\n) => Promise<Result<ResultType>>;\r\n\r\nexport type UserDataType = {\r\n  username: string;\r\n  password: string;\r\n} & Partial<User>;\r\nexport interface AuthContextType {\r\n  user: UserDataType | null;\r\n  signin: (\r\n    username: string,\r\n    password: string,\r\n    callback: (user: UserDataType | null) => void,\r\n  ) => void;\r\n  signout: (callback: VoidFunction) => void;\r\n}\r\nexport type SnackbarMessage = {\r\n  message: string;\r\n  severity: AlertColor;\r\n  handleClose?: (event?: React.SyntheticEvent | Event, reason?: string) => void;\r\n};\r\nexport type EntityType = (typeof EntityTypes)[number];\r\nexport type PersonType = (typeof PersonTypes)[number];\r\nexport type LangPriority = (typeof LangPriorities)[number];\r\nexport type UserRole = (typeof UserRoles)[number];\r\nexport type CustomerType = (typeof CustomerTypes)[number];\r\nexport type TruckType = (typeof TruckTypes)[number];\r\nexport type TruckStatus = (typeof TruckStatuses)[number];\r\nexport type TruckCrossborder = (typeof TruckCrossborders)[number];\r\nexport type TruckCertificate = (typeof TruckCertificates)[number];\r\nexport type TruckEquipment = (typeof TruckEquipments)[number];\r\nexport type LoadStatus = (typeof LoadStatuses)[number];\r\nexport type UnitOfWeight = (typeof UnitsOfWeight)[number];\r\nexport type UnitOfLength = (typeof UnitsOfLength)[number];\r\nexport type PushState = (typeof PUSH_STATES)[number];\r\nexport type EmailState = (typeof EMAIL_STATES)[number];\r\nexport type EmailToType = (typeof EMAIL_TO_TYPES)[number];\r\nexport type FileOfType = (typeof FILE_OF_TYPES)[number];\r\n\r\nexport type GeoPoint = [number, number];\r\n\r\nexport type FormOnClose<T = any> = (\r\n  eventType: 'Create' | 'Edit' | 'Save' | 'Close',\r\n  affectedEntity?: T,\r\n) => void;\r\n\r\nexport interface Person {\r\n  id: string;\r\n  fullName: string;\r\n  type: PersonType;\r\n  phone?: string;\r\n  email?: string;\r\n}\r\n\r\nexport interface Owner extends Person {\r\n  type: PersonType;\r\n  phone: string;\r\n  phone2?: string;\r\n  email: string;\r\n  address: string;\r\n  ownTrucks?: Truck[];\r\n  coordinators?: Coordinator[];\r\n  drivers?: Driver[];\r\n}\r\n\r\nexport interface CreateOwner {\r\n  fullName?: string;\r\n  birthDate?: Date;\r\n  citizenship?: string;\r\n  languagePriority?: LangPriority;\r\n  hiredBy?: string;\r\n  hireDate?: Date;\r\n  snn?: string;\r\n  company?: string;\r\n  insurancePolicy?: string;\r\n  insurancePolicyExp?: Date;\r\n  address?: string;\r\n  phone?: string;\r\n  phone2?: string;\r\n  email?: string;\r\n  emergencyContactName?: string;\r\n  emergencyContactRel?: string;\r\n  emergencyContactPhone?: string;\r\n  appLogin?: string;\r\n  appPass?: string;\r\n  notes?: string;\r\n}\r\n\r\nexport interface UpdateOwner extends Partial<CreateOwner> {\r\n  id: string;\r\n}\r\n\r\nexport interface CreateOwnerDriver {\r\n  fullName?: string;\r\n  birthDate?: Date;\r\n  citizenship?: string;\r\n  languagePriority?: LangPriority;\r\n  driverLicenceNumber?: string;\r\n  driverLicenceState?: string;\r\n  driverLicenceExp?: Date;\r\n  idDocId?: string;\r\n  idDocType?: string;\r\n  idDocExp?: Date;\r\n  hiredBy?: string;\r\n  hireDate?: Date;\r\n  snn?: string;\r\n  company?: string;\r\n  insurancePolicy?: string;\r\n  insurancePolicyExp?: Date;\r\n  address?: string;\r\n  phone?: string;\r\n  phone2?: string;\r\n  email?: string;\r\n  emergencyContactName?: string;\r\n  emergencyContactRel?: string;\r\n  emergencyContactPhone?: string;\r\n  appLogin?: string;\r\n  appPass?: string;\r\n  notes?: string;\r\n}\r\n\r\nexport interface UpdateOwnerDriver extends Partial<CreateOwnerDriver> {\r\n  id: string;\r\n}\r\n\r\nexport interface Coordinator extends Person {\r\n  type: PersonType;\r\n  phone: string;\r\n  phone2?: string;\r\n  email: string;\r\n  address: string;\r\n  coordinateTrucks?: Truck[];\r\n  owner: Owner;\r\n}\r\n\r\nexport interface CreateCoordinator {\r\n  fullName?: string;\r\n  birthDate?: Date;\r\n  citizenship?: string;\r\n  languagePriority?: LangPriority;\r\n  hiredBy?: string;\r\n  hireDate?: Date;\r\n  snn?: string;\r\n  company?: string;\r\n  insurancePolicy?: string;\r\n  insurancePolicyExp?: Date;\r\n  address?: string;\r\n  phone?: string;\r\n  phone2?: string;\r\n  email?: string;\r\n  emergencyContactName?: string;\r\n  emergencyContactRel?: string;\r\n  emergencyContactPhone?: string;\r\n  owner?: Owner | null;\r\n  notes?: string;\r\n}\r\n\r\nexport interface UpdateCoordinator extends Partial<CreateCoordinator> {\r\n  id: string;\r\n}\r\n\r\nexport interface CreateCoordinatorDriver {\r\n  fullName?: string;\r\n  birthDate?: Date;\r\n  citizenship?: string;\r\n  languagePriority?: LangPriority;\r\n  driverLicenceNumber?: string;\r\n  driverLicenceState?: string;\r\n  driverLicenceExp?: Date;\r\n  idDocId?: string;\r\n  idDocType?: string;\r\n  idDocExp?: Date;\r\n  hiredBy?: string;\r\n  hireDate?: Date;\r\n  snn?: string;\r\n  company?: string;\r\n  insurancePolicy?: string;\r\n  insurancePolicyExp?: Date;\r\n  address?: string;\r\n  phone?: string;\r\n  phone2?: string;\r\n  email?: string;\r\n  emergencyContactName?: string;\r\n  emergencyContactRel?: string;\r\n  emergencyContactPhone?: string;\r\n  appLogin?: string;\r\n  appPass?: string;\r\n  owner?: Owner | null;\r\n  notes?: string;\r\n}\r\n\r\nexport interface UpdateCoordinatorDriver\r\n  extends Partial<CreateCoordinatorDriver> {\r\n  id: string;\r\n}\r\n\r\nexport interface Driver extends Person {\r\n  type: PersonType;\r\n  phone: string;\r\n  phone2?: string;\r\n  email?: string;\r\n  address?: string;\r\n  driveTrucks?: Truck[];\r\n  owner: Owner;\r\n}\r\n\r\nexport interface CreateDriver {\r\n  fullName?: string;\r\n  birthDate?: Date;\r\n  citizenship?: string;\r\n  languagePriority?: LangPriority;\r\n  driverLicenceNumber?: string;\r\n  driverLicenceState?: string;\r\n  driverLicenceExp?: Date;\r\n  idDocId?: string;\r\n  idDocType?: string;\r\n  idDocExp?: Date;\r\n  hiredBy?: string;\r\n  hireDate?: Date;\r\n  address?: string;\r\n  phone?: string;\r\n  phone2?: string;\r\n  email?: string;\r\n  emergencyContactName?: string;\r\n  emergencyContactRel?: string;\r\n  emergencyContactPhone?: string;\r\n  appLogin?: string;\r\n  appPass?: string;\r\n  owner?: Owner | null;\r\n  notes?: string;\r\n}\r\n\r\nexport interface UpdateDriver extends Partial<CreateDriver> {\r\n  id: string;\r\n}\r\n\r\nexport interface Truck {\r\n  id: string;\r\n  truckNumber: number;\r\n  status: TruckStatus;\r\n  lastLocation?: GeoPoint;\r\n  lastCity?: string;\r\n  locationUpdatedAt?: string;\r\n  availabilityLocation?: GeoPoint;\r\n  availabilityAtLocal?: string;\r\n  milesHaversine?: number;\r\n  milesByRoads?: number;\r\n  crossborder: TruckCrossborder;\r\n  certificate: TruckCertificate;\r\n  type: TruckType;\r\n  equipment?: TruckEquipment[];\r\n  payload?: number;\r\n  grossWeight: string;\r\n  make: string;\r\n  model: string;\r\n  year: number;\r\n  color: string;\r\n  vinCode: string;\r\n  licencePlate: string;\r\n  insideDims: string;\r\n  doorDims?: string;\r\n  owner?: Owner;\r\n  coordinator?: Coordinator;\r\n  driver?: Driver;\r\n  reservedAt?: string; //Date;\r\n  reservedBy?: User;\r\n}\r\n\r\nexport interface TruckForMap {\r\n  id: string;\r\n  truckNumber: number;\r\n  status: TruckStatus;\r\n  lastLocation?: GeoPoint;\r\n}\r\n\r\nexport interface CreateTruck {\r\n  truckNumber?: number;\r\n  status?: TruckStatus;\r\n  crossborder?: TruckCrossborder;\r\n  certificate?: TruckCertificate;\r\n  type?: TruckType;\r\n  equipment?: TruckEquipment[];\r\n  payload?: number;\r\n  grossWeight?: string;\r\n  make?: string;\r\n  model?: string;\r\n  year?: number;\r\n  color?: string;\r\n  vinCode?: string;\r\n  licencePlate?: string;\r\n  insideDims?: string;\r\n  doorDims?: string;\r\n  owner?: Owner | null;\r\n  coordinator?: Coordinator | null;\r\n  driver?: Driver | null;\r\n}\r\n\r\nexport interface UpdateTruck extends Partial<CreateTruck> {\r\n  id: string;\r\n  reservedAt?: Date | null;\r\n  status?: TruckStatus;\r\n  availabilityLocation?: GeoPoint | null;\r\n  availabilityAtLocal?: Date;\r\n}\r\n\r\nexport interface Load {\r\n  id: string;\r\n  loadNumber: number;\r\n  ref?: string[];\r\n  status: LoadStatus;\r\n  stops: (StopPickUp | StopDelivery)[];\r\n  milesByRoads?: number;\r\n  milesHaversine?: number;\r\n  weight: string;\r\n  truckType: TruckType[];\r\n  rate?: number;\r\n  totalCharges?: number;\r\n  currency: string;\r\n  bookedByUser?: User;\r\n  bookedByCompany?: string;\r\n  assignTo?: User[];\r\n  checkInAs?: string;\r\n  truck?: Truck;\r\n  bookedWith?: Customer;\r\n}\r\n\r\nexport interface CreateLoad {\r\n  status: LoadStatus;\r\n  ref?: string[];\r\n  stops: (StopPickUp | StopDelivery)[];\r\n  weight?: string;\r\n  truckType?: TruckType[];\r\n  rate?: number;\r\n  totalCharges?: number;\r\n  currency: string;\r\n  bookedByUser?: User | null;\r\n  bookedByCompany?: string;\r\n  assignTo: User[];\r\n  checkInAs?: string;\r\n  truck?: Truck | null;\r\n  bookedWith?: Customer | null;\r\n}\r\n\r\nexport interface UpdateLoad extends Partial<CreateLoad> {\r\n  id: string;\r\n}\r\n\r\nexport interface Customer {\r\n  id: string;\r\n  name: string;\r\n  type: CustomerType;\r\n  address: string;\r\n  address2?: string;\r\n  city: string;\r\n  state: string;\r\n  zipCode: string;\r\n  phone: string;\r\n  fax?: string;\r\n  email: string;\r\n  website?: string;\r\n}\r\n\r\nexport interface CreateCustomer {\r\n  name?: string;\r\n  type?: CustomerType;\r\n  address?: string;\r\n  address2?: string;\r\n  city?: string;\r\n  state?: string;\r\n  zipCode?: string;\r\n  phone?: string;\r\n  fax?: string;\r\n  email?: string;\r\n  website?: string;\r\n}\r\n\r\nexport interface UpdateCustomer extends Partial<CreateCustomer> {\r\n  id: string;\r\n}\r\nexport interface Facility {\r\n  id: string;\r\n  readonly name: string;\r\n  readonly address: string;\r\n  readonly address2?: string;\r\n  readonly facilityLocation: GeoPoint;\r\n}\r\n\r\nexport interface CreateFacility {\r\n  readonly name?: string;\r\n  readonly address?: string;\r\n  readonly address2?: string;\r\n  readonly facilityLocation?: GeoPoint;\r\n}\r\n\r\nexport interface UpdateFacility extends Partial<CreateFacility> {\r\n  id: string;\r\n}\r\n\r\nexport interface Location {\r\n  id: string;\r\n  zipCode: string;\r\n  name: string;\r\n  stateCode: string;\r\n  stateName: string;\r\n  location: GeoPoint;\r\n}\r\n\r\nexport type CreateLocation = Omit<Location, 'id'>;\r\n\r\nexport interface UpdateLocation extends Partial<CreateLocation> {\r\n  id: string;\r\n}\r\n\r\nexport interface User {\r\n  id: string;\r\n  fullName: string;\r\n  phone?: string;\r\n  userRole: UserRole;\r\n  jobTitle: string;\r\n  email: string;\r\n}\r\n\r\nexport interface CreateUser extends Omit<User, 'id'> {\r\n  password?: string;\r\n}\r\n\r\nexport interface UpdateUser extends Partial<CreateUser> {\r\n  id: string;\r\n}\r\n\r\nexport interface File {\r\n  id: string;\r\n  filename: string;\r\n  contentType: string;\r\n  contentLength: number;\r\n  comment?: string;\r\n}\r\n\r\nexport enum StopType {\r\n  PickUp = 'PickUp',\r\n  Delivery = 'Delivery',\r\n}\r\n\r\nexport enum TimeFrameType {\r\n  FCFS = 'FCFS',\r\n  APPT = 'APPT',\r\n  ASAP = 'ASAP',\r\n  Direct = 'Direct',\r\n}\r\n\r\nexport type TimeFrameFCFS = {\r\n  type: TimeFrameType.FCFS;\r\n  from: Date | null;\r\n  to: Date | null;\r\n};\r\n\r\nexport type TimeFrameAPPT = {\r\n  type: TimeFrameType.APPT;\r\n  at: Date | null;\r\n};\r\n\r\nexport type TimeFrameASAP = {\r\n  type: TimeFrameType.ASAP;\r\n  at: Date | null;\r\n};\r\n\r\nexport type TimeFrameDirect = {\r\n  type: TimeFrameType.Direct;\r\n  at: Date | null;\r\n};\r\n\r\nexport interface StopPickUp {\r\n  type: StopType.PickUp;\r\n  timeFrame: TimeFrameFCFS | TimeFrameAPPT | TimeFrameASAP;\r\n  facility: Facility | null;\r\n  freightList: Freight[];\r\n  addInfo?: string;\r\n}\r\n\r\nexport interface StopDelivery {\r\n  type: StopType.Delivery;\r\n  timeFrame: TimeFrameFCFS | TimeFrameAPPT | TimeFrameDirect;\r\n  facility: Facility | null;\r\n  addInfo?: string;\r\n}\r\n\r\nexport interface Freight {\r\n  pieces: number | null;\r\n  unitOfWeight: UnitOfWeight;\r\n  weight: number | null;\r\n  unitOfLength: UnitOfLength;\r\n  length: number | null;\r\n}\r\n\r\nexport interface Push {\r\n  readonly id: string;\r\n  readonly state: PushState;\r\n  readonly to: Person;\r\n  readonly title?: string;\r\n  readonly subtitle?: string;\r\n  readonly body?: string;\r\n  readonly data?: Record<string, any>;\r\n  readonly badge?: number;\r\n  readonly sendResult?: Record<string, any>;\r\n  readonly receiptResult?: Record<string, any>;\r\n  readonly createdAt: Date;\r\n  readonly updatedAt: Date;\r\n}\r\n\r\nexport type To = {\r\n  readonly to: Person | User;\r\n  readonly toType: EmailToType;\r\n};\r\n\r\nexport interface Email {\r\n  readonly id: string;\r\n  readonly state: EmailState;\r\n  readonly from: string;\r\n  readonly to: To[];\r\n  readonly subject: string;\r\n  readonly text: string;\r\n  readonly html?: string;\r\n  readonly sendResult?: Record<string, any>;\r\n  readonly createdAt: Date;\r\n  readonly updatedAt: Date;\r\n}\r\n","export const dateTimeFormatter = Intl.DateTimeFormat('en-US', {\r\n  year: 'numeric',\r\n  month: 'numeric',\r\n  day: 'numeric',\r\n  hour: 'numeric',\r\n  minute: 'numeric',\r\n  second: 'numeric',\r\n  hour12: true,\r\n});\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2m0 16H8V7h11z\"\n}), 'ContentCopy');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'Edit');"],"names":["LocationForGrid","_ref","location","onRefClick","addInfo","children","value","setValue","React","items","setItems","geocoder","setGeocoder","setSearch","debounce","geocodeRequest","geocode","Promise","reject","then","result","results","length","locationFromRequest","google","maps","LatLng","res","address_components","formatted_address","concat","lat","lng","geometry","location_type","GeocoderLocationType","APPROXIMATE","viewport","LatLngBounds","place_id","types","forEach","item","toStringLocation","catch","err","selected","selectLocation","join","_jsxs","style","display","_jsx","Wrapper","getMapSettings","render","status","setSnackbarMessage","useSnackbar","setLoaderVisibility","useLoader","Status","LOADING","FAILURE","severity","message","SUCCESS","window","Geocoder","textOverflow","overflow","textAlign","title","href","target","onClick","_Fragment","IconButton","size","event","stopPropagation","navigator","clipboard","writeText","ContentCopy","sx","height","width","headCells","id","orderField","getData","row","data","loadNumber","numeric","disablePadding","label","firstRow","ref","secondRow","thirdRow","_row$stops","preventDefault","firstStop","stops","at","facility","facilityLocation","timeFrame","timeFrameType","type","timeFrameStart","from","timeFrameStartString","dateTimeFormatter","format","Date","_row$stops2","to","milesHaversine","milesByRoads","toFixed","truck","path","truckNumber","StyledTableHead","styled","TableHead","theme","backgroundColor","palette","background","default","StyledTableCell","TableCell","maxWidth","paddingTop","paddingBottom","whiteSpace","EnhancedTableHead","props","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","TableRow","padding","Checkbox","name","color","indeterminate","checked","onChange","inputProps","map","headCell","align","sortDirection","TableSortLabel","active","hideSortIcon","direction","property","Box","component","visuallyHidden","EnhancedTableToolbar","setQueryParams","refNumberSearch","setRefNumberSearch","statusOpen","setStatusOpen","statusValue","setStatusValue","LoadStatuses","loadNumberSearch","setLoadNumberSearch","truckNumberSearch","setTruckNumberSearch","searchDataChanged","setSearchDataChanged","useLocation","navigate","useNavigate","queryClient","useQueryClient","mutate","isLoading","useMutation","LoadDelete","onSuccess","invalidateQueries","onError","error","Error","JSON","stringify","handleStatusClose","handleStatusChange","prev","_","rest","filterClearHandler","filterHandler","queryParams","refNumber","keyUpHandler","key","Toolbar","pl","sm","pr","xs","bgcolor","alpha","primary","main","action","activatedOpacity","Typography","flex","variant","m","TextField","onKeyUp","select","SelectProps","multiple","open","renderValue","onOpen","handleStatusOpen","onClose","onKeyUpCapture","onKeyDownCapture","onBlur","fullWidth","MenuItem","indexOf","ListItemText","Number","isFinite","Tooltip","FilterListOffIcon","disabled","FilterListIcon","p","createHandler","relative","state","replace","AddIcon","editHandler","EditIcon","deleteHandler","DeleteIcon","Loader","visible","EnhancedTable","setOrder","setOrderBy","setSelected","page","setPage","rowsPerPage","setRowsPerPage","tableContainerRef","isFetching","total","useQuery","queryKey","queryFn","LoadsQuery","keepPreviousData","retry","rows","current","scrollTo","top","left","behavior","newSelected","selectedItem","find","push","Paper","query","TableContainer","Table","minWidth","stickyHeader","n","handleRequestSort","isAsc","undefined","TableBody","index","isItemSelected","labelId","hover","onDoubleClick","role","tabIndex","cursor","handleSelect","selectedIndex","slice","cell","cellData","TablePagination","rowsPerPageOptions","count","onPageChange","handleChangePage","newPage","onRowsPerPageChange","parseInt","LangPriorities","UserRoles","CustomerTypes","TruckTypes","TruckStatuses","TruckCrossborders","TruckCertificates","TruckEquipments","UnitsOfWeight","UnitsOfLength","StopType","TimeFrameType","Intl","DateTimeFormat","year","month","day","hour","minute","second","hour12","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","jsx","d"],"sourceRoot":""}