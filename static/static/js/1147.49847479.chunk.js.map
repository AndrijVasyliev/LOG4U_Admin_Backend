{"version":3,"file":"static/js/1147.49847479.chunk.js","mappings":"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","sources":["drivers/drivers.tsx","../node_modules/@mui/icons-material/esm/Delete.js","../node_modules/@mui/icons-material/esm/Edit.js"],"sourcesContent":["import * as React from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\r\n\r\nimport { alpha, styled } from '@mui/material/styles';\r\nimport TextField from '@mui/material/TextField';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport Box from '@mui/material/Box';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableSortLabel from '@mui/material/TableSortLabel';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport FilterListIcon from '@mui/icons-material/FilterList';\r\nimport FilterListOffIcon from '@mui/icons-material/FilterListOff';\r\nimport { visuallyHidden } from '@mui/utils';\r\n\r\nimport Loader from '../components/Loader';\r\n\r\nimport { DriversQuery, DriverDelete } from '../api';\r\nimport { useSnackbar } from '../hooks';\r\nimport { Order, Driver } from '../utils/dataTypes';\r\nimport { getType, getPath } from '../utils/queryHelpers';\r\nimport { stopPropagation } from '../utils/stopPropagation';\r\n\r\ninterface HeadCell {\r\n  id: string;\r\n  disablePadding: boolean;\r\n  orderField?: keyof Driver;\r\n  getData: (row: Driver) => { data: JSX.Element | string; title?: string };\r\n  label: string;\r\n  numeric: boolean;\r\n}\r\n\r\nconst headCells: readonly HeadCell[] = [\r\n  {\r\n    id: 'fullName',\r\n    orderField: 'fullName',\r\n    getData: (row) => ({ data: `${row.fullName}` }),\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'First name/Last name',\r\n  },\r\n  {\r\n    id: 'type',\r\n    getData: (row) => {\r\n      const type = `${getType(row)} `;\r\n      let title = '';\r\n      if (row.type === 'Driver') {\r\n        title = 'Driver';\r\n      }\r\n      if (row.type === 'OwnerDriver') {\r\n        title = 'Owner/Driver';\r\n      }\r\n      if (row.type === 'CoordinatorDriver') {\r\n        title = 'Coordinator/Driver';\r\n      }\r\n      return {\r\n        data: (\r\n          <span>\r\n            <b>{type}</b>\r\n          </span>\r\n        ),\r\n        title: title,\r\n      };\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Type',\r\n  },\r\n  {\r\n    id: 'phone',\r\n    getData: (row) => {\r\n      const firstRow = `${row.phone}`;\r\n      const secondRow = `${row.phone2 ? row.phone2 : ''}`;\r\n      return {\r\n        data: (\r\n          <span>\r\n            <a\r\n              href={`tel:${firstRow}`}\r\n              target=\"_blank\"\r\n              onClick={stopPropagation}\r\n            >\r\n              {firstRow}\r\n            </a>\r\n            <br />\r\n            <a\r\n              href={secondRow ? `tel:${secondRow}` : undefined}\r\n              target=\"_blank\"\r\n              onClick={stopPropagation}\r\n            >\r\n              {secondRow || ' '}\r\n            </a>\r\n          </span>\r\n        ),\r\n        title: firstRow + '\\n' + secondRow,\r\n      };\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Mobile phone',\r\n  },\r\n  {\r\n    id: 'email',\r\n    getData: (row) => {\r\n      if (row.email) {\r\n        const firstRow = `${row.email}`;\r\n        return {\r\n          data: (\r\n            <span>\r\n              <a\r\n                href={`mailto:${firstRow}`}\r\n                target=\"_blank\"\r\n                onClick={stopPropagation}\r\n              >\r\n                {firstRow}\r\n              </a>\r\n            </span>\r\n          ),\r\n          title: firstRow,\r\n        };\r\n      } else {\r\n        return { data: '' };\r\n      }\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Email',\r\n  },\r\n  {\r\n    id: 'address',\r\n    getData: (row) => {\r\n      if (row.address) {\r\n        const firstRow = `${row.address}`;\r\n        return {\r\n          data: <span>{firstRow}</span>,\r\n          title: firstRow,\r\n        };\r\n      } else {\r\n        return { data: '' };\r\n      }\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Home address',\r\n  },\r\n  {\r\n    id: 'onTruck',\r\n    getData: (row) => {\r\n      if (row.driveTrucks && row.driveTrucks.length) {\r\n        const truck = row.driveTrucks[0];\r\n        return {\r\n          data: (\r\n            <span>\r\n              <a\r\n                href={`/trucks/view/${truck.id}`}\r\n                target=\"_blank\"\r\n                onClick={stopPropagation}\r\n              >\r\n                {`${truck.truckNumber}`}\r\n              </a>\r\n              <br />\r\n              <a\r\n                href={\r\n                  truck.owner\r\n                    ? `/${getPath(truck.owner)}/view/${truck.owner.id}`\r\n                    : undefined\r\n                }\r\n                target=\"_blank\"\r\n                onClick={stopPropagation}\r\n              >\r\n                {truck.owner ? `${truck.owner.fullName}` : ' '}\r\n              </a>\r\n            </span>\r\n          ),\r\n          title: `${truck.truckNumber}${\r\n            truck.owner ? `\\n${truck.owner.fullName}` : ''\r\n          }`,\r\n        };\r\n      } else {\r\n        return { data: '' };\r\n      }\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'ON TRUCK',\r\n  },\r\n];\r\n\r\ninterface EnhancedTableProps {\r\n  numSelected: number;\r\n  onRequestSort: (\r\n    event: React.MouseEvent<unknown>,\r\n    property: keyof Driver,\r\n  ) => void;\r\n  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n  order: Order | undefined;\r\n  orderBy: string | undefined;\r\n  rowCount: number;\r\n}\r\n\r\nconst StyledTableHead = styled(TableHead)(({ theme }) => ({\r\n  backgroundColor: theme.palette.background.default,\r\n}));\r\n\r\nconst StyledTableCell = styled(TableCell)((/*{ theme }*/) => ({\r\n  maxWidth: '100px',\r\n  paddingTop: '6px',\r\n  paddingBottom: '6px',\r\n  whiteSpace: 'nowrap',\r\n  textOverflow: 'ellipsis',\r\n  overflow: 'hidden',\r\n}));\r\n\r\nfunction EnhancedTableHead(props: EnhancedTableProps) {\r\n  const {\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n  const createSortHandler =\r\n    (property: keyof Driver) => (event: React.MouseEvent<unknown>) => {\r\n      onRequestSort(event, property);\r\n    };\r\n\r\n  return (\r\n    <StyledTableHead>\r\n      <TableRow>\r\n        <StyledTableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            name={'enhanced-table-checkbox-select-all'}\r\n            color=\"primary\"\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{\r\n              'aria-label': 'enhanced-table-checkbox-select-all',\r\n            }}\r\n          />\r\n        </StyledTableCell>\r\n        {headCells.map((headCell) => (\r\n          <StyledTableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'center'}\r\n            padding={headCell.disablePadding ? 'none' : 'normal'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={headCell.orderField && orderBy === headCell.orderField}\r\n              hideSortIcon={!headCell.orderField}\r\n              direction={orderBy === headCell.orderField ? order : 'asc'}\r\n              onClick={\r\n                headCell.orderField\r\n                  ? createSortHandler(headCell.orderField)\r\n                  : () => {\r\n                      return;\r\n                    }\r\n              }\r\n            >\r\n              {headCell.label}\r\n              {headCell.orderField && orderBy === headCell.orderField ? (\r\n                <Box component=\"span\" sx={visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </Box>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </StyledTableCell>\r\n        ))}\r\n      </TableRow>\r\n    </StyledTableHead>\r\n  );\r\n}\r\n\r\ninterface EnhancedTableToolbarProps {\r\n  selected: readonly string[];\r\n  setQueryParams: React.Dispatch<\r\n    React.SetStateAction<Record<string, number | string>>\r\n  >;\r\n}\r\n\r\nfunction EnhancedTableToolbar(props: EnhancedTableToolbarProps) {\r\n  const { selected, setQueryParams } = props;\r\n  const [fullNameSearch, setFullNameSearch] = React.useState<string>('');\r\n  const [phoneSearch, setPhoneSearch] = React.useState<string>('');\r\n  const [truckNumberSearch, setTruckNumberSearch] = React.useState<number>(0);\r\n  const [searchChanged, setSearchChanged] = React.useState<boolean>(false);\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const queryClient = useQueryClient();\r\n\r\n  const setSnackbarMessage = useSnackbar();\r\n\r\n  const { mutate, isLoading } = useMutation(DriverDelete, {\r\n    onSuccess: () => {\r\n      setSnackbarMessage({\r\n        severity: 'success',\r\n        message: 'Deleted',\r\n      });\r\n      queryClient.invalidateQueries(['drivers']);\r\n    },\r\n    onError: (error: Error) => {\r\n      setSnackbarMessage({\r\n        severity: 'error',\r\n        message: error instanceof Error ? error.message : JSON.stringify(error),\r\n      });\r\n    },\r\n  });\r\n\r\n  const fullNameHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setFullNameSearch(event.target.value);\r\n    setSearchChanged(true);\r\n  };\r\n  const phoneHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setPhoneSearch(event.target.value);\r\n    setSearchChanged(true);\r\n  };\r\n  const truckNumberHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (Number.isFinite(Number(event.target.value))) {\r\n      setTruckNumberSearch(Number(event.target.value));\r\n      setSearchChanged(true);\r\n    }\r\n  };\r\n  const filterClearHandler = () => {\r\n    setSearchChanged(false);\r\n    setFullNameSearch('');\r\n    setPhoneSearch('');\r\n    setTruckNumberSearch(0);\r\n    setQueryParams({});\r\n  };\r\n  const filterHandler = () => {\r\n    setSearchChanged(false);\r\n    const queryParams: Record<string, number | string> = {};\r\n    if (fullNameSearch) {\r\n      queryParams.fullName = fullNameSearch;\r\n    }\r\n    if (phoneSearch) {\r\n      queryParams.allPhone = phoneSearch;\r\n    }\r\n    if (truckNumberSearch) {\r\n      queryParams.truckNumber = truckNumberSearch;\r\n    }\r\n    setQueryParams(queryParams);\r\n  };\r\n  const keyUpHandler = (event: React.KeyboardEvent) => {\r\n    if (event.key !== 'Enter') {\r\n      return;\r\n    }\r\n    if (fullNameSearch || phoneSearch || truckNumberSearch) {\r\n      filterHandler();\r\n    } else {\r\n      filterClearHandler();\r\n    }\r\n  };\r\n  const createHandler = () => {\r\n    navigate('./create', {\r\n      relative: 'path',\r\n      state: { from: location },\r\n      replace: false,\r\n    });\r\n  };\r\n  const editHandler = () => {\r\n    navigate(`./edit/${selected[0]}`, {\r\n      relative: 'path',\r\n      state: { from: location },\r\n      replace: false,\r\n    });\r\n  };\r\n  const deleteHandler = () => {\r\n    mutate(`${selected[0]}`);\r\n  };\r\n\r\n  return (\r\n    <Toolbar\r\n      sx={{\r\n        overflow: 'hidden',\r\n        pl: { sm: 2 },\r\n        pr: { xs: 1, sm: 1 },\r\n        ...(selected.length > 0 && {\r\n          bgcolor: (theme) =>\r\n            alpha(\r\n              theme.palette.primary.main,\r\n              theme.palette.action.activatedOpacity,\r\n            ),\r\n        }),\r\n      }}\r\n    >\r\n      {selected.length > 0 ? (\r\n        <Typography\r\n          sx={{ flex: '1 1 100%' }}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {selected.length} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          sx={{\r\n            flex: '1 1 100%',\r\n            whiteSpace: 'nowrap',\r\n            textOverflow: 'ellipsis',\r\n            overflow: 'hidden',\r\n          }}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          Drivers\r\n        </Typography>\r\n      )}\r\n      <Box\r\n        component=\"div\"\r\n        sx={{\r\n          '& .MuiTextField-root': { m: 1, width: '140px' },\r\n        }}\r\n      >\r\n        <TextField\r\n          label=\"First name/Last name\"\r\n          value={fullNameSearch}\r\n          onChange={fullNameHandler}\r\n          onKeyUp={keyUpHandler}\r\n          size=\"small\"\r\n        />\r\n      </Box>\r\n      <Box\r\n        component=\"div\"\r\n        sx={{\r\n          '& .MuiTextField-root': { m: 1, width: '140px' },\r\n        }}\r\n      >\r\n        <TextField\r\n          label=\"Phone\"\r\n          value={phoneSearch}\r\n          onChange={phoneHandler}\r\n          onKeyUp={keyUpHandler}\r\n          size=\"small\"\r\n        />\r\n      </Box>\r\n      <Box\r\n        component=\"div\"\r\n        sx={{\r\n          '& .MuiTextField-root': { m: 1, width: '140px' },\r\n        }}\r\n      >\r\n        <TextField\r\n          label=\"Truck Number\"\r\n          value={truckNumberSearch || ''}\r\n          onChange={truckNumberHandler}\r\n          onKeyUp={keyUpHandler}\r\n          size=\"small\"\r\n        />\r\n      </Box>\r\n      <Tooltip title=\"Filter list\">\r\n        {(searchChanged ||\r\n          (!fullNameSearch && !truckNumberSearch && !phoneSearch)) &&\r\n        (!(searchChanged && !fullNameSearch) ||\r\n          !(searchChanged && !truckNumberSearch) ||\r\n          !(searchChanged && !phoneSearch)) ? (\r\n          <span>\r\n            <IconButton\r\n              disabled={!fullNameSearch && !truckNumberSearch}\r\n              onClick={filterHandler}\r\n            >\r\n              <FilterListIcon />\r\n            </IconButton>\r\n          </span>\r\n        ) : (\r\n          <span>\r\n            <IconButton onClick={filterClearHandler}>\r\n              <FilterListOffIcon />\r\n            </IconButton>\r\n          </span>\r\n        )}\r\n      </Tooltip>\r\n      <Box sx={{ p: 1, display: 'inline-flex' }}>\r\n        <Tooltip title=\"Create\">\r\n          <span>\r\n            <IconButton onClick={createHandler}>\r\n              <AddIcon />\r\n            </IconButton>\r\n          </span>\r\n        </Tooltip>\r\n        <Tooltip title=\"Edit\">\r\n          <span>\r\n            <IconButton disabled={selected.length !== 1} onClick={editHandler}>\r\n              <EditIcon />\r\n            </IconButton>\r\n          </span>\r\n        </Tooltip>\r\n        <Tooltip title=\"Delete\">\r\n          <span>\r\n            <IconButton\r\n              disabled={selected.length !== 1}\r\n              onClick={deleteHandler}\r\n            >\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </span>\r\n        </Tooltip>\r\n      </Box>\r\n      <Loader visible={isLoading} />\r\n    </Toolbar>\r\n  );\r\n}\r\n\r\nexport default function EnhancedTable() {\r\n  const [order, setOrder] = React.useState<Order | undefined>('asc');\r\n  const [orderBy, setOrderBy] = React.useState<keyof Driver | undefined>(\r\n    'fullName',\r\n  );\r\n  const [selected, setSelected] = React.useState<readonly string[]>([]);\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState<number>(15);\r\n  const [queryParams, setQueryParams] = React.useState<Record<string, any>>({});\r\n  const tableContainerRef = React.useRef(null);\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const setSnackbarMessage = useSnackbar();\r\n\r\n  const {\r\n    isLoading,\r\n    isFetching,\r\n    error,\r\n    data: { items, total } = { items: [], total: 0 },\r\n  } = useQuery({\r\n    queryKey: ['drivers', page, rowsPerPage, orderBy, order, queryParams],\r\n    queryFn: DriversQuery,\r\n    keepPreviousData: true,\r\n    retry: false,\r\n  });\r\n  React.useEffect(() => {\r\n    if (!error) {\r\n      return;\r\n    }\r\n    setSnackbarMessage({\r\n      severity: 'error',\r\n      message: error instanceof Error ? error.message : JSON.stringify(error),\r\n    });\r\n  }, [error]);\r\n  const rows = items || [];\r\n\r\n  React.useEffect(() => {\r\n    if (tableContainerRef.current) {\r\n      const container = tableContainerRef.current as HTMLElement;\r\n      container.scrollTo({\r\n        top: 0,\r\n        left: 0,\r\n        behavior: 'smooth',\r\n      });\r\n    }\r\n  }, [rows]);\r\n\r\n  React.useEffect(() => {\r\n    const newSelected: string[] = [];\r\n    selected.forEach((selectedItem) => {\r\n      const selectedRow = rows.find((row) => row.id === selectedItem);\r\n      if (selectedRow) {\r\n        newSelected.push(selectedItem);\r\n      }\r\n    });\r\n    setSelected(newSelected);\r\n  }, [rows]);\r\n\r\n  const handleRequestSort = (\r\n    event: React.MouseEvent<unknown>,\r\n    property: keyof Driver,\r\n  ) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    const isDesc = orderBy === property && order === 'desc';\r\n    if (isDesc) {\r\n      setOrder(undefined);\r\n      setOrderBy(undefined);\r\n    } else {\r\n      setOrder(isAsc ? 'desc' : 'asc');\r\n      setOrderBy(property);\r\n    }\r\n  };\r\n\r\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (event.target.checked) {\r\n      const newSelected = rows.map((n: Driver) => n.id);\r\n      setSelected(newSelected);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (\r\n    event: React.MouseEvent<unknown>,\r\n    item: (typeof rows)[number],\r\n  ) => {\r\n    navigate(`../${getPath(item)}/view/${item.id}`, {\r\n      relative: 'path',\r\n      state: { from: location },\r\n      replace: false,\r\n    });\r\n  };\r\n\r\n  const handleSelect = (event: React.MouseEvent<unknown>, name: string) => {\r\n    event.stopPropagation();\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected: readonly string[] = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event: unknown, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (\r\n    event: React.ChangeEvent<HTMLInputElement>,\r\n  ) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const isSelected = (name: string) => selected.indexOf(name) !== -1;\r\n\r\n  return (\r\n    <Box sx={{ width: '100%', height: '100%' }}>\r\n      <Paper sx={{ width: '100%', height: '100%', backgroundColor: 'unset' }}>\r\n        <EnhancedTableToolbar\r\n          selected={selected}\r\n          setQueryParams={(query) => {\r\n            setQueryParams(query);\r\n            setPage(0);\r\n          }}\r\n        />\r\n        <TableContainer\r\n          ref={tableContainerRef}\r\n          sx={{ height: 'calc(100% - 115px)' }}\r\n        >\r\n          <Table\r\n            sx={{ minWidth: 750 }}\r\n            aria-labelledby=\"tableTitle\"\r\n            size=\"small\"\r\n            stickyHeader\r\n          >\r\n            <EnhancedTableHead\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {rows.map((row, index) => {\r\n                const isItemSelected = isSelected(`${row.id}`);\r\n                const labelId = `enhanced-table-checkbox-${index}`;\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    onDoubleClick={(event) => handleClick(event, row)}\r\n                    role=\"checkbox\"\r\n                    aria-checked={isItemSelected}\r\n                    tabIndex={-1}\r\n                    key={row.id}\r\n                    selected={isItemSelected}\r\n                    sx={{ cursor: 'pointer' }}\r\n                  >\r\n                    <StyledTableCell padding=\"checkbox\">\r\n                      <Checkbox\r\n                        id={`${labelId}`}\r\n                        color=\"primary\"\r\n                        checked={isItemSelected}\r\n                        inputProps={{\r\n                          'aria-labelledby': labelId,\r\n                        }}\r\n                        onClick={(event) => handleSelect(event, `${row.id}`)}\r\n                      />\r\n                    </StyledTableCell>\r\n                    {headCells.map((cell) => {\r\n                      const cellData = cell.getData(row);\r\n                      return (\r\n                        <StyledTableCell\r\n                          key={cell.id}\r\n                          title={cellData.title}\r\n                          align={cell.numeric ? 'right' : 'center'}\r\n                        >\r\n                          {cellData.data}\r\n                        </StyledTableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 15, 20, 25, 35, 50]}\r\n          component=\"div\"\r\n          count={total}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <Loader visible={isLoading || isFetching} />\r\n    </Box>\r\n  );\r\n}\r\n","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.996.996 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'Edit');"],"names":["headCells","id","orderField","getData","row","data","fullName","numeric","disablePadding","label","type","getType","title","_jsx","children","firstRow","phone","secondRow","phone2","_jsxs","href","target","onClick","stopPropagation","undefined","email","address","driveTrucks","length","truck","truckNumber","owner","getPath","StyledTableHead","styled","TableHead","_ref","theme","backgroundColor","palette","background","default","StyledTableCell","TableCell","maxWidth","paddingTop","paddingBottom","whiteSpace","textOverflow","overflow","EnhancedTableHead","props","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","TableRow","padding","Checkbox","name","color","indeterminate","checked","onChange","inputProps","map","headCell","align","sortDirection","TableSortLabel","active","hideSortIcon","direction","property","event","Box","component","sx","visuallyHidden","EnhancedTableToolbar","selected","setQueryParams","fullNameSearch","setFullNameSearch","React","phoneSearch","setPhoneSearch","truckNumberSearch","setTruckNumberSearch","searchChanged","setSearchChanged","location","useLocation","navigate","useNavigate","queryClient","useQueryClient","setSnackbarMessage","useSnackbar","mutate","isLoading","useMutation","DriverDelete","onSuccess","severity","message","invalidateQueries","onError","error","Error","JSON","stringify","filterClearHandler","filterHandler","queryParams","allPhone","keyUpHandler","key","Toolbar","pl","sm","pr","xs","bgcolor","alpha","primary","main","action","activatedOpacity","Typography","flex","variant","m","width","TextField","value","onKeyUp","size","Number","isFinite","Tooltip","IconButton","FilterListOffIcon","disabled","FilterListIcon","p","display","createHandler","relative","state","from","replace","AddIcon","editHandler","EditIcon","deleteHandler","DeleteIcon","Loader","visible","EnhancedTable","setOrder","setOrderBy","setSelected","page","setPage","rowsPerPage","setRowsPerPage","tableContainerRef","isFetching","items","total","useQuery","queryKey","queryFn","DriversQuery","keepPreviousData","retry","rows","current","scrollTo","top","left","behavior","newSelected","forEach","selectedItem","find","push","height","Paper","query","TableContainer","ref","Table","minWidth","stickyHeader","n","handleRequestSort","isAsc","TableBody","index","isItemSelected","indexOf","labelId","hover","onDoubleClick","handleClick","item","role","tabIndex","cursor","handleSelect","selectedIndex","concat","slice","cell","cellData","TablePagination","rowsPerPageOptions","count","onPageChange","handleChangePage","newPage","onRowsPerPageChange","parseInt","createSvgIcon","d"],"sourceRoot":""}