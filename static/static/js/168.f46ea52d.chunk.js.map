{"version":3,"file":"static/js/168.f46ea52d.chunk.js","mappings":"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","sources":["api/api.ts","loads/loads.tsx","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/icons-material/Edit.js"],"sourcesContent":["import { authProvider } from '../utils/auth';\nimport {\n  Coordinator,\n  Driver,\n  Load,\n  CreateLoad,\n  UpdateLoad,\n  Location,\n  CreateLocation,\n  UpdateLocation,\n  Owner,\n  Truck,\n  CreateTruck,\n  UpdateTruck,\n  User,\n  CreateUser,\n  UpdateUser,\n  Query,\n  QuerySingle,\n  Result,\n} from '../utils/dataTypes';\n\nconst SUCCESS_HTTP_CODE = 200;\nconst CREATED_HTTP_CODE = 201;\nconst FORBIDDEN_HTTP_CODE = 403;\nconst NOT_FOUND_HTTP_CODE = 404;\nconst CONFLICT_HTTP_CODE = 409;\n\nconst { origin } = new URL(window.location.href);\n\nconst transformBody = (body: object): Record<string, any> => {\n  const transformedBody: Record<string, any> = {};\n  Object.entries(body).forEach((entry) => {\n    if (Array.isArray(entry[1])) {\n      transformedBody[entry[0]] = entry[1].map((elem) =>\n        typeof elem === 'object' && !(elem instanceof Date) ? elem.id : elem,\n      );\n    } else if (typeof entry[1] === 'object' && !(entry[1] instanceof Date)) {\n      transformedBody[entry[0]] = entry[1] && entry[1].id;\n    } else {\n      transformedBody[entry[0]] = entry[1];\n    }\n  });\n  return transformedBody;\n};\n\nexport const authFetch: (\n  input: string | URL,\n  init?: RequestInit & { bodyObj?: object },\n) => Promise<object> = (input, init = {}) => {\n  const { bodyObj, ...restInit } = init;\n  const fetchInit = { ...restInit, headers: new Headers() };\n  fetchInit.headers.set(\n    'Authorization',\n    'Basic ' +\n      btoa(authProvider.user?.username + ':' + authProvider.user?.password),\n  );\n  if (bodyObj && typeof bodyObj === 'object') {\n    fetchInit.headers.set('Accept', 'application/json');\n    fetchInit.headers.set('Content-Type', 'application/json');\n    fetchInit.body = JSON.stringify(transformBody(bodyObj));\n  }\n  return fetch(input, fetchInit)\n    .catch((reason) => {\n      const error = new Error();\n      error.cause = reason;\n      error.name = 'Fetch error';\n      error.message = 'Network error has occurred';\n      throw error;\n    })\n    .then((response) => {\n      if (\n        response.status !== SUCCESS_HTTP_CODE &&\n        response.status !== CREATED_HTTP_CODE\n      ) {\n        const error = new Error();\n        error.cause = response;\n        if (response.status) {\n          error.name = response.status + ' ' + response.statusText;\n          switch (response.status) {\n            case FORBIDDEN_HTTP_CODE:\n              error.message = 'Insufficient permissions';\n              break;\n            case NOT_FOUND_HTTP_CODE:\n              error.message = 'Not found';\n              break;\n            case CONFLICT_HTTP_CODE:\n              error.message = 'Some field values invalidate unique constrain';\n              break;\n            default:\n              error.message = 'Some server error has occurred';\n          }\n        } else {\n          error.message = 'Network error has occurred';\n        }\n        throw error;\n      }\n      return response.json().catch((reason) => {\n        const error = new Error();\n        error.cause = reason;\n        error.name = 'Fetch error';\n        error.message = 'Server responded with incorrect data';\n        throw error;\n      });\n    });\n};\n\nexport const TrucksQuery: (\n  query: Query<{\n    search?: number;\n    truckNumber?: number;\n    lastLocation?: string;\n    distance?: string;\n  }>,\n) => Promise<Result<Truck>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/truck', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (queryParams?.search) {\n    url.searchParams.append('search', `${queryParams.search}`);\n  }\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  if (queryParams?.lastLocation && queryParams?.distance) {\n    url.searchParams.append('lastLocation', `${queryParams.lastLocation}`);\n    url.searchParams.append('distance', `${queryParams.distance}`);\n  }\n  return authFetch(url) as Promise<Result<Truck>>;\n};\n\nexport const TruckDelete = (userId: string): Promise<Truck> => {\n  const url = new URL(`/truck/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<Truck>;\n};\n\nexport const TruckCreate = (data: CreateTruck): Promise<Truck> => {\n  const url = new URL(`/truck`, origin);\n  return authFetch(url, {\n    method: 'POST',\n    bodyObj: data,\n  }) as Promise<Truck>;\n};\n\nexport const TruckUpdate = (data: UpdateTruck): Promise<Truck> => {\n  const { id, ...updatedData } = data;\n  const url = new URL(`/truck/${id}`, origin);\n  return authFetch(url, {\n    method: 'PATCH',\n    bodyObj: updatedData,\n  }) as Promise<Truck>;\n};\n\nexport const TruckQuery = (query: QuerySingle): Promise<Truck> => {\n  const url = new URL(`/truck/${query.queryKey[1]}`, origin);\n  return authFetch(url, {\n    method: 'GET',\n  }) as Promise<Truck>;\n};\n\nexport const LocationsQuery: (\n  query: Query<{ search?: string; name?: string }>,\n) => Promise<Result<Location>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/location', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.search) {\n    url.searchParams.append('search', `${queryParams.search}`);\n  }\n  if (queryParams?.name) {\n    url.searchParams.append('name', `${queryParams.name}`);\n  }\n  return authFetch(url) as Promise<Result<Location>>;\n};\n\nexport const LocationDelete = (userId: string): Promise<Location> => {\n  const url = new URL(`/location/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<Location>;\n};\n\nexport const LocationCreate = (data: CreateLocation): Promise<Location> => {\n  const url = new URL(`/location`, origin);\n  return authFetch(url, {\n    method: 'POST',\n    bodyObj: data,\n  }) as Promise<Location>;\n};\n\nexport const LocationUpdate = (data: UpdateLocation): Promise<Location> => {\n  const { id, ...updatedData } = data;\n  const url = new URL(`/location/${id}`, origin);\n  return authFetch(url, {\n    method: 'PATCH',\n    bodyObj: updatedData,\n  }) as Promise<Location>;\n};\n\nexport const LocationQuery = (query: QuerySingle): Promise<Location> => {\n  const url = new URL(`/location/${query.queryKey[1]}`, origin);\n  return authFetch(url, {\n    method: 'GET',\n  }) as Promise<Location>;\n};\n\nexport const LoadsQuery: (\n  query: Query<{ loadNumber?: number; truckNumber?: number }>,\n) => Promise<Result<Load>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/load', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.loadNumber) {\n    url.searchParams.append('loadNumber', `${queryParams.loadNumber}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  return authFetch(url) as Promise<Result<Load>>;\n};\n\nexport const LoadDelete = (userId: string): Promise<Load> => {\n  const url = new URL(`/load/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<Load>;\n};\n\nexport const LoadCreate = (data: CreateLoad): Promise<Load> => {\n  const url = new URL(`/load`, origin);\n  return authFetch(url, {\n    method: 'POST',\n    bodyObj: data,\n  }) as Promise<Load>;\n};\n\nexport const LoadUpdate = (data: UpdateLoad): Promise<Load> => {\n  const { id, ...updatedData } = data;\n  const url = new URL(`/load/${id}`, origin);\n  return authFetch(url, {\n    method: 'PATCH',\n    bodyObj: updatedData,\n  }) as Promise<Load>;\n};\n\nexport const LoadQuery = (query: QuerySingle): Promise<Load> => {\n  const url = new URL(`/load/${query.queryKey[1]}`, origin);\n  return authFetch(url, {\n    method: 'GET',\n  }) as Promise<Load>;\n};\n\nexport const OwnersQuery: (\n  query: Query<{ search?: string; fullName?: number; truckNumber?: number }>,\n) => Promise<Result<Owner>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/owner', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.search) {\n    url.searchParams.append('search', `${queryParams.search}`);\n  }\n  if (queryParams?.fullName) {\n    url.searchParams.append('fullName', `${queryParams.fullName}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  return authFetch(url) as Promise<Result<Owner>>;\n};\n\nexport const OwnerDelete = (userId: string): Promise<Owner> => {\n  const url = new URL(`/owner/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<Owner>;\n};\n\nexport const DriversQuery: (\n  query: Query<{ search?: string; fullName?: number; truckNumber?: number }>,\n) => Promise<Result<Driver>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/driver', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.search) {\n    url.searchParams.append('search', `${queryParams.search}`);\n  }\n  if (queryParams?.fullName) {\n    url.searchParams.append('fullName', `${queryParams.fullName}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  return authFetch(url) as Promise<Result<Driver>>;\n};\n\nexport const DriverDelete = (userId: string): Promise<Driver> => {\n  const url = new URL(`/driver/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<Driver>;\n};\n\nexport const CoordinatorsQuery: (\n  query: Query<{ search?: string; fullName?: number; truckNumber?: number }>,\n) => Promise<Result<Coordinator>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/coordinator', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.search) {\n    url.searchParams.append('search', `${queryParams.search}`);\n  }\n  if (queryParams?.fullName) {\n    url.searchParams.append('fullName', `${queryParams.fullName}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  return authFetch(url) as Promise<Result<Coordinator>>;\n};\n\nexport const CoordinatorDelete = (userId: string): Promise<Coordinator> => {\n  const url = new URL(`/coordinator/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<Coordinator>;\n};\n\nexport const UsersQuery: (\n  query: Query<{ search?: string; fullName?: number }>,\n) => Promise<Result<User>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/user', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.search) {\n    url.searchParams.append('search', `${queryParams.search}`);\n  }\n  if (queryParams?.fullName) {\n    url.searchParams.append('fullName', `${queryParams.fullName}`);\n  }\n  return authFetch(url) as Promise<Result<User>>;\n};\n\nexport const UserDelete = (userId: string): Promise<User> => {\n  const url = new URL(`/user/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<User>;\n};\n\nexport const UserCreate = (data: CreateUser): Promise<User> => {\n  const url = new URL(`/user`, origin);\n  return authFetch(url, {\n    method: 'POST',\n    bodyObj: data,\n  }) as Promise<User>;\n};\n\nexport const UserUpdate = (data: UpdateUser): Promise<User> => {\n  const { id, ...updatedData } = data;\n  const url = new URL(`/user/${id}`, origin);\n  return authFetch(url, {\n    method: 'PATCH',\n    bodyObj: updatedData,\n  }) as Promise<User>;\n};\n\nexport const UserQuery = (query: QuerySingle): Promise<User> => {\n  const url = new URL(`/user/${query.queryKey[1]}`, origin);\n  return authFetch(url, {\n    method: 'GET',\n  }) as Promise<User>;\n};\n","import * as React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\n\nimport { alpha, styled } from '@mui/material/styles';\nimport TextField from '@mui/material/TextField';\nimport Checkbox from '@mui/material/Checkbox';\nimport Tooltip from '@mui/material/Tooltip';\nimport TableCell from '@mui/material/TableCell';\nimport Box from '@mui/material/Box';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport TableSortLabel from '@mui/material/TableSortLabel';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\nimport IconButton from '@mui/material/IconButton';\nimport AddIcon from '@mui/icons-material/Add';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport FilterListIcon from '@mui/icons-material/FilterList';\nimport FilterListOffIcon from '@mui/icons-material/FilterListOff';\nimport { visuallyHidden } from '@mui/utils';\n\nimport Loader from '../components/Loader';\n\nimport { LoadsQuery, LoadDelete } from '../api';\nimport { useSnackbar } from '../hooks';\nimport { Order, Load, Truck } from '../utils/dataTypes';\n\ninterface HeadCell {\n  id: string;\n  disablePadding: boolean;\n  orderField?: keyof Load;\n  getData: (row: Load) => { data: JSX.Element | string; title?: string };\n  label: string;\n  numeric: boolean;\n}\n\nconst headCells: readonly HeadCell[] = [\n  {\n    id: 'loadNumber',\n    orderField: 'loadNumber',\n    getData: (row) => ({ data: `${row.loadNumber}` }),\n    numeric: true,\n    disablePadding: false,\n    label: 'Load Number',\n  },\n  {\n    id: 'pickLocation',\n    getData: (row) => {\n      if (row?.pick) {\n        const path = `./locations/view/${row.pick.id}`;\n        const firstRow = `${row.pick.name}, ${row.pick.stateCode}, ${row.pick.zipCode},`;\n        const secondRow = `${\n          row.pickDate ? new Date(row.pickDate).toLocaleString() : ''\n        }`;\n\n        return {\n          data: (\n            <span>\n              <a href={path} target=\"_blank\" onClick={stopPropagation}>\n                {firstRow}\n              </a>\n              <br />\n              {secondRow}\n            </span>\n          ),\n          title: firstRow + '\\n' + secondRow,\n        };\n      } else {\n        return { data: '' };\n      }\n    },\n    numeric: false,\n    disablePadding: true,\n    label: 'First pick up EDT',\n  },\n  {\n    id: 'deliverLocation',\n    getData: (row) => {\n      if (row?.deliver) {\n        const path = `./locations/view/${row.deliver.id}`;\n        const firstRow = `${row.deliver.name}, ${row.deliver.stateCode}, ${row.deliver.zipCode},`;\n        const secondRow = `${\n          row.deliverDate ? new Date(row.deliverDate).toLocaleString() : ''\n        }`;\n\n        return {\n          data: (\n            <span>\n              <a href={path} target=\"_blank\" onClick={stopPropagation}>\n                {firstRow}\n              </a>\n              <br />\n              {secondRow}\n            </span>\n          ),\n          title: firstRow + '\\n' + secondRow,\n        };\n      } else {\n        return { data: '' };\n      }\n    },\n    numeric: false,\n    disablePadding: true,\n    label: 'Last delivery EDT',\n  },\n  {\n    id: 'miles',\n    getData: (row) => {\n      if (row?.milesHaversine) {\n        const firstRow = `${\n          row.milesByRoads ? row.milesByRoads.toFixed(2) : ''\n        }`;\n        const secondRow = `${row.milesHaversine.toFixed(2)}`;\n\n        return {\n          data: (\n            <span>\n              <b>{firstRow}</b>\n              <br />\n              {secondRow}\n            </span>\n          ),\n          title: firstRow + ' - By roads' + '\\n' + secondRow + ' - Distance',\n        };\n      } else {\n        return { data: '' };\n      }\n    },\n    numeric: true,\n    disablePadding: false,\n    label: 'Miles',\n  },\n  {\n    id: 'truckType',\n    getData: (row) => {\n      const firstRow = `${row.truckType.join(', ')}`;\n\n      return {\n        data: <span>{firstRow}</span>,\n        title: firstRow,\n      };\n    },\n    numeric: false,\n    disablePadding: true,\n    label: 'Required truck info',\n  },\n  {\n    id: 'truck',\n    getData: (row) => {\n      if (row?.truck) {\n        const path = `./trucks/view/${row.truck.id}`;\n        const firstRow = `${row.truck.truckNumber}`;\n\n        return {\n          data: (\n            <span>\n              <a href={path} target=\"_blank\" onClick={stopPropagation}>\n                {firstRow}\n              </a>\n            </span>\n          ),\n          title: firstRow,\n        };\n      } else {\n        return { data: '' };\n      }\n    },\n    numeric: true,\n    disablePadding: false,\n    label: 'Truck',\n  },\n];\n\ninterface EnhancedTableProps {\n  numSelected: number;\n  onRequestSort: (\n    event: React.MouseEvent<unknown>,\n    property: keyof Load,\n  ) => void;\n  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  order: Order | undefined;\n  orderBy: string | undefined;\n  rowCount: number;\n}\n\nconst StyledTableHead = styled(TableHead)(({ theme }) => ({\n  backgroundColor: theme.palette.background.default,\n}));\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  maxWidth: '100px',\n  whiteSpace: 'nowrap',\n  textOverflow: 'ellipsis',\n  overflow: 'hidden',\n}));\n\nfunction stopPropagation(e: React.SyntheticEvent) {\n  e.stopPropagation();\n}\n\nfunction EnhancedTableHead(props: EnhancedTableProps) {\n  const {\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n  } = props;\n  const createSortHandler =\n    (property: keyof Load) => (event: React.MouseEvent<unknown>) => {\n      onRequestSort(event, property);\n    };\n\n  return (\n    <StyledTableHead>\n      <TableRow>\n        <StyledTableCell padding=\"checkbox\">\n          <Checkbox\n            name={'enhanced-table-checkbox-select-all'}\n            color=\"primary\"\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{\n              'aria-label': 'enhanced-table-checkbox-select-all',\n            }}\n          />\n        </StyledTableCell>\n        {headCells.map((headCell) => (\n          <StyledTableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'center'}\n            padding={headCell.disablePadding ? 'none' : 'normal'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={headCell.orderField && orderBy === headCell.orderField}\n              hideSortIcon={!headCell.orderField}\n              direction={orderBy === headCell.orderField ? order : 'asc'}\n              onClick={\n                headCell.orderField\n                  ? createSortHandler(headCell.orderField)\n                  : () => {\n                      return;\n                    }\n              }\n            >\n              {headCell.label}\n              {headCell.orderField && orderBy === headCell.orderField ? (\n                <Box component=\"span\" sx={visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </StyledTableCell>\n        ))}\n      </TableRow>\n    </StyledTableHead>\n  );\n}\n\ninterface EnhancedTableToolbarProps {\n  selected: readonly string[];\n  setQueryParams: React.Dispatch<React.SetStateAction<Record<string, number>>>;\n}\n\nfunction EnhancedTableToolbar(props: EnhancedTableToolbarProps) {\n  const { selected, setQueryParams } = props;\n  const [loadNumberSearch, setLoadNumberSearch] = React.useState<number>(0);\n  const [truckNumberSearch, setTruckNumberSearch] = React.useState<number>(0);\n  const [searchChanged, setSearchChanged] = React.useState<boolean>(false);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const queryClient = useQueryClient();\n\n  const setSnackbarMessage = useSnackbar();\n\n  const { mutate, isLoading } = useMutation(LoadDelete, {\n    onSuccess: () => {\n      setSnackbarMessage({\n        severity: 'success',\n        message: 'Deleted',\n      });\n      queryClient.invalidateQueries(['loads']);\n    },\n    onError: (error: Error) => {\n      setSnackbarMessage({\n        severity: 'error',\n        message: error instanceof Error ? error.message : JSON.stringify(error),\n      });\n    },\n  });\n\n  const loadNumberHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (Number.isFinite(Number(event.target.value))) {\n      setLoadNumberSearch(Number(event.target.value));\n      setSearchChanged(true);\n    }\n  };\n  const truckNumberHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (Number.isFinite(Number(event.target.value))) {\n      setTruckNumberSearch(Number(event.target.value));\n      setSearchChanged(true);\n    }\n  };\n  const loadClearHandler = () => {\n    setSearchChanged(false);\n    setLoadNumberSearch(0);\n    setTruckNumberSearch(0);\n    setQueryParams({});\n  };\n  const filterHandler = () => {\n    setSearchChanged(false);\n    const queryParams: Record<string, number> = {};\n    if (loadNumberSearch) {\n      queryParams.loadNumber = loadNumberSearch;\n    }\n    if (truckNumberSearch) {\n      queryParams.truckNumber = truckNumberSearch;\n    }\n    setQueryParams(queryParams);\n  };\n  const createHandler = () => {\n    navigate('./create', {\n      relative: 'path',\n      state: { from: location },\n      replace: false,\n    });\n  };\n  const editHandler = () => {\n    navigate(`./edit/${selected[0]}`, {\n      relative: 'path',\n      state: { from: location },\n      replace: false,\n    });\n  };\n  const deleteHandler = () => {\n    mutate(`${selected[0]}`);\n  };\n\n  return (\n    <Toolbar\n      sx={{\n        pl: { sm: 2 },\n        pr: { xs: 1, sm: 1 },\n        ...(selected.length > 0 && {\n          bgcolor: (theme) =>\n            alpha(\n              theme.palette.primary.main,\n              theme.palette.action.activatedOpacity,\n            ),\n        }),\n      }}\n    >\n      {selected.length > 0 ? (\n        <Typography\n          sx={{ flex: '1 1 100%' }}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {selected.length} selected\n        </Typography>\n      ) : (\n        <Typography\n          sx={{\n            flex: '1 1 100%',\n            whiteSpace: 'nowrap',\n            textOverflow: 'ellipsis',\n            overflow: 'hidden',\n          }}\n          variant=\"h6\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          Loads\n        </Typography>\n      )}\n      <Box\n        component=\"div\"\n        sx={{\n          '& .MuiTextField-root': { m: 1, width: '140px' },\n        }}\n      >\n        <TextField\n          label=\"Load Number\"\n          value={loadNumberSearch || ''}\n          onChange={loadNumberHandler}\n          size=\"small\"\n        />\n      </Box>\n      <Box\n        component=\"div\"\n        sx={{\n          '& .MuiTextField-root': { m: 1, width: '140px' },\n        }}\n      >\n        <TextField\n          label=\"Truck Number\"\n          value={truckNumberSearch || ''}\n          onChange={truckNumberHandler}\n          size=\"small\"\n        />\n      </Box>\n      <Tooltip title=\"Filter list\">\n        {(searchChanged || (!loadNumberSearch && !truckNumberSearch)) &&\n        (!(searchChanged && !loadNumberSearch) ||\n          !(searchChanged && !truckNumberSearch)) ? (\n          <span>\n            <IconButton\n              disabled={!loadNumberSearch && !truckNumberSearch}\n              onClick={filterHandler}\n            >\n              <FilterListIcon />\n            </IconButton>\n          </span>\n        ) : (\n          <span>\n            <IconButton onClick={loadClearHandler}>\n              <FilterListOffIcon />\n            </IconButton>\n          </span>\n        )}\n      </Tooltip>\n      <Box sx={{ p: 1, display: 'inline-flex' }}>\n        <Tooltip title=\"Create\">\n          <span>\n            <IconButton onClick={createHandler}>\n              <AddIcon />\n            </IconButton>\n          </span>\n        </Tooltip>\n        <Tooltip title=\"Edit\">\n          <span>\n            <IconButton disabled={selected.length !== 1} onClick={editHandler}>\n              <EditIcon />\n            </IconButton>\n          </span>\n        </Tooltip>\n        <Tooltip title=\"Delete\">\n          <span>\n            <IconButton\n              disabled={selected.length !== 1}\n              onClick={deleteHandler}\n            >\n              <DeleteIcon />\n            </IconButton>\n          </span>\n        </Tooltip>\n      </Box>\n      <Loader visible={isLoading} />\n    </Toolbar>\n  );\n}\n\nexport default function EnhancedTable() {\n  const [order, setOrder] = React.useState<Order | undefined>('desc');\n  const [orderBy, setOrderBy] = React.useState<keyof Load | undefined>(\n    'loadNumber',\n  );\n  const [selected, setSelected] = React.useState<readonly string[]>([]);\n  const [page, setPage] = React.useState<number>(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState<number>(15);\n  const [queryParams, setQueryParams] = React.useState<Record<string, any>>({});\n  const tableContainerRef = React.useRef(null);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const setSnackbarMessage = useSnackbar();\n\n  const {\n    isLoading,\n    isFetching,\n    data: { items, total } = { items: [], total: 0 },\n  } = useQuery({\n    queryKey: ['loads', page, rowsPerPage, orderBy, order, queryParams],\n    queryFn: LoadsQuery,\n    keepPreviousData: true,\n    onError: (error: Error) => {\n      setSnackbarMessage({\n        severity: 'error',\n        message: error instanceof Error ? error.message : JSON.stringify(error),\n      });\n    },\n  });\n  const rows: Load[] = items || [];\n\n  React.useEffect(() => {\n    if (tableContainerRef.current) {\n      const container = tableContainerRef.current as HTMLElement;\n      container.scrollTo({\n        top: 0,\n        left: 0,\n        behavior: 'smooth',\n      });\n    }\n  }, [rows]);\n\n  React.useEffect(() => {\n    const newSelected: string[] = [];\n    selected.forEach((selectedItem) => {\n      const selectedRow = rows.find((row) => row.id === selectedItem);\n      if (selectedRow) {\n        newSelected.push(selectedItem);\n      }\n    });\n    setSelected(newSelected);\n  }, [rows]);\n\n  const handleRequestSort = (\n    event: React.MouseEvent<unknown>,\n    property: keyof Load,\n  ) => {\n    const isAsc = orderBy === property && order === 'asc';\n    const isDesc = orderBy === property && order === 'desc';\n    if (isDesc) {\n      setOrder(undefined);\n      setOrderBy(undefined);\n    } else {\n      setOrder(isAsc ? 'desc' : 'asc');\n      setOrderBy(property);\n    }\n  };\n\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.checked) {\n      const newSelected = rows.map((n: Load) => n.id);\n      setSelected(newSelected);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event: React.MouseEvent<unknown>, name: string) => {\n    navigate(`./view/${name}`, {\n      relative: 'path',\n      state: { from: location },\n      replace: false,\n    });\n  };\n\n  const handleSelect = (event: React.MouseEvent<unknown>, name: string) => {\n    event.stopPropagation();\n    const selectedIndex = selected.indexOf(name);\n    let newSelected: readonly string[] = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = (name: string) => selected.indexOf(name) !== -1;\n\n  return (\n    <Box sx={{ width: '100%', height: '100%' }}>\n      <Paper sx={{ width: '100%', height: '100%', backgroundColor: 'unset' }}>\n        <EnhancedTableToolbar\n          selected={selected}\n          setQueryParams={(query) => {\n            setQueryParams(query);\n            setPage(0);\n          }}\n        />\n        <TableContainer\n          ref={tableContainerRef}\n          sx={{ height: 'calc(100% - 115px)' }}\n        >\n          <Table\n            sx={{ minWidth: 750 }}\n            aria-labelledby=\"tableTitle\"\n            size=\"small\"\n            stickyHeader\n          >\n            <EnhancedTableHead\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {rows.map((row, index) => {\n                const isItemSelected = isSelected(`${row.id}`);\n                const labelId = `enhanced-table-checkbox-${index}`;\n                return (\n                  <TableRow\n                    hover\n                    onClick={(event) => handleClick(event, `${row.id}`)}\n                    role=\"checkbox\"\n                    aria-checked={isItemSelected}\n                    tabIndex={-1}\n                    key={row.id}\n                    selected={isItemSelected}\n                    sx={{ cursor: 'pointer' }}\n                  >\n                    <StyledTableCell padding=\"checkbox\">\n                      <Checkbox\n                        id={`${labelId}`}\n                        color=\"primary\"\n                        checked={isItemSelected}\n                        inputProps={{\n                          'aria-labelledby': labelId,\n                        }}\n                        onClick={(event) => handleSelect(event, `${row.id}`)}\n                      />\n                    </StyledTableCell>\n                    {headCells.map((cell) => {\n                      const cellData = cell.getData(row);\n                      return (\n                        <StyledTableCell\n                          key={cell.id}\n                          title={cellData.title}\n                          align={cell.numeric ? 'right' : 'center'}\n                        >\n                          {cellData.data}\n                        </StyledTableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 15, 20, 25, 35, 50]}\n          component=\"div\"\n          count={total}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <Loader visible={isLoading || isFetching} />\n    </Box>\n  );\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\nexports.default = _default;"],"names":["origin","URL","window","location","href","authFetch","input","_authProvider$user","_authProvider$user2","init","arguments","length","undefined","bodyObj","restInit","_objectWithoutProperties","_excluded","fetchInit","_objectSpread","headers","Headers","set","btoa","authProvider","user","username","password","body","JSON","stringify","transformedBody","Object","entries","forEach","entry","Array","isArray","map","elem","Date","id","transformBody","fetch","catch","reason","error","Error","cause","name","message","then","response","status","statusText","json","TrucksQuery","_ref","_ref$queryKey","_slicedToArray","queryKey","page","rowsPerPage","orderBy","order","queryParams","url","searchParams","append","concat","search","truckNumber","lastLocation","distance","TruckDelete","userId","method","TruckCreate","data","LocationsQuery","_ref2","_ref2$queryKey","LocationDelete","LocationCreate","LocationUpdate","updatedData","_excluded3","LocationQuery","query","LoadsQuery","_ref3","_ref3$queryKey","loadNumber","LoadDelete","LoadCreate","LoadUpdate","_excluded4","LoadQuery","OwnersQuery","_ref4","_ref4$queryKey","fullName","OwnerDelete","DriversQuery","_ref5","_ref5$queryKey","DriverDelete","CoordinatorsQuery","_ref6","_ref6$queryKey","CoordinatorDelete","UsersQuery","_ref7","_ref7$queryKey","UserDelete","UserCreate","UserUpdate","_excluded5","UserQuery","headCells","orderField","getData","row","numeric","disablePadding","label","pick","path","firstRow","stateCode","zipCode","secondRow","pickDate","toLocaleString","_jsxs","children","_jsx","target","onClick","stopPropagation","title","deliver","deliverDate","milesHaversine","milesByRoads","toFixed","truckType","join","truck","StyledTableHead","styled","TableHead","backgroundColor","theme","palette","background","default","StyledTableCell","TableCell","maxWidth","whiteSpace","textOverflow","overflow","e","EnhancedTableHead","props","onSelectAllClick","numSelected","rowCount","onRequestSort","TableRow","padding","Checkbox","color","indeterminate","checked","onChange","inputProps","headCell","align","sortDirection","TableSortLabel","active","hideSortIcon","direction","property","event","Box","component","sx","visuallyHidden","EnhancedTableToolbar","selected","setQueryParams","_React$useState","React","_React$useState2","loadNumberSearch","setLoadNumberSearch","_React$useState3","_React$useState4","truckNumberSearch","setTruckNumberSearch","_React$useState5","_React$useState6","searchChanged","setSearchChanged","useLocation","navigate","useNavigate","queryClient","useQueryClient","setSnackbarMessage","useSnackbar","_useMutation","useMutation","onSuccess","severity","invalidateQueries","onError","mutate","isLoading","Toolbar","pl","sm","pr","xs","bgcolor","alpha","primary","main","action","activatedOpacity","Typography","flex","variant","m","width","TextField","value","Number","isFinite","size","Tooltip","IconButton","FilterListOffIcon","disabled","FilterListIcon","p","display","relative","state","from","replace","AddIcon","EditIcon","DeleteIcon","Loader","visible","EnhancedTable","_React$useState7","_React$useState8","setOrder","_React$useState9","_React$useState10","setOrderBy","_React$useState11","_React$useState12","setSelected","_React$useState13","_React$useState14","setPage","_React$useState15","_React$useState16","setRowsPerPage","_React$useState17","_React$useState18","tableContainerRef","_useQuery","useQuery","queryFn","keepPreviousData","isFetching","_useQuery$data","_useQuery$data2","items","total","rows","current","scrollTo","top","left","behavior","newSelected","selectedItem","find","push","height","Paper","TableContainer","ref","Table","minWidth","stickyHeader","n","isAsc","TableBody","index","isItemSelected","indexOf","labelId","hover","handleClick","role","tabIndex","cursor","selectedIndex","slice","handleSelect","cell","cellData","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","jsx","d"],"sourceRoot":""}