{"version":3,"file":"static/js/279.cd5b672f.chunk.js","mappings":"0vBA2BQA,EAAW,IAAIC,IAAIC,OAAOC,SAASC,MAAnCJ,OAkBKK,EAGU,SAACC,GAAsB,IAADC,EAAAC,EAAdC,EAAIC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC7BG,EAAyBJ,EAAzBI,QAAYC,GAAQC,EAAAA,EAAAA,GAAKN,EAAIO,GAC/BC,GAASC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQJ,GAAQ,IAAEK,QAAS,IAAIC,UAW9C,OAVAH,EAAUE,QAAQE,IAChB,gBACA,SACEC,MAAsB,QAAjBf,EAAAgB,EAAAA,EAAaC,YAAI,IAAAjB,OAAA,EAAjBA,EAAmBkB,UAAW,KAAuB,QAApBjB,EAAGe,EAAAA,EAAaC,YAAI,IAAAhB,OAAA,EAAjBA,EAAmBkB,YAE5Db,GAA8B,kBAAZA,IACpBI,EAAUE,QAAQE,IAAI,SAAU,oBAChCJ,EAAUE,QAAQE,IAAI,eAAgB,oBACtCJ,EAAUU,KAAOC,KAAKC,UA9BJ,SAACF,GACrB,IAAMG,EAAuC,CAAC,EAY9C,OAXAC,OAAOC,QAAQL,GAAMM,SAAQ,SAACC,GACxBC,MAAMC,QAAQF,EAAM,IACtBJ,EAAgBI,EAAM,IAAMA,EAAM,GAAGG,KAAI,SAACC,GAAI,MAC5B,kBAATA,GAAuBA,aAAgBC,KAAkBD,EAAVA,EAAKE,EAAS,IAEzC,kBAAbN,EAAM,IAAqBA,EAAM,aAAcK,KAG/DT,EAAgBI,EAAM,IAAMA,EAAM,GAFlCJ,EAAgBI,EAAM,IAAMA,EAAM,IAAMA,EAAM,GAAGM,EAIrD,IACOV,CACT,CAgBoCW,CAAc5B,KAEzC6B,MAAMpC,EAAOW,GACjB0B,OAAM,SAACC,GACN,IAAMC,EAAQ,IAAIC,MAIlB,MAHAD,EAAME,MAAQH,EACdC,EAAMG,KAAO,cACbH,EAAMI,QAAU,6BACVJ,CACR,IACCK,MAAK,SAACC,GACL,GAhDoB,MAiDlBA,EAASC,QAhDS,MAiDlBD,EAASC,OACT,CACA,IAAMP,EAAQ,IAAIC,MAElB,GADAD,EAAME,MAAQI,EACVA,EAASC,OAEX,OADAP,EAAMG,KAAOG,EAASC,OAAS,IAAMD,EAASE,WACtCF,EAASC,QACf,KAvDgB,IAwDdP,EAAMI,QAAU,2BAChB,MACF,KAzDgB,IA0DdJ,EAAMI,QAAU,YAChB,MACF,QACEJ,EAAMI,QAAU,sCAGpBJ,EAAMI,QAAU,6BAElB,MAAMJ,CACR,CACA,OAAOM,EAASG,OAAOX,OAAM,SAACC,GAC5B,IAAMC,EAAQ,IAAIC,MAIlB,MAHAD,EAAME,MAAQH,EACdC,EAAMG,KAAO,cACbH,EAAMI,QAAU,uCACVJ,CACR,GACF,GACJ,EAEaU,EAOiB,SAAHC,GAEpB,IAADC,GAAAC,EAAAA,EAAAA,GAAAF,EADJG,SAAQ,GAAQC,GAAFH,EAAA,GAAMA,EAAA,IAAEI,EAAWJ,EAAA,GAAEK,EAAOL,EAAA,GAAEM,EAAKN,EAAA,GAAEO,EAAWP,EAAA,GAExDQ,EAAM,IAAIhE,IAAI,SAAUD,GAiB9B,OAhBAiE,EAAIC,aAAaC,OAAO,QAAQ,GAADC,OAAKP,IACpCI,EAAIC,aAAaC,OAAO,SAAS,GAADC,OAAKP,EAAcD,IACpC,OAAXI,QAAW,IAAXA,GAAAA,EAAaK,QACfJ,EAAIC,aAAaC,OAAO,SAAS,GAADC,OAAKJ,EAAYK,SAE/CP,GAAWC,IACbE,EAAIC,aAAaC,OAAO,UAAU,GAADC,OAAKN,IACtCG,EAAIC,aAAaC,OAAO,YAAY,GAADC,OAAKL,KAE3B,OAAXC,QAAW,IAAXA,GAAAA,EAAaM,aACfL,EAAIC,aAAaC,OAAO,cAAc,GAADC,OAAKJ,EAAYM,cAEzC,OAAXN,QAAW,IAAXA,GAAAA,EAAaO,cAA2B,OAAXP,QAAW,IAAXA,GAAAA,EAAaQ,WAC5CP,EAAIC,aAAaC,OAAO,eAAe,GAADC,OAAKJ,EAAYO,eACvDN,EAAIC,aAAaC,OAAO,WAAW,GAADC,OAAKJ,EAAYQ,YAE9CnE,EAAU4D,EACnB,EAEaQ,EAAc,SAACC,GAC1B,IAAMT,EAAM,IAAIhE,IAAI,UAADmE,OAAWM,GAAU1E,GACxC,OAAOK,EAAU4D,EAAK,CAAEU,OAAQ,UAClC,EA0BaC,EAEoB,SAAHC,GAEvB,IAADC,GAAApB,EAAAA,EAAAA,GAAAmB,EADJlB,SAAQ,GAAQC,GAAFkB,EAAA,GAAMA,EAAA,IAAEjB,EAAWiB,EAAA,GAAEhB,EAAOgB,EAAA,GAAEf,EAAKe,EAAA,GAAEd,EAAWc,EAAA,GAExDb,EAAM,IAAIhE,IAAI,YAAaD,GAajC,OAZAiE,EAAIC,aAAaC,OAAO,QAAQ,GAADC,OAAKP,IACpCI,EAAIC,aAAaC,OAAO,SAAS,GAADC,OAAKP,EAAcD,IAC/CE,GAAWC,IACbE,EAAIC,aAAaC,OAAO,UAAU,GAADC,OAAKN,IACtCG,EAAIC,aAAaC,OAAO,YAAY,GAADC,OAAKL,KAE3B,OAAXC,QAAW,IAAXA,GAAAA,EAAaK,QACfJ,EAAIC,aAAaC,OAAO,SAAS,GAADC,OAAKJ,EAAYK,SAEpC,OAAXL,QAAW,IAAXA,GAAAA,EAAahB,MACfiB,EAAIC,aAAaC,OAAO,OAAO,GAADC,OAAKJ,EAAYhB,OAE1C3C,EAAU4D,EACnB,EAEac,EAAiB,SAACL,GAC7B,IAAMT,EAAM,IAAIhE,IAAI,aAADmE,OAAcM,GAAU1E,GAC3C,OAAOK,EAAU4D,EAAK,CAAEU,OAAQ,UAClC,EAEaK,EAAiB,SAACC,GAC7B,IAAMhB,EAAM,IAAIhE,IAAI,YAAaD,GACjC,OAAOK,EAAU4D,EAAK,CACpBU,OAAQ,OACR9D,QAASoE,GAEb,EAEaC,EAAiB,SAACD,GAC7B,IAAQzC,EAAuByC,EAAvBzC,GAAO2C,GAAWpE,EAAAA,EAAAA,GAAKkE,EAAIG,GAC7BnB,EAAM,IAAIhE,IAAI,aAADmE,OAAc5B,GAAMxC,GACvC,OAAOK,EAAU4D,EAAK,CACpBU,OAAQ,QACR9D,QAASsE,GAEb,EAEaE,EAAgB,SAACC,GAC5B,IAAMrB,EAAM,IAAIhE,IAAI,aAADmE,OAAckB,EAAM3B,SAAS,IAAM3D,GACtD,OAAOK,EAAU4D,EAAK,CACpBU,OAAQ,OAEZ,EAEaY,EAEgB,SAAHC,GAEnB,IAADC,GAAA/B,EAAAA,EAAAA,GAAA8B,EADJ7B,SAAQ,GAAQC,GAAF6B,EAAA,GAAMA,EAAA,IAAE5B,EAAW4B,EAAA,GAAE3B,EAAO2B,EAAA,GAAE1B,EAAK0B,EAAA,GAAEzB,EAAWyB,EAAA,GAExDxB,EAAM,IAAIhE,IAAI,QAASD,GAa7B,OAZAiE,EAAIC,aAAaC,OAAO,QAAQ,GAADC,OAAKP,IACpCI,EAAIC,aAAaC,OAAO,SAAS,GAADC,OAAKP,EAAcD,IAC/CE,GAAWC,IACbE,EAAIC,aAAaC,OAAO,UAAU,GAADC,OAAKN,IACtCG,EAAIC,aAAaC,OAAO,YAAY,GAADC,OAAKL,KAE3B,OAAXC,QAAW,IAAXA,GAAAA,EAAa0B,YACfzB,EAAIC,aAAaC,OAAO,aAAa,GAADC,OAAKJ,EAAY0B,aAExC,OAAX1B,QAAW,IAAXA,GAAAA,EAAaM,aACfL,EAAIC,aAAaC,OAAO,cAAc,GAADC,OAAKJ,EAAYM,cAEjDjE,EAAU4D,EACnB,EAEa0B,EAAa,SAACjB,GACzB,IAAMT,EAAM,IAAIhE,IAAI,SAADmE,OAAUM,GAAU1E,GACvC,OAAOK,EAAU4D,EAAK,CAAEU,OAAQ,UAClC,EAEaiB,EAAa,SAACX,GACzB,IAAMhB,EAAM,IAAIhE,IAAI,QAASD,GAC7B,OAAOK,EAAU4D,EAAK,CACpBU,OAAQ,OACR9D,QAASoE,GAEb,EAEaY,EAAa,SAACZ,GACzB,IAAQzC,EAAuByC,EAAvBzC,GAAO2C,GAAWpE,EAAAA,EAAAA,GAAKkE,EAAIa,GAC7B7B,EAAM,IAAIhE,IAAI,SAADmE,OAAU5B,GAAMxC,GACnC,OAAOK,EAAU4D,EAAK,CACpBU,OAAQ,QACR9D,QAASsE,GAEb,EAEaY,EAAY,SAACT,GACxB,IAAMrB,EAAM,IAAIhE,IAAI,SAADmE,OAAUkB,EAAM3B,SAAS,IAAM3D,GAClD,OAAOK,EAAU4D,EAAK,CACpBU,OAAQ,OAEZ,EAEaqB,EAEiB,SAAHC,GAEpB,IAADC,GAAAxC,EAAAA,EAAAA,GAAAuC,EADJtC,SAAQ,GAAQC,GAAFsC,EAAA,GAAMA,EAAA,IAAErC,EAAWqC,EAAA,GAAEpC,EAAOoC,EAAA,GAAEnC,EAAKmC,EAAA,GAAElC,EAAWkC,EAAA,GAExDjC,EAAM,IAAIhE,IAAI,SAAUD,GAa9B,OAZAiE,EAAIC,aAAaC,OAAO,QAAQ,GAADC,OAAKP,IACpCI,EAAIC,aAAaC,OAAO,SAAS,GAADC,OAAKP,EAAcD,IAC/CE,GAAWC,IACbE,EAAIC,aAAaC,OAAO,UAAU,GAADC,OAAKN,IACtCG,EAAIC,aAAaC,OAAO,YAAY,GAADC,OAAKL,KAE3B,OAAXC,QAAW,IAAXA,GAAAA,EAAamC,UACflC,EAAIC,aAAaC,OAAO,WAAW,GAADC,OAAKJ,EAAYmC,WAEtC,OAAXnC,QAAW,IAAXA,GAAAA,EAAaM,aACfL,EAAIC,aAAaC,OAAO,cAAc,GAADC,OAAKJ,EAAYM,cAEjDjE,EAAU4D,EACnB,EAEamC,EAAc,SAAC1B,GAC1B,IAAMT,EAAM,IAAIhE,IAAI,UAADmE,OAAWM,GAAU1E,GACxC,OAAOK,EAAU4D,EAAK,CAAEU,OAAQ,UAClC,EAEa0B,EAEkB,SAAHC,GAErB,IAADC,GAAA7C,EAAAA,EAAAA,GAAA4C,EADJ3C,SAAQ,GAAQC,GAAF2C,EAAA,GAAMA,EAAA,IAAE1C,EAAW0C,EAAA,GAAEzC,EAAOyC,EAAA,GAAExC,EAAKwC,EAAA,GAAEvC,EAAWuC,EAAA,GAExDtC,EAAM,IAAIhE,IAAI,UAAWD,GAa/B,OAZAiE,EAAIC,aAAaC,OAAO,QAAQ,GAADC,OAAKP,IACpCI,EAAIC,aAAaC,OAAO,SAAS,GAADC,OAAKP,EAAcD,IAC/CE,GAAWC,IACbE,EAAIC,aAAaC,OAAO,UAAU,GAADC,OAAKN,IACtCG,EAAIC,aAAaC,OAAO,YAAY,GAADC,OAAKL,KAE3B,OAAXC,QAAW,IAAXA,GAAAA,EAAamC,UACflC,EAAIC,aAAaC,OAAO,WAAW,GAADC,OAAKJ,EAAYmC,WAEtC,OAAXnC,QAAW,IAAXA,GAAAA,EAAaM,aACfL,EAAIC,aAAaC,OAAO,cAAc,GAADC,OAAKJ,EAAYM,cAEjDjE,EAAU4D,EACnB,EAEauC,EAAe,SAAC9B,GAC3B,IAAMT,EAAM,IAAIhE,IAAI,WAADmE,OAAYM,GAAU1E,GACzC,OAAOK,EAAU4D,EAAK,CAAEU,OAAQ,UAClC,EAEa8B,EAEuB,SAAHC,GAE1B,IAADC,GAAAjD,EAAAA,EAAAA,GAAAgD,EADJ/C,SAAQ,GAAQC,GAAF+C,EAAA,GAAMA,EAAA,IAAE9C,EAAW8C,EAAA,GAAE7C,EAAO6C,EAAA,GAAE5C,EAAK4C,EAAA,GAAE3C,EAAW2C,EAAA,GAExD1C,EAAM,IAAIhE,IAAI,eAAgBD,GAapC,OAZAiE,EAAIC,aAAaC,OAAO,QAAQ,GAADC,OAAKP,IACpCI,EAAIC,aAAaC,OAAO,SAAS,GAADC,OAAKP,EAAcD,IAC/CE,GAAWC,IACbE,EAAIC,aAAaC,OAAO,UAAU,GAADC,OAAKN,IACtCG,EAAIC,aAAaC,OAAO,YAAY,GAADC,OAAKL,KAE3B,OAAXC,QAAW,IAAXA,GAAAA,EAAamC,UACflC,EAAIC,aAAaC,OAAO,WAAW,GAADC,OAAKJ,EAAYmC,WAEtC,OAAXnC,QAAW,IAAXA,GAAAA,EAAaM,aACfL,EAAIC,aAAaC,OAAO,cAAc,GAADC,OAAKJ,EAAYM,cAEjDjE,EAAU4D,EACnB,EAEa2C,EAAoB,SAAClC,GAChC,IAAMT,EAAM,IAAIhE,IAAI,gBAADmE,OAAiBM,GAAU1E,GAC9C,OAAOK,EAAU4D,EAAK,CAAEU,OAAQ,UAClC,EAEakC,EAEgB,SAAHC,GAEnB,IAADC,GAAArD,EAAAA,EAAAA,GAAAoD,EADJnD,SAAQ,GAAQC,GAAFmD,EAAA,GAAMA,EAAA,IAAElD,EAAWkD,EAAA,GAAEjD,EAAOiD,EAAA,GAAEhD,EAAKgD,EAAA,GAAE/C,EAAW+C,EAAA,GAExD9C,EAAM,IAAIhE,IAAI,QAASD,GAa7B,OAZAiE,EAAIC,aAAaC,OAAO,QAAQ,GAADC,OAAKP,IACpCI,EAAIC,aAAaC,OAAO,SAAS,GAADC,OAAKP,EAAcD,IAC/CE,GAAWC,IACbE,EAAIC,aAAaC,OAAO,UAAU,GAADC,OAAKN,IACtCG,EAAIC,aAAaC,OAAO,YAAY,GAADC,OAAKL,KAE3B,OAAXC,QAAW,IAAXA,GAAAA,EAAaK,QACfJ,EAAIC,aAAaC,OAAO,SAAS,GAADC,OAAKJ,EAAYK,SAEpC,OAAXL,QAAW,IAAXA,GAAAA,EAAamC,UACflC,EAAIC,aAAaC,OAAO,WAAW,GAADC,OAAKJ,EAAYmC,WAE9C9F,EAAU4D,EACnB,EAEa+C,EAAa,SAACtC,GACzB,IAAMT,EAAM,IAAIhE,IAAI,SAADmE,OAAUM,GAAU1E,GACvC,OAAOK,EAAU4D,EAAK,CAAEU,OAAQ,UAClC,EAEasC,EAAa,SAAChC,GACzB,IAAMhB,EAAM,IAAIhE,IAAI,QAASD,GAC7B,OAAOK,EAAU4D,EAAK,CACpBU,OAAQ,OACR9D,QAASoE,GAEb,EAEaiC,EAAa,SAACjC,GACzB,IAAQzC,EAAuByC,EAAvBzC,GAAO2C,GAAWpE,EAAAA,EAAAA,GAAKkE,EAAIkC,GAC7BlD,EAAM,IAAIhE,IAAI,SAADmE,OAAU5B,GAAMxC,GACnC,OAAOK,EAAU4D,EAAK,CACpBU,OAAQ,QACR9D,QAASsE,GAEb,EAEaiC,EAAY,SAAC9B,GACxB,IAAMrB,EAAM,IAAIhE,IAAI,SAADmE,OAAUkB,EAAM3B,SAAS,IAAM3D,GAClD,OAAOK,EAAU4D,EAAK,CACpBU,OAAQ,OAEZ,C,2NCtWM0C,EAAgB,CACpB7E,GAAI,GACJ8E,KAAM,KACNC,SAAU,KACVC,QAAS,KACTC,YAAa,KACbC,OAAQ,GACRC,UAAW,GACXC,UAAMhH,EACNiH,aAAc,KACdC,qBAAiBlH,EACjBmH,YAAa,GACbC,eAAWpH,EACXqH,WAAOrH,GAGM,SAASsH,IACtB,IAAQC,GAAaC,EAAAA,EAAAA,MAAbD,SACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAqBC,EAAAA,EAAAA,MAE3BC,GAIIC,EAAAA,EAAAA,GAAS,CACX/E,SAAU,CAAC,OAAQwE,EAASQ,MAAM,KAAK,IACvCC,QAAS7C,EAAAA,GACT8C,kBAAkB,EAClBC,QAAS,SAACjG,GACR0F,EAAmB,CACjBQ,SAAU,QACV9F,QAASJ,aAAiBC,MAAQD,EAAMI,QAAUrB,KAAKC,UAAUgB,IAErE,IAZWmG,EAAOP,EAAlBQ,UACYC,EAAQT,EAApBU,WACAlE,EAAIwD,EAAJxD,KAaImE,GAASC,EAAAA,EAAAA,IAAsB,CACnChC,eAAanG,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACRmG,GACApC,GAELqE,oBAAoB,EACpBC,SAAU,WAEV,IAWF,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAAC,SAAA,EACFC,EAAAA,EAAAA,KAAA,QAAMJ,SAAUH,EAAOQ,aAAcC,QAAST,EAAOU,YAAYJ,UAC/DF,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACM,GAAI,CAAEC,EAAG,EAAGC,QAAS,QAASP,SAAA,EACjCF,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAgBM,GAAI,CAAEE,QAAS,eAAgBP,SAAA,EACjDF,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAYM,GAAI,CAAEC,EAAG,EAAGE,MAAO,OAAQR,SAAA,EACzCC,EAAAA,EAAAA,KAACQ,EAAAA,GAAW,CACVC,UAAU,OACVC,MAAM,gBACNC,iBAAkB,SAACC,GAAY,SAAAnG,OAC1BmG,EAAavH,KAAI,MAAAoB,OAAKmG,EAAaC,QAAO,MAAApG,OAAKmG,EAAaE,UAAS,EAE1EC,aAAc,SAACC,GAAI,SAAAvG,OAAQuG,EAAK3H,KAAI,MAAAoB,OAAKuG,EAAKC,UAAS,EACvDC,mBAAoB,SAACF,GAAI,SAAAvG,OACpBuG,EAAKH,QAAO,MAAApG,OAAKuG,EAAKF,UAAS,EAEpCK,SAAUC,EAAAA,EACVnC,QAAShE,EAAAA,GACToG,QAAQ,OACRjH,MAAM,MACNkH,UAAQ,EACR7B,OAAQA,KAEVO,EAAAA,EAAAA,KAACuB,EAAAA,GAAa,CACZd,UAAU,WACVC,MAAM,YACNY,UAAQ,EACR7B,OAAQA,KAEVO,EAAAA,EAAAA,KAACwB,EAAAA,GAAS,CAACf,UAAU,SAASC,MAAM,SAASjB,OAAQA,KACrDO,EAAAA,EAAAA,KAACyB,EAAAA,GAAgB,CACfhB,UAAU,YACVC,MAAM,aACNgB,MAAOC,EAAAA,GACPL,UAAQ,EACR7B,OAAQA,KAEVO,EAAAA,EAAAA,KAACQ,EAAAA,GAAW,CACVC,UAAU,eACVC,MAAM,YACNC,iBAAkB,SAACC,GAAY,SAAAnG,OAAQmG,EAAapE,SAAQ,EAC5DuE,aAAc,SAACC,GAAI,SAAAvG,OAAQuG,EAAKxE,SAAQ,EACxC0E,mBAAoB,SAACF,GAAI,SAAAvG,OAAQuG,EAAKY,SAAQ,EAC9CT,SAAUU,EAAAA,EACV5C,QAAS/B,EAAAA,GACTmE,QAAQ,WACRjH,MAAM,MACNkH,UAAQ,EACR7B,OAAQA,MA3CH,SA8CTI,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAaM,GAAI,CAAEC,EAAG,EAAGE,MAAO,OAAQR,SAAA,EAC1CC,EAAAA,EAAAA,KAACQ,EAAAA,GAAW,CACVC,UAAU,UACVC,MAAM,mBACNC,iBAAkB,SAACC,GAAY,SAAAnG,OAC1BmG,EAAavH,KAAI,MAAAoB,OAAKmG,EAAaC,QAAO,MAAApG,OAAKmG,EAAaE,UAAS,EAE1EC,aAAc,SAACC,GAAI,SAAAvG,OAAQuG,EAAK3H,KAAI,MAAAoB,OAAKuG,EAAKC,UAAS,EACvDC,mBAAoB,SAACF,GAAI,SAAAvG,OACpBuG,EAAKH,QAAO,MAAApG,OAAKuG,EAAKF,UAAS,EAEpCK,SAAUC,EAAAA,EACVnC,QAAShE,EAAAA,GACToG,QAAQ,OACRjH,MAAM,MACNkH,UAAQ,EACR7B,OAAQA,KAEVO,EAAAA,EAAAA,KAACuB,EAAAA,GAAa,CACZd,UAAU,cACVC,MAAM,eACNY,UAAQ,EACR7B,OAAQA,KAEVO,EAAAA,EAAAA,KAACwB,EAAAA,GAAS,CAACf,UAAU,OAAOC,MAAM,OAAOjB,OAAQA,KACjDO,EAAAA,EAAAA,KAACwB,EAAAA,GAAS,CACRf,UAAU,YACVC,MAAM,cACNY,UAAQ,EACR7B,OAAQA,KAEVO,EAAAA,EAAAA,KAACwB,EAAAA,GAAS,CACRf,UAAU,kBACVC,MAAM,oBACNY,UAAQ,EACR7B,OAAQA,MAnCH,WA/CF,aAsFTI,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAEFM,GAAI,CAAE0B,WAAY,EAAGC,aAAc,EAAG1B,EAAG,GAAIN,SAAA,EAE7CC,EAAAA,EAAAA,KAACQ,EAAAA,GAAW,CACVC,UAAU,QACVC,MAAM,QACNC,iBAAkB,SAACC,GAAY,SAAAnG,OAAQmG,EAAajG,YAAW,EAC/DoG,aAAc,SAACC,GAAI,SAAAvG,OAAQuG,EAAKrG,YAAW,EAC3CuG,mBAAoB,SAACF,GAAI,SAAAvG,OACpBuG,EAAKvH,OAAM,MAAAgB,OAAKuG,EAAKgB,aAAY,EAEtCb,SAAUc,EAAAA,EACVhD,QAASrF,EAAAA,GACTyH,QAAQ,cACRjH,MAAM,MACNkH,UAAQ,EACR7B,OAAQA,KAEVO,EAAAA,EAAAA,KAACkC,EAAAA,GAAgB,CACfzB,UAAU,cACVC,MAAM,cACNC,iBAAkB,SAACC,GAAY,SAAAnG,OAAQmG,EAAapE,SAAQ,EAC5DuE,aAAc,SAACC,GAAI,SAAAvG,OAAQuG,EAAKxE,SAAQ,EACxC0E,mBAAoB,SAACF,GAAI,SAAAvG,OAAQuG,EAAKY,SAAQ,EAC9CT,SAAUU,EAAAA,EACV5C,QAAS/B,EAAAA,GACTmE,QAAQ,WACRjH,MAAM,MACNkH,UAAQ,EACR7B,OAAQA,MA7BN,mBAgCNI,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAeM,GAAI,CAAEE,QAAS,eAAgBP,SAAA,EAChDC,EAAAA,EAAAA,KAACF,EAAAA,EAAG,CAAYM,GAAI,CAAEC,EAAG,EAAG8B,WAAY,EAAG5B,MAAO,OAAQR,UACxDC,EAAAA,EAAAA,KAACoC,EAAAA,EAAM,CACLC,WAAS,EACTC,QAAQ,YACRC,KAAK,QACLC,MAAM,UACNC,KAAK,SACLC,QAvIK,WACjBhE,EAASF,EAASmE,QAAQ,OAAQ,QAAS,CAAEA,SAAS,GACxD,EAqIkC5C,SACrB,UARM,SAYTC,EAAAA,EAAAA,KAACF,EAAAA,EAAG,CAAaM,GAAI,CAAEC,EAAG,EAAG8B,WAAY,EAAG5B,MAAO,OAAQR,UACzDC,EAAAA,EAAAA,KAACoC,EAAAA,EAAM,CACLC,WAAS,EACTC,QAAQ,YACRC,KAAK,QACLC,MAAM,UACNC,KAAK,SACLC,QAvJM,WAClBhE,GAAU,EACZ,EAqJmCqB,SACtB,YARM,WAbF,iBA4BbC,EAAAA,EAAAA,KAAC4C,EAAAA,GAAM,CAACC,QAASxD,GAAWE,MAGlC,C,gFC7OO,IAUMuD,EAAY,CAAC,QAAS,eAEtBnB,EAAa,CACxB,YACA,aACA,YACA,mBACA,iBACA,UACA,a,2BCnBEoB,EAAyBC,EAAQ,MAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,OAChDG,EAAcH,EAAQ,KACtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,+JACD,cACJN,EAAQ,EAAUG,C,0BCVdL,EAAyBC,EAAQ,MAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,OAChDG,EAAcH,EAAQ,KACtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,kHACD,UACJN,EAAQ,EAAUG,C","sources":["api/api.ts","loads/viewLoad.tsx","utils/dataTypes.ts","../node_modules/@mui/icons-material/LocationOn.js","../node_modules/@mui/icons-material/Person.js"],"sourcesContent":["import { authProvider } from '../utils/auth';\nimport {\n  Coordinator,\n  Driver,\n  Load,\n  CreateLoad,\n  UpdateLoad,\n  Location,\n  CreateLocation,\n  UpdateLocation,\n  Owner,\n  Truck,\n  CreateTruck,\n  UpdateTruck,\n  User,\n  CreateUser,\n  UpdateUser,\n  Query,\n  QuerySingle,\n  Result,\n} from '../utils/dataTypes';\n\nconst SUCCESS_HTTP_CODE = 200;\nconst CREATED_HTTP_CODE = 201;\nconst FORBIDDEN_HTTP_CODE = 403;\nconst NOT_FOUND_HTTP_CODE = 404;\n\nconst { origin } = new URL(window.location.href);\n\nconst transformBody = (body: object): Record<string, any> => {\n  const transformedBody: Record<string, any> = {};\n  Object.entries(body).forEach((entry) => {\n    if (Array.isArray(entry[1])) {\n      transformedBody[entry[0]] = entry[1].map((elem) =>\n        typeof elem === 'object' && !(elem instanceof Date) ? elem.id : elem,\n      );\n    } else if (typeof entry[1] === 'object' && !(entry[1] instanceof Date)) {\n      transformedBody[entry[0]] = entry[1] && entry[1].id;\n    } else {\n      transformedBody[entry[0]] = entry[1];\n    }\n  });\n  return transformedBody;\n};\n\nexport const authFetch: (\n  input: string | URL,\n  init?: RequestInit & { bodyObj?: object },\n) => Promise<object> = (input, init = {}) => {\n  const { bodyObj, ...restInit } = init;\n  const fetchInit = { ...restInit, headers: new Headers() };\n  fetchInit.headers.set(\n    'Authorization',\n    'Basic ' +\n      btoa(authProvider.user?.username + ':' + authProvider.user?.password),\n  );\n  if (bodyObj && typeof bodyObj === 'object') {\n    fetchInit.headers.set('Accept', 'application/json');\n    fetchInit.headers.set('Content-Type', 'application/json');\n    fetchInit.body = JSON.stringify(transformBody(bodyObj));\n  }\n  return fetch(input, fetchInit)\n    .catch((reason) => {\n      const error = new Error();\n      error.cause = reason;\n      error.name = 'Fetch error';\n      error.message = 'Network error has occurred';\n      throw error;\n    })\n    .then((response) => {\n      if (\n        response.status !== SUCCESS_HTTP_CODE &&\n        response.status !== CREATED_HTTP_CODE\n      ) {\n        const error = new Error();\n        error.cause = response;\n        if (response.status) {\n          error.name = response.status + ' ' + response.statusText;\n          switch (response.status) {\n            case FORBIDDEN_HTTP_CODE:\n              error.message = 'Insufficient permissions';\n              break;\n            case NOT_FOUND_HTTP_CODE:\n              error.message = 'Not found';\n              break;\n            default:\n              error.message = 'Some server error has occurred';\n          }\n        } else {\n          error.message = 'Network error has occurred';\n        }\n        throw error;\n      }\n      return response.json().catch((reason) => {\n        const error = new Error();\n        error.cause = reason;\n        error.name = 'Fetch error';\n        error.message = 'Server responded with incorrect data';\n        throw error;\n      });\n    });\n};\n\nexport const TrucksQuery: (\n  query: Query<{\n    search?: number;\n    truckNumber?: number;\n    lastLocation?: string;\n    distance?: string;\n  }>,\n) => Promise<Result<Truck>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/truck', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (queryParams?.search) {\n    url.searchParams.append('search', `${queryParams.search}`);\n  }\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  if (queryParams?.lastLocation && queryParams?.distance) {\n    url.searchParams.append('lastLocation', `${queryParams.lastLocation}`);\n    url.searchParams.append('distance', `${queryParams.distance}`);\n  }\n  return authFetch(url) as Promise<Result<Truck>>;\n};\n\nexport const TruckDelete = (userId: string): Promise<Truck> => {\n  const url = new URL(`/truck/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<Truck>;\n};\n\nexport const TruckCreate = (data: CreateTruck): Promise<Truck> => {\n  const url = new URL(`/truck`, origin);\n  return authFetch(url, {\n    method: 'POST',\n    bodyObj: data,\n  }) as Promise<Truck>;\n};\n\nexport const TruckUpdate = (data: UpdateTruck): Promise<Truck> => {\n  const { id, ...updatedData } = data;\n  const url = new URL(`/truck/${id}`, origin);\n  return authFetch(url, {\n    method: 'PATCH',\n    bodyObj: updatedData,\n  }) as Promise<Truck>;\n};\n\nexport const TruckQuery = (query: QuerySingle): Promise<Truck> => {\n  const url = new URL(`/truck/${query.queryKey[1]}`, origin);\n  return authFetch(url, {\n    method: 'GET',\n  }) as Promise<Truck>;\n};\n\nexport const LocationsQuery: (\n  query: Query<{ search?: string; name?: string }>,\n) => Promise<Result<Location>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/location', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.search) {\n    url.searchParams.append('search', `${queryParams.search}`);\n  }\n  if (queryParams?.name) {\n    url.searchParams.append('name', `${queryParams.name}`);\n  }\n  return authFetch(url) as Promise<Result<Location>>;\n};\n\nexport const LocationDelete = (userId: string): Promise<Location> => {\n  const url = new URL(`/location/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<Location>;\n};\n\nexport const LocationCreate = (data: CreateLocation): Promise<Location> => {\n  const url = new URL(`/location`, origin);\n  return authFetch(url, {\n    method: 'POST',\n    bodyObj: data,\n  }) as Promise<Location>;\n};\n\nexport const LocationUpdate = (data: UpdateLocation): Promise<Location> => {\n  const { id, ...updatedData } = data;\n  const url = new URL(`/location/${id}`, origin);\n  return authFetch(url, {\n    method: 'PATCH',\n    bodyObj: updatedData,\n  }) as Promise<Location>;\n};\n\nexport const LocationQuery = (query: QuerySingle): Promise<Location> => {\n  const url = new URL(`/location/${query.queryKey[1]}`, origin);\n  return authFetch(url, {\n    method: 'GET',\n  }) as Promise<Location>;\n};\n\nexport const LoadsQuery: (\n  query: Query<{ loadNumber?: number; truckNumber?: number }>,\n) => Promise<Result<Load>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/load', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.loadNumber) {\n    url.searchParams.append('loadNumber', `${queryParams.loadNumber}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  return authFetch(url) as Promise<Result<Load>>;\n};\n\nexport const LoadDelete = (userId: string): Promise<Load> => {\n  const url = new URL(`/load/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<Load>;\n};\n\nexport const LoadCreate = (data: CreateLoad): Promise<Load> => {\n  const url = new URL(`/load`, origin);\n  return authFetch(url, {\n    method: 'POST',\n    bodyObj: data,\n  }) as Promise<Load>;\n};\n\nexport const LoadUpdate = (data: UpdateLoad): Promise<Load> => {\n  const { id, ...updatedData } = data;\n  const url = new URL(`/load/${id}`, origin);\n  return authFetch(url, {\n    method: 'PATCH',\n    bodyObj: updatedData,\n  }) as Promise<Load>;\n};\n\nexport const LoadQuery = (query: QuerySingle): Promise<Load> => {\n  const url = new URL(`/load/${query.queryKey[1]}`, origin);\n  return authFetch(url, {\n    method: 'GET',\n  }) as Promise<Load>;\n};\n\nexport const OwnersQuery: (\n  query: Query<{ fullName?: number; truckNumber?: number }>,\n) => Promise<Result<Owner>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/owner', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.fullName) {\n    url.searchParams.append('fullName', `${queryParams.fullName}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  return authFetch(url) as Promise<Result<Owner>>;\n};\n\nexport const OwnerDelete = (userId: string): Promise<Owner> => {\n  const url = new URL(`/owner/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<Owner>;\n};\n\nexport const DriversQuery: (\n  query: Query<{ fullName?: number; truckNumber?: number }>,\n) => Promise<Result<Driver>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/driver', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.fullName) {\n    url.searchParams.append('fullName', `${queryParams.fullName}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  return authFetch(url) as Promise<Result<Driver>>;\n};\n\nexport const DriverDelete = (userId: string): Promise<Driver> => {\n  const url = new URL(`/driver/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<Driver>;\n};\n\nexport const CoordinatorsQuery: (\n  query: Query<{ fullName?: number; truckNumber?: number }>,\n) => Promise<Result<Coordinator>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/coordinator', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.fullName) {\n    url.searchParams.append('fullName', `${queryParams.fullName}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  return authFetch(url) as Promise<Result<Coordinator>>;\n};\n\nexport const CoordinatorDelete = (userId: string): Promise<Coordinator> => {\n  const url = new URL(`/coordinator/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<Coordinator>;\n};\n\nexport const UsersQuery: (\n  query: Query<{ search?: string; fullName?: number }>,\n) => Promise<Result<User>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/user', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.search) {\n    url.searchParams.append('search', `${queryParams.search}`);\n  }\n  if (queryParams?.fullName) {\n    url.searchParams.append('fullName', `${queryParams.fullName}`);\n  }\n  return authFetch(url) as Promise<Result<User>>;\n};\n\nexport const UserDelete = (userId: string): Promise<User> => {\n  const url = new URL(`/user/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<User>;\n};\n\nexport const UserCreate = (data: CreateUser): Promise<User> => {\n  const url = new URL(`/user`, origin);\n  return authFetch(url, {\n    method: 'POST',\n    bodyObj: data,\n  }) as Promise<User>;\n};\n\nexport const UserUpdate = (data: UpdateUser): Promise<User> => {\n  const { id, ...updatedData } = data;\n  const url = new URL(`/user/${id}`, origin);\n  return authFetch(url, {\n    method: 'PATCH',\n    bodyObj: updatedData,\n  }) as Promise<User>;\n};\n\nexport const UserQuery = (query: QuerySingle): Promise<User> => {\n  const url = new URL(`/user/${query.queryKey[1]}`, origin);\n  return authFetch(url, {\n    method: 'GET',\n  }) as Promise<User>;\n};\n","import React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useQuery } from '@tanstack/react-query';\nimport { useFormik } from 'formik';\n\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\nimport LocalShippingIcon from '@mui/icons-material/LocalShipping';\nimport PersonIcon from '@mui/icons-material/Person';\n\nimport {\n  Loader,\n  SearchField,\n  SearchMultiField,\n  DateTimeField,\n  SelectMultiField,\n  TextField,\n} from '../components';\n\nimport { LoadQuery, LocationsQuery, TrucksQuery, UsersQuery } from '../api';\nimport { useSnackbar } from '../hooks';\nimport {\n  CreateLoad,\n  Location,\n  User,\n  Truck,\n  TruckTypes,\n} from '../utils/dataTypes';\n\nconst initialValues = {\n  id: '',\n  pick: null,\n  pickDate: null,\n  deliver: null,\n  deliverDate: null,\n  weight: '',\n  truckType: [],\n  rate: undefined,\n  bookedByUser: null,\n  bookedByCompany: undefined,\n  dispatchers: [],\n  checkInAs: undefined,\n  truck: undefined,\n};\n\nexport default function ViewLoadForm() {\n  const { pathname } = useLocation();\n  const navigate = useNavigate();\n  const setSnackbarMessage = useSnackbar();\n\n  const {\n    isLoading: loading,\n    isFetching: fetching,\n    data,\n  } = useQuery({\n    queryKey: ['load', pathname.split('/')[3]],\n    queryFn: LoadQuery,\n    keepPreviousData: true,\n    onError: (error: Error) => {\n      setSnackbarMessage({\n        severity: 'error',\n        message: error instanceof Error ? error.message : JSON.stringify(error),\n      });\n    },\n  });\n\n  const formik = useFormik<CreateLoad>({\n    initialValues: {\n      ...initialValues,\n      ...data,\n    },\n    enableReinitialize: true,\n    onSubmit: () => {\n      return;\n    },\n  });\n\n  const handleClose = () => {\n    navigate(-1);\n  };\n\n  const handleEdit = () => {\n    navigate(pathname.replace('view', 'edit'), { replace: true });\n  };\n\n  return (\n    <Box>\n      <form onSubmit={formik.handleSubmit} onReset={formik.handleReset}>\n        <Box sx={{ p: 3, display: 'grid' }}>\n          <Box key=\"controls\" sx={{ display: 'inline-flex' }}>\n            <Box key=\"left\" sx={{ p: 1, width: '50%' }}>\n              <SearchField<Location>\n                fieldName=\"pick\"\n                label=\"Pick Location\"\n                getSelectedLabel={(selectedItem) =>\n                  `${selectedItem.name}, ${selectedItem.zipCode}, ${selectedItem.stateName}`\n                }\n                getItemLabel={(item) => `${item.name}, ${item.stateCode}`}\n                getItemSecondLabel={(item) =>\n                  `${item.zipCode}, ${item.stateName}`\n                }\n                ListIcon={LocationOnIcon}\n                queryFn={LocationsQuery}\n                orderby=\"name\"\n                order=\"asc\"\n                disabled\n                formik={formik}\n              />\n              <DateTimeField\n                fieldName=\"pickDate\"\n                label=\"Pick Date\"\n                disabled\n                formik={formik}\n              />\n              <TextField fieldName=\"weight\" label=\"Weight\" formik={formik} />\n              <SelectMultiField\n                fieldName=\"truckType\"\n                label=\"Truck Type\"\n                items={TruckTypes}\n                disabled\n                formik={formik}\n              />\n              <SearchField<User>\n                fieldName=\"bookedByUser\"\n                label=\"Booked By\"\n                getSelectedLabel={(selectedItem) => `${selectedItem.fullName}`}\n                getItemLabel={(item) => `${item.fullName}`}\n                getItemSecondLabel={(item) => `${item.jobTitle}`}\n                ListIcon={PersonIcon}\n                queryFn={UsersQuery}\n                orderby=\"fullName\"\n                order=\"asc\"\n                disabled\n                formik={formik}\n              />\n            </Box>\n            <Box key=\"right\" sx={{ p: 1, width: '50%' }}>\n              <SearchField<Location>\n                fieldName=\"deliver\"\n                label=\"Deliver Location\"\n                getSelectedLabel={(selectedItem) =>\n                  `${selectedItem.name}, ${selectedItem.zipCode}, ${selectedItem.stateName}`\n                }\n                getItemLabel={(item) => `${item.name}, ${item.stateCode}`}\n                getItemSecondLabel={(item) =>\n                  `${item.zipCode}, ${item.stateName}`\n                }\n                ListIcon={LocationOnIcon}\n                queryFn={LocationsQuery}\n                orderby=\"name\"\n                order=\"asc\"\n                disabled\n                formik={formik}\n              />\n              <DateTimeField\n                fieldName=\"deliverDate\"\n                label=\"Deliver Date\"\n                disabled\n                formik={formik}\n              />\n              <TextField fieldName=\"rate\" label=\"Rate\" formik={formik} />\n              <TextField\n                fieldName=\"checkInAs\"\n                label=\"Check In As\"\n                disabled\n                formik={formik}\n              />\n              <TextField\n                fieldName=\"bookedByCompany\"\n                label=\"Booked By Company\"\n                disabled\n                formik={formik}\n              />\n            </Box>\n          </Box>\n          <Box\n            key=\"bottomControls\"\n            sx={{ marginTop: -2, marginBottom: 3, p: 1 }}\n          >\n            <SearchField<Truck>\n              fieldName=\"truck\"\n              label=\"Truck\"\n              getSelectedLabel={(selectedItem) => `${selectedItem.truckNumber}`}\n              getItemLabel={(item) => `${item.truckNumber}`}\n              getItemSecondLabel={(item) =>\n                `${item.status}, ${item.licencePlate}`\n              }\n              ListIcon={LocalShippingIcon}\n              queryFn={TrucksQuery}\n              orderby=\"truckNumber\"\n              order=\"asc\"\n              disabled\n              formik={formik}\n            />\n            <SearchMultiField<User>\n              fieldName=\"dispatchers\"\n              label=\"Dispatchers\"\n              getSelectedLabel={(selectedItem) => `${selectedItem.fullName}`}\n              getItemLabel={(item) => `${item.fullName}`}\n              getItemSecondLabel={(item) => `${item.jobTitle}`}\n              ListIcon={PersonIcon}\n              queryFn={UsersQuery}\n              orderby=\"fullName\"\n              order=\"asc\"\n              disabled\n              formik={formik}\n            />\n          </Box>\n          <Box key=\"buttons\" sx={{ display: 'inline-flex' }}>\n            <Box key=\"left\" sx={{ p: 1, paddingTop: 0, width: '50%' }}>\n              <Button\n                fullWidth\n                variant=\"contained\"\n                size=\"small\"\n                color=\"primary\"\n                type=\"button\"\n                onClick={handleEdit}\n              >\n                Edit\n              </Button>\n            </Box>\n            <Box key=\"right\" sx={{ p: 1, paddingTop: 0, width: '50%' }}>\n              <Button\n                fullWidth\n                variant=\"contained\"\n                size=\"small\"\n                color=\"primary\"\n                type=\"button\"\n                onClick={handleClose}\n              >\n                Cancel\n              </Button>\n            </Box>\n          </Box>\n        </Box>\n      </form>\n      <Loader visible={loading || fetching} />\n    </Box>\n  );\n}\n","import React from 'react';\nimport { AlertColor } from '@mui/material/Alert/Alert';\n\nexport const LangPriorities = ['EN', 'UA', 'ES', 'RU'] as const;\n\nexport const PersonTypes = [\n  'Owner',\n  'OwnerDriver',\n  'Coordinator',\n  'CoordinatorDriver',\n  'Driver',\n] as const;\n\nexport const UserRoles = ['Admin', 'Super Admin'] as const;\n\nexport const TruckTypes = [\n  'Cargo van',\n  'Reefer van',\n  'Box truck',\n  'Box truck Reefer',\n  'Straight truck',\n  'Hotshot',\n  'Tented box',\n] as const;\n\nexport const TruckStatuses = ['Available', 'Not Available'] as const;\n\nexport const TruckCrossborders = ['Yes', 'No'] as const;\n\nexport const TruckCertificates = [\n  'Hazmat',\n  'Tsa',\n  'TWIC',\n  'Tanker Endorsement',\n] as const;\n\nexport const TruckEquipments = [\n  'Dock height risers',\n  'Air ride',\n  'Lift gate',\n  'Keep from freezing',\n  'ICC bar',\n  'Vertical E-track',\n  'Horizontal E-track',\n  'Pallet jack',\n  'PPE',\n  'Ramps',\n  'Straps',\n  'Loads bars',\n  'Blankets',\n  'Pads',\n  'Fire extinguisher',\n] as const;\n\nexport type Order = 'asc' | 'desc';\nexport type QueryKey<T> = readonly [\n  key: string,\n  page: number,\n  rowsPerPage: number,\n  orderBy?: string,\n  order?: Order,\n  queryParams?: T,\n];\n// export type BaseQuery = {\n//   readonly queryKey: QueryKey;\n// };\nexport type Query<T> = {\n  readonly queryKey: QueryKey<T>;\n};\nexport type QuerySingleKey = readonly [key: string, recordId: string];\nexport type QuerySingle = {\n  readonly queryKey: QuerySingleKey;\n};\nexport type Result<T> = {\n  items: T[];\n  limit: number;\n  offset: number;\n  total: number;\n};\nexport type QueryFn = (query: Query<{ search: any }>) => Promise<Result<any>>;\nexport interface AuthContextType {\n  user: any;\n  signin: (\n    username: string,\n    password: string,\n    callback: (res: boolean) => void,\n  ) => void;\n  signout: (callback: VoidFunction) => void;\n}\nexport type SnackbarMessage = {\n  message: string;\n  severity: AlertColor;\n  handleClose?: (event?: React.SyntheticEvent | Event, reason?: string) => void;\n};\nexport type PersonType = (typeof PersonTypes)[number];\nexport type LangPriority = (typeof LangPriorities)[number];\nexport type UserRole = (typeof UserRoles)[number];\nexport type TruckType = (typeof TruckTypes)[number];\nexport type TruckStatus = (typeof TruckStatuses)[number];\nexport type TruckCrossborder = (typeof TruckCrossborders)[number];\nexport type TruckCertificate = (typeof TruckCertificates)[number];\nexport type TruckEquipment = (typeof TruckEquipments)[number];\n\nexport interface Person {\n  id: string;\n  fullName: string;\n  type: PersonType;\n  phone?: string;\n}\n\nexport interface Owner extends Person {\n  type: PersonType;\n  phone: string;\n  phone2?: string;\n  email: string;\n  address: string;\n  ownTrucks?: Truck[];\n  coordinators?: Coordinator[];\n  drivers?: Driver[];\n}\n\nexport interface Coordinator extends Person {\n  type: PersonType;\n  phone: string;\n  phone2?: string;\n  email: string;\n  address: string;\n  coordinateTrucks?: Truck[];\n}\n\nexport interface Driver extends Person {\n  type: PersonType;\n  phone: string;\n  phone2?: string;\n  email?: string;\n  address?: string;\n  driveTrucks?: Truck[];\n}\n\nexport interface Truck {\n  id: string;\n  truckNumber: number;\n  status: string;\n  lastLocation?: [number, number];\n  lastCity?: Location;\n  locationUpdatedAt?: string;\n  milesHaversine?: number;\n  milesByRoads?: number;\n  crossborder: string;\n  certificate: string;\n  type?: string;\n  equipment?: string[];\n  payload?: number;\n  grossWeight: string;\n  make: string;\n  model: string;\n  year: number;\n  color: string;\n  vinCode: string;\n  licencePlate: string;\n  licenceState: string;\n  insideDims: string;\n  doorDims?: string;\n  validDims: string;\n  owner?: Person;\n  coordinator?: Person;\n  driver?: Person;\n}\n\nexport interface CreateTruck extends Omit<Truck, 'id'> {\n  password?: string;\n}\n\nexport interface UpdateTruck extends Partial<CreateTruck> {\n  id: string;\n}\n\nexport interface Load {\n  id: string;\n  loadNumber: number;\n  pick?: Location;\n  pickDate?: Date;\n  deliver?: Location;\n  deliverDate?: Date;\n  milesByRoads?: number;\n  milesHaversine?: number;\n  weight: string;\n  truckType: TruckType[];\n  rate?: number;\n  bookedByUser?: User;\n  bookedByCompany?: string;\n  dispatchers?: User[];\n  checkInAs?: string;\n  truck?: Truck;\n}\n\nexport interface CreateLoad /*extends Omit<Load, 'id, loadNumber'>*/ {\n  pick: Location | null;\n  pickDate: Date | null;\n  deliver: Location | null;\n  deliverDate?: Date | null;\n  weight: string;\n  truckType: TruckType[];\n  rate?: number;\n  bookedByUser?: User | null;\n  bookedByCompany?: string;\n  dispatchers?: User[];\n  checkInAs?: string;\n  truck?: Truck;\n}\n\nexport interface UpdateLoad extends Partial<CreateLoad> {\n  id: string;\n}\n\nexport interface Location {\n  id: string;\n  zipCode: string;\n  name: string;\n  stateCode: string;\n  stateName: string;\n  location: [number, number];\n}\n\nexport type CreateLocation = Omit<Location, 'id'>;\n\nexport interface UpdateLocation extends Partial<CreateLocation> {\n  id: string;\n}\n\nexport interface User {\n  id: string;\n  fullName: string;\n  phone?: string;\n  userRole: UserRole;\n  jobTitle: string;\n  email: string;\n}\n\nexport interface CreateUser extends Omit<User, 'id'> {\n  password?: string;\n}\n\nexport interface UpdateUser extends Partial<CreateUser> {\n  id: string;\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z\"\n}), 'LocationOn');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');\nexports.default = _default;"],"names":["origin","URL","window","location","href","authFetch","input","_authProvider$user","_authProvider$user2","init","arguments","length","undefined","bodyObj","restInit","_objectWithoutProperties","_excluded","fetchInit","_objectSpread","headers","Headers","set","btoa","authProvider","user","username","password","body","JSON","stringify","transformedBody","Object","entries","forEach","entry","Array","isArray","map","elem","Date","id","transformBody","fetch","catch","reason","error","Error","cause","name","message","then","response","status","statusText","json","TrucksQuery","_ref","_ref$queryKey","_slicedToArray","queryKey","page","rowsPerPage","orderBy","order","queryParams","url","searchParams","append","concat","search","truckNumber","lastLocation","distance","TruckDelete","userId","method","LocationsQuery","_ref2","_ref2$queryKey","LocationDelete","LocationCreate","data","LocationUpdate","updatedData","_excluded3","LocationQuery","query","LoadsQuery","_ref3","_ref3$queryKey","loadNumber","LoadDelete","LoadCreate","LoadUpdate","_excluded4","LoadQuery","OwnersQuery","_ref4","_ref4$queryKey","fullName","OwnerDelete","DriversQuery","_ref5","_ref5$queryKey","DriverDelete","CoordinatorsQuery","_ref6","_ref6$queryKey","CoordinatorDelete","UsersQuery","_ref7","_ref7$queryKey","UserDelete","UserCreate","UserUpdate","_excluded5","UserQuery","initialValues","pick","pickDate","deliver","deliverDate","weight","truckType","rate","bookedByUser","bookedByCompany","dispatchers","checkInAs","truck","ViewLoadForm","pathname","useLocation","navigate","useNavigate","setSnackbarMessage","useSnackbar","_useQuery","useQuery","split","queryFn","keepPreviousData","onError","severity","loading","isLoading","fetching","isFetching","formik","useFormik","enableReinitialize","onSubmit","_jsxs","Box","children","_jsx","handleSubmit","onReset","handleReset","sx","p","display","width","SearchField","fieldName","label","getSelectedLabel","selectedItem","zipCode","stateName","getItemLabel","item","stateCode","getItemSecondLabel","ListIcon","LocationOnIcon","orderby","disabled","DateTimeField","TextField","SelectMultiField","items","TruckTypes","jobTitle","PersonIcon","marginTop","marginBottom","licencePlate","LocalShippingIcon","SearchMultiField","paddingTop","Button","fullWidth","variant","size","color","type","onClick","replace","Loader","visible","UserRoles","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}