{"version":3,"file":"static/js/491.2e5654a9.chunk.js","mappings":"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","sources":["api/api.ts","trucksNearby/trucksNearby.tsx"],"sourcesContent":["import { authProvider } from '../utils/auth';\n\nconst { origin } = new URL(window.location.href);\n\nexport type Order = 'asc' | 'desc';\n\nexport const authFetch: (input: string | URL) => Promise<Response> = (\n  input,\n) => {\n  const init = { headers: new Headers() };\n  init.headers.set(\n    'Authorization',\n    'Basic ' +\n      btoa(authProvider.user?.username + ':' + authProvider.user?.password),\n  );\n  return fetch(input, init);\n};\n\nexport const TrucksQuery = (\n  page: number,\n  rowsPerPage: number,\n  orderBy?: string,\n  order?: Order,\n  queryParams?: {\n    truckNumber?: number;\n    lastLocation?: string;\n    distance?: string;\n  },\n) => {\n  const url = new URL('/truck', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  if (queryParams?.lastLocation && queryParams?.distance) {\n    url.searchParams.append('lastLocation', `${queryParams.lastLocation}`);\n    url.searchParams.append('distance', `${queryParams.distance}`);\n  }\n  return authFetch(url).then((res) => res.json());\n};\n\nexport const LocationsQuery = (\n  page: number,\n  rowsPerPage: number,\n  orderBy?: string,\n  order?: Order,\n  queryParams?: { search?: string; name?: string },\n) => {\n  const url = new URL('/location', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.search) {\n    url.searchParams.append('search', `${queryParams.search}`);\n  }\n  if (queryParams?.name) {\n    url.searchParams.append('name', `${queryParams.name}`);\n  }\n  return authFetch(url).then((res) => res.json());\n};\n\nexport const LoadsQuery = (\n  page: number,\n  rowsPerPage: number,\n  orderBy?: string,\n  order?: Order,\n  queryParams?: { loadNumber?: number; truckNumber?: number },\n) => {\n  const url = new URL('/load', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.loadNumber) {\n    url.searchParams.append('loadNumber', `${queryParams.loadNumber}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  return authFetch(url).then((res) => res.json());\n};\n\nexport const OwnersQuery = (\n  page: number,\n  rowsPerPage: number,\n  orderBy?: string,\n  order?: Order,\n  queryParams?: { fullName?: number; truckNumber?: number },\n) => {\n  const url = new URL('/owner', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.fullName) {\n    url.searchParams.append('fullName', `${queryParams.fullName}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  return authFetch(url).then((res) => res.json());\n};\n\nexport const DriversQuery = (\n  page: number,\n  rowsPerPage: number,\n  orderBy?: string,\n  order?: Order,\n  queryParams?: { fullName?: number; truckNumber?: number },\n) => {\n  const url = new URL('/driver', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.fullName) {\n    url.searchParams.append('fullName', `${queryParams.fullName}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  return authFetch(url).then((res) => res.json());\n};\n\nexport const CoordinatorsQuery = (\n  page: number,\n  rowsPerPage: number,\n  orderBy?: string,\n  order?: Order,\n  queryParams?: { fullName?: number; truckNumber?: number },\n) => {\n  const url = new URL('/coordinator', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.fullName) {\n    url.searchParams.append('fullName', `${queryParams.fullName}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  return authFetch(url).then((res) => res.json());\n};\n\nexport const UsersQuery = (\n  page: number,\n  rowsPerPage: number,\n  orderBy?: string,\n  order?: Order,\n  queryParams?: { fullName?: number },\n) => {\n  const url = new URL('/user', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.fullName) {\n    url.searchParams.append('fullName', `${queryParams.fullName}`);\n  }\n  return authFetch(url).then((res) => res.json());\n};\n","import * as React from 'react';\nimport { useQuery } from '@tanstack/react-query';\n\nimport { alpha, styled } from '@mui/material/styles';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport TextField from '@mui/material/TextField';\nimport Tooltip from '@mui/material/Tooltip';\nimport TableCell from '@mui/material/TableCell';\nimport MenuItem from '@mui/material/MenuItem';\nimport Box from '@mui/material/Box';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport TableSortLabel from '@mui/material/TableSortLabel';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport FilterListIcon from '@mui/icons-material/FilterList';\nimport FilterListOffIcon from '@mui/icons-material/FilterListOff';\nimport { visuallyHidden } from '@mui/utils';\nimport { debounce } from '@mui/material/utils';\n\nimport Loader from '../components/Loader';\n\nimport { LocationsQuery, TrucksQuery } from '../api';\nimport { Order, Truck, City } from '../utils/dataTypes';\n\ninterface HeadCell {\n  id: string;\n  disablePadding: boolean;\n  orderField?: keyof Truck;\n  getData: (row: Truck) => { data: JSX.Element | string; title?: string };\n  label: string;\n  numeric: boolean;\n}\n\nconst headCells: readonly HeadCell[] = [\n  {\n    id: 'truckNumber',\n    orderField: 'truckNumber',\n    getData: (row) => ({ data: `${row.truckNumber}` }),\n    numeric: true,\n    disablePadding: false,\n    label: 'Truck Number',\n  },\n  {\n    id: 'mainContactInfo',\n    getData: (row) => {\n      const coordinator = row.coordinator;\n      const owner = row.owner;\n      let path = '';\n      let type = '';\n      let firstRow = '';\n      let secondRow = '';\n      if (coordinator) {\n        path = `./coordinators/${coordinator.id}`;\n        type = '(C) ';\n        firstRow = `${coordinator.fullName}`;\n        secondRow = `${coordinator?.phone}`;\n      } else if (owner) {\n        path = `./owners/${owner.id}`;\n        type = `${owner.type === 'Owner' ? '(O) ' : ''}${\n          owner.type === 'OwnerDriver' ? '(O/d) ' : ''\n        }`;\n        firstRow = `${owner.fullName}`;\n        secondRow = `${owner?.phone}`;\n      }\n      return {\n        data: (\n          <span>\n            <b>{type}</b>\n            <a href={path} target=\"_blank\" onClick={stopPropagation}>\n              {firstRow}\n            </a>\n            <br />\n            <a\n              href={secondRow ? `tel:${secondRow}` : undefined}\n              target=\"_blank\"\n              onClick={stopPropagation}\n            >\n              {secondRow || ' '}\n            </a>\n          </span>\n        ),\n        title: type + '' + firstRow + '\\n' + secondRow,\n      };\n    },\n    numeric: false,\n    disablePadding: true,\n    label: 'Main Contact info',\n  },\n  {\n    id: 'truckInfo',\n    getData: (row) => {\n      const firstRow = row.type ? `${row.type}` : '';\n      const secondRow = row.equipment ? `${row.equipment.join(', ')}` : '';\n\n      return {\n        data: (\n          <span>\n            {firstRow}\n            <br />\n            {secondRow}\n          </span>\n        ),\n        title: firstRow + '\\n' + secondRow,\n      };\n    },\n    numeric: false,\n    disablePadding: true,\n    label: 'Truck info',\n  },\n  {\n    id: 'dimsPayload',\n    getData: (row) => {\n      const firstRow = row.doorDims ? `${row.doorDims}` : '';\n      const secondRow = row.payload ? `${row.payload}` : '';\n\n      return {\n        data: (\n          <span>\n            {firstRow}\n            <br />\n            {secondRow}\n          </span>\n        ),\n        title: firstRow + '\\n' + secondRow,\n      };\n    },\n    numeric: false,\n    disablePadding: true,\n    label: 'DIMS/Payload',\n  },\n  {\n    id: 'status',\n    orderField: 'status',\n    getData: (row) => ({ data: `${row.status}` }),\n    numeric: false,\n    disablePadding: true,\n    label: 'Status',\n  },\n  {\n    id: 'roadsDistance',\n    getData: (row) => ({\n      data: `${row.milesByRoads ? row.milesByRoads.toFixed(2) : ''}`,\n    }),\n    numeric: false,\n    disablePadding: true,\n    label: 'Road distance',\n  },\n  {\n    id: 'location',\n    getData: (row) => {\n      if (row?.lastCity) {\n        const path = `./locations/${row.lastCity.id}`;\n        const firstRow = `${row.lastCity.name}, ${row.lastCity.stateCode}, ${row.lastCity.zipCode},`;\n        const secondRow = `${\n          row.locationUpdatedAt\n            ? new Date(row.locationUpdatedAt).toLocaleString()\n            : ''\n        }`;\n\n        return {\n          data: (\n            <span>\n              <a href={path} target=\"_blank\" onClick={stopPropagation}>\n                {firstRow}\n              </a>\n              <br />\n              {secondRow}\n            </span>\n          ),\n          title: firstRow + '\\n' + secondRow,\n        };\n      } else {\n        return { data: '' };\n      }\n    },\n    numeric: false,\n    disablePadding: true,\n    label: 'Last known location',\n  },\n  {\n    id: 'calcDistance',\n    getData: (row) => ({\n      data: `${row.milesHaversine ? row.milesHaversine.toFixed(2) : ''}`,\n    }),\n    numeric: false,\n    disablePadding: true,\n    label: 'Origin away',\n  },\n];\n\ninterface EnhancedTableProps {\n  numSelected: number;\n  onRequestSort: (\n    event: React.MouseEvent<unknown>,\n    property: keyof Truck,\n  ) => void;\n  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  order: Order | undefined;\n  orderBy: string | undefined;\n  rowCount: number;\n}\n\nconst StyledTableHead = styled(TableHead)(({ theme }) => ({\n  backgroundColor: theme.palette.background.default,\n}));\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  maxWidth: '100px',\n  whiteSpace: 'nowrap',\n  textOverflow: 'ellipsis',\n  overflow: 'hidden',\n}));\n\nfunction stopPropagation(e: React.SyntheticEvent) {\n  e.stopPropagation();\n}\n\nfunction EnhancedTableHead(props: EnhancedTableProps) {\n  const {\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n  } = props;\n  const createSortHandler =\n    (property: keyof Truck) => (event: React.MouseEvent<unknown>) => {\n      onRequestSort(event, property);\n    };\n\n  return (\n    <StyledTableHead>\n      <TableRow>\n        <StyledTableCell align=\"center\" padding=\"checkbox\">\n          Actions\n        </StyledTableCell>\n        {headCells.map((headCell) => (\n          <StyledTableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'center'}\n            padding={headCell.disablePadding ? 'none' : 'normal'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={headCell.orderField && orderBy === headCell.orderField}\n              hideSortIcon={!headCell.orderField}\n              direction={orderBy === headCell.orderField ? order : 'asc'}\n              onClick={\n                headCell.orderField\n                  ? createSortHandler(headCell.orderField)\n                  : () => {\n                      return;\n                    }\n              }\n            >\n              {headCell.label}\n              {headCell.orderField && orderBy === headCell.orderField ? (\n                <Box component=\"span\" sx={visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </StyledTableCell>\n        ))}\n      </TableRow>\n    </StyledTableHead>\n  );\n}\n\ninterface EnhancedTableToolbarProps {\n  numSelected: number;\n  setQueryParams: React.Dispatch<\n    React.SetStateAction<Record<string, string | number>>\n  >;\n}\n\nfunction EnhancedTableToolbar(props: EnhancedTableToolbarProps) {\n  const { numSelected, setQueryParams } = props;\n  const [value, setValue] = React.useState<City | null>(null);\n  const [inputValue, setInputValue] = React.useState('');\n  const [searchValue, setSearchValue] = React.useState('');\n  const [options, setOptions] = React.useState<readonly City[]>([]);\n  const [distanceValue, setDistanceValue] = React.useState(200);\n  const [searchDataChanged, setSearchDataChanged] =\n    React.useState<boolean>(false);\n\n  const setSearch = React.useMemo(() => {\n    return debounce((search: string): void => {\n      setSearchValue(search);\n    }, 400);\n  }, []);\n  const { data: { items } = { items: [], total: 0 } } = useQuery({\n    queryKey: ['locations', searchValue],\n    queryFn: () =>\n      LocationsQuery(0, 15, 'name', 'asc', { search: searchValue }),\n    keepPreviousData: true,\n  });\n\n  React.useEffect(() => {\n    if (inputValue === '') {\n      setOptions(value ? [value] : []);\n      return undefined;\n    }\n    let newOptions: readonly City[] = [];\n\n    if (value) {\n      newOptions = [value];\n    }\n\n    if (items.length) {\n      newOptions = [...newOptions, ...items];\n    }\n\n    setOptions(newOptions);\n\n    return undefined;\n  }, [value, items]);\n\n  const handleLocationChange = (event: any, newValue: City | null) => {\n    setOptions(newValue ? [newValue, ...options] : options);\n    setValue(newValue);\n    handleApplyFilter();\n    if (newValue?.location) {\n      setQueryParams({\n        lastLocation: newValue.location.join(','),\n        distance: distanceValue,\n      });\n      setSearchDataChanged(false);\n    } else if (!newValue) {\n      setInputValue('');\n      setQueryParams({});\n      setSearchDataChanged(false);\n    }\n    // setSearchDataChanged(true);\n  };\n  const handleLocationInputChange = (event: any, newInputValue: string) => {\n    setInputValue(newInputValue);\n    setSearch(newInputValue);\n  };\n  const handleDistanceInputChange = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    if (Number.isInteger(Number(event.target.value))) {\n      setDistanceValue(Number(event.target.value));\n      setSearchDataChanged(true);\n    }\n  };\n  const handleClearFilter = () => {\n    setValue(null);\n    setInputValue('');\n    setDistanceValue(200);\n    setQueryParams({});\n    setSearchDataChanged(false);\n  };\n  const handleApplyFilter = () => {\n    if (value?.location) {\n      setQueryParams({\n        lastLocation: value.location.join(','),\n        distance: distanceValue,\n      });\n      setSearchDataChanged(false);\n    }\n  };\n\n  return (\n    <Toolbar\n      sx={{\n        pl: { sm: 2 },\n        pr: { xs: 1, sm: 1 },\n        ...(numSelected > 0 && {\n          bgcolor: (theme) =>\n            alpha(\n              theme.palette.primary.main,\n              theme.palette.action.activatedOpacity,\n            ),\n        }),\n      }}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          sx={{ flex: '1 1 100%' }}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography\n          sx={{\n            flex: '1 1 100%',\n            whiteSpace: 'nowrap',\n            textOverflow: 'ellipsis',\n            overflow: 'hidden',\n          }}\n          variant=\"h6\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          Trucks Nearby\n        </Typography>\n      )}\n      <Box\n        component=\"div\"\n        sx={{\n          '& .MuiTextField-root': { m: 1, width: '350px' },\n        }}\n      >\n        <Autocomplete\n          id=\"google-map-demo\"\n          getOptionLabel={(option) =>\n            typeof option === 'string'\n              ? option\n              : `${option.name}, ${option.zipCode}, ${option.stateName}`\n          }\n          filterOptions={(x) => x}\n          options={options}\n          autoComplete\n          includeInputInList\n          filterSelectedOptions\n          value={value}\n          noOptionsText=\"No locations\"\n          onChange={handleLocationChange}\n          onInputChange={handleLocationInputChange}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Enter city, state or zip\"\n              size=\"small\"\n              fullWidth\n            />\n          )}\n          renderOption={(props, option) => (\n            <li {...props}>\n              <Grid container alignItems=\"center\">\n                <Grid item sx={{ display: 'flex', width: 44 }}>\n                  <LocationOnIcon sx={{ color: 'text.secondary' }} />\n                </Grid>\n                <Grid\n                  item\n                  sx={{ width: 'calc(100% - 44px)', wordWrap: 'break-word' }}\n                >\n                  <Box component=\"span\" sx={{ fontWeight: 'regular' }}>\n                    {`${option.name}, ${option.stateCode}`}\n                  </Box>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    {`${option.zipCode}, ${option.stateName}`}\n                  </Typography>\n                </Grid>\n              </Grid>\n            </li>\n          )}\n        />\n      </Box>\n      <Box\n        component=\"div\"\n        sx={{\n          '& .MuiTextField-root': { m: 1, width: '140px' },\n        }}\n      >\n        <TextField\n          id=\"outlined-select-distance\"\n          select\n          label=\"Select Distance\"\n          value={distanceValue}\n          onChange={handleDistanceInputChange}\n          size=\"small\"\n          fullWidth\n        >\n          {Array.from(\n            { length: (1000 - 50) / 50 + 1 },\n            (_, index) => 50 + index * 50,\n          ).map((option) => (\n            <MenuItem key={option} value={option}>\n              {option}\n            </MenuItem>\n          ))}\n        </TextField>\n      </Box>\n      {numSelected === 1 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton>\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          {(searchDataChanged || !value) && !(searchDataChanged && !value) ? (\n            <span>\n              <IconButton\n                disabled={!value || !distanceValue}\n                onClick={handleApplyFilter}\n              >\n                <FilterListIcon />\n              </IconButton>\n            </span>\n          ) : (\n            <IconButton onClick={handleClearFilter}>\n              <FilterListOffIcon />\n            </IconButton>\n          )}\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n}\n\nexport default function EnhancedTable() {\n  const [order, setOrder] = React.useState<Order | undefined>(undefined);\n  const [orderBy, setOrderBy] = React.useState<keyof Truck | undefined>(\n    undefined,\n  );\n  const [selected, setSelected] = React.useState<readonly string[]>([]);\n  const [page, setPage] = React.useState<number>(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState<number>(15);\n  const [queryParams, setQueryParams] = React.useState<Record<string, any>>({});\n  const tableContainerRef = React.useRef(null);\n\n  const {\n    isLoading,\n    isFetching,\n    data: { items, total } = { items: [], total: 0 },\n  } = useQuery({\n    queryKey: ['trucks', page, rowsPerPage, orderBy, order, queryParams],\n    queryFn: () => TrucksQuery(page, rowsPerPage, orderBy, order, queryParams),\n    keepPreviousData: true,\n  });\n  const rows: Truck[] = items || [];\n\n  React.useEffect(() => {\n    if (tableContainerRef.current) {\n      const container = tableContainerRef.current as HTMLElement;\n      container.scrollTo({\n        top: 0,\n        left: 0,\n        behavior: 'smooth',\n      });\n    }\n  }, [rows]);\n\n  const handleRequestSort = (\n    event: React.MouseEvent<unknown>,\n    property: keyof Truck,\n  ) => {\n    const isAsc = orderBy === property && order === 'asc';\n    const isDesc = orderBy === property && order === 'desc';\n    if (isDesc) {\n      setOrder(undefined);\n      setOrderBy(undefined);\n    } else {\n      setOrder(isAsc ? 'desc' : 'asc');\n      setOrderBy(property);\n    }\n  };\n\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.checked) {\n      const newSelected = rows.map((n: Truck) => n.id);\n      setSelected(newSelected);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event: React.MouseEvent<unknown>, name: string) => {\n    // const selectedIndex = selected.indexOf(name);\n    // let newSelected: readonly string[] = [];\n    //\n    // if (selectedIndex === -1) {\n    //     newSelected = newSelected.concat(selected, name);\n    // } else if (selectedIndex === 0) {\n    //     newSelected = newSelected.concat(selected.slice(1));\n    // } else if (selectedIndex === selected.length - 1) {\n    //     newSelected = newSelected.concat(selected.slice(0, -1));\n    // } else if (selectedIndex > 0) {\n    //     newSelected = newSelected.concat(\n    //         selected.slice(0, selectedIndex),\n    //         selected.slice(selectedIndex + 1),\n    //     );\n    // }\n    //\n    // setSelected(newSelected);\n  };\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = (name: string) => selected.indexOf(name) !== -1;\n\n  return (\n    <Box sx={{ width: '100%', height: '100%' }}>\n      <Paper sx={{ width: '100%', height: '100%', backgroundColor: 'unset' }}>\n        <EnhancedTableToolbar\n          numSelected={selected.length}\n          setQueryParams={(query) => {\n            setQueryParams(query);\n            setPage(0);\n          }}\n        />\n        <TableContainer\n          ref={tableContainerRef}\n          sx={{ height: 'calc(100% - 115px)' }}\n        >\n          <Table\n            sx={{ minWidth: 750 }}\n            aria-labelledby=\"tableTitle\"\n            size=\"small\"\n            stickyHeader\n          >\n            <EnhancedTableHead\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {rows.map((row, index) => {\n                const isItemSelected = isSelected(`${row.id}`);\n                const labelId = `enhanced-table-checkbox-${index}`;\n                return (\n                  <TableRow\n                    hover\n                    onClick={(event) => handleClick(event, `${row.id}`)}\n                    role=\"checkbox\"\n                    aria-checked={isItemSelected}\n                    tabIndex={-1}\n                    key={row.id}\n                    selected={isItemSelected}\n                    sx={{ cursor: 'pointer' }}\n                  >\n                    <StyledTableCell padding=\"checkbox\">\n                      <Button\n                        id={`${labelId}`}\n                        sx={{ m: 1 }}\n                        fullWidth\n                        variant=\"contained\"\n                        size=\"small\"\n                        color=\"primary\"\n                        onClick={() => {\n                          return;\n                        }}\n                      >\n                        Reserve\n                      </Button>\n                    </StyledTableCell>\n                    {headCells.map((cell) => {\n                      const cellData = cell.getData(row);\n                      return (\n                        <StyledTableCell\n                          key={cell.id}\n                          title={cellData.title}\n                          align={cell.numeric ? 'right' : 'center'}\n                        >\n                          {cellData.data}\n                        </StyledTableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 15, 20, 25, 35, 50]}\n          component=\"div\"\n          count={total}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <Loader visible={isLoading || isFetching} />\n    </Box>\n  );\n}\n"],"names":["origin","URL","window","location","href","authFetch","input","_authProvider$user","_authProvider$user2","init","headers","Headers","set","btoa","authProvider","user","username","password","fetch","TrucksQuery","page","rowsPerPage","orderBy","order","queryParams","url","searchParams","append","concat","truckNumber","lastLocation","distance","then","res","json","LocationsQuery","search","name","LoadsQuery","loadNumber","OwnersQuery","fullName","DriversQuery","CoordinatorsQuery","UsersQuery","headCells","id","orderField","getData","row","data","numeric","disablePadding","label","coordinator","owner","path","type","firstRow","secondRow","phone","_jsxs","children","_jsx","target","onClick","stopPropagation","undefined","title","equipment","join","doorDims","payload","status","milesByRoads","toFixed","lastCity","stateCode","zipCode","locationUpdatedAt","Date","toLocaleString","milesHaversine","StyledTableHead","styled","TableHead","_ref","backgroundColor","theme","palette","background","default","StyledTableCell","TableCell","_ref2","maxWidth","whiteSpace","textOverflow","overflow","e","EnhancedTableHead","props","onSelectAllClick","onRequestSort","numSelected","rowCount","TableRow","align","padding","map","headCell","sortDirection","TableSortLabel","active","hideSortIcon","direction","property","event","Box","component","sx","visuallyHidden","EnhancedTableToolbar","setQueryParams","_React$useState","React","_React$useState2","_slicedToArray","value","setValue","_React$useState3","_React$useState4","inputValue","setInputValue","_React$useState5","_React$useState6","searchValue","setSearchValue","_React$useState7","_React$useState8","options","setOptions","_React$useState9","_React$useState10","distanceValue","setDistanceValue","_React$useState11","_React$useState12","searchDataChanged","setSearchDataChanged","setSearch","debounce","_useQuery$data","useQuery","queryKey","queryFn","keepPreviousData","items","total","newOptions","length","_toConsumableArray","handleApplyFilter","Toolbar","_objectSpread","pl","sm","pr","xs","bgcolor","alpha","primary","main","action","activatedOpacity","Typography","flex","color","variant","m","width","Autocomplete","getOptionLabel","option","stateName","filterOptions","x","autoComplete","includeInputInList","filterSelectedOptions","noOptionsText","onChange","newValue","onInputChange","newInputValue","renderInput","params","TextField","size","fullWidth","renderOption","Grid","container","alignItems","item","display","LocationOnIcon","wordWrap","fontWeight","select","Number","isInteger","Array","from","_","index","MenuItem","Tooltip","IconButton","DeleteIcon","FilterListOffIcon","disabled","FilterListIcon","EnhancedTable","_React$useState13","_React$useState14","setOrder","_React$useState15","_React$useState16","setOrderBy","_React$useState17","_React$useState18","selected","setSelected","_React$useState19","_React$useState20","setPage","_React$useState21","_React$useState22","setRowsPerPage","_React$useState23","_React$useState24","tableContainerRef","_useQuery2","isLoading","isFetching","_useQuery2$data","_useQuery2$data2","rows","current","scrollTo","top","left","behavior","height","Paper","query","TableContainer","ref","Table","minWidth","stickyHeader","checked","newSelected","n","isAsc","TableBody","isItemSelected","indexOf","labelId","hover","role","tabIndex","cursor","Button","cell","cellData","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","Loader","visible"],"sourceRoot":""}