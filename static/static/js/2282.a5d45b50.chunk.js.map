{"version":3,"file":"static/js/2282.a5d45b50.chunk.js","mappings":"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","sources":["coordinators/coordinators.tsx","utils/stopPropagation.ts","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/icons-material/Edit.js","../node_modules/@mui/material/DialogTitle/DialogTitle.js","../node_modules/@mui/material/ListItemAvatar/listItemAvatarClasses.js","../node_modules/@mui/material/ListItemAvatar/ListItemAvatar.js","../node_modules/@tanstack/query-core/src/mutationObserver.ts","../node_modules/@tanstack/react-query/src/useMutation.ts"],"sourcesContent":["import * as React from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\r\n\r\nimport { alpha, styled } from '@mui/material/styles';\r\nimport TextField from '@mui/material/TextField';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport Box from '@mui/material/Box';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableSortLabel from '@mui/material/TableSortLabel';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport FilterListIcon from '@mui/icons-material/FilterList';\r\nimport FilterListOffIcon from '@mui/icons-material/FilterListOff';\r\nimport ContactPhoneIcon from '@mui/icons-material/ContactPhone';\r\nimport { visuallyHidden } from '@mui/utils';\r\n\r\nimport Loader from '../components/Loader';\r\n\r\nimport { CoordinatorsQuery, CoordinatorDelete } from '../api';\r\nimport { useSnackbar } from '../hooks';\r\nimport { Order, Coordinator } from '../utils/dataTypes';\r\nimport { getType, getPath } from '../utils/queryHelpers';\r\nimport { stopPropagation } from '../utils/stopPropagation';\r\n\r\ninterface HeadCell {\r\n  id: string;\r\n  disablePadding: boolean;\r\n  orderField?: keyof Coordinator;\r\n  getData: (row: Coordinator) => { data: JSX.Element | string; title?: string };\r\n  label: string;\r\n  numeric: boolean;\r\n}\r\n\r\nconst headCells: readonly HeadCell[] = [\r\n  {\r\n    id: 'fullName',\r\n    orderField: 'fullName',\r\n    getData: (row) => ({ data: `${row.fullName}` }),\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'First name/Last name',\r\n  },\r\n  {\r\n    id: 'type',\r\n    getData: (row) => {\r\n      const type = `${getType(row)} `;\r\n      let title = '';\r\n      if (row.type === 'Coordinator') {\r\n        title = 'Coordinator';\r\n      }\r\n      if (row.type === 'CoordinatorDriver') {\r\n        title = 'Coordinator/Driver';\r\n      }\r\n      return {\r\n        data: (\r\n          <span>\r\n            <b>{type}</b>\r\n          </span>\r\n        ),\r\n        title: title,\r\n      };\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Type',\r\n  },\r\n  {\r\n    id: 'phone',\r\n    getData: (row) => {\r\n      const firstRow = `${row.phone}`;\r\n      const secondRow = `${row.phone2 ? row.phone2 : ''}`;\r\n      return {\r\n        data: (\r\n          <span>\r\n            <a\r\n              href={`tel:${firstRow}`}\r\n              target=\"_blank\"\r\n              onClick={stopPropagation}\r\n            >\r\n              {firstRow}\r\n            </a>\r\n            <br />\r\n            <a\r\n              href={secondRow ? `tel:${secondRow}` : undefined}\r\n              target=\"_blank\"\r\n              onClick={stopPropagation}\r\n            >\r\n              {secondRow || ' '}\r\n            </a>\r\n          </span>\r\n        ),\r\n        title: firstRow + '\\n' + secondRow,\r\n      };\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Mobile phone',\r\n  },\r\n  {\r\n    id: 'email',\r\n    getData: (row) => {\r\n      const firstRow = `${row.email}`;\r\n      return {\r\n        data: (\r\n          <span>\r\n            <a\r\n              href={`mailto:${firstRow}`}\r\n              target=\"_blank\"\r\n              onClick={stopPropagation}\r\n            >\r\n              {firstRow}\r\n            </a>\r\n          </span>\r\n        ),\r\n        title: firstRow,\r\n      };\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Email',\r\n  },\r\n  {\r\n    id: 'address',\r\n    getData: (row) => {\r\n      const firstRow = `${row.address}`;\r\n      return {\r\n        data: <span>{firstRow}</span>,\r\n        title: firstRow,\r\n      };\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Home address',\r\n  },\r\n  {\r\n    id: 'coordinateTrucks',\r\n    getData: (row) => {\r\n      if (row.coordinateTrucks && row.coordinateTrucks.length) {\r\n        const trucks = row.coordinateTrucks;\r\n        return {\r\n          data: (\r\n            <span>\r\n              {trucks.map((truck, index) => (\r\n                <a\r\n                  key={index}\r\n                  href={`/trucks/view/${truck.id}`}\r\n                  target=\"_blank\"\r\n                  onClick={stopPropagation}\r\n                >\r\n                  {`${truck.truckNumber}${\r\n                    index === trucks.length - 1 ? '' : ', '\r\n                  }`}\r\n                </a>\r\n              ))}\r\n            </span>\r\n          ),\r\n          title: trucks.map((truck) => truck.truckNumber).join(', '),\r\n        };\r\n      } else {\r\n        return { data: '' };\r\n      }\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'COORDINATE TRUCKS',\r\n  },\r\n];\r\n\r\ninterface EnhancedTableProps {\r\n  numSelected: number;\r\n  onRequestSort: (\r\n    event: React.MouseEvent<unknown>,\r\n    property: keyof Coordinator,\r\n  ) => void;\r\n  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n  order: Order | undefined;\r\n  orderBy: string | undefined;\r\n  rowCount: number;\r\n}\r\n\r\nconst StyledTableHead = styled(TableHead)(({ theme }) => ({\r\n  backgroundColor: theme.palette.background.default,\r\n}));\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n  maxWidth: '100px',\r\n  paddingTop: '6px',\r\n  paddingBottom: '6px',\r\n  whiteSpace: 'nowrap',\r\n  textOverflow: 'ellipsis',\r\n  overflow: 'hidden',\r\n}));\r\n\r\nfunction EnhancedTableHead(props: EnhancedTableProps) {\r\n  const {\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n  const createSortHandler =\r\n    (property: keyof Coordinator) => (event: React.MouseEvent<unknown>) => {\r\n      onRequestSort(event, property);\r\n    };\r\n\r\n  return (\r\n    <StyledTableHead>\r\n      <TableRow>\r\n        <StyledTableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            name={'enhanced-table-checkbox-select-all'}\r\n            color=\"primary\"\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{\r\n              'aria-label': 'enhanced-table-checkbox-select-all',\r\n            }}\r\n          />\r\n        </StyledTableCell>\r\n        {headCells.map((headCell) => (\r\n          <StyledTableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'center'}\r\n            padding={headCell.disablePadding ? 'none' : 'normal'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={headCell.orderField && orderBy === headCell.orderField}\r\n              hideSortIcon={!headCell.orderField}\r\n              direction={orderBy === headCell.orderField ? order : 'asc'}\r\n              onClick={\r\n                headCell.orderField\r\n                  ? createSortHandler(headCell.orderField)\r\n                  : () => {\r\n                      return;\r\n                    }\r\n              }\r\n            >\r\n              {headCell.label}\r\n              {headCell.orderField && orderBy === headCell.orderField ? (\r\n                <Box component=\"span\" sx={visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </Box>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </StyledTableCell>\r\n        ))}\r\n      </TableRow>\r\n    </StyledTableHead>\r\n  );\r\n}\r\n\r\ninterface EnhancedTableToolbarProps {\r\n  selected: readonly string[];\r\n  setQueryParams: React.Dispatch<\r\n    React.SetStateAction<Record<string, number | string>>\r\n  >;\r\n}\r\n\r\nfunction EnhancedTableToolbar(props: EnhancedTableToolbarProps) {\r\n  const { selected, setQueryParams } = props;\r\n  const [createDialogOpen, setCreateDialogOpen] =\r\n    React.useState<boolean>(false);\r\n  const [fullNameSearch, setFullNameSearch] = React.useState<string>('');\r\n  const [truckNumberSearch, setTruckNumberSearch] = React.useState<number>(0);\r\n  const [searchChanged, setSearchChanged] = React.useState<boolean>(false);\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const queryClient = useQueryClient();\r\n  const setSnackbarMessage = useSnackbar();\r\n\r\n  const { mutate, isLoading } = useMutation(CoordinatorDelete, {\r\n    onSuccess: () => {\r\n      setSnackbarMessage({\r\n        severity: 'success',\r\n        message: 'Deleted',\r\n      });\r\n      queryClient.invalidateQueries(['coordinators']);\r\n    },\r\n    onError: (error: Error) => {\r\n      setSnackbarMessage({\r\n        severity: 'error',\r\n        message: error instanceof Error ? error.message : JSON.stringify(error),\r\n      });\r\n    },\r\n  });\r\n\r\n  const fullNameHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setFullNameSearch(event.target.value);\r\n    setSearchChanged(true);\r\n  };\r\n  const truckNumberHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (Number.isFinite(Number(event.target.value))) {\r\n      setTruckNumberSearch(Number(event.target.value));\r\n      setSearchChanged(true);\r\n    }\r\n  };\r\n  const filterClearHandler = () => {\r\n    setSearchChanged(false);\r\n    setFullNameSearch('');\r\n    setTruckNumberSearch(0);\r\n    setQueryParams({});\r\n  };\r\n  const filterHandler = () => {\r\n    setSearchChanged(false);\r\n    const queryParams: Record<string, number | string> = {};\r\n    if (fullNameSearch) {\r\n      queryParams.fullName = fullNameSearch;\r\n    }\r\n    if (truckNumberSearch) {\r\n      queryParams.truckNumber = truckNumberSearch;\r\n    }\r\n    setQueryParams(queryParams);\r\n  };\r\n  const keyUpHandler = (event: React.KeyboardEvent) => {\r\n    if (event.key !== 'Enter') {\r\n      return;\r\n    }\r\n    if (fullNameSearch || truckNumberSearch) {\r\n      filterHandler();\r\n    } else {\r\n      filterClearHandler();\r\n    }\r\n  };\r\n  const createHandler = () => {\r\n    setCreateDialogOpen(true);\r\n  };\r\n  const handleCloseCreateDialog = () => {\r\n    setCreateDialogOpen(false);\r\n  };\r\n  const editHandler = () => {\r\n    navigate(`./edit/${selected[0]}`, {\r\n      relative: 'path',\r\n      state: { from: location },\r\n      replace: false,\r\n    });\r\n  };\r\n  const deleteHandler = () => {\r\n    mutate(`${selected[0]}`);\r\n  };\r\n\r\n  return (\r\n    <Toolbar\r\n      sx={{\r\n        overflow: 'hidden',\r\n        pl: { sm: 2 },\r\n        pr: { xs: 1, sm: 1 },\r\n        ...(selected.length > 0 && {\r\n          bgcolor: (theme) =>\r\n            alpha(\r\n              theme.palette.primary.main,\r\n              theme.palette.action.activatedOpacity,\r\n            ),\r\n        }),\r\n      }}\r\n    >\r\n      {selected.length > 0 ? (\r\n        <Typography\r\n          sx={{ flex: '1 1 100%' }}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {selected.length} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          sx={{\r\n            flex: '1 1 100%',\r\n            whiteSpace: 'nowrap',\r\n            textOverflow: 'ellipsis',\r\n            overflow: 'hidden',\r\n          }}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          Coordinators\r\n        </Typography>\r\n      )}\r\n      <Box\r\n        component=\"div\"\r\n        sx={{\r\n          '& .MuiTextField-root': { m: 1, width: '140px' },\r\n        }}\r\n      >\r\n        <TextField\r\n          label=\"First name/Last name\"\r\n          value={fullNameSearch}\r\n          onChange={fullNameHandler}\r\n          onKeyUp={keyUpHandler}\r\n          size=\"small\"\r\n        />\r\n      </Box>\r\n      <Box\r\n        component=\"div\"\r\n        sx={{\r\n          '& .MuiTextField-root': { m: 1, width: '140px' },\r\n        }}\r\n      >\r\n        <TextField\r\n          label=\"Truck Number\"\r\n          value={truckNumberSearch || ''}\r\n          onChange={truckNumberHandler}\r\n          onKeyUp={keyUpHandler}\r\n          size=\"small\"\r\n        />\r\n      </Box>\r\n      <Tooltip title=\"Filter list\">\r\n        {(searchChanged || (!fullNameSearch && !truckNumberSearch)) &&\r\n        (!(searchChanged && !fullNameSearch) ||\r\n          !(searchChanged && !truckNumberSearch)) ? (\r\n          <span>\r\n            <IconButton\r\n              disabled={!fullNameSearch && !truckNumberSearch}\r\n              onClick={filterHandler}\r\n            >\r\n              <FilterListIcon />\r\n            </IconButton>\r\n          </span>\r\n        ) : (\r\n          <span>\r\n            <IconButton onClick={filterClearHandler}>\r\n              <FilterListOffIcon />\r\n            </IconButton>\r\n          </span>\r\n        )}\r\n      </Tooltip>\r\n      <Box sx={{ p: 1, display: 'inline-flex' }}>\r\n        <Tooltip title=\"Create\">\r\n          <span>\r\n            <IconButton onClick={createHandler}>\r\n              <AddIcon />\r\n            </IconButton>\r\n          </span>\r\n        </Tooltip>\r\n        <Tooltip title=\"Edit\">\r\n          <span>\r\n            <IconButton disabled={selected.length !== 1} onClick={editHandler}>\r\n              <EditIcon />\r\n            </IconButton>\r\n          </span>\r\n        </Tooltip>\r\n        <Tooltip title=\"Delete\">\r\n          <span>\r\n            <IconButton\r\n              disabled={selected.length !== 1}\r\n              onClick={deleteHandler}\r\n            >\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </span>\r\n        </Tooltip>\r\n      </Box>\r\n      <Dialog onClose={handleCloseCreateDialog} open={createDialogOpen}>\r\n        <DialogTitle>Select, what type of coordinator to create</DialogTitle>\r\n        <List sx={{ pt: 0 }}>\r\n          <ListItem disableGutters key=\"coordinator\">\r\n            <ListItemButton\r\n              onClick={() => {\r\n                navigate('../coordinators/create', {\r\n                  relative: 'path',\r\n                  state: { from: location },\r\n                  replace: false,\r\n                });\r\n              }}\r\n            >\r\n              <ListItemAvatar>\r\n                <Avatar>\r\n                  <ContactPhoneIcon />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText primary=\"Coordinator\" />\r\n            </ListItemButton>\r\n          </ListItem>\r\n          <ListItem disableGutters key=\"coordinatorsDriver\">\r\n            <ListItemButton\r\n              onClick={() => {\r\n                navigate('../coordinatorsDrivers/create', {\r\n                  relative: 'path',\r\n                  state: { from: location },\r\n                  replace: false,\r\n                });\r\n              }}\r\n            >\r\n              <ListItemAvatar>\r\n                <Avatar>\r\n                  <ContactPhoneIcon />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText primary=\"Coordinator-Driver\" />\r\n            </ListItemButton>\r\n          </ListItem>\r\n        </List>\r\n      </Dialog>\r\n      <Loader visible={isLoading} />\r\n    </Toolbar>\r\n  );\r\n}\r\n\r\nexport default function EnhancedTable() {\r\n  const [order, setOrder] = React.useState<Order | undefined>('asc');\r\n  const [orderBy, setOrderBy] = React.useState<keyof Coordinator | undefined>(\r\n    'fullName',\r\n  );\r\n  const [selected, setSelected] = React.useState<readonly string[]>([]);\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState<number>(15);\r\n  const [queryParams, setQueryParams] = React.useState<Record<string, any>>({});\r\n  const tableContainerRef = React.useRef(null);\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const setSnackbarMessage = useSnackbar();\r\n\r\n  const {\r\n    isLoading,\r\n    isFetching,\r\n    data: { items, total } = { items: [], total: 0 },\r\n  } = useQuery({\r\n    queryKey: ['coordinators', page, rowsPerPage, orderBy, order, queryParams],\r\n    queryFn: CoordinatorsQuery,\r\n    keepPreviousData: true,\r\n    retry: false,\r\n    onError: (error: Error) => {\r\n      setSnackbarMessage({\r\n        severity: 'error',\r\n        message: error instanceof Error ? error.message : JSON.stringify(error),\r\n      });\r\n    },\r\n  });\r\n  const rows = items || [];\r\n\r\n  React.useEffect(() => {\r\n    if (tableContainerRef.current) {\r\n      const container = tableContainerRef.current as HTMLElement;\r\n      container.scrollTo({\r\n        top: 0,\r\n        left: 0,\r\n        behavior: 'smooth',\r\n      });\r\n    }\r\n  }, [rows]);\r\n\r\n  React.useEffect(() => {\r\n    const newSelected: string[] = [];\r\n    selected.forEach((selectedItem) => {\r\n      const selectedRow = rows.find((row) => row.id === selectedItem);\r\n      if (selectedRow) {\r\n        newSelected.push(selectedItem);\r\n      }\r\n    });\r\n    setSelected(newSelected);\r\n  }, [rows]);\r\n\r\n  const handleRequestSort = (\r\n    event: React.MouseEvent<unknown>,\r\n    property: keyof Coordinator,\r\n  ) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    const isDesc = orderBy === property && order === 'desc';\r\n    if (isDesc) {\r\n      setOrder(undefined);\r\n      setOrderBy(undefined);\r\n    } else {\r\n      setOrder(isAsc ? 'desc' : 'asc');\r\n      setOrderBy(property);\r\n    }\r\n  };\r\n\r\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (event.target.checked) {\r\n      const newSelected = rows.map((n: Coordinator) => n.id);\r\n      setSelected(newSelected);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (\r\n    event: React.MouseEvent<unknown>,\r\n    item: (typeof rows)[number],\r\n  ) => {\r\n    navigate(`../${getPath(item)}/view/${item.id}`, {\r\n      relative: 'path',\r\n      state: { from: location },\r\n      replace: false,\r\n    });\r\n  };\r\n\r\n  const handleSelect = (event: React.MouseEvent<unknown>, name: string) => {\r\n    event.stopPropagation();\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected: readonly string[] = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event: unknown, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (\r\n    event: React.ChangeEvent<HTMLInputElement>,\r\n  ) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const isSelected = (name: string) => selected.indexOf(name) !== -1;\r\n\r\n  return (\r\n    <Box sx={{ width: '100%', height: '100%' }}>\r\n      <Paper sx={{ width: '100%', height: '100%', backgroundColor: 'unset' }}>\r\n        <EnhancedTableToolbar\r\n          selected={selected}\r\n          setQueryParams={(query) => {\r\n            setQueryParams(query);\r\n            setPage(0);\r\n          }}\r\n        />\r\n        <TableContainer\r\n          ref={tableContainerRef}\r\n          sx={{ height: 'calc(100% - 115px)' }}\r\n        >\r\n          <Table\r\n            sx={{ minWidth: 750 }}\r\n            aria-labelledby=\"tableTitle\"\r\n            size=\"small\"\r\n            stickyHeader\r\n          >\r\n            <EnhancedTableHead\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {rows.map((row, index) => {\r\n                const isItemSelected = isSelected(`${row.id}`);\r\n                const labelId = `enhanced-table-checkbox-${index}`;\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    onDoubleClick={(event) => handleClick(event, row)}\r\n                    role=\"checkbox\"\r\n                    aria-checked={isItemSelected}\r\n                    tabIndex={-1}\r\n                    key={row.id}\r\n                    selected={isItemSelected}\r\n                    sx={{ cursor: 'pointer' }}\r\n                  >\r\n                    <StyledTableCell padding=\"checkbox\">\r\n                      <Checkbox\r\n                        id={`${labelId}`}\r\n                        color=\"primary\"\r\n                        checked={isItemSelected}\r\n                        inputProps={{\r\n                          'aria-labelledby': labelId,\r\n                        }}\r\n                        onClick={(event) => handleSelect(event, `${row.id}`)}\r\n                      />\r\n                    </StyledTableCell>\r\n                    {headCells.map((cell) => {\r\n                      const cellData = cell.getData(row);\r\n                      return (\r\n                        <StyledTableCell\r\n                          key={cell.id}\r\n                          title={cellData.title}\r\n                          align={cell.numeric ? 'right' : 'center'}\r\n                        >\r\n                          {cellData.data}\r\n                        </StyledTableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 15, 20, 25, 35, 50]}\r\n          component=\"div\"\r\n          count={total}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <Loader visible={isLoading || isFetching} />\r\n    </Box>\r\n  );\r\n}\r\n","import * as React from 'react';\r\n\r\nexport function stopPropagation(e: React.SyntheticEvent) {\r\n  e.stopPropagation();\r\n}\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\nexports.default = _default;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"id\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport Typography from '../Typography';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogTitleUtilityClass } from './dialogTitleClasses';\nimport DialogContext from '../Dialog/DialogContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getDialogTitleUtilityClass, classes);\n};\nconst DialogTitleRoot = styled(Typography, {\n  name: 'MuiDialogTitle',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  padding: '16px 24px',\n  flex: '0 0 auto'\n});\nconst DialogTitle = /*#__PURE__*/React.forwardRef(function DialogTitle(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogTitle'\n  });\n  const {\n      className,\n      id: idProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  const {\n    titleId = idProp\n  } = React.useContext(DialogContext);\n  return /*#__PURE__*/_jsx(DialogTitleRoot, _extends({\n    component: \"h2\",\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    variant: \"h6\",\n    id: idProp != null ? idProp : titleId\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  id: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogTitle;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getListItemAvatarUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemAvatar', slot);\n}\nconst listItemAvatarClasses = generateUtilityClasses('MuiListItemAvatar', ['root', 'alignItemsFlexStart']);\nexport default listItemAvatarClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport ListContext from '../List/ListContext';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getListItemAvatarUtilityClass } from './listItemAvatarClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    alignItems,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', alignItems === 'flex-start' && 'alignItemsFlexStart']\n  };\n  return composeClasses(slots, getListItemAvatarUtilityClass, classes);\n};\nconst ListItemAvatarRoot = styled('div', {\n  name: 'MuiListItemAvatar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.alignItems === 'flex-start' && styles.alignItemsFlexStart];\n  }\n})(({\n  ownerState\n}) => _extends({\n  minWidth: 56,\n  flexShrink: 0\n}, ownerState.alignItems === 'flex-start' && {\n  marginTop: 8\n}));\n\n/**\n * A simple wrapper to apply `List` styles to an `Avatar`.\n */\nconst ListItemAvatar = /*#__PURE__*/React.forwardRef(function ListItemAvatar(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListItemAvatar'\n  });\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const context = React.useContext(ListContext);\n  const ownerState = _extends({}, props, {\n    alignItems: context.alignItems\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ListItemAvatarRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemAvatar.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component, normally an `Avatar`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItemAvatar;","import { getDefaultState } from './mutation'\nimport { notifyManager } from './notifyManager'\nimport { Subscribable } from './subscribable'\nimport { shallowEqualObjects } from './utils'\nimport type { QueryClient } from './queryClient'\nimport type {\n  MutateOptions,\n  MutationObserverBaseResult,\n  MutationObserverOptions,\n  MutationObserverResult,\n} from './types'\nimport type { Action, Mutation } from './mutation'\n\n// TYPES\n\ntype MutationObserverListener<TData, TError, TVariables, TContext> = (\n  result: MutationObserverResult<TData, TError, TVariables, TContext>,\n) => void\n\ninterface NotifyOptions {\n  listeners?: boolean\n  onError?: boolean\n  onSuccess?: boolean\n}\n\n// CLASS\n\nexport class MutationObserver<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n> extends Subscribable<\n  MutationObserverListener<TData, TError, TVariables, TContext>\n> {\n  options!: MutationObserverOptions<TData, TError, TVariables, TContext>\n\n  private client: QueryClient\n  private currentResult!: MutationObserverResult<\n    TData,\n    TError,\n    TVariables,\n    TContext\n  >\n  private currentMutation?: Mutation<TData, TError, TVariables, TContext>\n  private mutateOptions?: MutateOptions<TData, TError, TVariables, TContext>\n\n  constructor(\n    client: QueryClient,\n    options: MutationObserverOptions<TData, TError, TVariables, TContext>,\n  ) {\n    super()\n\n    this.client = client\n    this.setOptions(options)\n    this.bindMethods()\n    this.updateResult()\n  }\n\n  protected bindMethods(): void {\n    this.mutate = this.mutate.bind(this)\n    this.reset = this.reset.bind(this)\n  }\n\n  setOptions(\n    options?: MutationObserverOptions<TData, TError, TVariables, TContext>,\n  ) {\n    const prevOptions = this.options\n    this.options = this.client.defaultMutationOptions(options)\n    if (!shallowEqualObjects(prevOptions, this.options)) {\n      this.client.getMutationCache().notify({\n        type: 'observerOptionsUpdated',\n        mutation: this.currentMutation,\n        observer: this,\n      })\n    }\n    this.currentMutation?.setOptions(this.options)\n  }\n\n  protected onUnsubscribe(): void {\n    if (!this.hasListeners()) {\n      this.currentMutation?.removeObserver(this)\n    }\n  }\n\n  onMutationUpdate(action: Action<TData, TError, TVariables, TContext>): void {\n    this.updateResult()\n\n    // Determine which callbacks to trigger\n    const notifyOptions: NotifyOptions = {\n      listeners: true,\n    }\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = true\n    } else if (action.type === 'error') {\n      notifyOptions.onError = true\n    }\n\n    this.notify(notifyOptions)\n  }\n\n  getCurrentResult(): MutationObserverResult<\n    TData,\n    TError,\n    TVariables,\n    TContext\n  > {\n    return this.currentResult\n  }\n\n  reset(): void {\n    this.currentMutation = undefined\n    this.updateResult()\n    this.notify({ listeners: true })\n  }\n\n  mutate(\n    variables?: TVariables,\n    options?: MutateOptions<TData, TError, TVariables, TContext>,\n  ): Promise<TData> {\n    this.mutateOptions = options\n\n    if (this.currentMutation) {\n      this.currentMutation.removeObserver(this)\n    }\n\n    this.currentMutation = this.client.getMutationCache().build(this.client, {\n      ...this.options,\n      variables:\n        typeof variables !== 'undefined' ? variables : this.options.variables,\n    })\n\n    this.currentMutation.addObserver(this)\n\n    return this.currentMutation.execute()\n  }\n\n  private updateResult(): void {\n    const state = this.currentMutation\n      ? this.currentMutation.state\n      : getDefaultState<TData, TError, TVariables, TContext>()\n\n    const result: MutationObserverBaseResult<\n      TData,\n      TError,\n      TVariables,\n      TContext\n    > = {\n      ...state,\n      isLoading: state.status === 'loading',\n      isSuccess: state.status === 'success',\n      isError: state.status === 'error',\n      isIdle: state.status === 'idle',\n      mutate: this.mutate,\n      reset: this.reset,\n    }\n\n    this.currentResult = result as MutationObserverResult<\n      TData,\n      TError,\n      TVariables,\n      TContext\n    >\n  }\n\n  private notify(options: NotifyOptions) {\n    notifyManager.batch(() => {\n      // First trigger the mutate callbacks\n      if (this.mutateOptions && this.hasListeners()) {\n        if (options.onSuccess) {\n          this.mutateOptions.onSuccess?.(\n            this.currentResult.data!,\n            this.currentResult.variables!,\n            this.currentResult.context!,\n          )\n          this.mutateOptions.onSettled?.(\n            this.currentResult.data!,\n            null,\n            this.currentResult.variables!,\n            this.currentResult.context,\n          )\n        } else if (options.onError) {\n          this.mutateOptions.onError?.(\n            this.currentResult.error!,\n            this.currentResult.variables!,\n            this.currentResult.context,\n          )\n          this.mutateOptions.onSettled?.(\n            undefined,\n            this.currentResult.error,\n            this.currentResult.variables!,\n            this.currentResult.context,\n          )\n        }\n      }\n\n      // Then trigger the listeners\n      if (options.listeners) {\n        this.listeners.forEach(({ listener }) => {\n          listener(this.currentResult)\n        })\n      }\n    })\n  }\n}\n","'use client'\nimport * as React from 'react'\nimport {\n  MutationObserver,\n  notifyManager,\n  parseMutationArgs,\n} from '@tanstack/query-core'\nimport { useSyncExternalStore } from './useSyncExternalStore'\n\nimport { useQueryClient } from './QueryClientProvider'\nimport { shouldThrowError } from './utils'\nimport type { MutationFunction, MutationKey } from '@tanstack/query-core'\nimport type {\n  UseMutateFunction,\n  UseMutationOptions,\n  UseMutationResult,\n} from './types'\n\n// HOOK\n\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  options: UseMutationOptions<TData, TError, TVariables, TContext>,\n): UseMutationResult<TData, TError, TVariables, TContext>\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  mutationFn: MutationFunction<TData, TVariables>,\n  options?: Omit<\n    UseMutationOptions<TData, TError, TVariables, TContext>,\n    'mutationFn'\n  >,\n): UseMutationResult<TData, TError, TVariables, TContext>\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  mutationKey: MutationKey,\n  options?: Omit<\n    UseMutationOptions<TData, TError, TVariables, TContext>,\n    'mutationKey'\n  >,\n): UseMutationResult<TData, TError, TVariables, TContext>\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  mutationKey: MutationKey,\n  mutationFn?: MutationFunction<TData, TVariables>,\n  options?: Omit<\n    UseMutationOptions<TData, TError, TVariables, TContext>,\n    'mutationKey' | 'mutationFn'\n  >,\n): UseMutationResult<TData, TError, TVariables, TContext>\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  arg1:\n    | MutationKey\n    | MutationFunction<TData, TVariables>\n    | UseMutationOptions<TData, TError, TVariables, TContext>,\n  arg2?:\n    | MutationFunction<TData, TVariables>\n    | UseMutationOptions<TData, TError, TVariables, TContext>,\n  arg3?: UseMutationOptions<TData, TError, TVariables, TContext>,\n): UseMutationResult<TData, TError, TVariables, TContext> {\n  const options = parseMutationArgs(arg1, arg2, arg3)\n  const queryClient = useQueryClient({ context: options.context })\n\n  const [observer] = React.useState(\n    () =>\n      new MutationObserver<TData, TError, TVariables, TContext>(\n        queryClient,\n        options,\n      ),\n  )\n\n  React.useEffect(() => {\n    observer.setOptions(options)\n  }, [observer, options])\n\n  const result = useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) =>\n        observer.subscribe(notifyManager.batchCalls(onStoreChange)),\n      [observer],\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult(),\n  )\n\n  const mutate = React.useCallback<\n    UseMutateFunction<TData, TError, TVariables, TContext>\n  >(\n    (variables, mutateOptions) => {\n      observer.mutate(variables, mutateOptions).catch(noop)\n    },\n    [observer],\n  )\n\n  if (\n    result.error &&\n    shouldThrowError(observer.options.useErrorBoundary, [result.error])\n  ) {\n    throw result.error\n  }\n\n  return { ...result, mutate, mutateAsync: result.mutate }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nfunction noop() {}\n"],"names":["headCells","id","orderField","getData","row","data","concat","fullName","numeric","disablePadding","label","type","getType","title","_jsx","children","firstRow","phone","secondRow","phone2","_jsxs","href","target","onClick","stopPropagation","undefined","email","address","coordinateTrucks","length","trucks","map","truck","index","truckNumber","join","StyledTableHead","styled","TableHead","_ref","backgroundColor","theme","palette","background","default","StyledTableCell","TableCell","_ref2","maxWidth","paddingTop","paddingBottom","whiteSpace","textOverflow","overflow","EnhancedTableHead","props","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","TableRow","padding","Checkbox","name","color","indeterminate","checked","onChange","inputProps","headCell","align","sortDirection","TableSortLabel","active","hideSortIcon","direction","property","event","Box","component","sx","visuallyHidden","EnhancedTableToolbar","selected","setQueryParams","_React$useState","React","_React$useState2","_slicedToArray","createDialogOpen","setCreateDialogOpen","_React$useState3","_React$useState4","fullNameSearch","setFullNameSearch","_React$useState5","_React$useState6","truckNumberSearch","setTruckNumberSearch","_React$useState7","_React$useState8","searchChanged","setSearchChanged","location","useLocation","navigate","useNavigate","queryClient","useQueryClient","setSnackbarMessage","useSnackbar","_useMutation","useMutation","CoordinatorDelete","onSuccess","severity","message","invalidateQueries","onError","error","Error","JSON","stringify","mutate","isLoading","filterClearHandler","filterHandler","queryParams","keyUpHandler","key","Toolbar","_objectSpread","pl","sm","pr","xs","bgcolor","alpha","primary","main","action","activatedOpacity","Typography","flex","variant","m","width","TextField","value","onKeyUp","size","Number","isFinite","Tooltip","IconButton","FilterListOffIcon","disabled","FilterListIcon","p","display","AddIcon","relative","state","from","replace","EditIcon","DeleteIcon","Dialog","onClose","open","DialogTitle","List","pt","ListItem","disableGutters","ListItemButton","ListItemAvatar","Avatar","ContactPhoneIcon","ListItemText","Loader","visible","EnhancedTable","_React$useState9","_React$useState10","setOrder","_React$useState11","_React$useState12","setOrderBy","_React$useState13","_React$useState14","setSelected","_React$useState15","_React$useState16","page","setPage","_React$useState17","_React$useState18","rowsPerPage","setRowsPerPage","_React$useState19","_React$useState20","tableContainerRef","_useQuery","useQuery","queryKey","queryFn","CoordinatorsQuery","keepPreviousData","retry","isFetching","_useQuery$data","_useQuery$data2","items","total","rows","current","scrollTo","top","left","behavior","newSelected","forEach","selectedItem","find","push","height","Paper","query","TableContainer","ref","Table","minWidth","stickyHeader","n","isAsc","TableBody","isItemSelected","indexOf","labelId","hover","onDoubleClick","item","getPath","role","tabIndex","cursor","selectedIndex","slice","handleSelect","cell","cellData","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","e","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","jsx","d","_excluded","DialogTitleRoot","slot","overridesResolver","styles","root","inProps","useThemeProps","className","idProp","other","_objectWithoutPropertiesLoose","ownerState","classes","composeClasses","getDialogTitleUtilityClass","useUtilityClasses","_React$useContext$tit","DialogContext","titleId","_extends","clsx","getListItemAvatarUtilityClass","generateUtilityClass","generateUtilityClasses","ListItemAvatarRoot","alignItems","alignItemsFlexStart","flexShrink","marginTop","context","ListContext","slots","MutationObserver","_Subscribable","_inherits","_super","_createSuper","client","options","_this","_classCallCheck","call","setOptions","bindMethods","updateResult","_createClass","this","bind","reset","_this$currentMutation","prevOptions","defaultMutationOptions","shallowEqualObjects","getMutationCache","notify","mutation","currentMutation","observer","_this$currentMutation2","hasListeners","removeObserver","notifyOptions","listeners","currentResult","variables","mutateOptions","build","addObserver","execute","getDefaultState","result","status","isSuccess","isError","isIdle","_this2","notifyManager","batch","_this$mutateOptions$o","_this$mutateOptions","_this$mutateOptions$o2","_this$mutateOptions2","onSettled","_this$mutateOptions$o3","_this$mutateOptions3","_this$mutateOptions$o4","_this$mutateOptions4","listener","Subscribable","arg1","arg2","arg3","useSyncExternalStore","onStoreChange","subscribe","batchCalls","getCurrentResult","shouldThrowError","useErrorBoundary","noop"],"sourceRoot":""}