{"version":3,"file":"static/js/714.3457390a.chunk.js","mappings":"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","sources":["api/api.ts","locations/locations.tsx","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/icons-material/Edit.js"],"sourcesContent":["import { authProvider } from '../utils/auth';\nimport {\n  Coordinator,\n  Driver,\n  Load,\n  CreateLoad,\n  UpdateLoad,\n  Location,\n  CreateLocation,\n  UpdateLocation,\n  Owner,\n  Truck,\n  CreateTruck,\n  UpdateTruck,\n  User,\n  CreateUser,\n  UpdateUser,\n  Query,\n  QuerySingle,\n  Result,\n} from '../utils/dataTypes';\n\nconst SUCCESS_HTTP_CODE = 200;\nconst CREATED_HTTP_CODE = 201;\nconst FORBIDDEN_HTTP_CODE = 403;\nconst NOT_FOUND_HTTP_CODE = 404;\nconst CONFLICT_HTTP_CODE = 409;\n\nconst { origin } = new URL(window.location.href);\n\nconst transformBody = (body: object): Record<string, any> => {\n  const transformedBody: Record<string, any> = {};\n  Object.entries(body).forEach((entry) => {\n    if (Array.isArray(entry[1])) {\n      transformedBody[entry[0]] = entry[1].map((elem) =>\n        typeof elem === 'object' && !(elem instanceof Date) ? elem.id : elem,\n      );\n    } else if (typeof entry[1] === 'object' && !(entry[1] instanceof Date)) {\n      transformedBody[entry[0]] = entry[1] && entry[1].id;\n    } else {\n      transformedBody[entry[0]] = entry[1];\n    }\n  });\n  return transformedBody;\n};\n\nexport const authFetch: (\n  input: string | URL,\n  init?: RequestInit & { bodyObj?: object },\n) => Promise<object> = (input, init = {}) => {\n  const { bodyObj, ...restInit } = init;\n  const fetchInit = { ...restInit, headers: new Headers() };\n  fetchInit.headers.set(\n    'Authorization',\n    'Basic ' +\n      btoa(authProvider.user?.username + ':' + authProvider.user?.password),\n  );\n  if (bodyObj && typeof bodyObj === 'object') {\n    fetchInit.headers.set('Accept', 'application/json');\n    fetchInit.headers.set('Content-Type', 'application/json');\n    fetchInit.body = JSON.stringify(transformBody(bodyObj));\n  }\n  return fetch(input, fetchInit)\n    .catch((reason) => {\n      const error = new Error();\n      error.cause = reason;\n      error.name = 'Fetch error';\n      error.message = 'Network error has occurred';\n      throw error;\n    })\n    .then((response) => {\n      if (\n        response.status !== SUCCESS_HTTP_CODE &&\n        response.status !== CREATED_HTTP_CODE\n      ) {\n        const error = new Error();\n        error.cause = response;\n        if (response.status) {\n          error.name = response.status + ' ' + response.statusText;\n          switch (response.status) {\n            case FORBIDDEN_HTTP_CODE:\n              error.message = 'Insufficient permissions';\n              break;\n            case NOT_FOUND_HTTP_CODE:\n              error.message = 'Not found';\n              break;\n            case CONFLICT_HTTP_CODE:\n              error.message = 'Some field values invalidate unique constrain';\n              break;\n            default:\n              error.message = 'Some server error has occurred';\n          }\n        } else {\n          error.message = 'Network error has occurred';\n        }\n        throw error;\n      }\n      return response.json().catch((reason) => {\n        const error = new Error();\n        error.cause = reason;\n        error.name = 'Fetch error';\n        error.message = 'Server responded with incorrect data';\n        throw error;\n      });\n    });\n};\n\nexport const TrucksQuery: (\n  query: Query<{\n    search?: number;\n    truckNumber?: number;\n    lastLocation?: string;\n    distance?: string;\n  }>,\n) => Promise<Result<Truck>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/truck', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (queryParams?.search) {\n    url.searchParams.append('search', `${queryParams.search}`);\n  }\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  if (queryParams?.lastLocation && queryParams?.distance) {\n    url.searchParams.append('lastLocation', `${queryParams.lastLocation}`);\n    url.searchParams.append('distance', `${queryParams.distance}`);\n  }\n  return authFetch(url) as Promise<Result<Truck>>;\n};\n\nexport const TruckDelete = (userId: string): Promise<Truck> => {\n  const url = new URL(`/truck/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<Truck>;\n};\n\nexport const TruckCreate = (data: CreateTruck): Promise<Truck> => {\n  const url = new URL(`/truck`, origin);\n  return authFetch(url, {\n    method: 'POST',\n    bodyObj: data,\n  }) as Promise<Truck>;\n};\n\nexport const TruckUpdate = (data: UpdateTruck): Promise<Truck> => {\n  const { id, ...updatedData } = data;\n  const url = new URL(`/truck/${id}`, origin);\n  return authFetch(url, {\n    method: 'PATCH',\n    bodyObj: updatedData,\n  }) as Promise<Truck>;\n};\n\nexport const TruckQuery = (query: QuerySingle): Promise<Truck> => {\n  const url = new URL(`/truck/${query.queryKey[1]}`, origin);\n  return authFetch(url, {\n    method: 'GET',\n  }) as Promise<Truck>;\n};\n\nexport const LocationsQuery: (\n  query: Query<{ search?: string; name?: string }>,\n) => Promise<Result<Location>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/location', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.search) {\n    url.searchParams.append('search', `${queryParams.search}`);\n  }\n  if (queryParams?.name) {\n    url.searchParams.append('name', `${queryParams.name}`);\n  }\n  return authFetch(url) as Promise<Result<Location>>;\n};\n\nexport const LocationDelete = (userId: string): Promise<Location> => {\n  const url = new URL(`/location/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<Location>;\n};\n\nexport const LocationCreate = (data: CreateLocation): Promise<Location> => {\n  const url = new URL(`/location`, origin);\n  return authFetch(url, {\n    method: 'POST',\n    bodyObj: data,\n  }) as Promise<Location>;\n};\n\nexport const LocationUpdate = (data: UpdateLocation): Promise<Location> => {\n  const { id, ...updatedData } = data;\n  const url = new URL(`/location/${id}`, origin);\n  return authFetch(url, {\n    method: 'PATCH',\n    bodyObj: updatedData,\n  }) as Promise<Location>;\n};\n\nexport const LocationQuery = (query: QuerySingle): Promise<Location> => {\n  const url = new URL(`/location/${query.queryKey[1]}`, origin);\n  return authFetch(url, {\n    method: 'GET',\n  }) as Promise<Location>;\n};\n\nexport const LoadsQuery: (\n  query: Query<{ loadNumber?: number; truckNumber?: number }>,\n) => Promise<Result<Load>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/load', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.loadNumber) {\n    url.searchParams.append('loadNumber', `${queryParams.loadNumber}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  return authFetch(url) as Promise<Result<Load>>;\n};\n\nexport const LoadDelete = (userId: string): Promise<Load> => {\n  const url = new URL(`/load/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<Load>;\n};\n\nexport const LoadCreate = (data: CreateLoad): Promise<Load> => {\n  const url = new URL(`/load`, origin);\n  return authFetch(url, {\n    method: 'POST',\n    bodyObj: data,\n  }) as Promise<Load>;\n};\n\nexport const LoadUpdate = (data: UpdateLoad): Promise<Load> => {\n  const { id, ...updatedData } = data;\n  const url = new URL(`/load/${id}`, origin);\n  return authFetch(url, {\n    method: 'PATCH',\n    bodyObj: updatedData,\n  }) as Promise<Load>;\n};\n\nexport const LoadQuery = (query: QuerySingle): Promise<Load> => {\n  const url = new URL(`/load/${query.queryKey[1]}`, origin);\n  return authFetch(url, {\n    method: 'GET',\n  }) as Promise<Load>;\n};\n\nexport const OwnersQuery: (\n  query: Query<{ search?: string; fullName?: number; truckNumber?: number }>,\n) => Promise<Result<Owner>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/owner', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.search) {\n    url.searchParams.append('search', `${queryParams.search}`);\n  }\n  if (queryParams?.fullName) {\n    url.searchParams.append('fullName', `${queryParams.fullName}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  return authFetch(url) as Promise<Result<Owner>>;\n};\n\nexport const OwnerDelete = (userId: string): Promise<Owner> => {\n  const url = new URL(`/owner/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<Owner>;\n};\n\nexport const DriversQuery: (\n  query: Query<{ search?: string; fullName?: number; truckNumber?: number }>,\n) => Promise<Result<Driver>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/driver', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.search) {\n    url.searchParams.append('search', `${queryParams.search}`);\n  }\n  if (queryParams?.fullName) {\n    url.searchParams.append('fullName', `${queryParams.fullName}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  return authFetch(url) as Promise<Result<Driver>>;\n};\n\nexport const DriverDelete = (userId: string): Promise<Driver> => {\n  const url = new URL(`/driver/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<Driver>;\n};\n\nexport const CoordinatorsQuery: (\n  query: Query<{ search?: string; fullName?: number; truckNumber?: number }>,\n) => Promise<Result<Coordinator>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/coordinator', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.search) {\n    url.searchParams.append('search', `${queryParams.search}`);\n  }\n  if (queryParams?.fullName) {\n    url.searchParams.append('fullName', `${queryParams.fullName}`);\n  }\n  if (queryParams?.truckNumber) {\n    url.searchParams.append('truckNumber', `${queryParams.truckNumber}`);\n  }\n  return authFetch(url) as Promise<Result<Coordinator>>;\n};\n\nexport const CoordinatorDelete = (userId: string): Promise<Coordinator> => {\n  const url = new URL(`/coordinator/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<Coordinator>;\n};\n\nexport const UsersQuery: (\n  query: Query<{ search?: string; fullName?: number }>,\n) => Promise<Result<User>> = ({\n  queryKey: [key, page, rowsPerPage, orderBy, order, queryParams],\n}) => {\n  const url = new URL('/user', origin);\n  url.searchParams.append('limit', `${rowsPerPage}`);\n  url.searchParams.append('offset', `${rowsPerPage * page}`);\n  if (orderBy && order) {\n    url.searchParams.append('orderby', `${orderBy}`);\n    url.searchParams.append('direction', `${order}`);\n  }\n  if (queryParams?.search) {\n    url.searchParams.append('search', `${queryParams.search}`);\n  }\n  if (queryParams?.fullName) {\n    url.searchParams.append('fullName', `${queryParams.fullName}`);\n  }\n  return authFetch(url) as Promise<Result<User>>;\n};\n\nexport const UserDelete = (userId: string): Promise<User> => {\n  const url = new URL(`/user/${userId}`, origin);\n  return authFetch(url, { method: 'DELETE' }) as Promise<User>;\n};\n\nexport const UserCreate = (data: CreateUser): Promise<User> => {\n  const url = new URL(`/user`, origin);\n  return authFetch(url, {\n    method: 'POST',\n    bodyObj: data,\n  }) as Promise<User>;\n};\n\nexport const UserUpdate = (data: UpdateUser): Promise<User> => {\n  const { id, ...updatedData } = data;\n  const url = new URL(`/user/${id}`, origin);\n  return authFetch(url, {\n    method: 'PATCH',\n    bodyObj: updatedData,\n  }) as Promise<User>;\n};\n\nexport const UserQuery = (query: QuerySingle): Promise<User> => {\n  const url = new URL(`/user/${query.queryKey[1]}`, origin);\n  return authFetch(url, {\n    method: 'GET',\n  }) as Promise<User>;\n};\n","import * as React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\n\nimport { alpha, styled } from '@mui/material/styles';\nimport TextField from '@mui/material/TextField';\nimport Checkbox from '@mui/material/Checkbox';\nimport Tooltip from '@mui/material/Tooltip';\nimport TableCell from '@mui/material/TableCell';\nimport Box from '@mui/material/Box';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport TableSortLabel from '@mui/material/TableSortLabel';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\nimport IconButton from '@mui/material/IconButton';\nimport AddIcon from '@mui/icons-material/Add';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport FilterListIcon from '@mui/icons-material/FilterList';\nimport FilterListOffIcon from '@mui/icons-material/FilterListOff';\nimport { visuallyHidden } from '@mui/utils';\n\nimport Loader from '../components/Loader';\n\nimport { LocationsQuery, LocationDelete } from '../api';\nimport { useSnackbar } from '../hooks';\nimport { Order, Location } from '../utils/dataTypes';\n\ninterface HeadCell {\n  id: string;\n  disablePadding: boolean;\n  orderField?: keyof Location;\n  getData: (row: Location) => { data: JSX.Element | string; title?: string };\n  label: string;\n  numeric: boolean;\n}\n\nconst headCells: readonly HeadCell[] = [\n  {\n    id: 'zipCode',\n    orderField: 'zipCode',\n    getData: (row) => ({ data: `${row.zipCode}` }),\n    numeric: true,\n    disablePadding: false,\n    label: 'Zip Code',\n  },\n  {\n    id: 'name',\n    orderField: 'name',\n    getData: (row) => ({ data: `${row.name}` }),\n    numeric: false,\n    disablePadding: true,\n    label: 'City Name',\n  },\n  {\n    id: 'stateCode',\n    orderField: 'stateCode',\n    getData: (row) => ({ data: `${row.stateCode}` }),\n    numeric: false,\n    disablePadding: true,\n    label: 'State Code',\n  },\n  {\n    id: 'stateName',\n    orderField: 'stateName',\n    getData: (row) => ({ data: `${row.stateName}` }),\n    numeric: false,\n    disablePadding: true,\n    label: 'State Name',\n  },\n  {\n    id: 'location',\n    getData: (row) => ({ data: `${row.location.join(',')}` }),\n    numeric: false,\n    disablePadding: true,\n    label: 'Geo Point',\n  },\n];\n\ninterface EnhancedTableProps {\n  numSelected: number;\n  onRequestSort: (\n    event: React.MouseEvent<unknown>,\n    property: keyof Location,\n  ) => void;\n  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  order: Order | undefined;\n  orderBy: string | undefined;\n  rowCount: number;\n}\n\nconst StyledTableHead = styled(TableHead)(({ theme }) => ({\n  backgroundColor: theme.palette.background.default,\n}));\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  maxWidth: '100px',\n  whiteSpace: 'nowrap',\n  textOverflow: 'ellipsis',\n  overflow: 'hidden',\n}));\n\nfunction stopPropagation(e: React.SyntheticEvent) {\n  e.stopPropagation();\n}\n\nfunction EnhancedTableHead(props: EnhancedTableProps) {\n  const {\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n  } = props;\n  const createSortHandler =\n    (property: keyof Location) => (event: React.MouseEvent<unknown>) => {\n      onRequestSort(event, property);\n    };\n\n  return (\n    <StyledTableHead>\n      <TableRow>\n        <StyledTableCell padding=\"checkbox\">\n          <Checkbox\n            name={'enhanced-table-checkbox-select-all'}\n            color=\"primary\"\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{\n              'aria-label': 'enhanced-table-checkbox-select-all',\n            }}\n          />\n        </StyledTableCell>\n        {headCells.map((headCell) => (\n          <StyledTableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'center'}\n            padding={headCell.disablePadding ? 'none' : 'normal'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={headCell.orderField && orderBy === headCell.orderField}\n              hideSortIcon={!headCell.orderField}\n              direction={orderBy === headCell.orderField ? order : 'asc'}\n              onClick={\n                headCell.orderField\n                  ? createSortHandler(headCell.orderField)\n                  : () => {\n                      return;\n                    }\n              }\n            >\n              {headCell.label}\n              {headCell.orderField && orderBy === headCell.orderField ? (\n                <Box component=\"span\" sx={visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </StyledTableCell>\n        ))}\n      </TableRow>\n    </StyledTableHead>\n  );\n}\n\ninterface EnhancedTableToolbarProps {\n  selected: readonly string[];\n  setQueryParams: React.Dispatch<React.SetStateAction<Record<string, string>>>;\n}\n\nfunction EnhancedTableToolbar(props: EnhancedTableToolbarProps) {\n  const { selected, setQueryParams } = props;\n  const [cityNameSearch, setCityNameSearch] = React.useState<string>('');\n  const [cityNameChanged, setCityNameChanged] = React.useState<boolean>(false);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const queryClient = useQueryClient();\n\n  const setSnackbarMessage = useSnackbar();\n\n  const { mutate, isLoading } = useMutation(LocationDelete, {\n    onSuccess: () => {\n      setSnackbarMessage({\n        severity: 'success',\n        message: 'Deleted',\n      });\n      queryClient.invalidateQueries(['locations']);\n    },\n    onError: (error: Error) => {\n      setSnackbarMessage({\n        severity: 'error',\n        message: error instanceof Error ? error.message : JSON.stringify(error),\n      });\n    },\n  });\n\n  const cityNameHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setCityNameSearch(event.target.value);\n    setCityNameChanged(true);\n  };\n  const locationClearHandler = () => {\n    setCityNameChanged(false);\n    setCityNameSearch('');\n    setQueryParams({});\n  };\n  const filterHandler = () => {\n    setCityNameChanged(false);\n    setQueryParams({ search: cityNameSearch });\n  };\n  const createHandler = () => {\n    navigate('./create', {\n      relative: 'path',\n      state: { from: location },\n      replace: false,\n    });\n  };\n  const editHandler = () => {\n    navigate(`./edit/${selected[0]}`, {\n      relative: 'path',\n      state: { from: location },\n      replace: false,\n    });\n  };\n  const deleteHandler = () => {\n    mutate(`${selected[0]}`);\n  };\n\n  return (\n    <Toolbar\n      sx={{\n        pl: { sm: 2 },\n        pr: { xs: 1, sm: 1 },\n        ...(selected.length > 0 && {\n          bgcolor: (theme) =>\n            alpha(\n              theme.palette.primary.main,\n              theme.palette.action.activatedOpacity,\n            ),\n        }),\n      }}\n    >\n      {selected.length > 0 ? (\n        <Typography\n          sx={{ flex: '1 1 100%' }}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {selected.length} selected\n        </Typography>\n      ) : (\n        <Typography\n          sx={{\n            flex: '1 1 100%',\n            whiteSpace: 'nowrap',\n            textOverflow: 'ellipsis',\n            overflow: 'hidden',\n          }}\n          variant=\"h6\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          Locations\n        </Typography>\n      )}\n      <TextField\n        label=\"City Name\"\n        value={cityNameSearch}\n        onChange={cityNameHandler}\n        size=\"small\"\n      />\n      <Tooltip title=\"Filter list\">\n        {(cityNameChanged || !cityNameSearch) &&\n        !(cityNameChanged && !cityNameSearch) ? (\n          <span>\n            <IconButton disabled={!cityNameSearch} onClick={filterHandler}>\n              <FilterListIcon />\n            </IconButton>\n          </span>\n        ) : (\n          <span>\n            <IconButton onClick={locationClearHandler}>\n              <FilterListOffIcon />\n            </IconButton>\n          </span>\n        )}\n      </Tooltip>\n      <Box sx={{ p: 1, display: 'inline-flex' }}>\n        <Tooltip title=\"Create\">\n          <span>\n            <IconButton onClick={createHandler}>\n              <AddIcon />\n            </IconButton>\n          </span>\n        </Tooltip>\n        <Tooltip title=\"Edit\">\n          <span>\n            <IconButton disabled={selected.length !== 1} onClick={editHandler}>\n              <EditIcon />\n            </IconButton>\n          </span>\n        </Tooltip>\n        <Tooltip title=\"Delete\">\n          <span>\n            <IconButton\n              disabled={selected.length !== 1}\n              onClick={deleteHandler}\n            >\n              <DeleteIcon />\n            </IconButton>\n          </span>\n        </Tooltip>\n      </Box>\n      <Loader visible={isLoading} />\n    </Toolbar>\n  );\n}\n\nexport default function EnhancedTable() {\n  const [order, setOrder] = React.useState<Order | undefined>('asc');\n  const [orderBy, setOrderBy] = React.useState<keyof Location | undefined>(\n    'name',\n  );\n  const [selected, setSelected] = React.useState<readonly string[]>([]);\n  const [page, setPage] = React.useState<number>(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState<number>(15);\n  const [queryParams, setQueryParams] = React.useState<Record<string, any>>({});\n  const tableContainerRef = React.useRef(null);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const setSnackbarMessage = useSnackbar();\n\n  const {\n    isLoading,\n    isFetching,\n    data: { items, total } = { items: [], total: 0 },\n  } = useQuery({\n    queryKey: ['locations', page, rowsPerPage, orderBy, order, queryParams],\n    queryFn: LocationsQuery,\n    keepPreviousData: true,\n    onError: (error: Error) => {\n      setSnackbarMessage({\n        severity: 'error',\n        message: error instanceof Error ? error.message : JSON.stringify(error),\n      });\n    },\n  });\n  const rows: Location[] = items || [];\n\n  React.useEffect(() => {\n    if (tableContainerRef.current) {\n      const container = tableContainerRef.current as HTMLElement;\n      container.scrollTo({\n        top: 0,\n        left: 0,\n        behavior: 'smooth',\n      });\n    }\n  }, [rows]);\n\n  React.useEffect(() => {\n    const newSelected: string[] = [];\n    selected.forEach((selectedItem) => {\n      const selectedRow = rows.find((row) => row.id === selectedItem);\n      if (selectedRow) {\n        newSelected.push(selectedItem);\n      }\n    });\n    setSelected(newSelected);\n  }, [rows]);\n\n  const handleRequestSort = (\n    event: React.MouseEvent<unknown>,\n    property: keyof Location,\n  ) => {\n    const isAsc = orderBy === property && order === 'asc';\n    const isDesc = orderBy === property && order === 'desc';\n    if (isDesc) {\n      setOrder(undefined);\n      setOrderBy(undefined);\n    } else {\n      setOrder(isAsc ? 'desc' : 'asc');\n      setOrderBy(property);\n    }\n  };\n\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.checked) {\n      const newSelected = rows.map((n: Location) => n.id);\n      setSelected(newSelected);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event: React.MouseEvent<unknown>, name: string) => {\n    navigate(`./view/${name}`, {\n      relative: 'path',\n      state: { from: location },\n      replace: false,\n    });\n  };\n\n  const handleSelect = (event: React.MouseEvent<unknown>, name: string) => {\n    event.stopPropagation();\n    const selectedIndex = selected.indexOf(name);\n    let newSelected: readonly string[] = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = (name: string) => selected.indexOf(name) !== -1;\n\n  return (\n    <Box sx={{ width: '100%', height: '100%' }}>\n      <Paper sx={{ width: '100%', height: '100%', backgroundColor: 'unset' }}>\n        <EnhancedTableToolbar\n          selected={selected}\n          setQueryParams={(query) => {\n            setQueryParams(query);\n            setPage(0);\n          }}\n        />\n        <TableContainer\n          ref={tableContainerRef}\n          sx={{ height: 'calc(100% - 115px)' }}\n        >\n          <Table\n            sx={{ minWidth: 750 }}\n            aria-labelledby=\"tableTitle\"\n            size=\"small\"\n            stickyHeader\n          >\n            <EnhancedTableHead\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {rows.map((row, index) => {\n                const isItemSelected = isSelected(`${row.id}`);\n                const labelId = `enhanced-table-checkbox-${index}`;\n                return (\n                  <TableRow\n                    hover\n                    onClick={(event) => handleClick(event, `${row.id}`)}\n                    role=\"checkbox\"\n                    aria-checked={isItemSelected}\n                    tabIndex={-1}\n                    key={row.id}\n                    selected={isItemSelected}\n                    sx={{ cursor: 'pointer' }}\n                  >\n                    <StyledTableCell padding=\"checkbox\">\n                      <Checkbox\n                        id={`${labelId}`}\n                        color=\"primary\"\n                        checked={isItemSelected}\n                        inputProps={{\n                          'aria-labelledby': labelId,\n                        }}\n                        onClick={(event) => handleSelect(event, `${row.id}`)}\n                      />\n                    </StyledTableCell>\n                    {headCells.map((cell) => {\n                      const cellData = cell.getData(row);\n                      return (\n                        <StyledTableCell\n                          key={cell.id}\n                          title={cellData.title}\n                          align={cell.numeric ? 'right' : 'center'}\n                        >\n                          {cellData.data}\n                        </StyledTableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 15, 20, 25, 35, 50]}\n          component=\"div\"\n          count={total}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <Loader visible={isLoading || isFetching} />\n    </Box>\n  );\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\nexports.default = _default;"],"names":["origin","URL","window","location","href","authFetch","input","_authProvider$user","_authProvider$user2","init","arguments","length","undefined","bodyObj","restInit","_objectWithoutProperties","_excluded","fetchInit","_objectSpread","headers","Headers","set","btoa","authProvider","user","username","password","body","JSON","stringify","transformedBody","Object","entries","forEach","entry","Array","isArray","map","elem","Date","id","transformBody","fetch","catch","reason","error","Error","cause","name","message","then","response","status","statusText","json","TrucksQuery","_ref","_ref$queryKey","_slicedToArray","queryKey","page","rowsPerPage","orderBy","order","queryParams","url","searchParams","append","concat","search","truckNumber","lastLocation","distance","TruckDelete","userId","method","TruckCreate","data","LocationsQuery","_ref2","_ref2$queryKey","LocationDelete","LocationCreate","LocationUpdate","updatedData","_excluded3","LocationQuery","query","LoadsQuery","_ref3","_ref3$queryKey","loadNumber","LoadDelete","LoadCreate","LoadUpdate","_excluded4","LoadQuery","OwnersQuery","_ref4","_ref4$queryKey","fullName","OwnerDelete","DriversQuery","_ref5","_ref5$queryKey","DriverDelete","CoordinatorsQuery","_ref6","_ref6$queryKey","CoordinatorDelete","UsersQuery","_ref7","_ref7$queryKey","UserDelete","UserCreate","UserUpdate","_excluded5","UserQuery","headCells","orderField","getData","row","zipCode","numeric","disablePadding","label","stateCode","stateName","join","StyledTableHead","styled","TableHead","backgroundColor","theme","palette","background","default","StyledTableCell","TableCell","maxWidth","whiteSpace","textOverflow","overflow","EnhancedTableHead","props","onSelectAllClick","numSelected","rowCount","onRequestSort","_jsx","children","_jsxs","TableRow","padding","Checkbox","color","indeterminate","checked","onChange","inputProps","headCell","align","sortDirection","TableSortLabel","active","hideSortIcon","direction","onClick","property","event","Box","component","sx","visuallyHidden","EnhancedTableToolbar","selected","setQueryParams","_React$useState","React","_React$useState2","cityNameSearch","setCityNameSearch","_React$useState3","_React$useState4","cityNameChanged","setCityNameChanged","useLocation","navigate","useNavigate","queryClient","useQueryClient","setSnackbarMessage","useSnackbar","_useMutation","useMutation","onSuccess","severity","invalidateQueries","onError","mutate","isLoading","Toolbar","pl","sm","pr","xs","bgcolor","alpha","primary","main","action","activatedOpacity","Typography","flex","variant","TextField","value","target","size","Tooltip","title","IconButton","FilterListOffIcon","disabled","FilterListIcon","p","display","relative","state","from","replace","AddIcon","EditIcon","DeleteIcon","Loader","visible","EnhancedTable","_React$useState5","_React$useState6","setOrder","_React$useState7","_React$useState8","setOrderBy","_React$useState9","_React$useState10","setSelected","_React$useState11","_React$useState12","setPage","_React$useState13","_React$useState14","setRowsPerPage","_React$useState15","_React$useState16","tableContainerRef","_useQuery","useQuery","queryFn","keepPreviousData","isFetching","_useQuery$data","_useQuery$data2","items","total","rows","current","scrollTo","top","left","behavior","newSelected","selectedItem","find","push","width","height","Paper","TableContainer","ref","Table","minWidth","stickyHeader","n","isAsc","TableBody","index","isItemSelected","indexOf","labelId","hover","handleClick","role","tabIndex","cursor","stopPropagation","selectedIndex","slice","handleSelect","cell","cellData","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","jsx","d"],"sourceRoot":""}