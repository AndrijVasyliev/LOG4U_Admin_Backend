{"version":3,"file":"static/js/8936.0b3d5aec.chunk.js","mappings":"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","sources":["GoogleMaps/mapComponent.tsx","utils/stopPropagation.ts"],"sourcesContent":["import * as React from 'react';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport { Wrapper, Status } from '@googlemaps/react-wrapper';\r\nimport { MarkerClusterer as MarkerClustererClass } from '@googlemaps/markerclusterer';\r\n\r\nimport Slide from '@mui/material/Slide';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport Button from '@mui/material/Button';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Box from '@mui/material/Box';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport { TransitionProps } from '@mui/material/transitions';\r\nimport ContentCopy from '@mui/icons-material/ContentCopy';\r\n\r\nimport Loader from '../components/Loader';\r\nimport { TruckQuery } from '../api';\r\nimport { useLoader, useSnackbar } from '../hooks';\r\nimport { Truck, TruckForMap } from '../utils/dataTypes';\r\nimport { getType } from '../utils/queryHelpers';\r\nimport { stopPropagation } from '../utils/stopPropagation';\r\nimport { getMapSettings, center, mapId, zoom } from '../utils/getMapSettings';\r\nimport { selectLocation } from '../utils/selectLocation';\r\nimport { toStringLocation } from '../utils/toStringLocation';\r\n\r\nconst Transition = React.forwardRef(function Transition(\r\n  props: TransitionProps & {\r\n    children: React.ReactElement<any, any>;\r\n  },\r\n  ref: React.Ref<unknown>,\r\n) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function MapComponent({\r\n  truckListData,\r\n}: {\r\n  truckListData: TruckForMap[];\r\n}) {\r\n  let mapCenter = center;\r\n  let mapZoom = zoom;\r\n  if (truckListData.length === 1 && truckListData[0].lastLocation) {\r\n    mapCenter = {\r\n      lat: truckListData[0].lastLocation[0],\r\n      lng: truckListData[0].lastLocation[1],\r\n    };\r\n    mapZoom = mapZoom * 2;\r\n  }\r\n\r\n  const [geocoder, setGeocoder] = React.useState<google.maps.Geocoder | null>(\r\n    null,\r\n  );\r\n  const [selectedTruckId, setSelectedTruckId] = React.useState<string>('');\r\n  const [selectedTruck, setSelectedTruck] = React.useState<Truck | null>(null);\r\n  const [isTruckLoading, setIsTruckLoading] = React.useState<boolean>(false);\r\n\r\n  const {\r\n    // isLoading: isTruckLoading,\r\n    // isFetching: isTruckFetching,\r\n    // data: truck,\r\n    refetch,\r\n  } = useQuery({\r\n    queryKey: ['truckForMap', selectedTruckId],\r\n    queryFn: TruckQuery,\r\n    keepPreviousData: false,\r\n    retry: false,\r\n    enabled: false,\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (!selectedTruckId) {\r\n      setSelectedTruck(null);\r\n    } else {\r\n      setIsTruckLoading(true);\r\n      const truckItem = truckListData?.find(\r\n        (truck) => truck.id === selectedTruckId,\r\n      );\r\n      const truckLocation = truckItem && truckItem?.lastLocation;\r\n\r\n      Promise.all([\r\n        refetch().then((res) => res.data),\r\n        truckLocation &&\r\n          geocoder\r\n            ?.geocode({\r\n              location: { lat: truckLocation[0], lng: truckLocation[1] },\r\n            })\r\n            .then((res) => {\r\n              const location = selectLocation(res.results);\r\n              if (location) {\r\n                return toStringLocation(location.address_components);\r\n              }\r\n              return '';\r\n            }),\r\n      ])\r\n        .then(([truck, location]) => {\r\n          if (truck) {\r\n            setSelectedTruck({ ...truck, lastCity: location || '' });\r\n          } else {\r\n            setSelectedTruck(null);\r\n          }\r\n        })\r\n        .catch(() => setSelectedTruck(null))\r\n        .finally(() => setIsTruckLoading(false));\r\n    }\r\n  }, [selectedTruckId]);\r\n\r\n  const handleClickOpen = (truckId: string) => {\r\n    setSelectedTruckId(truckId);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setSelectedTruckId('');\r\n  };\r\n\r\n  const handleApiLoad = (status: Status): React.ReactElement => {\r\n    const setSnackbarMessage = useSnackbar();\r\n    const [, setLoaderVisibility] = useLoader();\r\n    React.useLayoutEffect(() => {\r\n      if (status === Status.LOADING) {\r\n        setLoaderVisibility(true);\r\n      }\r\n      if (status === Status.FAILURE) {\r\n        setSnackbarMessage({\r\n          severity: 'error',\r\n          message: 'Error loading maps!',\r\n        });\r\n      }\r\n      if (status === Status.SUCCESS) {\r\n        setGeocoder(new window.google.maps.Geocoder());\r\n      }\r\n      return () => {\r\n        if (status === Status.LOADING) {\r\n          setLoaderVisibility(false);\r\n        }\r\n      };\r\n    }, [status]);\r\n    return null as unknown as React.ReactElement;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        component=\"main\"\r\n        sx={{ flexGrow: 1, p: 1, height: '100%', width: '100%' }}\r\n      >\r\n        <Wrapper {...getMapSettings()} render={handleApiLoad} />\r\n        {!geocoder ? null : (\r\n          <Map center={mapCenter} zoom={mapZoom} mapId={mapId}>\r\n            <MarkerClusterer>\r\n              {truckListData.map((truck) => {\r\n                return (\r\n                  <Marker\r\n                    key={truck.id}\r\n                    onCLick={() => handleClickOpen(truck.id)}\r\n                    /*animation={window?.google?.maps?.Animation?.DROP}*/\r\n                    title={`${truck.truckNumber}\\n${truck.status}`}\r\n                    position={{\r\n                      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n                      // @ts-ignore\r\n                      lat: truck.lastLocation[0],\r\n                      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n                      // @ts-ignore\r\n                      lng: truck.lastLocation[1],\r\n                    }}\r\n                  />\r\n                );\r\n              })}\r\n            </MarkerClusterer>\r\n          </Map>\r\n        )}\r\n      </Box>\r\n      <Dialog\r\n        open={!!selectedTruck}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleDialogClose}\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle>\r\n          <span>\r\n            TRUCK NUMBER: \r\n            <a href={`./trucks/view/${selectedTruck?.id}`} target=\"_blank\">\r\n              {selectedTruck?.truckNumber}\r\n            </a>\r\n          </span>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"truck-status\">\r\n            {`CURRENT STATUS: ${selectedTruck?.status}`}\r\n          </DialogContentText>\r\n          <DialogContentText id=\"main-contact\">\r\n            <span>\r\n              {'MAIN CONTACT: '}\r\n              <b>{`${\r\n                selectedTruck?.coordinator || selectedTruck?.owner\r\n                  ? // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n                    //@ts-ignore\r\n                    getType(selectedTruck?.coordinator || selectedTruck?.owner)\r\n                  : ''\r\n              }`}</b>\r\n              {` ${\r\n                selectedTruck?.coordinator || selectedTruck?.owner\r\n                  ? // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n                    //@ts-ignore\r\n                    (selectedTruck?.coordinator || selectedTruck?.owner)\r\n                      .fullName\r\n                  : ''\r\n              }`}\r\n              <IconButton\r\n                size=\"small\"\r\n                onClick={(event) => {\r\n                  stopPropagation(event);\r\n                  navigator.clipboard.writeText(\r\n                    ` ${\r\n                      selectedTruck?.coordinator || selectedTruck?.owner\r\n                        ? // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n                          //@ts-ignore\r\n                          (selectedTruck?.coordinator || selectedTruck?.owner)\r\n                            .fullName\r\n                        : ''\r\n                    } ${\r\n                      (selectedTruck?.coordinator || selectedTruck?.owner)\r\n                        ?.phone || ''\r\n                    }`,\r\n                  );\r\n                }}\r\n              >\r\n                <ContentCopy sx={{ height: '16px', width: '16px' }} />\r\n              </IconButton>\r\n            </span>\r\n          </DialogContentText>\r\n          <DialogContentText id=\"main-contact-number\">\r\n            <span>\r\n              {'MAIN CONTACT #: '}\r\n              <a\r\n                href={\r\n                  selectedTruck?.coordinator || selectedTruck?.owner\r\n                    ? `tel:${\r\n                        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n                        //@ts-ignore\r\n                        (selectedTruck?.coordinator || selectedTruck?.owner)\r\n                          .phone\r\n                      }`\r\n                    : undefined\r\n                }\r\n                target=\"_blank\"\r\n                onClick={stopPropagation}\r\n              >\r\n                {(selectedTruck?.coordinator || selectedTruck?.owner)?.phone ||\r\n                  ''}\r\n              </a>\r\n            </span>\r\n          </DialogContentText>\r\n          <DialogContentText id=\"last-location\">\r\n            <span>\r\n              {`LAST LOCATION #: ${selectedTruck?.lastCity}`}\r\n              <IconButton\r\n                size=\"small\"\r\n                onClick={(event) => {\r\n                  stopPropagation(event);\r\n                  navigator.clipboard.writeText(`${selectedTruck?.lastCity}`);\r\n                }}\r\n              >\r\n                <ContentCopy sx={{ height: '16px', width: '16px' }} />\r\n              </IconButton>\r\n            </span>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleDialogClose}>Close</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Loader visible={isTruckLoading} />\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Map({\r\n  center,\r\n  zoom,\r\n  mapId,\r\n  children,\r\n}: {\r\n  center: google.maps.LatLngLiteral;\r\n  zoom: number;\r\n  mapId: string;\r\n  children?: React.ReactNode;\r\n}) {\r\n  const mapRef = React.useRef(null);\r\n  const [map, setMap] = React.useState<google.maps.Map>();\r\n\r\n  React.useEffect(() => {\r\n    if (mapRef.current && !map) {\r\n      setMap(\r\n        new window.google.maps.Map(mapRef.current, {\r\n          center,\r\n          zoom,\r\n          mapId,\r\n        }),\r\n      );\r\n    }\r\n  }, [mapRef, map]);\r\n\r\n  const child = React.Children.only(children);\r\n\r\n  return (\r\n    <>\r\n      <div style={{ height: '100%', width: '100%' }} ref={mapRef} id=\"map\" />\r\n      {React.isValidElement(child) &&\r\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n        // @ts-ignore\r\n        React.cloneElement(child, { map })}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction MarkerClusterer({\r\n  map,\r\n  children,\r\n}: {\r\n  map?: google.maps.Map;\r\n  children?: React.ReactNode;\r\n}) {\r\n  const [clusterer, setClasterer] = React.useState<MarkerClustererClass>();\r\n\r\n  React.useEffect(() => {\r\n    if (!clusterer) {\r\n      setClasterer(new MarkerClustererClass({}));\r\n    }\r\n\r\n    return () => {\r\n      if (clusterer) {\r\n        clusterer.setMap(null);\r\n      }\r\n    };\r\n  }, [clusterer]);\r\n\r\n  React.useEffect(() => {\r\n    if (clusterer && map) {\r\n      clusterer.setMap(map);\r\n    }\r\n  }, [map]);\r\n\r\n  React.useEffect(() => {\r\n    if (clusterer) {\r\n      clusterer.render();\r\n    }\r\n  }, [map, children]);\r\n  clusterer?.render();\r\n\r\n  return (\r\n    <>\r\n      {React.Children.map(children, (child) => {\r\n        if (React.isValidElement(child)) {\r\n          // set the map prop on the child component\r\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n          // @ts-ignore\r\n          return React.cloneElement(child, { map, clusterer });\r\n        }\r\n      })}\r\n    </>\r\n  );\r\n}\r\n\r\nconst Marker: React.FC<\r\n  google.maps.marker.AdvancedMarkerElementOptions & {\r\n    onCLick: () => void;\r\n    clusterer?: MarkerClustererClass;\r\n  }\r\n> = (options) => {\r\n  const { onCLick, clusterer, map, position, ...otherMarkerOptions } = options;\r\n  const [marker, setMarker] =\r\n    React.useState<google.maps.marker.AdvancedMarkerElement>();\r\n\r\n  React.useEffect(() => {\r\n    if (!marker) {\r\n      const newMarker = new window.google.maps.marker.AdvancedMarkerElement();\r\n      setMarker(newMarker);\r\n      newMarker.addListener('click', onCLick);\r\n    }\r\n\r\n    return () => {\r\n      if (marker) {\r\n        marker.map = null;\r\n        clusterer?.removeMarker(marker, false);\r\n      }\r\n    };\r\n  }, [marker]);\r\n\r\n  React.useEffect(() => {\r\n    if (marker) {\r\n      marker.map = map || null;\r\n    }\r\n  }, [marker, map]);\r\n\r\n  React.useEffect(() => {\r\n    if (marker) {\r\n      marker.position = position;\r\n    }\r\n  }, [marker, position && `${position?.lat},${position?.lng}`]);\r\n\r\n  React.useEffect(() => {\r\n    if (marker) {\r\n      clusterer?.addMarker(marker, false);\r\n    }\r\n  }, [marker, clusterer]);\r\n\r\n  React.useEffect(() => {\r\n    if (marker) {\r\n      Object.assign(marker, otherMarkerOptions);\r\n    }\r\n  }, [marker, otherMarkerOptions]);\r\n\r\n  return null;\r\n};\r\n","import * as React from 'react';\r\n\r\nexport function stopPropagation(e: React.SyntheticEvent) {\r\n  e.stopPropagation();\r\n}\r\n"],"names":["Transition","React","props","ref","_jsx","Slide","_objectSpread","direction","MapComponent","_ref","_ref5","truckListData","mapCenter","center","mapZoom","zoom","length","lastLocation","lat","lng","_React$useState","_React$useState2","_slicedToArray","geocoder","setGeocoder","_React$useState3","_React$useState4","selectedTruckId","setSelectedTruckId","_React$useState5","_React$useState6","selectedTruck","setSelectedTruck","_React$useState7","_React$useState8","isTruckLoading","setIsTruckLoading","refetch","useQuery","queryKey","queryFn","TruckQuery","keepPreviousData","retry","enabled","truckItem","find","truck","id","truckLocation","Promise","all","then","res","data","geocode","location","selectLocation","results","toStringLocation","address_components","_ref2","_ref3","lastCity","catch","finally","handleDialogClose","_jsxs","_Fragment","children","Box","component","sx","flexGrow","p","height","width","Wrapper","getMapSettings","render","status","setSnackbarMessage","useSnackbar","_useLoader","useLoader","setLoaderVisibility","Status","LOADING","FAILURE","severity","message","SUCCESS","window","google","maps","Geocoder","Map","mapId","MarkerClusterer","map","Marker","onCLick","truckId","title","concat","truckNumber","position","Dialog","open","TransitionComponent","keepMounted","onClose","DialogTitle","href","target","DialogContent","DialogContentText","coordinator","owner","getType","fullName","IconButton","size","onClick","event","_ref4","stopPropagation","navigator","clipboard","writeText","phone","ContentCopy","undefined","DialogActions","Button","Loader","visible","_ref6","mapRef","_React$useState9","_React$useState10","setMap","current","child","only","style","_ref7","_React$useState11","_React$useState12","clusterer","setClasterer","MarkerClustererClass","options","otherMarkerOptions","_objectWithoutProperties","_excluded","_React$useState13","_React$useState14","marker","setMarker","newMarker","AdvancedMarkerElement","addListener","removeMarker","addMarker","Object","assign","e"],"sourceRoot":""}