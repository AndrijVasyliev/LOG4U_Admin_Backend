{"version":3,"file":"static/js/902.cac07d89.chunk.js","mappings":"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","sources":["trucks/viewTruck.tsx","utils/dataTypes.ts"],"sourcesContent":["import React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useQuery } from '@tanstack/react-query';\nimport { useFormik } from 'formik';\n\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Person4Icon from '@mui/icons-material/Person4';\nimport ContactPhoneIcon from '@mui/icons-material/ContactPhone';\nimport BadgeIcon from '@mui/icons-material/Badge';\nimport Divider from '@mui/material/Divider';\n\nimport {\n  DateField,\n  Loader,\n  SearchField,\n  SelectField,\n  SelectMultiField,\n  TextField,\n} from '../components';\n\nimport {\n  CoordinatorsQuery,\n  DriversQuery,\n  OwnersQuery,\n  TruckQuery,\n} from '../api';\nimport { useSnackbar } from '../hooks';\nimport {\n  Owner,\n  Coordinator,\n  Driver,\n  CreateTruck,\n  TruckCertificates,\n  TruckCrossborders,\n  TruckEquipments,\n  TruckStatuses,\n  TruckTypes,\n  TruckStatus,\n  TruckCrossborder,\n  TruckCertificate,\n  TruckType,\n} from '../utils/dataTypes';\nimport { getType } from '../utils/queryHelpers';\n\nconst initialValues = {\n  truckNumber: undefined,\n  status: 'Available' as TruckStatus,\n  crossborder: 'Yes' as TruckCrossborder,\n  certificate: 'Hazmat' as TruckCertificate,\n  type: 'Cargo van' as TruckType,\n  equipment: [],\n  payload: undefined,\n  grossWeight: undefined,\n  make: undefined,\n  model: undefined,\n  year: undefined,\n  color: undefined,\n  vinCode: undefined,\n  licencePlate: undefined,\n  licenceState: undefined,\n  plateExpires: undefined,\n  insideDims: undefined,\n  doorDims: undefined,\n  owner: null,\n  coordinator: null,\n  driver: null,\n};\n\nexport default function ViewTruckForm() {\n  const [driverAddQueryParams] = React.useState<Record<string, string>>({});\n  const [coordinatorAddQueryParams] = React.useState<Record<string, string>>(\n    {},\n  );\n  const { pathname } = useLocation();\n  const navigate = useNavigate();\n  const setSnackbarMessage = useSnackbar();\n\n  const {\n    isLoading: loading,\n    isFetching: fetching,\n    data,\n  } = useQuery({\n    queryKey: ['truck', pathname.split('/')[3]],\n    queryFn: TruckQuery,\n    keepPreviousData: false,\n    onError: (error: Error) => {\n      setSnackbarMessage({\n        severity: 'error',\n        message: error instanceof Error ? error.message : JSON.stringify(error),\n      });\n    },\n  });\n\n  const formik = useFormik<CreateTruck>({\n    initialValues: {\n      ...initialValues,\n      ...data,\n    },\n    enableReinitialize: true,\n    onSubmit: () => {\n      return;\n    },\n  });\n\n  const handleClose = () => {\n    navigate(-1);\n  };\n\n  const handleEdit = () => {\n    navigate(pathname.replace('view', 'edit'), { replace: true });\n  };\n\n  return (\n    <Box sx={{ height: '100%' }}>\n      <form\n        onSubmit={formik.handleSubmit}\n        onReset={formik.handleReset}\n        style={{ height: '100%' }}\n      >\n        <Box sx={{ p: 3, display: 'grid', height: '100%' }}>\n          <Divider />\n          <Box\n            key=\"controls\"\n            sx={{\n              height: '100%',\n              overflowX: 'hidden',\n              overflowY: 'scroll',\n            }}\n          >\n            <Box\n              key=\"centerControls\"\n              sx={{ display: 'inline-flex', width: '100%' }}\n            >\n              <Box key=\"left\" sx={{ p: 1, paddingBottom: 0, width: '50%' }}>\n                <TextField\n                  fieldName=\"truckNumber\"\n                  label=\"Truck Number\"\n                  number\n                  disabled\n                  formik={formik}\n                />\n                <SelectField\n                  fieldName=\"crossborder\"\n                  label=\"Cross Border\"\n                  items={TruckCrossborders}\n                  disabled\n                  formik={formik}\n                />\n                <SelectField\n                  fieldName=\"type\"\n                  label=\"Type\"\n                  items={TruckTypes}\n                  disabled\n                  formik={formik}\n                />\n                <TextField\n                  fieldName=\"payload\"\n                  label=\"Payload\"\n                  number\n                  disabled\n                  formik={formik}\n                />\n                <TextField\n                  fieldName=\"make\"\n                  label=\"Make\"\n                  disabled\n                  formik={formik}\n                />\n                <TextField\n                  fieldName=\"year\"\n                  label=\"Year\"\n                  number\n                  disabled\n                  formik={formik}\n                />\n                <TextField\n                  fieldName=\"vinCode\"\n                  label=\"Vin Code\"\n                  disabled\n                  formik={formik}\n                />\n                <TextField\n                  fieldName=\"licenceState\"\n                  label=\"Licence State\"\n                  disabled\n                  formik={formik}\n                />\n                <TextField\n                  fieldName=\"insideDims\"\n                  label=\"Inside Dims (length x width x height)\"\n                  disabled\n                  formik={formik}\n                />\n              </Box>\n              <Box key=\"right\" sx={{ p: 1, paddingBottom: 0, width: '50%' }}>\n                <SelectField\n                  fieldName=\"status\"\n                  label=\"Status\"\n                  items={TruckStatuses}\n                  disabled\n                  formik={formik}\n                />\n                <SelectField\n                  fieldName=\"certificate\"\n                  label=\"Certificate\"\n                  items={TruckCertificates}\n                  disabled\n                  formik={formik}\n                />\n                <SelectMultiField\n                  fieldName=\"equipment\"\n                  label=\"Equipment\"\n                  items={TruckEquipments}\n                  disabled\n                  formik={formik}\n                />\n                <TextField\n                  fieldName=\"grossWeight\"\n                  label=\"Gross Weight\"\n                  disabled\n                  formik={formik}\n                />\n                <TextField\n                  fieldName=\"model\"\n                  label=\"Model\"\n                  disabled\n                  formik={formik}\n                />\n                <TextField\n                  fieldName=\"color\"\n                  label=\"Color\"\n                  disabled\n                  formik={formik}\n                />\n                <TextField\n                  fieldName=\"licencePlate\"\n                  label=\"Licence Plate\"\n                  disabled\n                  formik={formik}\n                />\n                <DateField\n                  fieldName=\"plateExpires\"\n                  label=\"Plate Expires\"\n                  disabled\n                  formik={formik}\n                />\n                <TextField\n                  fieldName=\"doorDims\"\n                  label=\"Door Dims (width x height)\"\n                  disabled\n                  formik={formik}\n                />\n              </Box>\n            </Box>\n            <Box\n              key=\"bottomControls\"\n              sx={{ p: 1, paddingBottom: 0, paddingTop: 0 }}\n            >\n              <SearchField<Owner>\n                fieldName=\"owner\"\n                label=\"Owner\"\n                getSelectedLabel={(selectedItem) =>\n                  `${selectedItem.fullName}, ${getType(selectedItem)}, ${\n                    selectedItem.phone\n                  }`\n                }\n                getItemLabel={(item) => `${item.fullName}`}\n                getItemSecondLabel={(item) => `${getType(item)}, ${item.phone}`}\n                ListIcon={Person4Icon}\n                queryFn={OwnersQuery}\n                startEmpty={false}\n                orderby=\"fullName\"\n                order=\"asc\"\n                disabled\n                formik={formik}\n              />\n              <SearchField<Coordinator>\n                fieldName=\"coordinator\"\n                label=\"Coordinator\"\n                getSelectedLabel={(selectedItem) =>\n                  `${selectedItem.fullName}, ${getType(selectedItem)}, ${\n                    selectedItem.phone\n                  }`\n                }\n                getItemLabel={(item) => `${item.fullName}`}\n                getItemSecondLabel={(item) => `${getType(item)}, ${item.phone}`}\n                ListIcon={ContactPhoneIcon}\n                queryFn={CoordinatorsQuery}\n                startEmpty={false}\n                orderby=\"fullName\"\n                order=\"asc\"\n                additionalQueryParams={coordinatorAddQueryParams}\n                disabled\n                formik={formik}\n              />\n              <SearchField<Driver>\n                fieldName=\"driver\"\n                label=\"Driver\"\n                getSelectedLabel={(selectedItem) =>\n                  `${selectedItem.fullName}, ${getType(selectedItem)}, ${\n                    selectedItem.phone\n                  }`\n                }\n                getItemLabel={(item) =>\n                  `${item.fullName}${\n                    item.driveTrucks && item.driveTrucks[0]\n                      ? ', On Truck: ' + item.driveTrucks[0].truckNumber\n                      : ''\n                  }`\n                }\n                getItemSecondLabel={(item) => `${getType(item)}, ${item.phone}`}\n                ListIcon={BadgeIcon}\n                queryFn={DriversQuery}\n                startEmpty={false}\n                orderby=\"fullName\"\n                order=\"asc\"\n                additionalQueryParams={driverAddQueryParams}\n                disabled\n                formik={formik}\n              />\n            </Box>\n          </Box>\n          <Divider />\n          <Box key=\"buttons\" sx={{ paddingTop: 3, display: 'inline-flex' }}>\n            <Box key=\"left\" sx={{ p: 1, paddingTop: 0, width: '50%' }}>\n              <Button\n                fullWidth\n                variant=\"contained\"\n                size=\"small\"\n                color=\"primary\"\n                type=\"button\"\n                onClick={handleEdit}\n              >\n                Edit\n              </Button>\n            </Box>\n            <Box key=\"right\" sx={{ p: 1, paddingTop: 0, width: '50%' }}>\n              <Button\n                fullWidth\n                variant=\"contained\"\n                size=\"small\"\n                color=\"primary\"\n                type=\"button\"\n                onClick={handleClose}\n              >\n                Cancel\n              </Button>\n            </Box>\n          </Box>\n        </Box>\n      </form>\n      <Loader visible={loading || fetching} />\n    </Box>\n  );\n}\n","import React from 'react';\nimport { AlertColor } from '@mui/material/Alert/Alert';\n\nexport const LangPriorities = ['EN', 'UA', 'ES', 'RU'] as const;\n\nexport const PersonTypes = [\n  'Owner',\n  'OwnerDriver',\n  'Coordinator',\n  'CoordinatorDriver',\n  'Driver',\n] as const;\n\nexport const UserRoles = ['Admin', 'Super Admin'] as const;\n\nexport const TruckTypes = [\n  'Cargo van',\n  'Reefer van',\n  'Box truck',\n  'Box truck Reefer',\n  'Straight truck',\n  'Hotshot',\n  'Tented box',\n] as const;\n\nexport const TruckStatuses = ['Available', 'Not Available'] as const;\n\nexport const TruckCrossborders = ['Yes', 'No'] as const;\n\nexport const TruckCertificates = [\n  'Hazmat',\n  'Tsa',\n  'TWIC',\n  'Tanker Endorsement',\n] as const;\n\nexport const TruckEquipments = [\n  'Dock height risers',\n  'Air ride',\n  'Lift gate',\n  'Keep from freezing',\n  'ICC bar',\n  'Vertical E-track',\n  'Horizontal E-track',\n  'Pallet jack',\n  'PPE',\n  'Ramps',\n  'Straps',\n  'Loads bars',\n  'Blankets',\n  'Pads',\n  'Fire extinguisher',\n] as const;\n\nexport type Order = 'asc' | 'desc';\nexport type QueryKey<T> = readonly [\n  key: string,\n  page: number,\n  rowsPerPage: number,\n  orderBy?: string,\n  order?: Order,\n  queryParams?: T,\n];\n// export type BaseQuery = {\n//   readonly queryKey: QueryKey;\n// };\nexport type Query<T> = {\n  readonly queryKey: QueryKey<T>;\n};\nexport type QuerySingleKey = readonly [key: string, recordId: string];\nexport type QuerySingle = {\n  readonly queryKey: QuerySingleKey;\n};\nexport type Result<T> = {\n  items: T[];\n  limit: number;\n  offset: number;\n  total: number;\n};\nexport type QueryFn = (query: Query<{ search: any }>) => Promise<Result<any>>;\nexport interface AuthContextType {\n  user: any;\n  signin: (\n    username: string,\n    password: string,\n    callback: (res: boolean) => void,\n  ) => void;\n  signout: (callback: VoidFunction) => void;\n}\nexport type SnackbarMessage = {\n  message: string;\n  severity: AlertColor;\n  handleClose?: (event?: React.SyntheticEvent | Event, reason?: string) => void;\n};\nexport type PersonType = (typeof PersonTypes)[number];\nexport type LangPriority = (typeof LangPriorities)[number];\nexport type UserRole = (typeof UserRoles)[number];\nexport type TruckType = (typeof TruckTypes)[number];\nexport type TruckStatus = (typeof TruckStatuses)[number];\nexport type TruckCrossborder = (typeof TruckCrossborders)[number];\nexport type TruckCertificate = (typeof TruckCertificates)[number];\nexport type TruckEquipment = (typeof TruckEquipments)[number];\n\nexport interface Person {\n  id: string;\n  fullName: string;\n  type: PersonType;\n  phone?: string;\n}\n\nexport interface Owner extends Person {\n  type: PersonType;\n  phone: string;\n  phone2?: string;\n  email: string;\n  address: string;\n  ownTrucks?: Truck[];\n  coordinators?: Coordinator[];\n  drivers?: Driver[];\n}\n\nexport interface CreateOwner {\n  fullName?: string;\n  birthDate?: Date;\n  birthPlace?: string;\n  citizenship?: string;\n  languagePriority?: LangPriority;\n  hiredBy?: string;\n  hireDate?: Date;\n  snn?: string;\n  company?: string;\n  insurancePolicy?: string;\n  insurancePolicyEFF?: string;\n  insurancePolicyExp?: Date;\n  address?: string;\n  phone?: string;\n  phone2?: string;\n  email?: string;\n  emergencyContactName?: string;\n  emergencyContactRel?: string;\n  emergencyContactPhone?: string;\n  notes?: string;\n}\n\nexport interface UpdateOwner extends Partial<CreateOwner> {\n  id: string;\n}\n\nexport interface CreateOwnerDriver {\n  fullName?: string;\n  birthDate?: Date;\n  birthPlace?: string;\n  citizenship?: string;\n  languagePriority?: LangPriority;\n  driverLicenceType?: string;\n  driverLicenceNumber?: string;\n  driverLicenceState?: string;\n  driverLicenceClass?: string;\n  driverLicenceExp?: Date;\n  idDocId?: string;\n  idDocType?: string;\n  idDocExp?: Date;\n  hiredBy?: string;\n  hireDate?: Date;\n  snn?: string;\n  company?: string;\n  insurancePolicy?: string;\n  insurancePolicyEFF?: string;\n  insurancePolicyExp?: Date;\n  address?: string;\n  phone?: string;\n  phone2?: string;\n  email?: string;\n  emergencyContactName?: string;\n  emergencyContactRel?: string;\n  emergencyContactPhone?: string;\n  appLogin?: string;\n  appPass?: string;\n  notes?: string;\n}\n\nexport interface UpdateOwnerDriver extends Partial<CreateOwnerDriver> {\n  id: string;\n}\n\nexport interface Coordinator extends Person {\n  type: PersonType;\n  phone: string;\n  phone2?: string;\n  email: string;\n  address: string;\n  coordinateTrucks?: Truck[];\n  owner: Owner;\n}\n\nexport interface CreateCoordinator {\n  fullName?: string;\n  birthDate?: Date;\n  birthPlace?: string;\n  citizenship?: string;\n  languagePriority?: LangPriority;\n  hiredBy?: string;\n  hireDate?: Date;\n  snn?: string;\n  company?: string;\n  insurancePolicy?: string;\n  insurancePolicyEFF?: string;\n  insurancePolicyExp?: Date;\n  address?: string;\n  phone?: string;\n  phone2?: string;\n  email?: string;\n  emergencyContactName?: string;\n  emergencyContactRel?: string;\n  emergencyContactPhone?: string;\n  owner?: Owner | null;\n  notes?: string;\n}\n\nexport interface UpdateCoordinator extends Partial<CreateCoordinator> {\n  id: string;\n}\n\nexport interface CreateCoordinatorDriver {\n  fullName?: string;\n  birthDate?: Date;\n  birthPlace?: string;\n  citizenship?: string;\n  languagePriority?: LangPriority;\n  driverLicenceType?: string;\n  driverLicenceNumber?: string;\n  driverLicenceState?: string;\n  driverLicenceClass?: string;\n  driverLicenceExp?: Date;\n  idDocId?: string;\n  idDocType?: string;\n  idDocExp?: Date;\n  hiredBy?: string;\n  hireDate?: Date;\n  snn?: string;\n  company?: string;\n  insurancePolicy?: string;\n  insurancePolicyEFF?: string;\n  insurancePolicyExp?: Date;\n  address?: string;\n  phone?: string;\n  phone2?: string;\n  email?: string;\n  emergencyContactName?: string;\n  emergencyContactRel?: string;\n  emergencyContactPhone?: string;\n  appLogin?: string;\n  appPass?: string;\n  owner?: Owner | null;\n  notes?: string;\n}\n\nexport interface UpdateCoordinatorDriver\n  extends Partial<CreateCoordinatorDriver> {\n  id: string;\n}\n\nexport interface Driver extends Person {\n  type: PersonType;\n  phone: string;\n  phone2?: string;\n  email?: string;\n  address?: string;\n  driveTrucks?: Truck[];\n  owner: Owner;\n}\n\nexport interface CreateDriver {\n  fullName?: string;\n  birthDate?: Date;\n  birthPlace?: string;\n  citizenship?: string;\n  languagePriority?: LangPriority;\n  driverLicenceType?: string;\n  driverLicenceNumber?: string;\n  driverLicenceState?: string;\n  driverLicenceClass?: string;\n  driverLicenceExp?: Date;\n  idDocId?: string;\n  idDocType?: string;\n  idDocExp?: Date;\n  hiredBy?: string;\n  hireDate?: Date;\n  address?: string;\n  phone?: string;\n  phone2?: string;\n  email?: string;\n  emergencyContactName?: string;\n  emergencyContactRel?: string;\n  emergencyContactPhone?: string;\n  appLogin?: string;\n  appPass?: string;\n  owner?: Owner | null;\n  notes?: string;\n}\n\nexport interface UpdateDriver extends Partial<CreateDriver> {\n  id: string;\n}\n\nexport interface Truck {\n  id: string;\n  truckNumber: number;\n  status: TruckStatus;\n  lastLocation?: [number, number];\n  lastCity?: Location;\n  locationUpdatedAt?: string;\n  milesHaversine?: number;\n  milesByRoads?: number;\n  crossborder: TruckCrossborder;\n  certificate: TruckCertificate;\n  type: TruckType;\n  equipment?: TruckEquipment[];\n  payload?: number;\n  grossWeight: string;\n  make: string;\n  model: string;\n  year: number;\n  color: string;\n  vinCode: string;\n  licencePlate: string;\n  licenceState: string;\n  plateExpires: Date;\n  insideDims: string;\n  doorDims?: string;\n  owner?: Owner;\n  coordinator?: Coordinator;\n  driver?: Driver;\n}\n\nexport interface CreateTruck {\n  truckNumber?: number;\n  status?: TruckStatus;\n  crossborder?: TruckCrossborder;\n  certificate?: TruckCertificate;\n  type?: TruckType;\n  equipment?: TruckEquipment[];\n  payload?: number;\n  grossWeight?: string;\n  make?: string;\n  model?: string;\n  year?: number;\n  color?: string;\n  vinCode?: string;\n  licencePlate?: string;\n  licenceState?: string;\n  plateExpires?: Date;\n  insideDims?: string;\n  doorDims?: string;\n  owner?: Owner | null;\n  coordinator?: Coordinator | null;\n  driver?: Driver | null;\n}\n\nexport interface UpdateTruck extends Partial<CreateTruck> {\n  id: string;\n}\n\nexport interface Load {\n  id: string;\n  loadNumber: number;\n  pick?: google.maps.GeocoderResult;\n  pickLocation?: Location;\n  pickDate?: Date;\n  deliver?: google.maps.GeocoderResult;\n  deliverLocation?: Location;\n  deliverDate?: Date;\n  milesByRoads?: number;\n  milesHaversine?: number;\n  weight: string;\n  truckType: TruckType[];\n  rate?: number;\n  bookedByUser?: User;\n  bookedByCompany?: string;\n  dispatchers?: User[];\n  checkInAs?: string;\n  truck?: Truck;\n}\n\nexport interface CreateLoad {\n  pick?: google.maps.GeocoderResult | null;\n  pickDate?: Date;\n  deliver?: google.maps.GeocoderResult | null;\n  deliverDate?: Date;\n  weight?: string;\n  truckType?: TruckType[];\n  rate?: number;\n  bookedByUser?: User | null;\n  bookedByCompany?: string;\n  dispatchers?: User[];\n  checkInAs?: string;\n  truck?: Truck | null;\n}\n\nexport interface UpdateLoad extends Partial<CreateLoad> {\n  id: string;\n}\n\nexport interface Location {\n  id: string;\n  zipCode: string;\n  name: string;\n  stateCode: string;\n  stateName: string;\n  location: [number, number];\n}\n\nexport type CreateLocation = Omit<Location, 'id'>;\n\nexport interface UpdateLocation extends Partial<CreateLocation> {\n  id: string;\n}\n\nexport interface User {\n  id: string;\n  fullName: string;\n  phone?: string;\n  userRole: UserRole;\n  jobTitle: string;\n  email: string;\n}\n\nexport interface CreateUser extends Omit<User, 'id'> {\n  password?: string;\n}\n\nexport interface UpdateUser extends Partial<CreateUser> {\n  id: string;\n}\n"],"names":["initialValues","truckNumber","undefined","status","crossborder","certificate","type","equipment","payload","grossWeight","make","model","year","color","vinCode","licencePlate","licenceState","plateExpires","insideDims","doorDims","owner","coordinator","driver","ViewTruckForm","_React$useState","React","driverAddQueryParams","_slicedToArray","_React$useState3","coordinatorAddQueryParams","pathname","useLocation","navigate","useNavigate","setSnackbarMessage","useSnackbar","_useQuery","useQuery","queryKey","split","queryFn","TruckQuery","keepPreviousData","onError","error","severity","message","Error","JSON","stringify","loading","isLoading","fetching","isFetching","data","formik","useFormik","_objectSpread","enableReinitialize","onSubmit","_jsxs","Box","sx","height","children","_jsx","handleSubmit","onReset","handleReset","style","p","display","Divider","overflowX","overflowY","width","paddingBottom","TextField","fieldName","label","number","disabled","SelectField","items","TruckCrossborders","TruckTypes","TruckStatuses","TruckCertificates","SelectMultiField","TruckEquipments","DateField","paddingTop","SearchField","getSelectedLabel","selectedItem","concat","fullName","getType","phone","getItemLabel","item","getItemSecondLabel","ListIcon","Person4Icon","OwnersQuery","startEmpty","orderby","order","ContactPhoneIcon","CoordinatorsQuery","additionalQueryParams","driveTrucks","BadgeIcon","DriversQuery","Button","fullWidth","variant","size","onClick","replace","Loader","visible","LangPriorities","UserRoles"],"sourceRoot":""}